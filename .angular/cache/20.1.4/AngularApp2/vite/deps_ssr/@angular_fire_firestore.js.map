{
  "version": 3,
  "sources": ["../../../../../../node_modules/@grpc/grpc-js/build/src/constants.js", "../../../../../../node_modules/@grpc/grpc-js/package.json", "../../../../../../node_modules/@grpc/grpc-js/build/src/logging.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/error.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/metadata.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/call-credentials.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/tls-helpers.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/channel-credentials.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/service-config.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/connectivity-state.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/uri-parser.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolver.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/picker.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/backoff-timeout.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer-child-handler.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolving-load-balancer.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/channel-options.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel-address.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/admin.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/call-interface.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/client-interceptors.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/client.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/make-client.js", "../../../../../../node_modules/lodash.camelcase/index.js", "../../../../../../node_modules/@protobufjs/aspromise/index.js", "../../../../../../node_modules/@protobufjs/base64/index.js", "../../../../../../node_modules/@protobufjs/eventemitter/index.js", "../../../../../../node_modules/@protobufjs/float/index.js", "../../../../../../node_modules/@protobufjs/inquire/index.js", "../../../../../../node_modules/@protobufjs/utf8/index.js", "../../../../../../node_modules/@protobufjs/pool/index.js", "../../../../../../node_modules/protobufjs/src/util/longbits.js", "../../../../../../node_modules/protobufjs/src/util/minimal.js", "../../../../../../node_modules/protobufjs/src/writer.js", "../../../../../../node_modules/protobufjs/src/writer_buffer.js", "../../../../../../node_modules/protobufjs/src/reader.js", "../../../../../../node_modules/protobufjs/src/reader_buffer.js", "../../../../../../node_modules/protobufjs/src/rpc/service.js", "../../../../../../node_modules/protobufjs/src/rpc.js", "../../../../../../node_modules/protobufjs/src/roots.js", "../../../../../../node_modules/protobufjs/src/index-minimal.js", "../../../../../../node_modules/@protobufjs/codegen/index.js", "../../../../../../node_modules/@protobufjs/fetch/index.js", "../../../../../../node_modules/@protobufjs/path/index.js", "../../../../../../node_modules/protobufjs/src/namespace.js", "../../../../../../node_modules/protobufjs/src/mapfield.js", "../../../../../../node_modules/protobufjs/src/method.js", "../../../../../../node_modules/protobufjs/src/service.js", "../../../../../../node_modules/protobufjs/src/message.js", "../../../../../../node_modules/protobufjs/src/decoder.js", "../../../../../../node_modules/protobufjs/src/verifier.js", "../../../../../../node_modules/protobufjs/src/converter.js", "../../../../../../node_modules/protobufjs/src/wrappers.js", "../../../../../../node_modules/protobufjs/src/type.js", "../../../../../../node_modules/protobufjs/src/root.js", "../../../../../../node_modules/protobufjs/src/util.js", "../../../../../../node_modules/protobufjs/src/types.js", "../../../../../../node_modules/protobufjs/src/field.js", "../../../../../../node_modules/protobufjs/src/oneof.js", "../../../../../../node_modules/protobufjs/src/object.js", "../../../../../../node_modules/protobufjs/src/enum.js", "../../../../../../node_modules/protobufjs/src/encoder.js", "../../../../../../node_modules/protobufjs/src/index-light.js", "../../../../../../node_modules/protobufjs/src/tokenize.js", "../../../../../../node_modules/protobufjs/src/parse.js", "../../../../../../node_modules/protobufjs/src/common.js", "../../../../../../node_modules/protobufjs/src/index.js", "../../../../../../node_modules/protobufjs/index.js", "../../../../../../node_modules/protobufjs/google/protobuf/descriptor.json", "../../../../../../node_modules/protobufjs/ext/descriptor/index.js", "../../../../../../node_modules/protobufjs/google/protobuf/api.json", "../../../../../../node_modules/protobufjs/google/protobuf/source_context.json", "../../../../../../node_modules/protobufjs/google/protobuf/type.json", "../../../../../../node_modules/@grpc/proto-loader/build/src/util.js", "../../../../../../node_modules/long/umd/index.js", "../../../../../../node_modules/@grpc/proto-loader/build/src/index.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/channelz.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolver-dns.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/http_proxy.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/stream-decoder.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/call-number.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/transport.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel-pool.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/filter-stack.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/compression-algorithms.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/filter.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/compression-filter.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/deadline.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/control-plane-status.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancing-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolving-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/retrying-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/subchannel-interface.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/internal-channel.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/channel.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/server-call.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/server-credentials.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/server.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/status-builder.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/duration.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer-outlier-detection.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/experimental.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolver-uds.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/resolver-ip.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer-pick-first.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/load-balancer-round-robin.js", "../../../../../../node_modules/@grpc/grpc-js/build/src/index.js", "../../../../../../node_modules/@angular/fire/fesm2022/angular-fire-firestore.mjs", "../../../../../../node_modules/@angular/fire/fesm2022/angular-fire-app-check.mjs", "../../../../../../node_modules/@firebase/app-check/dist/esm/index.esm2017.js", "../../../../../../node_modules/@angular/fire/fesm2022/angular-fire-auth.mjs", "../../../../../../node_modules/tslib/tslib.es6.mjs", "../../../../../../node_modules/@firebase/auth/dist/node-esm/totp-a9833fe5.js", "../../../../../../node_modules/rxfire/auth/index.esm.js", "../../../../../../node_modules/@firebase/firestore/dist/index.node.mjs", "../../../../../../node_modules/@firebase/webchannel-wrapper/dist/bloom-blob/esm/bloom_blob_es2018.js", "../../../../../../node_modules/rxfire/firestore/index.esm.js"],
  "sourcesContent": ["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = exports.DEFAULT_MAX_SEND_MESSAGE_LENGTH = exports.Propagate = exports.LogVerbosity = exports.Status = void 0;\nvar Status;\n(function (Status) {\n    Status[Status[\"OK\"] = 0] = \"OK\";\n    Status[Status[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    Status[Status[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    Status[Status[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    Status[Status[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    Status[Status[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    Status[Status[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    Status[Status[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    Status[Status[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    Status[Status[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    Status[Status[\"ABORTED\"] = 10] = \"ABORTED\";\n    Status[Status[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    Status[Status[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    Status[Status[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    Status[Status[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    Status[Status[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    Status[Status[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(Status || (exports.Status = Status = {}));\nvar LogVerbosity;\n(function (LogVerbosity) {\n    LogVerbosity[LogVerbosity[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogVerbosity[LogVerbosity[\"INFO\"] = 1] = \"INFO\";\n    LogVerbosity[LogVerbosity[\"ERROR\"] = 2] = \"ERROR\";\n    LogVerbosity[LogVerbosity[\"NONE\"] = 3] = \"NONE\";\n})(LogVerbosity || (exports.LogVerbosity = LogVerbosity = {}));\n/**\n * NOTE: This enum is not currently used in any implemented API in this\n * library. It is included only for type parity with the other implementation.\n */\nvar Propagate;\n(function (Propagate) {\n    Propagate[Propagate[\"DEADLINE\"] = 1] = \"DEADLINE\";\n    Propagate[Propagate[\"CENSUS_STATS_CONTEXT\"] = 2] = \"CENSUS_STATS_CONTEXT\";\n    Propagate[Propagate[\"CENSUS_TRACING_CONTEXT\"] = 4] = \"CENSUS_TRACING_CONTEXT\";\n    Propagate[Propagate[\"CANCELLATION\"] = 8] = \"CANCELLATION\";\n    // https://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/propagation_bits.h#L43\n    Propagate[Propagate[\"DEFAULTS\"] = 65535] = \"DEFAULTS\";\n})(Propagate || (exports.Propagate = Propagate = {}));\n// -1 means unlimited\nexports.DEFAULT_MAX_SEND_MESSAGE_LENGTH = -1;\n// 4 MB default\nexports.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = 4 * 1024 * 1024;\n", "{\n  \"name\": \"@grpc/grpc-js\",\n  \"version\": \"1.9.15\",\n  \"description\": \"gRPC Library for Node - pure JS implementation\",\n  \"homepage\": \"https://grpc.io/\",\n  \"repository\": \"https://github.com/grpc/grpc-node/tree/master/packages/grpc-js\",\n  \"main\": \"build/src/index.js\",\n  \"engines\": {\n    \"node\": \"^8.13.0 || >=10.10.0\"\n  },\n  \"keywords\": [],\n  \"author\": {\n    \"name\": \"Google Inc.\"\n  },\n  \"types\": \"build/src/index.d.ts\",\n  \"license\": \"Apache-2.0\",\n  \"devDependencies\": {\n    \"@types/gulp\": \"^4.0.6\",\n    \"@types/gulp-mocha\": \"0.0.32\",\n    \"@types/lodash\": \"^4.14.186\",\n    \"@types/mocha\": \"^5.2.6\",\n    \"@types/ncp\": \"^2.0.1\",\n    \"@types/pify\": \"^3.0.2\",\n    \"@types/semver\": \"^7.3.9\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.59.11\",\n    \"@typescript-eslint/parser\": \"^5.59.11\",\n    \"@typescript-eslint/typescript-estree\": \"^5.59.11\",\n    \"clang-format\": \"^1.0.55\",\n    \"eslint\": \"^8.42.0\",\n    \"eslint-config-prettier\": \"^8.8.0\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"eslint-plugin-prettier\": \"^4.2.1\",\n    \"execa\": \"^2.0.3\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-mocha\": \"^6.0.0\",\n    \"lodash\": \"^4.17.4\",\n    \"madge\": \"^5.0.1\",\n    \"mocha-jenkins-reporter\": \"^0.4.1\",\n    \"ncp\": \"^2.0.0\",\n    \"pify\": \"^4.0.1\",\n    \"prettier\": \"^2.8.8\",\n    \"rimraf\": \"^3.0.2\",\n    \"semver\": \"^7.3.5\",\n    \"ts-node\": \"^10.9.1\",\n    \"typescript\": \"^5.1.3\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Google Inc.\"\n    }\n  ],\n  \"scripts\": {\n    \"build\": \"npm run compile\",\n    \"clean\": \"rimraf ./build\",\n    \"compile\": \"tsc -p .\",\n    \"format\": \"clang-format -i -style=\\\"{Language: JavaScript, BasedOnStyle: Google, ColumnLimit: 80}\\\" src/*.ts test/*.ts\",\n    \"lint\": \"eslint src/*.ts test/*.ts\",\n    \"prepare\": \"npm run generate-types && npm run compile\",\n    \"test\": \"gulp test\",\n    \"check\": \"npm run lint\",\n    \"fix\": \"eslint --fix src/*.ts test/*.ts\",\n    \"pretest\": \"npm run generate-types && npm run generate-test-types && npm run compile\",\n    \"posttest\": \"npm run check && madge -c ./build/src\",\n    \"generate-types\": \"proto-loader-gen-types --keepCase --longs String --enums String --defaults --oneofs --includeComments --includeDirs proto/ --include-dirs test/fixtures/ -O src/generated/ --grpcLib ../index channelz.proto\",\n    \"generate-test-types\": \"proto-loader-gen-types --keepCase --longs String --enums String --defaults --oneofs --includeComments --include-dirs test/fixtures/ -O test/generated/ --grpcLib ../../src/index test_service.proto\"\n  },\n  \"dependencies\": {\n    \"@grpc/proto-loader\": \"^0.7.8\",\n    \"@types/node\": \">=12.12.47\"\n  },\n  \"files\": [\n    \"src/**/*.ts\",\n    \"build/src/**/*.{js,d.ts,js.map}\",\n    \"proto/*.proto\",\n    \"LICENSE\",\n    \"deps/envoy-api/envoy/api/v2/**/*.proto\",\n    \"deps/envoy-api/envoy/config/**/*.proto\",\n    \"deps/envoy-api/envoy/service/**/*.proto\",\n    \"deps/envoy-api/envoy/type/**/*.proto\",\n    \"deps/udpa/udpa/**/*.proto\",\n    \"deps/googleapis/google/api/*.proto\",\n    \"deps/googleapis/google/rpc/*.proto\",\n    \"deps/protoc-gen-validate/validate/**/*.proto\"\n  ]\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTracerEnabled = exports.trace = exports.log = exports.setLoggerVerbosity = exports.setLogger = exports.getLogger = void 0;\nconst constants_1 = require(\"./constants\");\nconst process_1 = require(\"process\");\nconst clientVersion = require('../../package.json').version;\nconst DEFAULT_LOGGER = {\n    error: (message, ...optionalParams) => {\n        console.error('E ' + message, ...optionalParams);\n    },\n    info: (message, ...optionalParams) => {\n        console.error('I ' + message, ...optionalParams);\n    },\n    debug: (message, ...optionalParams) => {\n        console.error('D ' + message, ...optionalParams);\n    },\n};\nlet _logger = DEFAULT_LOGGER;\nlet _logVerbosity = constants_1.LogVerbosity.ERROR;\nconst verbosityString = (_b = (_a = process.env.GRPC_NODE_VERBOSITY) !== null && _a !== void 0 ? _a : process.env.GRPC_VERBOSITY) !== null && _b !== void 0 ? _b : '';\nswitch (verbosityString.toUpperCase()) {\n    case 'DEBUG':\n        _logVerbosity = constants_1.LogVerbosity.DEBUG;\n        break;\n    case 'INFO':\n        _logVerbosity = constants_1.LogVerbosity.INFO;\n        break;\n    case 'ERROR':\n        _logVerbosity = constants_1.LogVerbosity.ERROR;\n        break;\n    case 'NONE':\n        _logVerbosity = constants_1.LogVerbosity.NONE;\n        break;\n    default:\n    // Ignore any other values\n}\nconst getLogger = () => {\n    return _logger;\n};\nexports.getLogger = getLogger;\nconst setLogger = (logger) => {\n    _logger = logger;\n};\nexports.setLogger = setLogger;\nconst setLoggerVerbosity = (verbosity) => {\n    _logVerbosity = verbosity;\n};\nexports.setLoggerVerbosity = setLoggerVerbosity;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst log = (severity, ...args) => {\n    let logFunction;\n    if (severity >= _logVerbosity) {\n        switch (severity) {\n            case constants_1.LogVerbosity.DEBUG:\n                logFunction = _logger.debug;\n                break;\n            case constants_1.LogVerbosity.INFO:\n                logFunction = _logger.info;\n                break;\n            case constants_1.LogVerbosity.ERROR:\n                logFunction = _logger.error;\n                break;\n        }\n        /* Fall back to _logger.error when other methods are not available for\n         * compatiblity with older behavior that always logged to _logger.error */\n        if (!logFunction) {\n            logFunction = _logger.error;\n        }\n        if (logFunction) {\n            logFunction.bind(_logger)(...args);\n        }\n    }\n};\nexports.log = log;\nconst tracersString = (_d = (_c = process.env.GRPC_NODE_TRACE) !== null && _c !== void 0 ? _c : process.env.GRPC_TRACE) !== null && _d !== void 0 ? _d : '';\nconst enabledTracers = new Set();\nconst disabledTracers = new Set();\nfor (const tracerName of tracersString.split(',')) {\n    if (tracerName.startsWith('-')) {\n        disabledTracers.add(tracerName.substring(1));\n    }\n    else {\n        enabledTracers.add(tracerName);\n    }\n}\nconst allEnabled = enabledTracers.has('all');\nfunction trace(severity, tracer, text) {\n    if (isTracerEnabled(tracer)) {\n        (0, exports.log)(severity, new Date().toISOString() + ' | v' + clientVersion + ' ' + process_1.pid + ' | ' + tracer + ' | ' + text);\n    }\n}\nexports.trace = trace;\nfunction isTracerEnabled(tracer) {\n    return (!disabledTracers.has(tracer) && (allEnabled || enabledTracers.has(tracer)));\n}\nexports.isTracerEnabled = isTracerEnabled;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorCode = exports.getErrorMessage = void 0;\nfunction getErrorMessage(error) {\n    if (error instanceof Error) {\n        return error.message;\n    }\n    else {\n        return String(error);\n    }\n}\nexports.getErrorMessage = getErrorMessage;\nfunction getErrorCode(error) {\n    if (typeof error === 'object' &&\n        error !== null &&\n        'code' in error &&\n        typeof error.code === 'number') {\n        return error.code;\n    }\n    else {\n        return null;\n    }\n}\nexports.getErrorCode = getErrorCode;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Metadata = void 0;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\nconst LEGAL_KEY_REGEX = /^[0-9a-z_.-]+$/;\nconst LEGAL_NON_BINARY_VALUE_REGEX = /^[ -~]*$/;\nfunction isLegalKey(key) {\n    return LEGAL_KEY_REGEX.test(key);\n}\nfunction isLegalNonBinaryValue(value) {\n    return LEGAL_NON_BINARY_VALUE_REGEX.test(value);\n}\nfunction isBinaryKey(key) {\n    return key.endsWith('-bin');\n}\nfunction isCustomMetadata(key) {\n    return !key.startsWith('grpc-');\n}\nfunction normalizeKey(key) {\n    return key.toLowerCase();\n}\nfunction validate(key, value) {\n    if (!isLegalKey(key)) {\n        throw new Error('Metadata key \"' + key + '\" contains illegal characters');\n    }\n    if (value !== null && value !== undefined) {\n        if (isBinaryKey(key)) {\n            if (!Buffer.isBuffer(value)) {\n                throw new Error(\"keys that end with '-bin' must have Buffer values\");\n            }\n        }\n        else {\n            if (Buffer.isBuffer(value)) {\n                throw new Error(\"keys that don't end with '-bin' must have String values\");\n            }\n            if (!isLegalNonBinaryValue(value)) {\n                throw new Error('Metadata string value \"' + value + '\" contains illegal characters');\n            }\n        }\n    }\n}\n/**\n * A class for storing metadata. Keys are normalized to lowercase ASCII.\n */\nclass Metadata {\n    constructor(options = {}) {\n        this.internalRepr = new Map();\n        this.options = options;\n    }\n    /**\n     * Sets the given value for the given key by replacing any other values\n     * associated with that key. Normalizes the key.\n     * @param key The key to whose value should be set.\n     * @param value The value to set. Must be a buffer if and only\n     *   if the normalized key ends with '-bin'.\n     */\n    set(key, value) {\n        key = normalizeKey(key);\n        validate(key, value);\n        this.internalRepr.set(key, [value]);\n    }\n    /**\n     * Adds the given value for the given key by appending to a list of previous\n     * values associated with that key. Normalizes the key.\n     * @param key The key for which a new value should be appended.\n     * @param value The value to add. Must be a buffer if and only\n     *   if the normalized key ends with '-bin'.\n     */\n    add(key, value) {\n        key = normalizeKey(key);\n        validate(key, value);\n        const existingValue = this.internalRepr.get(key);\n        if (existingValue === undefined) {\n            this.internalRepr.set(key, [value]);\n        }\n        else {\n            existingValue.push(value);\n        }\n    }\n    /**\n     * Removes the given key and any associated values. Normalizes the key.\n     * @param key The key whose values should be removed.\n     */\n    remove(key) {\n        key = normalizeKey(key);\n        // validate(key);\n        this.internalRepr.delete(key);\n    }\n    /**\n     * Gets a list of all values associated with the key. Normalizes the key.\n     * @param key The key whose value should be retrieved.\n     * @return A list of values associated with the given key.\n     */\n    get(key) {\n        key = normalizeKey(key);\n        // validate(key);\n        return this.internalRepr.get(key) || [];\n    }\n    /**\n     * Gets a plain object mapping each key to the first value associated with it.\n     * This reflects the most common way that people will want to see metadata.\n     * @return A key/value mapping of the metadata.\n     */\n    getMap() {\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            if (values.length > 0) {\n                const v = values[0];\n                result[key] = Buffer.isBuffer(v) ? Buffer.from(v) : v;\n            }\n        }\n        return result;\n    }\n    /**\n     * Clones the metadata object.\n     * @return The newly cloned object.\n     */\n    clone() {\n        const newMetadata = new Metadata(this.options);\n        const newInternalRepr = newMetadata.internalRepr;\n        for (const [key, value] of this.internalRepr) {\n            const clonedValue = value.map(v => {\n                if (Buffer.isBuffer(v)) {\n                    return Buffer.from(v);\n                }\n                else {\n                    return v;\n                }\n            });\n            newInternalRepr.set(key, clonedValue);\n        }\n        return newMetadata;\n    }\n    /**\n     * Merges all key-value pairs from a given Metadata object into this one.\n     * If both this object and the given object have values in the same key,\n     * values from the other Metadata object will be appended to this object's\n     * values.\n     * @param other A Metadata object.\n     */\n    merge(other) {\n        for (const [key, values] of other.internalRepr) {\n            const mergedValue = (this.internalRepr.get(key) || []).concat(values);\n            this.internalRepr.set(key, mergedValue);\n        }\n    }\n    setOptions(options) {\n        this.options = options;\n    }\n    getOptions() {\n        return this.options;\n    }\n    /**\n     * Creates an OutgoingHttpHeaders object that can be used with the http2 API.\n     */\n    toHttp2Headers() {\n        // NOTE: Node <8.9 formats http2 headers incorrectly.\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            // We assume that the user's interaction with this object is limited to\n            // through its public API (i.e. keys and values are already validated).\n            result[key] = values.map(bufToString);\n        }\n        return result;\n    }\n    /**\n     * This modifies the behavior of JSON.stringify to show an object\n     * representation of the metadata map.\n     */\n    toJSON() {\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            result[key] = values;\n        }\n        return result;\n    }\n    /**\n     * Returns a new Metadata object based fields in a given IncomingHttpHeaders\n     * object.\n     * @param headers An IncomingHttpHeaders object.\n     */\n    static fromHttp2Headers(headers) {\n        const result = new Metadata();\n        for (const key of Object.keys(headers)) {\n            // Reserved headers (beginning with `:`) are not valid keys.\n            if (key.charAt(0) === ':') {\n                continue;\n            }\n            const values = headers[key];\n            try {\n                if (isBinaryKey(key)) {\n                    if (Array.isArray(values)) {\n                        values.forEach(value => {\n                            result.add(key, Buffer.from(value, 'base64'));\n                        });\n                    }\n                    else if (values !== undefined) {\n                        if (isCustomMetadata(key)) {\n                            values.split(',').forEach(v => {\n                                result.add(key, Buffer.from(v.trim(), 'base64'));\n                            });\n                        }\n                        else {\n                            result.add(key, Buffer.from(values, 'base64'));\n                        }\n                    }\n                }\n                else {\n                    if (Array.isArray(values)) {\n                        values.forEach(value => {\n                            result.add(key, value);\n                        });\n                    }\n                    else if (values !== undefined) {\n                        result.add(key, values);\n                    }\n                }\n            }\n            catch (error) {\n                const message = `Failed to add metadata entry ${key}: ${values}. ${(0, error_1.getErrorMessage)(error)}. For more information see https://github.com/grpc/grpc-node/issues/1173`;\n                (0, logging_1.log)(constants_1.LogVerbosity.ERROR, message);\n            }\n        }\n        return result;\n    }\n}\nexports.Metadata = Metadata;\nconst bufToString = (val) => {\n    return Buffer.isBuffer(val) ? val.toString('base64') : val;\n};\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallCredentials = void 0;\nconst metadata_1 = require(\"./metadata\");\nfunction isCurrentOauth2Client(client) {\n    return ('getRequestHeaders' in client &&\n        typeof client.getRequestHeaders === 'function');\n}\n/**\n * A class that represents a generic method of adding authentication-related\n * metadata on a per-request basis.\n */\nclass CallCredentials {\n    /**\n     * Creates a new CallCredentials object from a given function that generates\n     * Metadata objects.\n     * @param metadataGenerator A function that accepts a set of options, and\n     * generates a Metadata object based on these options, which is passed back\n     * to the caller via a supplied (err, metadata) callback.\n     */\n    static createFromMetadataGenerator(metadataGenerator) {\n        return new SingleCallCredentials(metadataGenerator);\n    }\n    /**\n     * Create a gRPC credential from a Google credential object.\n     * @param googleCredentials The authentication client to use.\n     * @return The resulting CallCredentials object.\n     */\n    static createFromGoogleCredential(googleCredentials) {\n        return CallCredentials.createFromMetadataGenerator((options, callback) => {\n            let getHeaders;\n            if (isCurrentOauth2Client(googleCredentials)) {\n                getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n            }\n            else {\n                getHeaders = new Promise((resolve, reject) => {\n                    googleCredentials.getRequestMetadata(options.service_url, (err, headers) => {\n                        if (err) {\n                            reject(err);\n                            return;\n                        }\n                        if (!headers) {\n                            reject(new Error('Headers not set by metadata plugin'));\n                            return;\n                        }\n                        resolve(headers);\n                    });\n                });\n            }\n            getHeaders.then(headers => {\n                const metadata = new metadata_1.Metadata();\n                for (const key of Object.keys(headers)) {\n                    metadata.add(key, headers[key]);\n                }\n                callback(null, metadata);\n            }, err => {\n                callback(err);\n            });\n        });\n    }\n    static createEmpty() {\n        return new EmptyCallCredentials();\n    }\n}\nexports.CallCredentials = CallCredentials;\nclass ComposedCallCredentials extends CallCredentials {\n    constructor(creds) {\n        super();\n        this.creds = creds;\n    }\n    async generateMetadata(options) {\n        const base = new metadata_1.Metadata();\n        const generated = await Promise.all(this.creds.map(cred => cred.generateMetadata(options)));\n        for (const gen of generated) {\n            base.merge(gen);\n        }\n        return base;\n    }\n    compose(other) {\n        return new ComposedCallCredentials(this.creds.concat([other]));\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ComposedCallCredentials) {\n            return this.creds.every((value, index) => value._equals(other.creds[index]));\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass SingleCallCredentials extends CallCredentials {\n    constructor(metadataGenerator) {\n        super();\n        this.metadataGenerator = metadataGenerator;\n    }\n    generateMetadata(options) {\n        return new Promise((resolve, reject) => {\n            this.metadataGenerator(options, (err, metadata) => {\n                if (metadata !== undefined) {\n                    resolve(metadata);\n                }\n                else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    compose(other) {\n        return new ComposedCallCredentials([this, other]);\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof SingleCallCredentials) {\n            return this.metadataGenerator === other.metadataGenerator;\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass EmptyCallCredentials extends CallCredentials {\n    generateMetadata(options) {\n        return Promise.resolve(new metadata_1.Metadata());\n    }\n    compose(other) {\n        return other;\n    }\n    _equals(other) {\n        return other instanceof EmptyCallCredentials;\n    }\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRootsData = exports.CIPHER_SUITES = void 0;\nconst fs = require(\"fs\");\nexports.CIPHER_SUITES = process.env.GRPC_SSL_CIPHER_SUITES;\nconst DEFAULT_ROOTS_FILE_PATH = process.env.GRPC_DEFAULT_SSL_ROOTS_FILE_PATH;\nlet defaultRootsData = null;\nfunction getDefaultRootsData() {\n    if (DEFAULT_ROOTS_FILE_PATH) {\n        if (defaultRootsData === null) {\n            defaultRootsData = fs.readFileSync(DEFAULT_ROOTS_FILE_PATH);\n        }\n        return defaultRootsData;\n    }\n    return null;\n}\nexports.getDefaultRootsData = getDefaultRootsData;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelCredentials = void 0;\nconst tls_1 = require(\"tls\");\nconst call_credentials_1 = require(\"./call-credentials\");\nconst tls_helpers_1 = require(\"./tls-helpers\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction verifyIsBufferOrNull(obj, friendlyName) {\n    if (obj && !(obj instanceof Buffer)) {\n        throw new TypeError(`${friendlyName}, if provided, must be a Buffer.`);\n    }\n}\n/**\n * A class that contains credentials for communicating over a channel, as well\n * as a set of per-call credentials, which are applied to every method call made\n * over a channel initialized with an instance of this class.\n */\nclass ChannelCredentials {\n    constructor(callCredentials) {\n        this.callCredentials = callCredentials || call_credentials_1.CallCredentials.createEmpty();\n    }\n    /**\n     * Gets the set of per-call credentials associated with this instance.\n     */\n    _getCallCredentials() {\n        return this.callCredentials;\n    }\n    /**\n     * Return a new ChannelCredentials instance with a given set of credentials.\n     * The resulting instance can be used to construct a Channel that communicates\n     * over TLS.\n     * @param rootCerts The root certificate data.\n     * @param privateKey The client certificate private key, if available.\n     * @param certChain The client certificate key chain, if available.\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createSsl(rootCerts, privateKey, certChain, verifyOptions) {\n        var _a;\n        verifyIsBufferOrNull(rootCerts, 'Root certificate');\n        verifyIsBufferOrNull(privateKey, 'Private key');\n        verifyIsBufferOrNull(certChain, 'Certificate chain');\n        if (privateKey && !certChain) {\n            throw new Error('Private key must be given with accompanying certificate chain');\n        }\n        if (!privateKey && certChain) {\n            throw new Error('Certificate chain must be given with accompanying private key');\n        }\n        const secureContext = (0, tls_1.createSecureContext)({\n            ca: (_a = rootCerts !== null && rootCerts !== void 0 ? rootCerts : (0, tls_helpers_1.getDefaultRootsData)()) !== null && _a !== void 0 ? _a : undefined,\n            key: privateKey !== null && privateKey !== void 0 ? privateKey : undefined,\n            cert: certChain !== null && certChain !== void 0 ? certChain : undefined,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n        return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with credentials created using\n     * the provided secureContext. The resulting instances can be used to\n     * construct a Channel that communicates over TLS. gRPC will not override\n     * anything in the provided secureContext, so the environment variables\n     * GRPC_SSL_CIPHER_SUITES and GRPC_DEFAULT_SSL_ROOTS_FILE_PATH will\n     * not be applied.\n     * @param secureContext The return value of tls.createSecureContext()\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createFromSecureContext(secureContext, verifyOptions) {\n        return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with no credentials.\n     */\n    static createInsecure() {\n        return new InsecureChannelCredentialsImpl();\n    }\n}\nexports.ChannelCredentials = ChannelCredentials;\nclass InsecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(callCredentials) {\n        super(callCredentials);\n    }\n    compose(callCredentials) {\n        throw new Error('Cannot compose insecure credentials');\n    }\n    _getConnectionOptions() {\n        return null;\n    }\n    _isSecure() {\n        return false;\n    }\n    _equals(other) {\n        return other instanceof InsecureChannelCredentialsImpl;\n    }\n}\nclass SecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(secureContext, verifyOptions) {\n        super();\n        this.secureContext = secureContext;\n        this.verifyOptions = verifyOptions;\n        this.connectionOptions = {\n            secureContext,\n        };\n        // Node asserts that this option is a function, so we cannot pass undefined\n        if (verifyOptions === null || verifyOptions === void 0 ? void 0 : verifyOptions.checkServerIdentity) {\n            this.connectionOptions.checkServerIdentity =\n                verifyOptions.checkServerIdentity;\n        }\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        // Copy to prevent callers from mutating this.connectionOptions\n        return Object.assign({}, this.connectionOptions);\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof SecureChannelCredentialsImpl) {\n            return (this.secureContext === other.secureContext &&\n                this.verifyOptions.checkServerIdentity ===\n                    other.verifyOptions.checkServerIdentity);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass ComposedChannelCredentialsImpl extends ChannelCredentials {\n    constructor(channelCredentials, callCreds) {\n        super(callCreds);\n        this.channelCredentials = channelCredentials;\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this.channelCredentials, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        return this.channelCredentials._getConnectionOptions();\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ComposedChannelCredentialsImpl) {\n            return (this.channelCredentials._equals(other.channelCredentials) &&\n                this.callCredentials._equals(other.callCredentials));\n        }\n        else {\n            return false;\n        }\n    }\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateLoadBalancingConfig = exports.getFirstUsableConfig = exports.isLoadBalancerNameRegistered = exports.createLoadBalancer = exports.registerDefaultLoadBalancerType = exports.registerLoadBalancerType = exports.createChildChannelControlHelper = void 0;\n/**\n * Create a child ChannelControlHelper that overrides some methods of the\n * parent while letting others pass through to the parent unmodified. This\n * allows other code to create these children without needing to know about\n * all of the methods to be passed through.\n * @param parent\n * @param overrides\n */\nfunction createChildChannelControlHelper(parent, overrides) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    return {\n        createSubchannel: (_b = (_a = overrides.createSubchannel) === null || _a === void 0 ? void 0 : _a.bind(overrides)) !== null && _b !== void 0 ? _b : parent.createSubchannel.bind(parent),\n        updateState: (_d = (_c = overrides.updateState) === null || _c === void 0 ? void 0 : _c.bind(overrides)) !== null && _d !== void 0 ? _d : parent.updateState.bind(parent),\n        requestReresolution: (_f = (_e = overrides.requestReresolution) === null || _e === void 0 ? void 0 : _e.bind(overrides)) !== null && _f !== void 0 ? _f : parent.requestReresolution.bind(parent),\n        addChannelzChild: (_h = (_g = overrides.addChannelzChild) === null || _g === void 0 ? void 0 : _g.bind(overrides)) !== null && _h !== void 0 ? _h : parent.addChannelzChild.bind(parent),\n        removeChannelzChild: (_k = (_j = overrides.removeChannelzChild) === null || _j === void 0 ? void 0 : _j.bind(overrides)) !== null && _k !== void 0 ? _k : parent.removeChannelzChild.bind(parent),\n    };\n}\nexports.createChildChannelControlHelper = createChildChannelControlHelper;\nconst registeredLoadBalancerTypes = {};\nlet defaultLoadBalancerType = null;\nfunction registerLoadBalancerType(typeName, loadBalancerType, loadBalancingConfigType) {\n    registeredLoadBalancerTypes[typeName] = {\n        LoadBalancer: loadBalancerType,\n        LoadBalancingConfig: loadBalancingConfigType,\n    };\n}\nexports.registerLoadBalancerType = registerLoadBalancerType;\nfunction registerDefaultLoadBalancerType(typeName) {\n    defaultLoadBalancerType = typeName;\n}\nexports.registerDefaultLoadBalancerType = registerDefaultLoadBalancerType;\nfunction createLoadBalancer(config, channelControlHelper) {\n    const typeName = config.getLoadBalancerName();\n    if (typeName in registeredLoadBalancerTypes) {\n        return new registeredLoadBalancerTypes[typeName].LoadBalancer(channelControlHelper);\n    }\n    else {\n        return null;\n    }\n}\nexports.createLoadBalancer = createLoadBalancer;\nfunction isLoadBalancerNameRegistered(typeName) {\n    return typeName in registeredLoadBalancerTypes;\n}\nexports.isLoadBalancerNameRegistered = isLoadBalancerNameRegistered;\nfunction getFirstUsableConfig(configs, fallbackTodefault = false) {\n    for (const config of configs) {\n        if (config.getLoadBalancerName() in registeredLoadBalancerTypes) {\n            return config;\n        }\n    }\n    if (fallbackTodefault) {\n        if (defaultLoadBalancerType) {\n            return new registeredLoadBalancerTypes[defaultLoadBalancerType].LoadBalancingConfig();\n        }\n        else {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n}\nexports.getFirstUsableConfig = getFirstUsableConfig;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction validateLoadBalancingConfig(obj) {\n    if (!(obj !== null && typeof obj === 'object')) {\n        throw new Error('Load balancing config must be an object');\n    }\n    const keys = Object.keys(obj);\n    if (keys.length !== 1) {\n        throw new Error('Provided load balancing config has multiple conflicting entries');\n    }\n    const typeName = keys[0];\n    if (typeName in registeredLoadBalancerTypes) {\n        return registeredLoadBalancerTypes[typeName].LoadBalancingConfig.createFromJson(obj[typeName]);\n    }\n    else {\n        throw new Error(`Unrecognized load balancing config name ${typeName}`);\n    }\n}\nexports.validateLoadBalancingConfig = validateLoadBalancingConfig;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractAndSelectServiceConfig = exports.validateServiceConfig = exports.validateRetryThrottling = void 0;\n/* This file implements gRFC A2 and the service config spec:\n * https://github.com/grpc/proposal/blob/master/A2-service-configs-in-dns.md\n * https://github.com/grpc/grpc/blob/master/doc/service_config.md. Each\n * function here takes an object with unknown structure and returns its\n * specific object type if the input has the right structure, and throws an\n * error otherwise. */\n/* The any type is purposely used here. All functions validate their input at\n * runtime */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst os = require(\"os\");\nconst constants_1 = require(\"./constants\");\nconst load_balancer_1 = require(\"./load-balancer\");\n/**\n * Recognizes a number with up to 9 digits after the decimal point, followed by\n * an \"s\", representing a number of seconds.\n */\nconst DURATION_REGEX = /^\\d+(\\.\\d{1,9})?s$/;\n/**\n * Client language name used for determining whether this client matches a\n * `ServiceConfigCanaryConfig`'s `clientLanguage` list.\n */\nconst CLIENT_LANGUAGE_STRING = 'node';\nfunction validateName(obj) {\n    // In this context, and unset field and '' are considered the same\n    if ('service' in obj && obj.service !== '') {\n        if (typeof obj.service !== 'string') {\n            throw new Error(`Invalid method config name: invalid service: expected type string, got ${typeof obj.service}`);\n        }\n        if ('method' in obj && obj.method !== '') {\n            if (typeof obj.method !== 'string') {\n                throw new Error(`Invalid method config name: invalid method: expected type string, got ${typeof obj.service}`);\n            }\n            return {\n                service: obj.service,\n                method: obj.method,\n            };\n        }\n        else {\n            return {\n                service: obj.service,\n            };\n        }\n    }\n    else {\n        if ('method' in obj && obj.method !== undefined) {\n            throw new Error(`Invalid method config name: method set with empty or unset service`);\n        }\n        return {};\n    }\n}\nfunction validateRetryPolicy(obj) {\n    if (!('maxAttempts' in obj) ||\n        !Number.isInteger(obj.maxAttempts) ||\n        obj.maxAttempts < 2) {\n        throw new Error('Invalid method config retry policy: maxAttempts must be an integer at least 2');\n    }\n    if (!('initialBackoff' in obj) ||\n        typeof obj.initialBackoff !== 'string' ||\n        !DURATION_REGEX.test(obj.initialBackoff)) {\n        throw new Error('Invalid method config retry policy: initialBackoff must be a string consisting of a positive integer followed by s');\n    }\n    if (!('maxBackoff' in obj) ||\n        typeof obj.maxBackoff !== 'string' ||\n        !DURATION_REGEX.test(obj.maxBackoff)) {\n        throw new Error('Invalid method config retry policy: maxBackoff must be a string consisting of a positive integer followed by s');\n    }\n    if (!('backoffMultiplier' in obj) ||\n        typeof obj.backoffMultiplier !== 'number' ||\n        obj.backoffMultiplier <= 0) {\n        throw new Error('Invalid method config retry policy: backoffMultiplier must be a number greater than 0');\n    }\n    if (!('retryableStatusCodes' in obj && Array.isArray(obj.retryableStatusCodes))) {\n        throw new Error('Invalid method config retry policy: retryableStatusCodes is required');\n    }\n    if (obj.retryableStatusCodes.length === 0) {\n        throw new Error('Invalid method config retry policy: retryableStatusCodes must be non-empty');\n    }\n    for (const value of obj.retryableStatusCodes) {\n        if (typeof value === 'number') {\n            if (!Object.values(constants_1.Status).includes(value)) {\n                throw new Error('Invalid method config retry policy: retryableStatusCodes value not in status code range');\n            }\n        }\n        else if (typeof value === 'string') {\n            if (!Object.values(constants_1.Status).includes(value.toUpperCase())) {\n                throw new Error('Invalid method config retry policy: retryableStatusCodes value not a status code name');\n            }\n        }\n        else {\n            throw new Error('Invalid method config retry policy: retryableStatusCodes value must be a string or number');\n        }\n    }\n    return {\n        maxAttempts: obj.maxAttempts,\n        initialBackoff: obj.initialBackoff,\n        maxBackoff: obj.maxBackoff,\n        backoffMultiplier: obj.backoffMultiplier,\n        retryableStatusCodes: obj.retryableStatusCodes,\n    };\n}\nfunction validateHedgingPolicy(obj) {\n    if (!('maxAttempts' in obj) ||\n        !Number.isInteger(obj.maxAttempts) ||\n        obj.maxAttempts < 2) {\n        throw new Error('Invalid method config hedging policy: maxAttempts must be an integer at least 2');\n    }\n    if ('hedgingDelay' in obj &&\n        (typeof obj.hedgingDelay !== 'string' ||\n            !DURATION_REGEX.test(obj.hedgingDelay))) {\n        throw new Error('Invalid method config hedging policy: hedgingDelay must be a string consisting of a positive integer followed by s');\n    }\n    if ('nonFatalStatusCodes' in obj && Array.isArray(obj.nonFatalStatusCodes)) {\n        for (const value of obj.nonFatalStatusCodes) {\n            if (typeof value === 'number') {\n                if (!Object.values(constants_1.Status).includes(value)) {\n                    throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value not in status code range');\n                }\n            }\n            else if (typeof value === 'string') {\n                if (!Object.values(constants_1.Status).includes(value.toUpperCase())) {\n                    throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value not a status code name');\n                }\n            }\n            else {\n                throw new Error('Invlid method config hedging policy: nonFatalStatusCodes value must be a string or number');\n            }\n        }\n    }\n    const result = {\n        maxAttempts: obj.maxAttempts,\n    };\n    if (obj.hedgingDelay) {\n        result.hedgingDelay = obj.hedgingDelay;\n    }\n    if (obj.nonFatalStatusCodes) {\n        result.nonFatalStatusCodes = obj.nonFatalStatusCodes;\n    }\n    return result;\n}\nfunction validateMethodConfig(obj) {\n    var _a;\n    const result = {\n        name: [],\n    };\n    if (!('name' in obj) || !Array.isArray(obj.name)) {\n        throw new Error('Invalid method config: invalid name array');\n    }\n    for (const name of obj.name) {\n        result.name.push(validateName(name));\n    }\n    if ('waitForReady' in obj) {\n        if (typeof obj.waitForReady !== 'boolean') {\n            throw new Error('Invalid method config: invalid waitForReady');\n        }\n        result.waitForReady = obj.waitForReady;\n    }\n    if ('timeout' in obj) {\n        if (typeof obj.timeout === 'object') {\n            if (!('seconds' in obj.timeout) ||\n                !(typeof obj.timeout.seconds === 'number')) {\n                throw new Error('Invalid method config: invalid timeout.seconds');\n            }\n            if (!('nanos' in obj.timeout) ||\n                !(typeof obj.timeout.nanos === 'number')) {\n                throw new Error('Invalid method config: invalid timeout.nanos');\n            }\n            result.timeout = obj.timeout;\n        }\n        else if (typeof obj.timeout === 'string' &&\n            DURATION_REGEX.test(obj.timeout)) {\n            const timeoutParts = obj.timeout\n                .substring(0, obj.timeout.length - 1)\n                .split('.');\n            result.timeout = {\n                seconds: timeoutParts[0] | 0,\n                nanos: ((_a = timeoutParts[1]) !== null && _a !== void 0 ? _a : 0) | 0,\n            };\n        }\n        else {\n            throw new Error('Invalid method config: invalid timeout');\n        }\n    }\n    if ('maxRequestBytes' in obj) {\n        if (typeof obj.maxRequestBytes !== 'number') {\n            throw new Error('Invalid method config: invalid maxRequestBytes');\n        }\n        result.maxRequestBytes = obj.maxRequestBytes;\n    }\n    if ('maxResponseBytes' in obj) {\n        if (typeof obj.maxResponseBytes !== 'number') {\n            throw new Error('Invalid method config: invalid maxRequestBytes');\n        }\n        result.maxResponseBytes = obj.maxResponseBytes;\n    }\n    if ('retryPolicy' in obj) {\n        if ('hedgingPolicy' in obj) {\n            throw new Error('Invalid method config: retryPolicy and hedgingPolicy cannot both be specified');\n        }\n        else {\n            result.retryPolicy = validateRetryPolicy(obj.retryPolicy);\n        }\n    }\n    else if ('hedgingPolicy' in obj) {\n        result.hedgingPolicy = validateHedgingPolicy(obj.hedgingPolicy);\n    }\n    return result;\n}\nfunction validateRetryThrottling(obj) {\n    if (!('maxTokens' in obj) ||\n        typeof obj.maxTokens !== 'number' ||\n        obj.maxTokens <= 0 ||\n        obj.maxTokens > 1000) {\n        throw new Error('Invalid retryThrottling: maxTokens must be a number in (0, 1000]');\n    }\n    if (!('tokenRatio' in obj) ||\n        typeof obj.tokenRatio !== 'number' ||\n        obj.tokenRatio <= 0) {\n        throw new Error('Invalid retryThrottling: tokenRatio must be a number greater than 0');\n    }\n    return {\n        maxTokens: +obj.maxTokens.toFixed(3),\n        tokenRatio: +obj.tokenRatio.toFixed(3),\n    };\n}\nexports.validateRetryThrottling = validateRetryThrottling;\nfunction validateServiceConfig(obj) {\n    const result = {\n        loadBalancingConfig: [],\n        methodConfig: [],\n    };\n    if ('loadBalancingPolicy' in obj) {\n        if (typeof obj.loadBalancingPolicy === 'string') {\n            result.loadBalancingPolicy = obj.loadBalancingPolicy;\n        }\n        else {\n            throw new Error('Invalid service config: invalid loadBalancingPolicy');\n        }\n    }\n    if ('loadBalancingConfig' in obj) {\n        if (Array.isArray(obj.loadBalancingConfig)) {\n            for (const config of obj.loadBalancingConfig) {\n                result.loadBalancingConfig.push((0, load_balancer_1.validateLoadBalancingConfig)(config));\n            }\n        }\n        else {\n            throw new Error('Invalid service config: invalid loadBalancingConfig');\n        }\n    }\n    if ('methodConfig' in obj) {\n        if (Array.isArray(obj.methodConfig)) {\n            for (const methodConfig of obj.methodConfig) {\n                result.methodConfig.push(validateMethodConfig(methodConfig));\n            }\n        }\n    }\n    if ('retryThrottling' in obj) {\n        result.retryThrottling = validateRetryThrottling(obj.retryThrottling);\n    }\n    // Validate method name uniqueness\n    const seenMethodNames = [];\n    for (const methodConfig of result.methodConfig) {\n        for (const name of methodConfig.name) {\n            for (const seenName of seenMethodNames) {\n                if (name.service === seenName.service &&\n                    name.method === seenName.method) {\n                    throw new Error(`Invalid service config: duplicate name ${name.service}/${name.method}`);\n                }\n            }\n            seenMethodNames.push(name);\n        }\n    }\n    return result;\n}\nexports.validateServiceConfig = validateServiceConfig;\nfunction validateCanaryConfig(obj) {\n    if (!('serviceConfig' in obj)) {\n        throw new Error('Invalid service config choice: missing service config');\n    }\n    const result = {\n        serviceConfig: validateServiceConfig(obj.serviceConfig),\n    };\n    if ('clientLanguage' in obj) {\n        if (Array.isArray(obj.clientLanguage)) {\n            result.clientLanguage = [];\n            for (const lang of obj.clientLanguage) {\n                if (typeof lang === 'string') {\n                    result.clientLanguage.push(lang);\n                }\n                else {\n                    throw new Error('Invalid service config choice: invalid clientLanguage');\n                }\n            }\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid clientLanguage');\n        }\n    }\n    if ('clientHostname' in obj) {\n        if (Array.isArray(obj.clientHostname)) {\n            result.clientHostname = [];\n            for (const lang of obj.clientHostname) {\n                if (typeof lang === 'string') {\n                    result.clientHostname.push(lang);\n                }\n                else {\n                    throw new Error('Invalid service config choice: invalid clientHostname');\n                }\n            }\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid clientHostname');\n        }\n    }\n    if ('percentage' in obj) {\n        if (typeof obj.percentage === 'number' &&\n            0 <= obj.percentage &&\n            obj.percentage <= 100) {\n            result.percentage = obj.percentage;\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid percentage');\n        }\n    }\n    // Validate that no unexpected fields are present\n    const allowedFields = [\n        'clientLanguage',\n        'percentage',\n        'clientHostname',\n        'serviceConfig',\n    ];\n    for (const field in obj) {\n        if (!allowedFields.includes(field)) {\n            throw new Error(`Invalid service config choice: unexpected field ${field}`);\n        }\n    }\n    return result;\n}\nfunction validateAndSelectCanaryConfig(obj, percentage) {\n    if (!Array.isArray(obj)) {\n        throw new Error('Invalid service config list');\n    }\n    for (const config of obj) {\n        const validatedConfig = validateCanaryConfig(config);\n        /* For each field, we check if it is present, then only discard the\n         * config if the field value does not match the current client */\n        if (typeof validatedConfig.percentage === 'number' &&\n            percentage > validatedConfig.percentage) {\n            continue;\n        }\n        if (Array.isArray(validatedConfig.clientHostname)) {\n            let hostnameMatched = false;\n            for (const hostname of validatedConfig.clientHostname) {\n                if (hostname === os.hostname()) {\n                    hostnameMatched = true;\n                }\n            }\n            if (!hostnameMatched) {\n                continue;\n            }\n        }\n        if (Array.isArray(validatedConfig.clientLanguage)) {\n            let languageMatched = false;\n            for (const language of validatedConfig.clientLanguage) {\n                if (language === CLIENT_LANGUAGE_STRING) {\n                    languageMatched = true;\n                }\n            }\n            if (!languageMatched) {\n                continue;\n            }\n        }\n        return validatedConfig.serviceConfig;\n    }\n    throw new Error('No matching service config found');\n}\n/**\n * Find the \"grpc_config\" record among the TXT records, parse its value as JSON, validate its contents,\n * and select a service config with selection fields that all match this client. Most of these steps\n * can fail with an error; the caller must handle any errors thrown this way.\n * @param txtRecord The TXT record array that is output from a successful call to dns.resolveTxt\n * @param percentage A number chosen from the range [0, 100) that is used to select which config to use\n * @return The service configuration to use, given the percentage value, or null if the service config\n *     data has a valid format but none of the options match the current client.\n */\nfunction extractAndSelectServiceConfig(txtRecord, percentage) {\n    for (const record of txtRecord) {\n        if (record.length > 0 && record[0].startsWith('grpc_config=')) {\n            /* Treat the list of strings in this record as a single string and remove\n             * \"grpc_config=\" from the beginning. The rest should be a JSON string */\n            const recordString = record.join('').substring('grpc_config='.length);\n            const recordJson = JSON.parse(recordString);\n            return validateAndSelectCanaryConfig(recordJson, percentage);\n        }\n    }\n    return null;\n}\nexports.extractAndSelectServiceConfig = extractAndSelectServiceConfig;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectivityState = void 0;\nvar ConnectivityState;\n(function (ConnectivityState) {\n    ConnectivityState[ConnectivityState[\"IDLE\"] = 0] = \"IDLE\";\n    ConnectivityState[ConnectivityState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n    ConnectivityState[ConnectivityState[\"READY\"] = 2] = \"READY\";\n    ConnectivityState[ConnectivityState[\"TRANSIENT_FAILURE\"] = 3] = \"TRANSIENT_FAILURE\";\n    ConnectivityState[ConnectivityState[\"SHUTDOWN\"] = 4] = \"SHUTDOWN\";\n})(ConnectivityState || (exports.ConnectivityState = ConnectivityState = {}));\n", "\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uriToString = exports.splitHostPort = exports.parseUri = void 0;\n/*\n * The groups correspond to URI parts as follows:\n * 1. scheme\n * 2. authority\n * 3. path\n */\nconst URI_REGEX = /^(?:([A-Za-z0-9+.-]+):)?(?:\\/\\/([^/]*)\\/)?(.+)$/;\nfunction parseUri(uriString) {\n    const parsedUri = URI_REGEX.exec(uriString);\n    if (parsedUri === null) {\n        return null;\n    }\n    return {\n        scheme: parsedUri[1],\n        authority: parsedUri[2],\n        path: parsedUri[3],\n    };\n}\nexports.parseUri = parseUri;\nconst NUMBER_REGEX = /^\\d+$/;\nfunction splitHostPort(path) {\n    if (path.startsWith('[')) {\n        const hostEnd = path.indexOf(']');\n        if (hostEnd === -1) {\n            return null;\n        }\n        const host = path.substring(1, hostEnd);\n        /* Only an IPv6 address should be in bracketed notation, and an IPv6\n         * address should have at least one colon */\n        if (host.indexOf(':') === -1) {\n            return null;\n        }\n        if (path.length > hostEnd + 1) {\n            if (path[hostEnd + 1] === ':') {\n                const portString = path.substring(hostEnd + 2);\n                if (NUMBER_REGEX.test(portString)) {\n                    return {\n                        host: host,\n                        port: +portString,\n                    };\n                }\n                else {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return {\n                host,\n            };\n        }\n    }\n    else {\n        const splitPath = path.split(':');\n        /* Exactly one colon means that this is host:port. Zero colons means that\n         * there is no port. And multiple colons means that this is a bare IPv6\n         * address with no port */\n        if (splitPath.length === 2) {\n            if (NUMBER_REGEX.test(splitPath[1])) {\n                return {\n                    host: splitPath[0],\n                    port: +splitPath[1],\n                };\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return {\n                host: path,\n            };\n        }\n    }\n}\nexports.splitHostPort = splitHostPort;\nfunction uriToString(uri) {\n    let result = '';\n    if (uri.scheme !== undefined) {\n        result += uri.scheme + ':';\n    }\n    if (uri.authority !== undefined) {\n        result += '//' + uri.authority + '/';\n    }\n    result += uri.path;\n    return result;\n}\nexports.uriToString = uriToString;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapUriDefaultScheme = exports.getDefaultAuthority = exports.createResolver = exports.registerDefaultScheme = exports.registerResolver = void 0;\nconst uri_parser_1 = require(\"./uri-parser\");\nconst registeredResolvers = {};\nlet defaultScheme = null;\n/**\n * Register a resolver class to handle target names prefixed with the `prefix`\n * string. This prefix should correspond to a URI scheme name listed in the\n * [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n * @param prefix\n * @param resolverClass\n */\nfunction registerResolver(scheme, resolverClass) {\n    registeredResolvers[scheme] = resolverClass;\n}\nexports.registerResolver = registerResolver;\n/**\n * Register a default resolver to handle target names that do not start with\n * any registered prefix.\n * @param resolverClass\n */\nfunction registerDefaultScheme(scheme) {\n    defaultScheme = scheme;\n}\nexports.registerDefaultScheme = registerDefaultScheme;\n/**\n * Create a name resolver for the specified target, if possible. Throws an\n * error if no such name resolver can be created.\n * @param target\n * @param listener\n */\nfunction createResolver(target, listener, options) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return new registeredResolvers[target.scheme](target, listener, options);\n    }\n    else {\n        throw new Error(`No resolver could be created for target ${(0, uri_parser_1.uriToString)(target)}`);\n    }\n}\nexports.createResolver = createResolver;\n/**\n * Get the default authority for the specified target, if possible. Throws an\n * error if no registered name resolver can parse that target string.\n * @param target\n */\nfunction getDefaultAuthority(target) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return registeredResolvers[target.scheme].getDefaultAuthority(target);\n    }\n    else {\n        throw new Error(`Invalid target ${(0, uri_parser_1.uriToString)(target)}`);\n    }\n}\nexports.getDefaultAuthority = getDefaultAuthority;\nfunction mapUriDefaultScheme(target) {\n    if (target.scheme === undefined || !(target.scheme in registeredResolvers)) {\n        if (defaultScheme !== null) {\n            return {\n                scheme: defaultScheme,\n                authority: undefined,\n                path: (0, uri_parser_1.uriToString)(target),\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    return target;\n}\nexports.mapUriDefaultScheme = mapUriDefaultScheme;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueuePicker = exports.UnavailablePicker = exports.PickResultType = void 0;\nconst metadata_1 = require(\"./metadata\");\nconst constants_1 = require(\"./constants\");\nvar PickResultType;\n(function (PickResultType) {\n    PickResultType[PickResultType[\"COMPLETE\"] = 0] = \"COMPLETE\";\n    PickResultType[PickResultType[\"QUEUE\"] = 1] = \"QUEUE\";\n    PickResultType[PickResultType[\"TRANSIENT_FAILURE\"] = 2] = \"TRANSIENT_FAILURE\";\n    PickResultType[PickResultType[\"DROP\"] = 3] = \"DROP\";\n})(PickResultType || (exports.PickResultType = PickResultType = {}));\n/**\n * A standard picker representing a load balancer in the TRANSIENT_FAILURE\n * state. Always responds to every pick request with an UNAVAILABLE status.\n */\nclass UnavailablePicker {\n    constructor(status) {\n        this.status = Object.assign({ code: constants_1.Status.UNAVAILABLE, details: 'No connection established', metadata: new metadata_1.Metadata() }, status);\n    }\n    pick(pickArgs) {\n        return {\n            pickResultType: PickResultType.TRANSIENT_FAILURE,\n            subchannel: null,\n            status: this.status,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\nexports.UnavailablePicker = UnavailablePicker;\n/**\n * A standard picker representing a load balancer in the IDLE or CONNECTING\n * state. Always responds to every pick request with a QUEUE pick result\n * indicating that the pick should be tried again with the next `Picker`. Also\n * reports back to the load balancer that a connection should be established\n * once any pick is attempted.\n */\nclass QueuePicker {\n    // Constructed with a load balancer. Calls exitIdle on it the first time pick is called\n    constructor(loadBalancer) {\n        this.loadBalancer = loadBalancer;\n        this.calledExitIdle = false;\n    }\n    pick(pickArgs) {\n        if (!this.calledExitIdle) {\n            process.nextTick(() => {\n                this.loadBalancer.exitIdle();\n            });\n            this.calledExitIdle = true;\n        }\n        return {\n            pickResultType: PickResultType.QUEUE,\n            subchannel: null,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\nexports.QueuePicker = QueuePicker;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackoffTimeout = void 0;\nconst INITIAL_BACKOFF_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.6;\nconst MAX_BACKOFF_MS = 120000;\nconst BACKOFF_JITTER = 0.2;\n/**\n * Get a number uniformly at random in the range [min, max)\n * @param min\n * @param max\n */\nfunction uniformRandom(min, max) {\n    return Math.random() * (max - min) + min;\n}\nclass BackoffTimeout {\n    constructor(callback, options) {\n        this.callback = callback;\n        /**\n         * The delay time at the start, and after each reset.\n         */\n        this.initialDelay = INITIAL_BACKOFF_MS;\n        /**\n         * The exponential backoff multiplier.\n         */\n        this.multiplier = BACKOFF_MULTIPLIER;\n        /**\n         * The maximum delay time\n         */\n        this.maxDelay = MAX_BACKOFF_MS;\n        /**\n         * The maximum fraction by which the delay time can randomly vary after\n         * applying the multiplier.\n         */\n        this.jitter = BACKOFF_JITTER;\n        /**\n         * Indicates whether the timer is currently running.\n         */\n        this.running = false;\n        /**\n         * Indicates whether the timer should keep the Node process running if no\n         * other async operation is doing so.\n         */\n        this.hasRef = true;\n        /**\n         * The time that the currently running timer was started. Only valid if\n         * running is true.\n         */\n        this.startTime = new Date();\n        /**\n         * The approximate time that the currently running timer will end. Only valid\n         * if running is true.\n         */\n        this.endTime = new Date();\n        if (options) {\n            if (options.initialDelay) {\n                this.initialDelay = options.initialDelay;\n            }\n            if (options.multiplier) {\n                this.multiplier = options.multiplier;\n            }\n            if (options.jitter) {\n                this.jitter = options.jitter;\n            }\n            if (options.maxDelay) {\n                this.maxDelay = options.maxDelay;\n            }\n        }\n        this.nextDelay = this.initialDelay;\n        this.timerId = setTimeout(() => { }, 0);\n        clearTimeout(this.timerId);\n    }\n    runTimer(delay) {\n        var _a, _b;\n        this.endTime = this.startTime;\n        this.endTime.setMilliseconds(this.endTime.getMilliseconds() + this.nextDelay);\n        clearTimeout(this.timerId);\n        this.timerId = setTimeout(() => {\n            this.callback();\n            this.running = false;\n        }, delay);\n        if (!this.hasRef) {\n            (_b = (_a = this.timerId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    /**\n     * Call the callback after the current amount of delay time\n     */\n    runOnce() {\n        this.running = true;\n        this.startTime = new Date();\n        this.runTimer(this.nextDelay);\n        const nextBackoff = Math.min(this.nextDelay * this.multiplier, this.maxDelay);\n        const jitterMagnitude = nextBackoff * this.jitter;\n        this.nextDelay =\n            nextBackoff + uniformRandom(-jitterMagnitude, jitterMagnitude);\n    }\n    /**\n     * Stop the timer. The callback will not be called until `runOnce` is called\n     * again.\n     */\n    stop() {\n        clearTimeout(this.timerId);\n        this.running = false;\n    }\n    /**\n     * Reset the delay time to its initial value. If the timer is still running,\n     * retroactively apply that reset to the current timer.\n     */\n    reset() {\n        this.nextDelay = this.initialDelay;\n        if (this.running) {\n            const now = new Date();\n            const newEndTime = this.startTime;\n            newEndTime.setMilliseconds(newEndTime.getMilliseconds() + this.nextDelay);\n            clearTimeout(this.timerId);\n            if (now < newEndTime) {\n                this.runTimer(newEndTime.getTime() - now.getTime());\n            }\n            else {\n                this.running = false;\n            }\n        }\n    }\n    /**\n     * Check whether the timer is currently running.\n     */\n    isRunning() {\n        return this.running;\n    }\n    /**\n     * Set that while the timer is running, it should keep the Node process\n     * running.\n     */\n    ref() {\n        var _a, _b;\n        this.hasRef = true;\n        (_b = (_a = this.timerId).ref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Set that while the timer is running, it should not keep the Node process\n     * running.\n     */\n    unref() {\n        var _a, _b;\n        this.hasRef = false;\n        (_b = (_a = this.timerId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Get the approximate timestamp of when the timer will fire. Only valid if\n     * this.isRunning() is true.\n     */\n    getEndTime() {\n        return this.endTime;\n    }\n}\nexports.BackoffTimeout = BackoffTimeout;\n", "\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChildLoadBalancerHandler = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst TYPE_NAME = 'child_load_balancer_helper';\nclass ChildLoadBalancerHandler {\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        this.currentChild = null;\n        this.pendingChild = null;\n        this.latestConfig = null;\n        this.ChildPolicyHelper = class {\n            constructor(parent) {\n                this.parent = parent;\n                this.child = null;\n            }\n            createSubchannel(subchannelAddress, subchannelArgs) {\n                return this.parent.channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs);\n            }\n            updateState(connectivityState, picker) {\n                var _a;\n                if (this.calledByPendingChild()) {\n                    if (connectivityState === connectivity_state_1.ConnectivityState.CONNECTING) {\n                        return;\n                    }\n                    (_a = this.parent.currentChild) === null || _a === void 0 ? void 0 : _a.destroy();\n                    this.parent.currentChild = this.parent.pendingChild;\n                    this.parent.pendingChild = null;\n                }\n                else if (!this.calledByCurrentChild()) {\n                    return;\n                }\n                this.parent.channelControlHelper.updateState(connectivityState, picker);\n            }\n            requestReresolution() {\n                var _a;\n                const latestChild = (_a = this.parent.pendingChild) !== null && _a !== void 0 ? _a : this.parent.currentChild;\n                if (this.child === latestChild) {\n                    this.parent.channelControlHelper.requestReresolution();\n                }\n            }\n            setChild(newChild) {\n                this.child = newChild;\n            }\n            addChannelzChild(child) {\n                this.parent.channelControlHelper.addChannelzChild(child);\n            }\n            removeChannelzChild(child) {\n                this.parent.channelControlHelper.removeChannelzChild(child);\n            }\n            calledByPendingChild() {\n                return this.child === this.parent.pendingChild;\n            }\n            calledByCurrentChild() {\n                return this.child === this.parent.currentChild;\n            }\n        };\n    }\n    configUpdateRequiresNewPolicyInstance(oldConfig, newConfig) {\n        return oldConfig.getLoadBalancerName() !== newConfig.getLoadBalancerName();\n    }\n    /**\n     * Prerequisites: lbConfig !== null and lbConfig.name is registered\n     * @param addressList\n     * @param lbConfig\n     * @param attributes\n     */\n    updateAddressList(addressList, lbConfig, attributes) {\n        let childToUpdate;\n        if (this.currentChild === null ||\n            this.latestConfig === null ||\n            this.configUpdateRequiresNewPolicyInstance(this.latestConfig, lbConfig)) {\n            const newHelper = new this.ChildPolicyHelper(this);\n            const newChild = (0, load_balancer_1.createLoadBalancer)(lbConfig, newHelper);\n            newHelper.setChild(newChild);\n            if (this.currentChild === null) {\n                this.currentChild = newChild;\n                childToUpdate = this.currentChild;\n            }\n            else {\n                if (this.pendingChild) {\n                    this.pendingChild.destroy();\n                }\n                this.pendingChild = newChild;\n                childToUpdate = this.pendingChild;\n            }\n        }\n        else {\n            if (this.pendingChild === null) {\n                childToUpdate = this.currentChild;\n            }\n            else {\n                childToUpdate = this.pendingChild;\n            }\n        }\n        this.latestConfig = lbConfig;\n        childToUpdate.updateAddressList(addressList, lbConfig, attributes);\n    }\n    exitIdle() {\n        if (this.currentChild) {\n            this.currentChild.exitIdle();\n            if (this.pendingChild) {\n                this.pendingChild.exitIdle();\n            }\n        }\n    }\n    resetBackoff() {\n        if (this.currentChild) {\n            this.currentChild.resetBackoff();\n            if (this.pendingChild) {\n                this.pendingChild.resetBackoff();\n            }\n        }\n    }\n    destroy() {\n        /* Note: state updates are only propagated from the child balancer if that\n         * object is equal to this.currentChild or this.pendingChild. Since this\n         * function sets both of those to null, no further state updates will\n         * occur after this function returns. */\n        if (this.currentChild) {\n            this.currentChild.destroy();\n            this.currentChild = null;\n        }\n        if (this.pendingChild) {\n            this.pendingChild.destroy();\n            this.pendingChild = null;\n        }\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.ChildLoadBalancerHandler = ChildLoadBalancerHandler;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvingLoadBalancer = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst service_config_1 = require(\"./service-config\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst resolver_1 = require(\"./resolver\");\nconst picker_1 = require(\"./picker\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nconst TRACER_NAME = 'resolving_load_balancer';\nfunction trace(text) {\n    logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n/**\n * Name match levels in order from most to least specific. This is the order in\n * which searches will be performed.\n */\nconst NAME_MATCH_LEVEL_ORDER = [\n    'SERVICE_AND_METHOD',\n    'SERVICE',\n    'EMPTY',\n];\nfunction hasMatchingName(service, method, methodConfig, matchLevel) {\n    for (const name of methodConfig.name) {\n        switch (matchLevel) {\n            case 'EMPTY':\n                if (!name.service && !name.method) {\n                    return true;\n                }\n                break;\n            case 'SERVICE':\n                if (name.service === service && !name.method) {\n                    return true;\n                }\n                break;\n            case 'SERVICE_AND_METHOD':\n                if (name.service === service && name.method === method) {\n                    return true;\n                }\n        }\n    }\n    return false;\n}\nfunction findMatchingConfig(service, method, methodConfigs, matchLevel) {\n    for (const config of methodConfigs) {\n        if (hasMatchingName(service, method, config, matchLevel)) {\n            return config;\n        }\n    }\n    return null;\n}\nfunction getDefaultConfigSelector(serviceConfig) {\n    return function defaultConfigSelector(methodName, metadata) {\n        var _a, _b;\n        const splitName = methodName.split('/').filter(x => x.length > 0);\n        const service = (_a = splitName[0]) !== null && _a !== void 0 ? _a : '';\n        const method = (_b = splitName[1]) !== null && _b !== void 0 ? _b : '';\n        if (serviceConfig && serviceConfig.methodConfig) {\n            /* Check for the following in order, and return the first method\n             * config that matches:\n             * 1. A name that exactly matches the service and method\n             * 2. A name with no method set that matches the service\n             * 3. An empty name\n             */\n            for (const matchLevel of NAME_MATCH_LEVEL_ORDER) {\n                const matchingConfig = findMatchingConfig(service, method, serviceConfig.methodConfig, matchLevel);\n                if (matchingConfig) {\n                    return {\n                        methodConfig: matchingConfig,\n                        pickInformation: {},\n                        status: constants_1.Status.OK,\n                        dynamicFilterFactories: [],\n                    };\n                }\n            }\n        }\n        return {\n            methodConfig: { name: [] },\n            pickInformation: {},\n            status: constants_1.Status.OK,\n            dynamicFilterFactories: [],\n        };\n    };\n}\nclass ResolvingLoadBalancer {\n    /**\n     * Wrapper class that behaves like a `LoadBalancer` and also handles name\n     * resolution internally.\n     * @param target The address of the backend to connect to.\n     * @param channelControlHelper `ChannelControlHelper` instance provided by\n     *     this load balancer's owner.\n     * @param defaultServiceConfig The default service configuration to be used\n     *     if none is provided by the name resolver. A `null` value indicates\n     *     that the default behavior should be the default unconfigured behavior.\n     *     In practice, that means using the \"pick first\" load balancer\n     *     implmentation\n     */\n    constructor(target, channelControlHelper, channelOptions, onSuccessfulResolution, onFailedResolution) {\n        this.target = target;\n        this.channelControlHelper = channelControlHelper;\n        this.onSuccessfulResolution = onSuccessfulResolution;\n        this.onFailedResolution = onFailedResolution;\n        this.latestChildState = connectivity_state_1.ConnectivityState.IDLE;\n        this.latestChildPicker = new picker_1.QueuePicker(this);\n        /**\n         * This resolving load balancer's current connectivity state.\n         */\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The service config object from the last successful resolution, if\n         * available. A value of null indicates that we have not yet received a valid\n         * service config from the resolver.\n         */\n        this.previousServiceConfig = null;\n        /**\n         * Indicates whether we should attempt to resolve again after the backoff\n         * timer runs out.\n         */\n        this.continueResolving = false;\n        if (channelOptions['grpc.service_config']) {\n            this.defaultServiceConfig = (0, service_config_1.validateServiceConfig)(JSON.parse(channelOptions['grpc.service_config']));\n        }\n        else {\n            this.defaultServiceConfig = {\n                loadBalancingConfig: [],\n                methodConfig: [],\n            };\n        }\n        this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        this.childLoadBalancer = new load_balancer_child_handler_1.ChildLoadBalancerHandler({\n            createSubchannel: channelControlHelper.createSubchannel.bind(channelControlHelper),\n            requestReresolution: () => {\n                /* If the backoffTimeout is running, we're still backing off from\n                 * making resolve requests, so we shouldn't make another one here.\n                 * In that case, the backoff timer callback will call\n                 * updateResolution */\n                if (this.backoffTimeout.isRunning()) {\n                    trace('requestReresolution delayed by backoff timer until ' + this.backoffTimeout.getEndTime().toISOString());\n                    this.continueResolving = true;\n                }\n                else {\n                    this.updateResolution();\n                }\n            },\n            updateState: (newState, picker) => {\n                this.latestChildState = newState;\n                this.latestChildPicker = picker;\n                this.updateState(newState, picker);\n            },\n            addChannelzChild: channelControlHelper.addChannelzChild.bind(channelControlHelper),\n            removeChannelzChild: channelControlHelper.removeChannelzChild.bind(channelControlHelper),\n        });\n        this.innerResolver = (0, resolver_1.createResolver)(target, {\n            onSuccessfulResolution: (addressList, serviceConfig, serviceConfigError, configSelector, attributes) => {\n                var _a;\n                this.backoffTimeout.stop();\n                this.backoffTimeout.reset();\n                let workingServiceConfig = null;\n                /* This first group of conditionals implements the algorithm described\n                 * in https://github.com/grpc/proposal/blob/master/A21-service-config-error-handling.md\n                 * in the section called \"Behavior on receiving a new gRPC Config\".\n                 */\n                if (serviceConfig === null) {\n                    // Step 4 and 5\n                    if (serviceConfigError === null) {\n                        // Step 5\n                        this.previousServiceConfig = null;\n                        workingServiceConfig = this.defaultServiceConfig;\n                    }\n                    else {\n                        // Step 4\n                        if (this.previousServiceConfig === null) {\n                            // Step 4.ii\n                            this.handleResolutionFailure(serviceConfigError);\n                        }\n                        else {\n                            // Step 4.i\n                            workingServiceConfig = this.previousServiceConfig;\n                        }\n                    }\n                }\n                else {\n                    // Step 3\n                    workingServiceConfig = serviceConfig;\n                    this.previousServiceConfig = serviceConfig;\n                }\n                const workingConfigList = (_a = workingServiceConfig === null || workingServiceConfig === void 0 ? void 0 : workingServiceConfig.loadBalancingConfig) !== null && _a !== void 0 ? _a : [];\n                const loadBalancingConfig = (0, load_balancer_1.getFirstUsableConfig)(workingConfigList, true);\n                if (loadBalancingConfig === null) {\n                    // There were load balancing configs but none are supported. This counts as a resolution failure\n                    this.handleResolutionFailure({\n                        code: constants_1.Status.UNAVAILABLE,\n                        details: 'All load balancer options in service config are not compatible',\n                        metadata: new metadata_1.Metadata(),\n                    });\n                    return;\n                }\n                this.childLoadBalancer.updateAddressList(addressList, loadBalancingConfig, attributes);\n                const finalServiceConfig = workingServiceConfig !== null && workingServiceConfig !== void 0 ? workingServiceConfig : this.defaultServiceConfig;\n                this.onSuccessfulResolution(finalServiceConfig, configSelector !== null && configSelector !== void 0 ? configSelector : getDefaultConfigSelector(finalServiceConfig));\n            },\n            onError: (error) => {\n                this.handleResolutionFailure(error);\n            },\n        }, channelOptions);\n        const backoffOptions = {\n            initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoffTimeout = new backoff_timeout_1.BackoffTimeout(() => {\n            if (this.continueResolving) {\n                this.updateResolution();\n                this.continueResolving = false;\n            }\n            else {\n                this.updateState(this.latestChildState, this.latestChildPicker);\n            }\n        }, backoffOptions);\n        this.backoffTimeout.unref();\n    }\n    updateResolution() {\n        this.innerResolver.updateResolution();\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE) {\n            this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n        }\n        this.backoffTimeout.runOnce();\n    }\n    updateState(connectivityState, picker) {\n        trace((0, uri_parser_1.uriToString)(this.target) +\n            ' ' +\n            connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[connectivityState]);\n        // Ensure that this.exitIdle() is called by the picker\n        if (connectivityState === connectivity_state_1.ConnectivityState.IDLE) {\n            picker = new picker_1.QueuePicker(this);\n        }\n        this.currentState = connectivityState;\n        this.channelControlHelper.updateState(connectivityState, picker);\n    }\n    handleResolutionFailure(error) {\n        if (this.latestChildState === connectivity_state_1.ConnectivityState.IDLE) {\n            this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker(error));\n            this.onFailedResolution(error);\n        }\n    }\n    exitIdle() {\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE ||\n            this.currentState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n            if (this.backoffTimeout.isRunning()) {\n                this.continueResolving = true;\n            }\n            else {\n                this.updateResolution();\n            }\n        }\n        this.childLoadBalancer.exitIdle();\n    }\n    updateAddressList(addressList, lbConfig) {\n        throw new Error('updateAddressList not supported on ResolvingLoadBalancer');\n    }\n    resetBackoff() {\n        this.backoffTimeout.reset();\n        this.childLoadBalancer.resetBackoff();\n    }\n    destroy() {\n        this.childLoadBalancer.destroy();\n        this.innerResolver.destroy();\n        this.backoffTimeout.reset();\n        this.backoffTimeout.stop();\n        this.latestChildState = connectivity_state_1.ConnectivityState.IDLE;\n        this.latestChildPicker = new picker_1.QueuePicker(this);\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        this.previousServiceConfig = null;\n        this.continueResolving = false;\n    }\n    getTypeName() {\n        return 'resolving_load_balancer';\n    }\n}\nexports.ResolvingLoadBalancer = ResolvingLoadBalancer;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.channelOptionsEqual = exports.recognizedOptions = void 0;\n/**\n * This is for checking provided options at runtime. This is an object for\n * easier membership checking.\n */\nexports.recognizedOptions = {\n    'grpc.ssl_target_name_override': true,\n    'grpc.primary_user_agent': true,\n    'grpc.secondary_user_agent': true,\n    'grpc.default_authority': true,\n    'grpc.keepalive_time_ms': true,\n    'grpc.keepalive_timeout_ms': true,\n    'grpc.keepalive_permit_without_calls': true,\n    'grpc.service_config': true,\n    'grpc.max_concurrent_streams': true,\n    'grpc.initial_reconnect_backoff_ms': true,\n    'grpc.max_reconnect_backoff_ms': true,\n    'grpc.use_local_subchannel_pool': true,\n    'grpc.max_send_message_length': true,\n    'grpc.max_receive_message_length': true,\n    'grpc.enable_http_proxy': true,\n    'grpc.enable_channelz': true,\n    'grpc.dns_min_time_between_resolutions_ms': true,\n    'grpc.enable_retries': true,\n    'grpc.per_rpc_retry_buffer_size': true,\n    'grpc.retry_buffer_size': true,\n    'grpc.max_connection_age_ms': true,\n    'grpc.max_connection_age_grace_ms': true,\n    'grpc-node.max_session_memory': true,\n    'grpc.service_config_disable_resolution': true,\n    'grpc.client_idle_timeout_ms': true,\n    'grpc-node.tls_enable_trace': true,\n};\nfunction channelOptionsEqual(options1, options2) {\n    const keys1 = Object.keys(options1).sort();\n    const keys2 = Object.keys(options2).sort();\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (let i = 0; i < keys1.length; i += 1) {\n        if (keys1[i] !== keys2[i]) {\n            return false;\n        }\n        if (options1[keys1[i]] !== options2[keys2[i]]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.channelOptionsEqual = channelOptionsEqual;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringToSubchannelAddress = exports.subchannelAddressToString = exports.subchannelAddressEqual = exports.isTcpSubchannelAddress = void 0;\nconst net_1 = require(\"net\");\nfunction isTcpSubchannelAddress(address) {\n    return 'port' in address;\n}\nexports.isTcpSubchannelAddress = isTcpSubchannelAddress;\nfunction subchannelAddressEqual(address1, address2) {\n    if (!address1 && !address2) {\n        return true;\n    }\n    if (!address1 || !address2) {\n        return false;\n    }\n    if (isTcpSubchannelAddress(address1)) {\n        return (isTcpSubchannelAddress(address2) &&\n            address1.host === address2.host &&\n            address1.port === address2.port);\n    }\n    else {\n        return !isTcpSubchannelAddress(address2) && address1.path === address2.path;\n    }\n}\nexports.subchannelAddressEqual = subchannelAddressEqual;\nfunction subchannelAddressToString(address) {\n    if (isTcpSubchannelAddress(address)) {\n        return address.host + ':' + address.port;\n    }\n    else {\n        return address.path;\n    }\n}\nexports.subchannelAddressToString = subchannelAddressToString;\nconst DEFAULT_PORT = 443;\nfunction stringToSubchannelAddress(addressString, port) {\n    if ((0, net_1.isIP)(addressString)) {\n        return {\n            host: addressString,\n            port: port !== null && port !== void 0 ? port : DEFAULT_PORT,\n        };\n    }\n    else {\n        return {\n            path: addressString,\n        };\n    }\n}\nexports.stringToSubchannelAddress = stringToSubchannelAddress;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addAdminServicesToServer = exports.registerAdminService = void 0;\nconst registeredAdminServices = [];\nfunction registerAdminService(getServiceDefinition, getHandlers) {\n    registeredAdminServices.push({ getServiceDefinition, getHandlers });\n}\nexports.registerAdminService = registerAdminService;\nfunction addAdminServicesToServer(server) {\n    for (const { getServiceDefinition, getHandlers } of registeredAdminServices) {\n        server.addService(getServiceDefinition(), getHandlers());\n    }\n}\nexports.addAdminServicesToServer = addAdminServicesToServer;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientDuplexStreamImpl = exports.ClientWritableStreamImpl = exports.ClientReadableStreamImpl = exports.ClientUnaryCallImpl = exports.callErrorFromStatus = void 0;\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\n/**\n * Construct a ServiceError from a StatusObject. This function exists primarily\n * as an attempt to make the error stack trace clearly communicate that the\n * error is not necessarily a problem in gRPC itself.\n * @param status\n */\nfunction callErrorFromStatus(status, callerStack) {\n    const message = `${status.code} ${constants_1.Status[status.code]}: ${status.details}`;\n    const error = new Error(message);\n    const stack = `${error.stack}\\nfor call at\\n${callerStack}`;\n    return Object.assign(new Error(message), status, { stack });\n}\nexports.callErrorFromStatus = callErrorFromStatus;\nclass ClientUnaryCallImpl extends events_1.EventEmitter {\n    constructor() {\n        super();\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n}\nexports.ClientUnaryCallImpl = ClientUnaryCallImpl;\nclass ClientReadableStreamImpl extends stream_1.Readable {\n    constructor(deserialize) {\n        super({ objectMode: true });\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n}\nexports.ClientReadableStreamImpl = ClientReadableStreamImpl;\nclass ClientWritableStreamImpl extends stream_1.Writable {\n    constructor(serialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientWritableStreamImpl = ClientWritableStreamImpl;\nclass ClientDuplexStreamImpl extends stream_1.Duplex {\n    constructor(serialize, deserialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterceptingListenerImpl = exports.isInterceptingListener = void 0;\nfunction isInterceptingListener(listener) {\n    return (listener.onReceiveMetadata !== undefined &&\n        listener.onReceiveMetadata.length === 1);\n}\nexports.isInterceptingListener = isInterceptingListener;\nclass InterceptingListenerImpl {\n    constructor(listener, nextListener) {\n        this.listener = listener;\n        this.nextListener = nextListener;\n        this.processingMetadata = false;\n        this.hasPendingMessage = false;\n        this.processingMessage = false;\n        this.pendingStatus = null;\n    }\n    processPendingMessage() {\n        if (this.hasPendingMessage) {\n            this.nextListener.onReceiveMessage(this.pendingMessage);\n            this.pendingMessage = null;\n            this.hasPendingMessage = false;\n        }\n    }\n    processPendingStatus() {\n        if (this.pendingStatus) {\n            this.nextListener.onReceiveStatus(this.pendingStatus);\n        }\n    }\n    onReceiveMetadata(metadata) {\n        this.processingMetadata = true;\n        this.listener.onReceiveMetadata(metadata, metadata => {\n            this.processingMetadata = false;\n            this.nextListener.onReceiveMetadata(metadata);\n            this.processPendingMessage();\n            this.processPendingStatus();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onReceiveMessage(message) {\n        /* If this listener processes messages asynchronously, the last message may\n         * be reordered with respect to the status */\n        this.processingMessage = true;\n        this.listener.onReceiveMessage(message, msg => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessage = msg;\n                this.hasPendingMessage = true;\n            }\n            else {\n                this.nextListener.onReceiveMessage(msg);\n                this.processPendingStatus();\n            }\n        });\n    }\n    onReceiveStatus(status) {\n        this.listener.onReceiveStatus(status, processedStatus => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingStatus = processedStatus;\n            }\n            else {\n                this.nextListener.onReceiveStatus(processedStatus);\n            }\n        });\n    }\n}\nexports.InterceptingListenerImpl = InterceptingListenerImpl;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInterceptingCall = exports.InterceptingCall = exports.RequesterBuilder = exports.ListenerBuilder = exports.InterceptorConfigurationError = void 0;\nconst metadata_1 = require(\"./metadata\");\nconst call_interface_1 = require(\"./call-interface\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\n/**\n * Error class associated with passing both interceptors and interceptor\n * providers to a client constructor or as call options.\n */\nclass InterceptorConfigurationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InterceptorConfigurationError';\n        Error.captureStackTrace(this, InterceptorConfigurationError);\n    }\n}\nexports.InterceptorConfigurationError = InterceptorConfigurationError;\nclass ListenerBuilder {\n    constructor() {\n        this.metadata = undefined;\n        this.message = undefined;\n        this.status = undefined;\n    }\n    withOnReceiveMetadata(onReceiveMetadata) {\n        this.metadata = onReceiveMetadata;\n        return this;\n    }\n    withOnReceiveMessage(onReceiveMessage) {\n        this.message = onReceiveMessage;\n        return this;\n    }\n    withOnReceiveStatus(onReceiveStatus) {\n        this.status = onReceiveStatus;\n        return this;\n    }\n    build() {\n        return {\n            onReceiveMetadata: this.metadata,\n            onReceiveMessage: this.message,\n            onReceiveStatus: this.status,\n        };\n    }\n}\nexports.ListenerBuilder = ListenerBuilder;\nclass RequesterBuilder {\n    constructor() {\n        this.start = undefined;\n        this.message = undefined;\n        this.halfClose = undefined;\n        this.cancel = undefined;\n    }\n    withStart(start) {\n        this.start = start;\n        return this;\n    }\n    withSendMessage(sendMessage) {\n        this.message = sendMessage;\n        return this;\n    }\n    withHalfClose(halfClose) {\n        this.halfClose = halfClose;\n        return this;\n    }\n    withCancel(cancel) {\n        this.cancel = cancel;\n        return this;\n    }\n    build() {\n        return {\n            start: this.start,\n            sendMessage: this.message,\n            halfClose: this.halfClose,\n            cancel: this.cancel,\n        };\n    }\n}\nexports.RequesterBuilder = RequesterBuilder;\n/**\n * A Listener with a default pass-through implementation of each method. Used\n * for filling out Listeners with some methods omitted.\n */\nconst defaultListener = {\n    onReceiveMetadata: (metadata, next) => {\n        next(metadata);\n    },\n    onReceiveMessage: (message, next) => {\n        next(message);\n    },\n    onReceiveStatus: (status, next) => {\n        next(status);\n    },\n};\n/**\n * A Requester with a default pass-through implementation of each method. Used\n * for filling out Requesters with some methods omitted.\n */\nconst defaultRequester = {\n    start: (metadata, listener, next) => {\n        next(metadata, listener);\n    },\n    sendMessage: (message, next) => {\n        next(message);\n    },\n    halfClose: next => {\n        next();\n    },\n    cancel: next => {\n        next();\n    },\n};\nclass InterceptingCall {\n    constructor(nextCall, requester) {\n        var _a, _b, _c, _d;\n        this.nextCall = nextCall;\n        /**\n         * Indicates that metadata has been passed to the requester's start\n         * method but it has not been passed to the corresponding next callback\n         */\n        this.processingMetadata = false;\n        /**\n         * Message context for a pending message that is waiting for\n         */\n        this.pendingMessageContext = null;\n        /**\n         * Indicates that a message has been passed to the requester's sendMessage\n         * method but it has not been passed to the corresponding next callback\n         */\n        this.processingMessage = false;\n        /**\n         * Indicates that a status was received but could not be propagated because\n         * a message was still being processed.\n         */\n        this.pendingHalfClose = false;\n        if (requester) {\n            this.requester = {\n                start: (_a = requester.start) !== null && _a !== void 0 ? _a : defaultRequester.start,\n                sendMessage: (_b = requester.sendMessage) !== null && _b !== void 0 ? _b : defaultRequester.sendMessage,\n                halfClose: (_c = requester.halfClose) !== null && _c !== void 0 ? _c : defaultRequester.halfClose,\n                cancel: (_d = requester.cancel) !== null && _d !== void 0 ? _d : defaultRequester.cancel,\n            };\n        }\n        else {\n            this.requester = defaultRequester;\n        }\n    }\n    cancelWithStatus(status, details) {\n        this.requester.cancel(() => {\n            this.nextCall.cancelWithStatus(status, details);\n        });\n    }\n    getPeer() {\n        return this.nextCall.getPeer();\n    }\n    processPendingMessage() {\n        if (this.pendingMessageContext) {\n            this.nextCall.sendMessageWithContext(this.pendingMessageContext, this.pendingMessage);\n            this.pendingMessageContext = null;\n            this.pendingMessage = null;\n        }\n    }\n    processPendingHalfClose() {\n        if (this.pendingHalfClose) {\n            this.nextCall.halfClose();\n        }\n    }\n    start(metadata, interceptingListener) {\n        var _a, _b, _c, _d, _e, _f;\n        const fullInterceptingListener = {\n            onReceiveMetadata: (_b = (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.bind(interceptingListener)) !== null && _b !== void 0 ? _b : (metadata => { }),\n            onReceiveMessage: (_d = (_c = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMessage) === null || _c === void 0 ? void 0 : _c.bind(interceptingListener)) !== null && _d !== void 0 ? _d : (message => { }),\n            onReceiveStatus: (_f = (_e = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _e === void 0 ? void 0 : _e.bind(interceptingListener)) !== null && _f !== void 0 ? _f : (status => { }),\n        };\n        this.processingMetadata = true;\n        this.requester.start(metadata, fullInterceptingListener, (md, listener) => {\n            var _a, _b, _c;\n            this.processingMetadata = false;\n            let finalInterceptingListener;\n            if ((0, call_interface_1.isInterceptingListener)(listener)) {\n                finalInterceptingListener = listener;\n            }\n            else {\n                const fullListener = {\n                    onReceiveMetadata: (_a = listener.onReceiveMetadata) !== null && _a !== void 0 ? _a : defaultListener.onReceiveMetadata,\n                    onReceiveMessage: (_b = listener.onReceiveMessage) !== null && _b !== void 0 ? _b : defaultListener.onReceiveMessage,\n                    onReceiveStatus: (_c = listener.onReceiveStatus) !== null && _c !== void 0 ? _c : defaultListener.onReceiveStatus,\n                };\n                finalInterceptingListener = new call_interface_1.InterceptingListenerImpl(fullListener, fullInterceptingListener);\n            }\n            this.nextCall.start(md, finalInterceptingListener);\n            this.processPendingMessage();\n            this.processPendingHalfClose();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessageWithContext(context, message) {\n        this.processingMessage = true;\n        this.requester.sendMessage(message, finalMessage => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessageContext = context;\n                this.pendingMessage = message;\n            }\n            else {\n                this.nextCall.sendMessageWithContext(context, finalMessage);\n                this.processPendingHalfClose();\n            }\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessage(message) {\n        this.sendMessageWithContext({}, message);\n    }\n    startRead() {\n        this.nextCall.startRead();\n    }\n    halfClose() {\n        this.requester.halfClose(() => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingHalfClose = true;\n            }\n            else {\n                this.nextCall.halfClose();\n            }\n        });\n    }\n}\nexports.InterceptingCall = InterceptingCall;\nfunction getCall(channel, path, options) {\n    var _a, _b;\n    const deadline = (_a = options.deadline) !== null && _a !== void 0 ? _a : Infinity;\n    const host = options.host;\n    const parent = (_b = options.parent) !== null && _b !== void 0 ? _b : null;\n    const propagateFlags = options.propagate_flags;\n    const credentials = options.credentials;\n    const call = channel.createCall(path, deadline, host, parent, propagateFlags);\n    if (credentials) {\n        call.setCredentials(credentials);\n    }\n    return call;\n}\n/**\n * InterceptingCall implementation that directly owns the underlying Call\n * object and handles serialization and deseraizliation.\n */\nclass BaseInterceptingCall {\n    constructor(call, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    methodDefinition) {\n        this.call = call;\n        this.methodDefinition = methodDefinition;\n    }\n    cancelWithStatus(status, details) {\n        this.call.cancelWithStatus(status, details);\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessageWithContext(context, message) {\n        let serialized;\n        try {\n            serialized = this.methodDefinition.requestSerialize(message);\n        }\n        catch (e) {\n            this.call.cancelWithStatus(constants_1.Status.INTERNAL, `Request message serialization failure: ${(0, error_1.getErrorMessage)(e)}`);\n            return;\n        }\n        this.call.sendMessageWithContext(context, serialized);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessage(message) {\n        this.sendMessageWithContext({}, message);\n    }\n    start(metadata, interceptingListener) {\n        let readError = null;\n        this.call.start(metadata, {\n            onReceiveMetadata: metadata => {\n                var _a;\n                (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, metadata);\n            },\n            onReceiveMessage: message => {\n                var _a;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let deserialized;\n                try {\n                    deserialized = this.methodDefinition.responseDeserialize(message);\n                }\n                catch (e) {\n                    readError = {\n                        code: constants_1.Status.INTERNAL,\n                        details: `Response message parsing error: ${(0, error_1.getErrorMessage)(e)}`,\n                        metadata: new metadata_1.Metadata(),\n                    };\n                    this.call.cancelWithStatus(readError.code, readError.details);\n                    return;\n                }\n                (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, deserialized);\n            },\n            onReceiveStatus: status => {\n                var _a, _b;\n                if (readError) {\n                    (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, readError);\n                }\n                else {\n                    (_b = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _b === void 0 ? void 0 : _b.call(interceptingListener, status);\n                }\n            },\n        });\n    }\n    startRead() {\n        this.call.startRead();\n    }\n    halfClose() {\n        this.call.halfClose();\n    }\n}\n/**\n * BaseInterceptingCall with special-cased behavior for methods with unary\n * responses.\n */\nclass BaseUnaryInterceptingCall extends BaseInterceptingCall {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(call, methodDefinition) {\n        super(call, methodDefinition);\n    }\n    start(metadata, listener) {\n        var _a, _b;\n        let receivedMessage = false;\n        const wrapperListener = {\n            onReceiveMetadata: (_b = (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.bind(listener)) !== null && _b !== void 0 ? _b : (metadata => { }),\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage: (message) => {\n                var _a;\n                receivedMessage = true;\n                (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(listener, message);\n            },\n            onReceiveStatus: (status) => {\n                var _a, _b;\n                if (!receivedMessage) {\n                    (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(listener, null);\n                }\n                (_b = listener === null || listener === void 0 ? void 0 : listener.onReceiveStatus) === null || _b === void 0 ? void 0 : _b.call(listener, status);\n            },\n        };\n        super.start(metadata, wrapperListener);\n        this.call.startRead();\n    }\n}\n/**\n * BaseInterceptingCall with special-cased behavior for methods with streaming\n * responses.\n */\nclass BaseStreamingInterceptingCall extends BaseInterceptingCall {\n}\nfunction getBottomInterceptingCall(channel, options, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmethodDefinition) {\n    const call = getCall(channel, methodDefinition.path, options);\n    if (methodDefinition.responseStream) {\n        return new BaseStreamingInterceptingCall(call, methodDefinition);\n    }\n    else {\n        return new BaseUnaryInterceptingCall(call, methodDefinition);\n    }\n}\nfunction getInterceptingCall(interceptorArgs, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmethodDefinition, options, channel) {\n    if (interceptorArgs.clientInterceptors.length > 0 &&\n        interceptorArgs.clientInterceptorProviders.length > 0) {\n        throw new InterceptorConfigurationError('Both interceptors and interceptor_providers were passed as options ' +\n            'to the client constructor. Only one of these is allowed.');\n    }\n    if (interceptorArgs.callInterceptors.length > 0 &&\n        interceptorArgs.callInterceptorProviders.length > 0) {\n        throw new InterceptorConfigurationError('Both interceptors and interceptor_providers were passed as call ' +\n            'options. Only one of these is allowed.');\n    }\n    let interceptors = [];\n    // Interceptors passed to the call override interceptors passed to the client constructor\n    if (interceptorArgs.callInterceptors.length > 0 ||\n        interceptorArgs.callInterceptorProviders.length > 0) {\n        interceptors = []\n            .concat(interceptorArgs.callInterceptors, interceptorArgs.callInterceptorProviders.map(provider => provider(methodDefinition)))\n            .filter(interceptor => interceptor);\n        // Filter out falsy values when providers return nothing\n    }\n    else {\n        interceptors = []\n            .concat(interceptorArgs.clientInterceptors, interceptorArgs.clientInterceptorProviders.map(provider => provider(methodDefinition)))\n            .filter(interceptor => interceptor);\n        // Filter out falsy values when providers return nothing\n    }\n    const interceptorOptions = Object.assign({}, options, {\n        method_definition: methodDefinition,\n    });\n    /* For each interceptor in the list, the nextCall function passed to it is\n     * based on the next interceptor in the list, using a nextCall function\n     * constructed with the following interceptor in the list, and so on. The\n     * initialValue, which is effectively at the end of the list, is a nextCall\n     * function that invokes getBottomInterceptingCall, the result of which\n     * handles (de)serialization and also gets the underlying call from the\n     * channel. */\n    const getCall = interceptors.reduceRight((nextCall, nextInterceptor) => {\n        return currentOptions => nextInterceptor(currentOptions, nextCall);\n    }, (finalOptions) => getBottomInterceptingCall(channel, finalOptions, methodDefinition));\n    return getCall(interceptorOptions);\n}\nexports.getInterceptingCall = getInterceptingCall;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst call_1 = require(\"./call\");\nconst channel_1 = require(\"./channel\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst client_interceptors_1 = require(\"./client-interceptors\");\nconst CHANNEL_SYMBOL = Symbol();\nconst INTERCEPTOR_SYMBOL = Symbol();\nconst INTERCEPTOR_PROVIDER_SYMBOL = Symbol();\nconst CALL_INVOCATION_TRANSFORMER_SYMBOL = Symbol();\nfunction isFunction(arg) {\n    return typeof arg === 'function';\n}\nfunction getErrorStackString(error) {\n    return error.stack.split('\\n').slice(1).join('\\n');\n}\n/**\n * A generic gRPC client. Primarily useful as a base class for all generated\n * clients.\n */\nclass Client {\n    constructor(address, credentials, options = {}) {\n        var _a, _b;\n        options = Object.assign({}, options);\n        this[INTERCEPTOR_SYMBOL] = (_a = options.interceptors) !== null && _a !== void 0 ? _a : [];\n        delete options.interceptors;\n        this[INTERCEPTOR_PROVIDER_SYMBOL] = (_b = options.interceptor_providers) !== null && _b !== void 0 ? _b : [];\n        delete options.interceptor_providers;\n        if (this[INTERCEPTOR_SYMBOL].length > 0 &&\n            this[INTERCEPTOR_PROVIDER_SYMBOL].length > 0) {\n            throw new Error('Both interceptors and interceptor_providers were passed as options ' +\n                'to the client constructor. Only one of these is allowed.');\n        }\n        this[CALL_INVOCATION_TRANSFORMER_SYMBOL] =\n            options.callInvocationTransformer;\n        delete options.callInvocationTransformer;\n        if (options.channelOverride) {\n            this[CHANNEL_SYMBOL] = options.channelOverride;\n        }\n        else if (options.channelFactoryOverride) {\n            const channelFactoryOverride = options.channelFactoryOverride;\n            delete options.channelFactoryOverride;\n            this[CHANNEL_SYMBOL] = channelFactoryOverride(address, credentials, options);\n        }\n        else {\n            this[CHANNEL_SYMBOL] = new channel_1.ChannelImplementation(address, credentials, options);\n        }\n    }\n    close() {\n        this[CHANNEL_SYMBOL].close();\n    }\n    getChannel() {\n        return this[CHANNEL_SYMBOL];\n    }\n    waitForReady(deadline, callback) {\n        const checkState = (err) => {\n            if (err) {\n                callback(new Error('Failed to connect before the deadline'));\n                return;\n            }\n            let newState;\n            try {\n                newState = this[CHANNEL_SYMBOL].getConnectivityState(true);\n            }\n            catch (e) {\n                callback(new Error('The channel has been closed'));\n                return;\n            }\n            if (newState === connectivity_state_1.ConnectivityState.READY) {\n                callback();\n            }\n            else {\n                try {\n                    this[CHANNEL_SYMBOL].watchConnectivityState(newState, deadline, checkState);\n                }\n                catch (e) {\n                    callback(new Error('The channel has been closed'));\n                }\n            }\n        };\n        setImmediate(checkState);\n    }\n    checkOptionalUnaryResponseArguments(arg1, arg2, arg3) {\n        if (isFunction(arg1)) {\n            return { metadata: new metadata_1.Metadata(), options: {}, callback: arg1 };\n        }\n        else if (isFunction(arg2)) {\n            if (arg1 instanceof metadata_1.Metadata) {\n                return { metadata: arg1, options: {}, callback: arg2 };\n            }\n            else {\n                return { metadata: new metadata_1.Metadata(), options: arg1, callback: arg2 };\n            }\n        }\n        else {\n            if (!(arg1 instanceof metadata_1.Metadata &&\n                arg2 instanceof Object &&\n                isFunction(arg3))) {\n                throw new Error('Incorrect arguments passed');\n            }\n            return { metadata: arg1, options: arg2, callback: arg3 };\n        }\n    }\n    makeUnaryRequest(method, serialize, deserialize, argument, metadata, options, callback) {\n        var _a, _b;\n        const checkedArguments = this.checkOptionalUnaryResponseArguments(metadata, options, callback);\n        const methodDefinition = {\n            path: method,\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            argument: argument,\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientUnaryCallImpl(),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n            callback: checkedArguments.callback,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const emitter = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        emitter.call = call;\n        let responseMessage = null;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata: metadata => {\n                emitter.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                if (responseMessage !== null) {\n                    call.cancelWithStatus(constants_1.Status.INTERNAL, 'Too many responses received');\n                }\n                responseMessage = message;\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                if (status.code === constants_1.Status.OK) {\n                    if (responseMessage === null) {\n                        const callerStack = getErrorStackString(callerStackError);\n                        callProperties.callback((0, call_1.callErrorFromStatus)({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'No message received',\n                            metadata: status.metadata,\n                        }, callerStack));\n                    }\n                    else {\n                        callProperties.callback(null, responseMessage);\n                    }\n                }\n                else {\n                    const callerStack = getErrorStackString(callerStackError);\n                    callProperties.callback((0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                emitter.emit('status', status);\n            },\n        });\n        call.sendMessage(argument);\n        call.halfClose();\n        return emitter;\n    }\n    makeClientStreamRequest(method, serialize, deserialize, metadata, options, callback) {\n        var _a, _b;\n        const checkedArguments = this.checkOptionalUnaryResponseArguments(metadata, options, callback);\n        const methodDefinition = {\n            path: method,\n            requestStream: true,\n            responseStream: false,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientWritableStreamImpl(serialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n            callback: checkedArguments.callback,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const emitter = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        emitter.call = call;\n        let responseMessage = null;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata: metadata => {\n                emitter.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                if (responseMessage !== null) {\n                    call.cancelWithStatus(constants_1.Status.INTERNAL, 'Too many responses received');\n                }\n                responseMessage = message;\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                if (status.code === constants_1.Status.OK) {\n                    if (responseMessage === null) {\n                        const callerStack = getErrorStackString(callerStackError);\n                        callProperties.callback((0, call_1.callErrorFromStatus)({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'No message received',\n                            metadata: status.metadata,\n                        }, callerStack));\n                    }\n                    else {\n                        callProperties.callback(null, responseMessage);\n                    }\n                }\n                else {\n                    const callerStack = getErrorStackString(callerStackError);\n                    callProperties.callback((0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                emitter.emit('status', status);\n            },\n        });\n        return emitter;\n    }\n    checkMetadataAndOptions(arg1, arg2) {\n        let metadata;\n        let options;\n        if (arg1 instanceof metadata_1.Metadata) {\n            metadata = arg1;\n            if (arg2) {\n                options = arg2;\n            }\n            else {\n                options = {};\n            }\n        }\n        else {\n            if (arg1) {\n                options = arg1;\n            }\n            else {\n                options = {};\n            }\n            metadata = new metadata_1.Metadata();\n        }\n        return { metadata, options };\n    }\n    makeServerStreamRequest(method, serialize, deserialize, argument, metadata, options) {\n        var _a, _b;\n        const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n        const methodDefinition = {\n            path: method,\n            requestStream: false,\n            responseStream: true,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            argument: argument,\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientReadableStreamImpl(deserialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const stream = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        stream.call = call;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata(metadata) {\n                stream.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                stream.push(message);\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                stream.push(null);\n                if (status.code !== constants_1.Status.OK) {\n                    const callerStack = getErrorStackString(callerStackError);\n                    stream.emit('error', (0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                stream.emit('status', status);\n            },\n        });\n        call.sendMessage(argument);\n        call.halfClose();\n        return stream;\n    }\n    makeBidiStreamRequest(method, serialize, deserialize, metadata, options) {\n        var _a, _b;\n        const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n        const methodDefinition = {\n            path: method,\n            requestStream: true,\n            responseStream: true,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientDuplexStreamImpl(serialize, deserialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const stream = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        stream.call = call;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata(metadata) {\n                stream.emit('metadata', metadata);\n            },\n            onReceiveMessage(message) {\n                stream.push(message);\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                stream.push(null);\n                if (status.code !== constants_1.Status.OK) {\n                    const callerStack = getErrorStackString(callerStackError);\n                    stream.emit('error', (0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                stream.emit('status', status);\n            },\n        });\n        return stream;\n    }\n}\nexports.Client = Client;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadPackageDefinition = exports.makeClientConstructor = void 0;\nconst client_1 = require(\"./client\");\n/**\n * Map with short names for each of the requester maker functions. Used in\n * makeClientConstructor\n * @private\n */\nconst requesterFuncs = {\n    unary: client_1.Client.prototype.makeUnaryRequest,\n    server_stream: client_1.Client.prototype.makeServerStreamRequest,\n    client_stream: client_1.Client.prototype.makeClientStreamRequest,\n    bidi: client_1.Client.prototype.makeBidiStreamRequest,\n};\n/**\n * Returns true, if given key is included in the blacklisted\n * keys.\n * @param key key for check, string.\n */\nfunction isPrototypePolluted(key) {\n    return ['__proto__', 'prototype', 'constructor'].includes(key);\n}\n/**\n * Creates a constructor for a client with the given methods, as specified in\n * the methods argument. The resulting class will have an instance method for\n * each method in the service, which is a partial application of one of the\n * [Client]{@link grpc.Client} request methods, depending on `requestSerialize`\n * and `responseSerialize`, with the `method`, `serialize`, and `deserialize`\n * arguments predefined.\n * @param methods An object mapping method names to\n *     method attributes\n * @param serviceName The fully qualified name of the service\n * @param classOptions An options object.\n * @return New client constructor, which is a subclass of\n *     {@link grpc.Client}, and has the same arguments as that constructor.\n */\nfunction makeClientConstructor(methods, serviceName, classOptions) {\n    if (!classOptions) {\n        classOptions = {};\n    }\n    class ServiceClientImpl extends client_1.Client {\n    }\n    Object.keys(methods).forEach(name => {\n        if (isPrototypePolluted(name)) {\n            return;\n        }\n        const attrs = methods[name];\n        let methodType;\n        // TODO(murgatroid99): Verify that we don't need this anymore\n        if (typeof name === 'string' && name.charAt(0) === '$') {\n            throw new Error('Method names cannot start with $');\n        }\n        if (attrs.requestStream) {\n            if (attrs.responseStream) {\n                methodType = 'bidi';\n            }\n            else {\n                methodType = 'client_stream';\n            }\n        }\n        else {\n            if (attrs.responseStream) {\n                methodType = 'server_stream';\n            }\n            else {\n                methodType = 'unary';\n            }\n        }\n        const serialize = attrs.requestSerialize;\n        const deserialize = attrs.responseDeserialize;\n        const methodFunc = partial(requesterFuncs[methodType], attrs.path, serialize, deserialize);\n        ServiceClientImpl.prototype[name] = methodFunc;\n        // Associate all provided attributes with the method\n        Object.assign(ServiceClientImpl.prototype[name], attrs);\n        if (attrs.originalName && !isPrototypePolluted(attrs.originalName)) {\n            ServiceClientImpl.prototype[attrs.originalName] =\n                ServiceClientImpl.prototype[name];\n        }\n    });\n    ServiceClientImpl.service = methods;\n    ServiceClientImpl.serviceName = serviceName;\n    return ServiceClientImpl;\n}\nexports.makeClientConstructor = makeClientConstructor;\nfunction partial(fn, path, serialize, deserialize) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (...args) {\n        return fn.call(this, path, serialize, deserialize, ...args);\n    };\n}\nfunction isProtobufTypeDefinition(obj) {\n    return 'format' in obj;\n}\n/**\n * Load a gRPC package definition as a gRPC object hierarchy.\n * @param packageDef The package definition object.\n * @return The resulting gRPC object.\n */\nfunction loadPackageDefinition(packageDef) {\n    const result = {};\n    for (const serviceFqn in packageDef) {\n        if (Object.prototype.hasOwnProperty.call(packageDef, serviceFqn)) {\n            const service = packageDef[serviceFqn];\n            const nameComponents = serviceFqn.split('.');\n            if (nameComponents.some((comp) => isPrototypePolluted(comp))) {\n                continue;\n            }\n            const serviceName = nameComponents[nameComponents.length - 1];\n            let current = result;\n            for (const packageName of nameComponents.slice(0, -1)) {\n                if (!current[packageName]) {\n                    current[packageName] = {};\n                }\n                current = current[packageName];\n            }\n            if (isProtobufTypeDefinition(service)) {\n                current[serviceName] = service;\n            }\n            else {\n                current[serviceName] = makeClientConstructor(service, serviceName, {});\n            }\n        }\n    }\n    return result;\n}\nexports.loadPackageDefinition = loadPackageDefinition;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n", "\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n", "\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n\n    /**\n     * Cache lookup calls for any objects contains anywhere under this namespace.\n     * This drastically speeds up resolve for large cross-linked protos where the same\n     * types are looked up repeatedly.\n     * @type {Object.<string,ReflectionObject|null>}\n     * @private\n     */\n    this._lookupCache = {};\n\n    /**\n     * Whether or not objects contained in this namespace need feature resolution.\n     * @type {boolean}\n     * @protected\n     */\n    this._needsRecursiveFeatureResolution = true;\n\n    /**\n     * Whether or not objects contained in this namespace need a resolve.\n     * @type {boolean}\n     * @protected\n     */\n    this._needsRecursiveResolve = true;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    namespace._lookupCache = {};\n\n    // Also clear parent caches, since they include nested lookups.\n    var parent = namespace;\n    while(parent = parent.parent) {\n        parent._lookupCache = {};\n    }\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n\n    if (!(this instanceof Type || this instanceof Service || this instanceof Enum || this instanceof Field)) {\n        // This is a package or a root namespace.\n        if (!object._edition) {\n            // Make sure that some edition is set if it hasn't already been specified.\n            object._edition = object._defaultEdition;\n        }\n    }\n\n    this._needsRecursiveFeatureResolution = true;\n    this._needsRecursiveResolve = true;\n\n    // Also clear parent caches, since they need to recurse down.\n    var parent = this;\n    while(parent = parent.parent) {\n        parent._needsRecursiveFeatureResolution = true;\n        parent._needsRecursiveResolve = true;\n    }\n\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n\n    this._resolveFeaturesRecursive(this._edition);\n\n    var nested = this.nestedArray, i = 0;\n    this.resolve();\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    this._needsRecursiveResolve = false;\n    return this;\n};\n\n/**\n * @override\n */\nNamespace.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    if (!this._needsRecursiveFeatureResolution) return this;\n    this._needsRecursiveFeatureResolution = false;\n\n    edition = this._edition || edition;\n\n    ReflectionObject.prototype._resolveFeaturesRecursive.call(this, edition);\n    this.nestedArray.forEach(nested => {\n        nested._resolveFeaturesRecursive(edition);\n    });\n    return this;\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    var flatPath = path.join(\".\");\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Early bailout for objects with matching absolute paths\n    var found = this.root._fullyQualifiedObjects && this.root._fullyQualifiedObjects[\".\" + flatPath];\n    if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n        return found;\n    }\n\n    // Do a regular lookup at this namespace and below\n    found = this._lookupImpl(path, flatPath);\n    if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n        return found;\n    }\n\n    if (parentAlreadyChecked)\n        return null;\n\n    // If there hasn't been a match, walk up the tree and look more broadly\n    var current = this;\n    while (current.parent) {\n        found = current.parent._lookupImpl(path, flatPath);\n        if (found && (!filterTypes || filterTypes.indexOf(found.constructor) > -1)) {\n            return found;\n        }\n        current = current.parent;\n    }\n    return null;\n};\n\n/**\n * Internal helper for lookup that handles searching just at this namespace and below along with caching.\n * @param {string[]} path Path to look up\n * @param {string} flatPath Flattened version of the path to use as a cache key\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @private\n */\nNamespace.prototype._lookupImpl = function lookup(path, flatPath) {\n    if(Object.prototype.hasOwnProperty.call(this._lookupCache, flatPath)) {\n        return this._lookupCache[flatPath];\n    }\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    var exact = null;\n    if (found) {\n        if (path.length === 1) {\n            exact = found;\n        } else if (found instanceof Namespace) {\n            path = path.slice(1);\n            exact = found._lookupImpl(path, path.join(\".\"));\n        }\n\n    // Otherwise try each nested namespace\n    } else {\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i]._lookupImpl(path, flatPath)))\n                exact = found;\n    }\n\n    // Set this even when null, so that when we walk up the tree we can quickly bail on repeated checks back down.\n    this._lookupCache[flatPath] = exact;\n    return exact;\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n", "\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n", "\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n", "\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    if (json.edition)\n        service._edition = json.edition;\n    service.comment = json.comment;\n    service._defaultEdition = \"proto3\";  // For backwards-compatibility.\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"edition\" , this._editionToJSON(),\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n\n    Namespace.prototype.resolve.call(this);\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return this;\n};\n\n/**\n * @override\n */\nService.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    if (!this._needsRecursiveFeatureResolution) return this;\n\n    edition = this._edition || edition;\n\n    Namespace.prototype._resolveFeaturesRecursive.call(this, edition);\n    this.methodsArray.forEach(method => {\n        method._resolveFeaturesRecursive(edition);\n    });\n    return this;\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n", "\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/", "\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\", \"e\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\")\n        (\"if(t===e)\")\n            (\"break\")\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.delimited\n                    ? \"%s.push(types[%i].decode(r,undefined,((t&~7)|4)))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.delimited\n                ? \"%s=types[%i].decode(r,undefined,((t&~7)|4))\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n", "\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}", "\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n", "\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n", "\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {Array.<number[]|string>} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    if (json.edition)\n        type._edition = json.edition;\n    type._defaultEdition = \"proto3\";  // For backwards-compatibility.\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"edition\"    , this._editionToJSON(),\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n\n    Namespace.prototype.resolveAll.call(this);\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    return this;\n};\n\n/**\n * @override\n */\nType.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    if (!this._needsRecursiveFeatureResolution) return this;\n\n    edition = this._edition || edition;\n\n    Namespace.prototype._resolveFeaturesRecursive.call(this, edition);\n    this.oneofsArray.forEach(oneof => {\n        oneof._resolveFeatures(edition);\n    });\n    this.fieldsArray.forEach(field => {\n        field._resolveFeatures(edition);\n    });\n    return this;\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n", "\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n\n    /**\n     * Edition, defaults to proto2 if unspecified.\n     * @type {string}\n     * @private\n     */\n    this._edition = \"proto2\";\n\n    /**\n     * Global lookup cache of fully qualified names.\n     * @type {Object.<string,ReflectionObject>}\n     * @private\n     */\n    this._fullyQualifiedObjects = {};\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Namespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested).resolveAll();\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback) {\n        return util.asPromise(load, self, filename, options);\n    }\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback) {\n            return;\n        }\n        if (sync) {\n            throw err;\n        }\n        if (root) {\n            root.resolveAll();\n        }\n        var cb = callback;\n        callback = null;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued) {\n            finish(null, self); // only once anyway\n        }\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1) {\n            return;\n        }\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync) {\n                process(filename, common[filename]);\n            } else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback) {\n                    return; // terminated meanwhile\n                }\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename)) {\n        filename = [ filename ];\n    }\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n    if (sync) {\n        self.resolveAll();\n        return self;\n    }\n    if (!queued) {\n        finish(null, self);\n    }\n\n    return self;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (!this._needsRecursiveResolve) return this;\n\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    if (object instanceof Type || object instanceof Enum || object instanceof Field) {\n        // Only store types and enums for quick lookup during resolve.\n        this._fullyQualifiedObjects[object.fullName] = object;\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n\n    delete this._fullyQualifiedObjects[object.fullName];\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n", "\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @param {boolean|undefined} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value, ifNotSet) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue && ifNotSet)\n                return dst;\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n", "\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n", "\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    var field = new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n    if (json.edition)\n        field._edition = json.edition;\n    field._defaultEdition = \"proto3\";  // For backwards-compatibility.\n    return field;\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is required.\n * @name Field#required\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"required\", {\n    get: function() {\n        return this._features.field_presence === \"LEGACY_REQUIRED\";\n    }\n});\n\n/**\n * Determines whether this field is not required.\n * @name Field#optional\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"optional\", {\n    get: function() {\n        return !this.required;\n    }\n});\n\n/**\n * Determines whether this field uses tag-delimited encoding.  In proto2 this\n * corresponded to group syntax.\n * @name Field#delimited\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"delimited\", {\n    get: function() {\n        return this.resolvedType instanceof Type &&\n            this._features.message_encoding === \"DELIMITED\";\n    }\n});\n\n/**\n * Determines whether this field is packed. Only relevant when repeated.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        return this._features.repeated_field_encoding === \"PACKED\";\n    }\n});\n\n/**\n * Determines whether this field tracks presence.\n * @name Field#hasPresence\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"hasPresence\", {\n    get: function() {\n        if (this.repeated || this.map) {\n            return false;\n        }\n        return this.partOf || // oneofs\n            this.declaringField || this.extensionField || // extensions\n            this._features.field_presence !== \"IMPLICIT\";\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"edition\" , this._editionToJSON(),\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Infers field features from legacy syntax that may have been specified differently.\n * in older editions.\n * @param {string|undefined} edition The edition this proto is on, or undefined if pre-editions\n * @returns {object} The feature values to override\n */\nField.prototype._inferLegacyProtoFeatures = function _inferLegacyProtoFeatures(edition) {\n    if (edition !== \"proto2\" && edition !== \"proto3\") {\n        return {};\n    }\n\n    var features = {};\n\n    if (this.rule === \"required\") {\n        features.field_presence = \"LEGACY_REQUIRED\";\n    }\n    if (this.parent && types.defaults[this.type] === undefined) {\n        // We can't use resolvedType because types may not have been resolved yet.  However,\n        // legacy groups are always in the same scope as the field so we don't have to do a\n        // full scan of the tree.\n        var type = this.parent.get(this.type.split(\".\").pop());\n        if (type && type instanceof Type && type.group) {\n            features.message_encoding = \"DELIMITED\";\n        }\n    }\n    if (this.getOption(\"packed\") === true) {\n        features.repeated_field_encoding = \"PACKED\";\n    } else if (this.getOption(\"packed\") === false) {\n        features.repeated_field_encoding = \"EXPANDED\";\n    }\n    return features;\n};\n\n/**\n * @override\n */\nField.prototype._resolveFeatures = function _resolveFeatures(edition) {\n    return ReflectionObject.prototype._resolveFeatures.call(this, this._edition || edition);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n", "\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Determines whether this field corresponds to a synthetic oneof created for\n * a proto3 optional field.  No behavioral logic should depend on this, but it\n * can be relevant for reflection.\n * @name OneOf#isProto3Optional\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(OneOf.prototype, \"isProto3Optional\", {\n    get: function() {\n        if (this.fieldsArray == null || this.fieldsArray.length !== 1) {\n            return false;\n        }\n\n        var field = this.fieldsArray[0];\n        return field.options != null && field.options[\"proto3_optional\"] === true;\n    }\n});\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n", "\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nconst OneOf = require(\"./oneof\");\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/* eslint-disable no-warning-comments */\n// TODO: Replace with embedded proto.\nvar editions2023Defaults = {enum_type: \"OPEN\", field_presence: \"EXPLICIT\", json_format: \"ALLOW\", message_encoding: \"LENGTH_PREFIXED\", repeated_field_encoding: \"PACKED\", utf8_validation: \"VERIFY\"};\nvar proto2Defaults = {enum_type: \"CLOSED\", field_presence: \"EXPLICIT\", json_format: \"LEGACY_BEST_EFFORT\", message_encoding: \"LENGTH_PREFIXED\", repeated_field_encoding: \"EXPANDED\", utf8_validation: \"NONE\"};\nvar proto3Defaults = {enum_type: \"OPEN\", field_presence: \"IMPLICIT\", json_format: \"ALLOW\", message_encoding: \"LENGTH_PREFIXED\", repeated_field_encoding: \"PACKED\", utf8_validation: \"VERIFY\"};\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * The edition specified for this object.  Only relevant for top-level objects.\n     * @type {string}\n     * @private\n     */\n    this._edition = null;\n\n    /**\n     * The default edition to use for this object if none is specified.  For legacy reasons,\n     * this is proto2 except in the JSON parsing case where it was proto3.\n     * @type {string}\n     * @private\n     */\n    this._defaultEdition = \"proto2\";\n\n    /**\n     * Resolved Features.\n     * @type {object}\n     * @private\n     */\n    this._features = {};\n\n    /**\n     * Whether or not features have been resolved.\n     * @type {boolean}\n     * @private\n     */\n    this._featuresResolved = false;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Resolves this objects editions features.\n * @param {string} edition The edition we're currently resolving for.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype._resolveFeaturesRecursive = function _resolveFeaturesRecursive(edition) {\n    return this._resolveFeatures(this._edition || edition);\n};\n\n/**\n * Resolves child features from parent features\n * @param {string} edition The edition we're currently resolving for.\n * @returns {undefined}\n */\nReflectionObject.prototype._resolveFeatures = function _resolveFeatures(edition) {\n    if (this._featuresResolved) {\n        return;\n    }\n\n    var defaults = {};\n\n    /* istanbul ignore if */\n    if (!edition) {\n        throw new Error(\"Unknown edition for \" + this.fullName);\n    }\n\n    var protoFeatures = Object.assign(this.options ? Object.assign({},  this.options.features) : {},\n        this._inferLegacyProtoFeatures(edition));\n\n    if (this._edition) {\n        // For a namespace marked with a specific edition, reset defaults.\n        /* istanbul ignore else */\n        if (edition === \"proto2\") {\n            defaults = Object.assign({}, proto2Defaults);\n        } else if (edition === \"proto3\") {\n            defaults = Object.assign({}, proto3Defaults);\n        } else if (edition === \"2023\") {\n            defaults = Object.assign({}, editions2023Defaults);\n        } else {\n            throw new Error(\"Unknown edition: \" + edition);\n        }\n        this._features = Object.assign(defaults, protoFeatures || {});\n        this._featuresResolved = true;\n        return;\n    }\n\n    // fields in Oneofs aren't actually children of them, so we have to\n    // special-case it\n    /* istanbul ignore else */\n    if (this.partOf instanceof OneOf) {\n        var lexicalParentFeaturesCopy = Object.assign({}, this.partOf._features);\n        this._features = Object.assign(lexicalParentFeaturesCopy, protoFeatures || {});\n    } else if (this.declaringField) {\n        // Skip feature resolution of sister fields.\n    } else if (this.parent) {\n        var parentFeaturesCopy = Object.assign({}, this.parent._features);\n        this._features = Object.assign(parentFeaturesCopy, protoFeatures || {});\n    } else {\n        throw new Error(\"Unable to find a parent for \" + this.fullName);\n    }\n    if (this.extensionField) {\n        // Sister fields should have the same features as their extensions.\n        this.extensionField._features = this._features;\n    }\n    this._featuresResolved = true;\n};\n\n/**\n * Infers features from legacy syntax that may have been specified differently.\n * in older editions.\n * @param {string|undefined} edition The edition this proto is on, or undefined if pre-editions\n * @returns {object} The feature values to override\n */\nReflectionObject.prototype._inferLegacyProtoFeatures = function _inferLegacyProtoFeatures(/*edition*/) {\n    return {};\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean|undefined} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!this.options)\n        this.options = {};\n    if (/^features\\./.test(name)) {\n        util.setProperty(this.options, name, value, ifNotSet);\n    } else if (!ifNotSet || this.options[name] === undefined) {\n        if (this.getOption(name) !== value) this.resolved = false;\n        this.options[name] = value;\n    }\n\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            // (If it's a feature, will just write over)\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set its property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n/**\n * Converts the edition this object is pinned to for JSON format.\n * @returns {string|undefined} The edition string for JSON representation\n */\nReflectionObject.prototype._editionToJSON = function _editionToJSON() {\n    if (!this._edition || this._edition === \"proto3\") {\n        // Avoid emitting proto3 since we need to default to it for backwards\n        // compatibility anyway.\n        return undefined;\n    }\n    return this._edition;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n", "\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Resolved values features, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this._valuesFeatures = {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * @override\n */\nEnum.prototype._resolveFeatures = function _resolveFeatures(edition) {\n    edition = this._edition || edition;\n    ReflectionObject.prototype._resolveFeatures.call(this, edition);\n\n    Object.keys(this.values).forEach(key => {\n        var parentFeaturesCopy = Object.assign({}, this._features);\n        this._valuesFeatures[key] = Object.assign(parentFeaturesCopy, this.valuesOptions && this.valuesOptions[key] && this.valuesOptions[key].features);\n    });\n\n    return this;\n};\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    if (json.edition)\n        enm._edition = json.edition;\n    enm._defaultEdition = \"proto3\";  // For backwards-compatibility.\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"edition\"       , this._editionToJSON(),\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n", "\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.delimited\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n", "\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n", "\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        var isComment = /^\\s*\\/\\//.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset - 1)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n", "\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    ReflectionObject = require(\"./object\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        edition = \"proto2\";\n\n    var ptr = root;\n\n    var topLevelObjects = [];\n    var topLevelOptions = {};\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    function resolveFileFeatures() {\n        topLevelObjects.forEach(obj => {\n            obj._edition = edition;\n            Object.keys(topLevelOptions).forEach(opt => {\n                if (obj.getOption(opt) !== undefined) return;\n                obj.setOption(opt, topLevelOptions[opt], true);\n            });\n        });\n    }\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\")) {\n                var str = readString();\n                target.push(str);\n                if (edition >= 2023) {\n                    throw illegal(str, \"id\");\n                }\n            } else {\n                try {\n                    target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n                } catch (err) {\n                    if (acceptStrings && typeRefRe.test(token) && edition >= 2023) {\n                        target.push(token);\n                    } else {\n                        throw err;\n                    }\n                }\n            }\n        } while (skip(\",\", true));\n        var dummy = {options: undefined};\n        dummy.setOption = function(name, value) {\n          if (this.options === undefined) this.options = {};\n          this.options[name] = value;\n        };\n        ifBlock(\n            dummy,\n            function parseRange_block(token) {\n              /* istanbul ignore else */\n              if (token === \"option\") {\n                parseOption(dummy, token);  // skip\n                skip(\";\");\n              } else\n                throw illegal(token);\n            },\n            function parseRange_line() {\n              parseInlineOptions(dummy);  // skip\n            });\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-next-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        edition = readString();\n\n        /* istanbul ignore if */\n        if (edition < 2023)\n            throw illegal(edition, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseEdition() {\n        skip(\"=\");\n        edition = readString();\n        const supportedEditions = [\"2023\"];\n\n        /* istanbul ignore if */\n        if (!supportedEditions.includes(edition))\n            throw illegal(edition, \"edition\");\n\n        skip(\";\");\n    }\n\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                    if (edition !== \"proto2\")\n                        throw illegal(token);\n                /* eslint-disable no-fallthrough */\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (edition === \"proto3\") {\n                        parseField(type, \"proto3_optional\");\n                    } else if (edition !== \"proto2\") {\n                        throw illegal(token);\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (edition === \"proto2\" || !typeRefRe.test(token)) {\n                        throw illegal(token);\n                    }\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n        if (parent === ptr) {\n            topLevelObjects.push(type);\n        }\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n        if (parent === ptr) {\n            topLevelObjects.push(field);\n        }\n    }\n\n    function parseGroup(parent, rule) {\n        if (edition >= 2023) {\n            throw illegal(\"group\");\n        }\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (edition === \"proto3\") {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              if(enm.reserved === undefined) enm.reserved = [];\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n        if (parent === ptr) {\n            topLevelObjects.push(enm);\n        }\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.getOption = function(name) {\n            return this.options[name];\n        };\n        dummy.setOption = function(name, value) {\n            ReflectionObject.prototype.setOption.call(dummy, name, value);\n        };\n        dummy.setParsedOption = function() {\n            return undefined;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.parsedOptions || dummy.options);\n    }\n\n    function parseOption(parent, token) {\n            var option;\n            var propName;\n            var isOption = true;\n            if (token === \"option\") {\n                token = next();\n            }\n\n            while (token !== \"=\") {\n                if (token === \"(\") {\n                    var parensValue = next();\n                    skip(\")\");\n                    token = \"(\" + parensValue + \")\";\n                }\n                if (isOption) {\n                    isOption = false;\n                    if (token.includes(\".\") && !token.includes(\"(\")) {\n                        var tokens = token.split(\".\");\n                        option = tokens[0] + \".\";\n                        token = tokens[1];\n                        continue;\n                    }\n                    option = token;\n                } else {\n                    propName = propName ? propName += token : token;\n                }\n                token = next();\n            }\n            var name = propName ? option.concat(propName) : option;\n            var optionValue = parseOptionValue(parent, name);\n            propName = propName && propName[0] === \".\" ? propName.slice(1) : propName;\n            option = option && option[option.length - 1] === \".\" ? option.slice(0, -1) : option;\n            setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n                if (token === null) {\n                  throw illegal(token, \"end of input\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = parseOptionValue(parent, name + \".\" + token);\n                } else if (peek() === \"[\") {\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (ptr === parent && /^features\\./.test(name)) {\n            topLevelOptions[name] = value;\n            return;\n        }\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token)) {\n                return;\n            }\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n        if (parent === ptr) {\n            topLevelObjects.push(service);\n        }\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (edition === \"proto3\") {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (edition === \"proto2\" || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"edition\":\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n                parseEdition();\n                break;\n\n            case \"option\":\n                parseOption(ptr, token);\n                skip(\";\", true);\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    resolveFileFeatures();\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n", "\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n", "\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n", "// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n", "{\n  \"nested\": {\n    \"google\": {\n      \"nested\": {\n        \"protobuf\": {\n          \"options\": {\n            \"go_package\": \"google.golang.org/protobuf/types/descriptorpb\",\n            \"java_package\": \"com.google.protobuf\",\n            \"java_outer_classname\": \"DescriptorProtos\",\n            \"csharp_namespace\": \"Google.Protobuf.Reflection\",\n            \"objc_class_prefix\": \"GPB\",\n            \"cc_enable_arenas\": true,\n            \"optimize_for\": \"SPEED\"\n          },\n          \"nested\": {\n            \"FileDescriptorSet\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"file\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FileDescriptorProto\",\n                  \"id\": 1\n                }\n              },\n              \"extensions\": [\n                [\n                  536000000,\n                  536000000\n                ]\n              ]\n            },\n            \"Edition\": {\n              \"edition\": \"proto2\",\n              \"values\": {\n                \"EDITION_UNKNOWN\": 0,\n                \"EDITION_LEGACY\": 900,\n                \"EDITION_PROTO2\": 998,\n                \"EDITION_PROTO3\": 999,\n                \"EDITION_2023\": 1000,\n                \"EDITION_2024\": 1001,\n                \"EDITION_1_TEST_ONLY\": 1,\n                \"EDITION_2_TEST_ONLY\": 2,\n                \"EDITION_99997_TEST_ONLY\": 99997,\n                \"EDITION_99998_TEST_ONLY\": 99998,\n                \"EDITION_99999_TEST_ONLY\": 99999,\n                \"EDITION_MAX\": 2147483647\n              }\n            },\n            \"FileDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"package\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                },\n                \"dependency\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 3\n                },\n                \"publicDependency\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"int32\",\n                  \"id\": 10\n                },\n                \"weakDependency\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"int32\",\n                  \"id\": 11\n                },\n                \"optionDependency\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 15\n                },\n                \"messageType\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"DescriptorProto\",\n                  \"id\": 4\n                },\n                \"enumType\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumDescriptorProto\",\n                  \"id\": 5\n                },\n                \"service\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"ServiceDescriptorProto\",\n                  \"id\": 6\n                },\n                \"extension\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FieldDescriptorProto\",\n                  \"id\": 7\n                },\n                \"options\": {\n                  \"type\": \"FileOptions\",\n                  \"id\": 8\n                },\n                \"sourceCodeInfo\": {\n                  \"type\": \"SourceCodeInfo\",\n                  \"id\": 9\n                },\n                \"syntax\": {\n                  \"type\": \"string\",\n                  \"id\": 12\n                },\n                \"edition\": {\n                  \"type\": \"Edition\",\n                  \"id\": 14\n                }\n              }\n            },\n            \"DescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"field\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FieldDescriptorProto\",\n                  \"id\": 2\n                },\n                \"extension\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FieldDescriptorProto\",\n                  \"id\": 6\n                },\n                \"nestedType\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"DescriptorProto\",\n                  \"id\": 3\n                },\n                \"enumType\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumDescriptorProto\",\n                  \"id\": 4\n                },\n                \"extensionRange\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"ExtensionRange\",\n                  \"id\": 5\n                },\n                \"oneofDecl\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"OneofDescriptorProto\",\n                  \"id\": 8\n                },\n                \"options\": {\n                  \"type\": \"MessageOptions\",\n                  \"id\": 7\n                },\n                \"reservedRange\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"ReservedRange\",\n                  \"id\": 9\n                },\n                \"reservedName\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 10\n                },\n                \"visibility\": {\n                  \"type\": \"SymbolVisibility\",\n                  \"id\": 11\n                }\n              },\n              \"nested\": {\n                \"ExtensionRange\": {\n                  \"fields\": {\n                    \"start\": {\n                      \"type\": \"int32\",\n                      \"id\": 1\n                    },\n                    \"end\": {\n                      \"type\": \"int32\",\n                      \"id\": 2\n                    },\n                    \"options\": {\n                      \"type\": \"ExtensionRangeOptions\",\n                      \"id\": 3\n                    }\n                  }\n                },\n                \"ReservedRange\": {\n                  \"fields\": {\n                    \"start\": {\n                      \"type\": \"int32\",\n                      \"id\": 1\n                    },\n                    \"end\": {\n                      \"type\": \"int32\",\n                      \"id\": 2\n                    }\n                  }\n                }\n              }\n            },\n            \"ExtensionRangeOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                },\n                \"declaration\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Declaration\",\n                  \"id\": 2,\n                  \"options\": {\n                    \"retention\": \"RETENTION_SOURCE\"\n                  }\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 50\n                },\n                \"verification\": {\n                  \"type\": \"VerificationState\",\n                  \"id\": 3,\n                  \"options\": {\n                    \"default\": \"UNVERIFIED\",\n                    \"retention\": \"RETENTION_SOURCE\"\n                  }\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"nested\": {\n                \"Declaration\": {\n                  \"fields\": {\n                    \"number\": {\n                      \"type\": \"int32\",\n                      \"id\": 1\n                    },\n                    \"fullName\": {\n                      \"type\": \"string\",\n                      \"id\": 2\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"id\": 3\n                    },\n                    \"reserved\": {\n                      \"type\": \"bool\",\n                      \"id\": 5\n                    },\n                    \"repeated\": {\n                      \"type\": \"bool\",\n                      \"id\": 6\n                    }\n                  },\n                  \"reserved\": [\n                    [\n                      4,\n                      4\n                    ]\n                  ]\n                },\n                \"VerificationState\": {\n                  \"values\": {\n                    \"DECLARATION\": 0,\n                    \"UNVERIFIED\": 1\n                  }\n                }\n              }\n            },\n            \"FieldDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"number\": {\n                  \"type\": \"int32\",\n                  \"id\": 3\n                },\n                \"label\": {\n                  \"type\": \"Label\",\n                  \"id\": 4\n                },\n                \"type\": {\n                  \"type\": \"Type\",\n                  \"id\": 5\n                },\n                \"typeName\": {\n                  \"type\": \"string\",\n                  \"id\": 6\n                },\n                \"extendee\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                },\n                \"defaultValue\": {\n                  \"type\": \"string\",\n                  \"id\": 7\n                },\n                \"oneofIndex\": {\n                  \"type\": \"int32\",\n                  \"id\": 9\n                },\n                \"jsonName\": {\n                  \"type\": \"string\",\n                  \"id\": 10\n                },\n                \"options\": {\n                  \"type\": \"FieldOptions\",\n                  \"id\": 8\n                },\n                \"proto3Optional\": {\n                  \"type\": \"bool\",\n                  \"id\": 17\n                }\n              },\n              \"nested\": {\n                \"Type\": {\n                  \"values\": {\n                    \"TYPE_DOUBLE\": 1,\n                    \"TYPE_FLOAT\": 2,\n                    \"TYPE_INT64\": 3,\n                    \"TYPE_UINT64\": 4,\n                    \"TYPE_INT32\": 5,\n                    \"TYPE_FIXED64\": 6,\n                    \"TYPE_FIXED32\": 7,\n                    \"TYPE_BOOL\": 8,\n                    \"TYPE_STRING\": 9,\n                    \"TYPE_GROUP\": 10,\n                    \"TYPE_MESSAGE\": 11,\n                    \"TYPE_BYTES\": 12,\n                    \"TYPE_UINT32\": 13,\n                    \"TYPE_ENUM\": 14,\n                    \"TYPE_SFIXED32\": 15,\n                    \"TYPE_SFIXED64\": 16,\n                    \"TYPE_SINT32\": 17,\n                    \"TYPE_SINT64\": 18\n                  }\n                },\n                \"Label\": {\n                  \"values\": {\n                    \"LABEL_OPTIONAL\": 1,\n                    \"LABEL_REPEATED\": 3,\n                    \"LABEL_REQUIRED\": 2\n                  }\n                }\n              }\n            },\n            \"OneofDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"options\": {\n                  \"type\": \"OneofOptions\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"EnumDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"value\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumValueDescriptorProto\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"type\": \"EnumOptions\",\n                  \"id\": 3\n                },\n                \"reservedRange\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumReservedRange\",\n                  \"id\": 4\n                },\n                \"reservedName\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 5\n                },\n                \"visibility\": {\n                  \"type\": \"SymbolVisibility\",\n                  \"id\": 6\n                }\n              },\n              \"nested\": {\n                \"EnumReservedRange\": {\n                  \"fields\": {\n                    \"start\": {\n                      \"type\": \"int32\",\n                      \"id\": 1\n                    },\n                    \"end\": {\n                      \"type\": \"int32\",\n                      \"id\": 2\n                    }\n                  }\n                }\n              }\n            },\n            \"EnumValueDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"number\": {\n                  \"type\": \"int32\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"type\": \"EnumValueOptions\",\n                  \"id\": 3\n                }\n              }\n            },\n            \"ServiceDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"method\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"MethodDescriptorProto\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"type\": \"ServiceOptions\",\n                  \"id\": 3\n                }\n              }\n            },\n            \"MethodDescriptorProto\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"inputType\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                },\n                \"outputType\": {\n                  \"type\": \"string\",\n                  \"id\": 3\n                },\n                \"options\": {\n                  \"type\": \"MethodOptions\",\n                  \"id\": 4\n                },\n                \"clientStreaming\": {\n                  \"type\": \"bool\",\n                  \"id\": 5\n                },\n                \"serverStreaming\": {\n                  \"type\": \"bool\",\n                  \"id\": 6\n                }\n              }\n            },\n            \"FileOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"javaPackage\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"javaOuterClassname\": {\n                  \"type\": \"string\",\n                  \"id\": 8\n                },\n                \"javaMultipleFiles\": {\n                  \"type\": \"bool\",\n                  \"id\": 10\n                },\n                \"javaGenerateEqualsAndHash\": {\n                  \"type\": \"bool\",\n                  \"id\": 20,\n                  \"options\": {\n                    \"deprecated\": true\n                  }\n                },\n                \"javaStringCheckUtf8\": {\n                  \"type\": \"bool\",\n                  \"id\": 27\n                },\n                \"optimizeFor\": {\n                  \"type\": \"OptimizeMode\",\n                  \"id\": 9,\n                  \"options\": {\n                    \"default\": \"SPEED\"\n                  }\n                },\n                \"goPackage\": {\n                  \"type\": \"string\",\n                  \"id\": 11\n                },\n                \"ccGenericServices\": {\n                  \"type\": \"bool\",\n                  \"id\": 16\n                },\n                \"javaGenericServices\": {\n                  \"type\": \"bool\",\n                  \"id\": 17\n                },\n                \"pyGenericServices\": {\n                  \"type\": \"bool\",\n                  \"id\": 18\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 23\n                },\n                \"ccEnableArenas\": {\n                  \"type\": \"bool\",\n                  \"id\": 31,\n                  \"options\": {\n                    \"default\": true\n                  }\n                },\n                \"objcClassPrefix\": {\n                  \"type\": \"string\",\n                  \"id\": 36\n                },\n                \"csharpNamespace\": {\n                  \"type\": \"string\",\n                  \"id\": 37\n                },\n                \"swiftPrefix\": {\n                  \"type\": \"string\",\n                  \"id\": 39\n                },\n                \"phpClassPrefix\": {\n                  \"type\": \"string\",\n                  \"id\": 40\n                },\n                \"phpNamespace\": {\n                  \"type\": \"string\",\n                  \"id\": 41\n                },\n                \"phpMetadataNamespace\": {\n                  \"type\": \"string\",\n                  \"id\": 44\n                },\n                \"rubyPackage\": {\n                  \"type\": \"string\",\n                  \"id\": 45\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 50\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"reserved\": [\n                [\n                  42,\n                  42\n                ],\n                \"php_generic_services\",\n                [\n                  38,\n                  38\n                ]\n              ],\n              \"nested\": {\n                \"OptimizeMode\": {\n                  \"values\": {\n                    \"SPEED\": 1,\n                    \"CODE_SIZE\": 2,\n                    \"LITE_RUNTIME\": 3\n                  }\n                }\n              }\n            },\n            \"MessageOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"messageSetWireFormat\": {\n                  \"type\": \"bool\",\n                  \"id\": 1\n                },\n                \"noStandardDescriptorAccessor\": {\n                  \"type\": \"bool\",\n                  \"id\": 2\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"mapEntry\": {\n                  \"type\": \"bool\",\n                  \"id\": 7\n                },\n                \"deprecatedLegacyJsonFieldConflicts\": {\n                  \"type\": \"bool\",\n                  \"id\": 11,\n                  \"options\": {\n                    \"deprecated\": true\n                  }\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 12\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"reserved\": [\n                [\n                  4,\n                  4\n                ],\n                [\n                  5,\n                  5\n                ],\n                [\n                  6,\n                  6\n                ],\n                [\n                  8,\n                  8\n                ],\n                [\n                  9,\n                  9\n                ]\n              ]\n            },\n            \"FieldOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"ctype\": {\n                  \"type\": \"CType\",\n                  \"id\": 1,\n                  \"options\": {\n                    \"default\": \"STRING\"\n                  }\n                },\n                \"packed\": {\n                  \"type\": \"bool\",\n                  \"id\": 2\n                },\n                \"jstype\": {\n                  \"type\": \"JSType\",\n                  \"id\": 6,\n                  \"options\": {\n                    \"default\": \"JS_NORMAL\"\n                  }\n                },\n                \"lazy\": {\n                  \"type\": \"bool\",\n                  \"id\": 5\n                },\n                \"unverifiedLazy\": {\n                  \"type\": \"bool\",\n                  \"id\": 15\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"weak\": {\n                  \"type\": \"bool\",\n                  \"id\": 10,\n                  \"options\": {\n                    \"deprecated\": true\n                  }\n                },\n                \"debugRedact\": {\n                  \"type\": \"bool\",\n                  \"id\": 16\n                },\n                \"retention\": {\n                  \"type\": \"OptionRetention\",\n                  \"id\": 17\n                },\n                \"targets\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"OptionTargetType\",\n                  \"id\": 19\n                },\n                \"editionDefaults\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EditionDefault\",\n                  \"id\": 20\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 21\n                },\n                \"featureSupport\": {\n                  \"type\": \"FeatureSupport\",\n                  \"id\": 22\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"reserved\": [\n                [\n                  4,\n                  4\n                ],\n                [\n                  18,\n                  18\n                ]\n              ],\n              \"nested\": {\n                \"CType\": {\n                  \"values\": {\n                    \"STRING\": 0,\n                    \"CORD\": 1,\n                    \"STRING_PIECE\": 2\n                  }\n                },\n                \"JSType\": {\n                  \"values\": {\n                    \"JS_NORMAL\": 0,\n                    \"JS_STRING\": 1,\n                    \"JS_NUMBER\": 2\n                  }\n                },\n                \"OptionRetention\": {\n                  \"values\": {\n                    \"RETENTION_UNKNOWN\": 0,\n                    \"RETENTION_RUNTIME\": 1,\n                    \"RETENTION_SOURCE\": 2\n                  }\n                },\n                \"OptionTargetType\": {\n                  \"values\": {\n                    \"TARGET_TYPE_UNKNOWN\": 0,\n                    \"TARGET_TYPE_FILE\": 1,\n                    \"TARGET_TYPE_EXTENSION_RANGE\": 2,\n                    \"TARGET_TYPE_MESSAGE\": 3,\n                    \"TARGET_TYPE_FIELD\": 4,\n                    \"TARGET_TYPE_ONEOF\": 5,\n                    \"TARGET_TYPE_ENUM\": 6,\n                    \"TARGET_TYPE_ENUM_ENTRY\": 7,\n                    \"TARGET_TYPE_SERVICE\": 8,\n                    \"TARGET_TYPE_METHOD\": 9\n                  }\n                },\n                \"EditionDefault\": {\n                  \"fields\": {\n                    \"edition\": {\n                      \"type\": \"Edition\",\n                      \"id\": 3\n                    },\n                    \"value\": {\n                      \"type\": \"string\",\n                      \"id\": 2\n                    }\n                  }\n                },\n                \"FeatureSupport\": {\n                  \"fields\": {\n                    \"editionIntroduced\": {\n                      \"type\": \"Edition\",\n                      \"id\": 1\n                    },\n                    \"editionDeprecated\": {\n                      \"type\": \"Edition\",\n                      \"id\": 2\n                    },\n                    \"deprecationWarning\": {\n                      \"type\": \"string\",\n                      \"id\": 3\n                    },\n                    \"editionRemoved\": {\n                      \"type\": \"Edition\",\n                      \"id\": 4\n                    }\n                  }\n                }\n              }\n            },\n            \"OneofOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 1\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ]\n            },\n            \"EnumOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"allowAlias\": {\n                  \"type\": \"bool\",\n                  \"id\": 2\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"deprecatedLegacyJsonFieldConflicts\": {\n                  \"type\": \"bool\",\n                  \"id\": 6,\n                  \"options\": {\n                    \"deprecated\": true\n                  }\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 7\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"reserved\": [\n                [\n                  5,\n                  5\n                ]\n              ]\n            },\n            \"EnumValueOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 1\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 2\n                },\n                \"debugRedact\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"featureSupport\": {\n                  \"type\": \"FieldOptions.FeatureSupport\",\n                  \"id\": 4\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ]\n            },\n            \"ServiceOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 34\n                },\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 33\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ]\n            },\n            \"MethodOptions\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"deprecated\": {\n                  \"type\": \"bool\",\n                  \"id\": 33\n                },\n                \"idempotencyLevel\": {\n                  \"type\": \"IdempotencyLevel\",\n                  \"id\": 34,\n                  \"options\": {\n                    \"default\": \"IDEMPOTENCY_UNKNOWN\"\n                  }\n                },\n                \"features\": {\n                  \"type\": \"FeatureSet\",\n                  \"id\": 35\n                },\n                \"uninterpretedOption\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"UninterpretedOption\",\n                  \"id\": 999\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  536870911\n                ]\n              ],\n              \"nested\": {\n                \"IdempotencyLevel\": {\n                  \"values\": {\n                    \"IDEMPOTENCY_UNKNOWN\": 0,\n                    \"NO_SIDE_EFFECTS\": 1,\n                    \"IDEMPOTENT\": 2\n                  }\n                }\n              }\n            },\n            \"UninterpretedOption\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"name\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"NamePart\",\n                  \"id\": 2\n                },\n                \"identifierValue\": {\n                  \"type\": \"string\",\n                  \"id\": 3\n                },\n                \"positiveIntValue\": {\n                  \"type\": \"uint64\",\n                  \"id\": 4\n                },\n                \"negativeIntValue\": {\n                  \"type\": \"int64\",\n                  \"id\": 5\n                },\n                \"doubleValue\": {\n                  \"type\": \"double\",\n                  \"id\": 6\n                },\n                \"stringValue\": {\n                  \"type\": \"bytes\",\n                  \"id\": 7\n                },\n                \"aggregateValue\": {\n                  \"type\": \"string\",\n                  \"id\": 8\n                }\n              },\n              \"nested\": {\n                \"NamePart\": {\n                  \"fields\": {\n                    \"namePart\": {\n                      \"rule\": \"required\",\n                      \"type\": \"string\",\n                      \"id\": 1\n                    },\n                    \"isExtension\": {\n                      \"rule\": \"required\",\n                      \"type\": \"bool\",\n                      \"id\": 2\n                    }\n                  }\n                }\n              }\n            },\n            \"FeatureSet\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"fieldPresence\": {\n                  \"type\": \"FieldPresence\",\n                  \"id\": 1,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_2023\",\n                    \"edition_defaults.value\": \"EXPLICIT\"\n                  }\n                },\n                \"enumType\": {\n                  \"type\": \"EnumType\",\n                  \"id\": 2,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_PROTO3\",\n                    \"edition_defaults.value\": \"OPEN\"\n                  }\n                },\n                \"repeatedFieldEncoding\": {\n                  \"type\": \"RepeatedFieldEncoding\",\n                  \"id\": 3,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_PROTO3\",\n                    \"edition_defaults.value\": \"PACKED\"\n                  }\n                },\n                \"utf8Validation\": {\n                  \"type\": \"Utf8Validation\",\n                  \"id\": 4,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_PROTO3\",\n                    \"edition_defaults.value\": \"VERIFY\"\n                  }\n                },\n                \"messageEncoding\": {\n                  \"type\": \"MessageEncoding\",\n                  \"id\": 5,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_LEGACY\",\n                    \"edition_defaults.value\": \"LENGTH_PREFIXED\"\n                  }\n                },\n                \"jsonFormat\": {\n                  \"type\": \"JsonFormat\",\n                  \"id\": 6,\n                  \"options\": {\n                    \"retention\": \"RETENTION_RUNTIME\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2023\",\n                    \"edition_defaults.edition\": \"EDITION_PROTO3\",\n                    \"edition_defaults.value\": \"ALLOW\"\n                  }\n                },\n                \"enforceNamingStyle\": {\n                  \"type\": \"EnforceNamingStyle\",\n                  \"id\": 7,\n                  \"options\": {\n                    \"retention\": \"RETENTION_SOURCE\",\n                    \"targets\": \"TARGET_TYPE_METHOD\",\n                    \"feature_support.edition_introduced\": \"EDITION_2024\",\n                    \"edition_defaults.edition\": \"EDITION_2024\",\n                    \"edition_defaults.value\": \"STYLE2024\"\n                  }\n                },\n                \"defaultSymbolVisibility\": {\n                  \"type\": \"VisibilityFeature.DefaultSymbolVisibility\",\n                  \"id\": 8,\n                  \"options\": {\n                    \"retention\": \"RETENTION_SOURCE\",\n                    \"targets\": \"TARGET_TYPE_FILE\",\n                    \"feature_support.edition_introduced\": \"EDITION_2024\",\n                    \"edition_defaults.edition\": \"EDITION_2024\",\n                    \"edition_defaults.value\": \"EXPORT_TOP_LEVEL\"\n                  }\n                }\n              },\n              \"extensions\": [\n                [\n                  1000,\n                  9994\n                ],\n                [\n                  9995,\n                  9999\n                ],\n                [\n                  10000,\n                  10000\n                ]\n              ],\n              \"reserved\": [\n                [\n                  999,\n                  999\n                ]\n              ],\n              \"nested\": {\n                \"FieldPresence\": {\n                  \"values\": {\n                    \"FIELD_PRESENCE_UNKNOWN\": 0,\n                    \"EXPLICIT\": 1,\n                    \"IMPLICIT\": 2,\n                    \"LEGACY_REQUIRED\": 3\n                  }\n                },\n                \"EnumType\": {\n                  \"values\": {\n                    \"ENUM_TYPE_UNKNOWN\": 0,\n                    \"OPEN\": 1,\n                    \"CLOSED\": 2\n                  }\n                },\n                \"RepeatedFieldEncoding\": {\n                  \"values\": {\n                    \"REPEATED_FIELD_ENCODING_UNKNOWN\": 0,\n                    \"PACKED\": 1,\n                    \"EXPANDED\": 2\n                  }\n                },\n                \"Utf8Validation\": {\n                  \"values\": {\n                    \"UTF8_VALIDATION_UNKNOWN\": 0,\n                    \"VERIFY\": 2,\n                    \"NONE\": 3\n                  }\n                },\n                \"MessageEncoding\": {\n                  \"values\": {\n                    \"MESSAGE_ENCODING_UNKNOWN\": 0,\n                    \"LENGTH_PREFIXED\": 1,\n                    \"DELIMITED\": 2\n                  }\n                },\n                \"JsonFormat\": {\n                  \"values\": {\n                    \"JSON_FORMAT_UNKNOWN\": 0,\n                    \"ALLOW\": 1,\n                    \"LEGACY_BEST_EFFORT\": 2\n                  }\n                },\n                \"EnforceNamingStyle\": {\n                  \"values\": {\n                    \"ENFORCE_NAMING_STYLE_UNKNOWN\": 0,\n                    \"STYLE2024\": 1,\n                    \"STYLE_LEGACY\": 2\n                  }\n                },\n                \"VisibilityFeature\": {\n                  \"fields\": {},\n                  \"reserved\": [\n                    [\n                      1,\n                      536870911\n                    ]\n                  ],\n                  \"nested\": {\n                    \"DefaultSymbolVisibility\": {\n                      \"values\": {\n                        \"DEFAULT_SYMBOL_VISIBILITY_UNKNOWN\": 0,\n                        \"EXPORT_ALL\": 1,\n                        \"EXPORT_TOP_LEVEL\": 2,\n                        \"LOCAL_ALL\": 3,\n                        \"STRICT\": 4\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"FeatureSetDefaults\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"defaults\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"FeatureSetEditionDefault\",\n                  \"id\": 1\n                },\n                \"minimumEdition\": {\n                  \"type\": \"Edition\",\n                  \"id\": 4\n                },\n                \"maximumEdition\": {\n                  \"type\": \"Edition\",\n                  \"id\": 5\n                }\n              },\n              \"nested\": {\n                \"FeatureSetEditionDefault\": {\n                  \"fields\": {\n                    \"edition\": {\n                      \"type\": \"Edition\",\n                      \"id\": 3\n                    },\n                    \"overridableFeatures\": {\n                      \"type\": \"FeatureSet\",\n                      \"id\": 4\n                    },\n                    \"fixedFeatures\": {\n                      \"type\": \"FeatureSet\",\n                      \"id\": 5\n                    }\n                  },\n                  \"reserved\": [\n                    [\n                      1,\n                      1\n                    ],\n                    [\n                      2,\n                      2\n                    ],\n                    \"features\"\n                  ]\n                }\n              }\n            },\n            \"SourceCodeInfo\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"location\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Location\",\n                  \"id\": 1\n                }\n              },\n              \"extensions\": [\n                [\n                  536000000,\n                  536000000\n                ]\n              ],\n              \"nested\": {\n                \"Location\": {\n                  \"fields\": {\n                    \"path\": {\n                      \"rule\": \"repeated\",\n                      \"type\": \"int32\",\n                      \"id\": 1,\n                      \"options\": {\n                        \"packed\": true\n                      }\n                    },\n                    \"span\": {\n                      \"rule\": \"repeated\",\n                      \"type\": \"int32\",\n                      \"id\": 2,\n                      \"options\": {\n                        \"packed\": true\n                      }\n                    },\n                    \"leadingComments\": {\n                      \"type\": \"string\",\n                      \"id\": 3\n                    },\n                    \"trailingComments\": {\n                      \"type\": \"string\",\n                      \"id\": 4\n                    },\n                    \"leadingDetachedComments\": {\n                      \"rule\": \"repeated\",\n                      \"type\": \"string\",\n                      \"id\": 6\n                    }\n                  }\n                }\n              }\n            },\n            \"GeneratedCodeInfo\": {\n              \"edition\": \"proto2\",\n              \"fields\": {\n                \"annotation\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Annotation\",\n                  \"id\": 1\n                }\n              },\n              \"nested\": {\n                \"Annotation\": {\n                  \"fields\": {\n                    \"path\": {\n                      \"rule\": \"repeated\",\n                      \"type\": \"int32\",\n                      \"id\": 1,\n                      \"options\": {\n                        \"packed\": true\n                      }\n                    },\n                    \"sourceFile\": {\n                      \"type\": \"string\",\n                      \"id\": 2\n                    },\n                    \"begin\": {\n                      \"type\": \"int32\",\n                      \"id\": 3\n                    },\n                    \"end\": {\n                      \"type\": \"int32\",\n                      \"id\": 4\n                    },\n                    \"semantic\": {\n                      \"type\": \"Semantic\",\n                      \"id\": 5\n                    }\n                  },\n                  \"nested\": {\n                    \"Semantic\": {\n                      \"values\": {\n                        \"NONE\": 0,\n                        \"SET\": 1,\n                        \"ALIAS\": 2\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"SymbolVisibility\": {\n              \"edition\": \"proto2\",\n              \"values\": {\n                \"VISIBILITY_UNSET\": 0,\n                \"VISIBILITY_LOCAL\": 1,\n                \"VISIBILITY_EXPORT\": 2\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "\"use strict\";\nvar $protobuf = require(\"../..\");\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\n\nvar Namespace = $protobuf.Namespace,\n    Root      = $protobuf.Root,\n    Enum      = $protobuf.Enum,\n    Type      = $protobuf.Type,\n    Field     = $protobuf.Field,\n    MapField  = $protobuf.MapField,\n    OneOf     = $protobuf.OneOf,\n    Service   = $protobuf.Service,\n    Method    = $protobuf.Method;\n\n// --- Root ---\n\n/**\n * Properties of a FileDescriptorSet message.\n * @interface IFileDescriptorSet\n * @property {IFileDescriptorProto[]} file Files\n */\n\n/**\n * Properties of a FileDescriptorProto message.\n * @interface IFileDescriptorProto\n * @property {string} [name] File name\n * @property {string} [package] Package\n * @property {*} [dependency] Not supported\n * @property {*} [publicDependency] Not supported\n * @property {*} [weakDependency] Not supported\n * @property {IDescriptorProto[]} [messageType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IServiceDescriptorProto[]} [service] Nested services\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\n * @property {IFileOptions} [options] Options\n * @property {*} [sourceCodeInfo] Not supported\n * @property {string} [syntax=\"proto2\"] Syntax\n * @property {IEdition} [edition] Edition\n */\n\n/**\n * Values of the Edition enum.\n * @typedef IEdition\n * @type {number}\n * @property {number} EDITION_UNKNOWN=0\n * @property {number} EDITION_LEGACY=900\n * @property {number} EDITION_PROTO2=998\n * @property {number} EDITION_PROTO3=999\n * @property {number} EDITION_2023=1000\n * @property {number} EDITION_2024=1001\n * @property {number} EDITION_1_TEST_ONLY=1\n * @property {number} EDITION_2_TEST_ONLY=2\n * @property {number} EDITION_99997_TEST_ONLY=99997\n * @property {number} EDITION_99998_TEST_ONLY=99998\n * @property {number} EDITION_99998_TEST_ONLY=99999\n * @property {number} EDITION_MAX=2147483647\n */\n\n/**\n * Properties of a FileOptions message.\n * @interface IFileOptions\n * @property {string} [javaPackage]\n * @property {string} [javaOuterClassname]\n * @property {boolean} [javaMultipleFiles]\n * @property {boolean} [javaGenerateEqualsAndHash]\n * @property {boolean} [javaStringCheckUtf8]\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\n * @property {string} [goPackage]\n * @property {boolean} [ccGenericServices]\n * @property {boolean} [javaGenericServices]\n * @property {boolean} [pyGenericServices]\n * @property {boolean} [deprecated]\n * @property {boolean} [ccEnableArenas]\n * @property {string} [objcClassPrefix]\n * @property {string} [csharpNamespace]\n */\n\n/**\n * Values of he FileOptions.OptimizeMode enum.\n * @typedef IFileOptionsOptimizeMode\n * @type {number}\n * @property {number} SPEED=1\n * @property {number} CODE_SIZE=2\n * @property {number} LITE_RUNTIME=3\n */\n\n/**\n * Creates a root from a descriptor set.\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\n * @returns {Root} Root instance\n */\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\n\n    var root = new Root();\n\n    if (descriptor.file) {\n        var fileDescriptor,\n            filePackage;\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\n            filePackage = root;\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\n                filePackage = root.define(fileDescriptor[\"package\"]);\n            var edition = editionFromDescriptor(fileDescriptor);\n            if (fileDescriptor.name && fileDescriptor.name.length)\n                root.files.push(filePackage.filename = fileDescriptor.name);\n            if (fileDescriptor.messageType)\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], edition));\n            if (fileDescriptor.enumType)\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i], edition));\n            if (fileDescriptor.extension)\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i], edition));\n            if (fileDescriptor.service)\n                for (i = 0; i < fileDescriptor.service.length; ++i)\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i], edition));\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\n            if (opts) {\n                var ks = Object.keys(opts);\n                for (i = 0; i < ks.length; ++i)\n                    filePackage.setOption(ks[i], opts[ks[i]]);\n            }\n        }\n    }\n\n    return root.resolveAll();\n};\n\n/**\n * Converts a root to a descriptor set.\n * @returns {Message<IFileDescriptorSet>} Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n */\nRoot.prototype.toDescriptor = function toDescriptor(edition) {\n    var set = exports.FileDescriptorSet.create();\n    Root_toDescriptorRecursive(this, set.file, edition);\n    return set;\n};\n\n// Traverses a namespace and assembles the descriptor set\nfunction Root_toDescriptorRecursive(ns, files, edition) {\n\n    // Create a new file\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\n    editionToDescriptor(edition, file);\n    if (!(ns instanceof Root))\n        file[\"package\"] = ns.fullName.substring(1);\n\n    // Add nested types\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\n        if ((nested = ns._nestedArray[i]) instanceof Type)\n            file.messageType.push(nested.toDescriptor(edition));\n        else if (nested instanceof Enum)\n            file.enumType.push(nested.toDescriptor());\n        else if (nested instanceof Field)\n            file.extension.push(nested.toDescriptor(edition));\n        else if (nested instanceof Service)\n            file.service.push(nested.toDescriptor());\n        else if (nested instanceof /* plain */ Namespace)\n            Root_toDescriptorRecursive(nested, files, edition); // requires new file\n\n    // Keep package-level options\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\n\n    // And keep the file only if there is at least one nested object\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\n        files.push(file);\n}\n\n// --- Type ---\n\n/**\n * Properties of a DescriptorProto message.\n * @interface IDescriptorProto\n * @property {string} [name] Message type name\n * @property {IFieldDescriptorProto[]} [field] Fields\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\n * @property {IDescriptorProto[]} [nestedType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\n * @property {IMessageOptions} [options] Not supported\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\n * @property {string[]} [reservedName] Reserved names\n */\n\n/**\n * Properties of a MessageOptions message.\n * @interface IMessageOptions\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\n */\n\n/**\n * Properties of an ExtensionRange message.\n * @interface IDescriptorProtoExtensionRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\n/**\n * Properties of a ReservedRange message.\n * @interface IDescriptorProtoReservedRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\nvar unnamedMessageIndex = 0;\n\n/**\n * Creates a type from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n * @param {boolean} [nested=false] Whether or not this is a nested object\n * @returns {Type} Type instance\n */\nType.fromDescriptor = function fromDescriptor(descriptor, edition, nested) {\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    // Create the message type\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\n        i;\n\n    if (!nested)\n        type._edition = edition;\n\n    /* Oneofs */ if (descriptor.oneofDecl)\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\n    /* Fields */ if (descriptor.field)\n        for (i = 0; i < descriptor.field.length; ++i) {\n            var field = Field.fromDescriptor(descriptor.field[i], edition, true);\n            type.add(field);\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\n        }\n    /* Extension fields */ if (descriptor.extension)\n        for (i = 0; i < descriptor.extension.length; ++i)\n            type.add(Field.fromDescriptor(descriptor.extension[i], edition, true));\n    /* Nested types */ if (descriptor.nestedType)\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], edition, true));\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\n                type.setOption(\"map_entry\", true);\n        }\n    /* Nested enums */ if (descriptor.enumType)\n        for (i = 0; i < descriptor.enumType.length; ++i)\n            type.add(Enum.fromDescriptor(descriptor.enumType[i], edition, true));\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\n        type.extensions = [];\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\n    }\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\n        type.reserved = [];\n        /* Ranges */ if (descriptor.reservedRange)\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\n        /* Names */ if (descriptor.reservedName)\n            for (i = 0; i < descriptor.reservedName.length; ++i)\n                type.reserved.push(descriptor.reservedName[i]);\n    }\n\n    return type;\n};\n\n/**\n * Converts a type to a descriptor.\n * @returns {Message<IDescriptorProto>} Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n */\nType.prototype.toDescriptor = function toDescriptor(edition) {\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\n        i;\n\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\n        var fieldDescriptor;\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(edition));\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType, false),\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType, false),\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\n                    : undefined;\n            descriptor.nestedType.push(exports.DescriptorProto.create({\n                name: fieldDescriptor.typeName,\n                field: [\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\n                ],\n                options: exports.MessageOptions.create({ mapEntry: true })\n            }));\n        }\n    }\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\n            descriptor.field.push(this._nestedArray[i].toDescriptor(edition));\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(edition));\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\n        // plain nested namespaces become packages instead in Root#toDescriptor\n    }\n    /* Extension ranges */ if (this.extensions)\n        for (i = 0; i < this.extensions.length; ++i)\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\n    /* Reserved... */ if (this.reserved)\n        for (i = 0; i < this.reserved.length; ++i)\n            /* Names */ if (typeof this.reserved[i] === \"string\")\n                descriptor.reservedName.push(this.reserved[i]);\n            /* Ranges */ else\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\n\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\n\n    return descriptor;\n};\n\n// --- Field ---\n\n/**\n * Properties of a FieldDescriptorProto message.\n * @interface IFieldDescriptorProto\n * @property {string} [name] Field name\n * @property {number} [number] Field id\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\n * @property {IFieldDescriptorProtoType} [type] Field basic type\n * @property {string} [typeName] Field type name\n * @property {string} [extendee] Extended type name\n * @property {string} [defaultValue] Literal default value\n * @property {number} [oneofIndex] Oneof index if part of a oneof\n * @property {*} [jsonName] Not supported\n * @property {IFieldOptions} [options] Field options\n */\n\n/**\n * Values of the FieldDescriptorProto.Label enum.\n * @typedef IFieldDescriptorProtoLabel\n * @type {number}\n * @property {number} LABEL_OPTIONAL=1\n * @property {number} LABEL_REQUIRED=2\n * @property {number} LABEL_REPEATED=3\n */\n\n/**\n * Values of the FieldDescriptorProto.Type enum.\n * @typedef IFieldDescriptorProtoType\n * @type {number}\n * @property {number} TYPE_DOUBLE=1\n * @property {number} TYPE_FLOAT=2\n * @property {number} TYPE_INT64=3\n * @property {number} TYPE_UINT64=4\n * @property {number} TYPE_INT32=5\n * @property {number} TYPE_FIXED64=6\n * @property {number} TYPE_FIXED32=7\n * @property {number} TYPE_BOOL=8\n * @property {number} TYPE_STRING=9\n * @property {number} TYPE_GROUP=10\n * @property {number} TYPE_MESSAGE=11\n * @property {number} TYPE_BYTES=12\n * @property {number} TYPE_UINT32=13\n * @property {number} TYPE_ENUM=14\n * @property {number} TYPE_SFIXED32=15\n * @property {number} TYPE_SFIXED64=16\n * @property {number} TYPE_SINT32=17\n * @property {number} TYPE_SINT64=18\n */\n\n/**\n * Properties of a FieldOptions message.\n * @interface IFieldOptions\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\n */\n\n/**\n * Values of the FieldOptions.JSType enum.\n * @typedef IFieldOptionsJSType\n * @type {number}\n * @property {number} JS_NORMAL=0\n * @property {number} JS_STRING=1\n * @property {number} JS_NUMBER=2\n */\n\n// copied here from parse.js\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\n\n/**\n * Creates a field from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n * @param {boolean} [nested=false] Whether or not this is a top-level object\n * @returns {Field} Field instance\n */\nField.fromDescriptor = function fromDescriptor(descriptor, edition, nested) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    if (typeof descriptor.number !== \"number\")\n        throw Error(\"missing field id\");\n\n    // Rewire field type\n    var fieldType;\n    if (descriptor.typeName && descriptor.typeName.length)\n        fieldType = descriptor.typeName;\n    else\n        fieldType = fromDescriptorType(descriptor.type);\n\n    // Rewire field rule\n    var fieldRule;\n    switch (descriptor.label) {\n        // 0 is reserved for errors\n        case 1: fieldRule = undefined; break;\n        case 2: fieldRule = \"required\"; break;\n        case 3: fieldRule = \"repeated\"; break;\n        default: throw Error(\"illegal label: \" + descriptor.label);\n    }\n\n\tvar extendee = descriptor.extendee;\n\tif (descriptor.extendee !== undefined) {\n\t\textendee = extendee.length ? extendee : undefined;\n\t}\n    var field = new Field(\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\n        descriptor.number,\n        fieldType,\n        fieldRule,\n        extendee\n    );\n\n    if (!nested)\n        field._edition = edition;\n\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\n    if (descriptor.proto3_optional)\n        field.options.proto3_optional = true;\n\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\n        var defaultValue = descriptor.defaultValue;\n        switch (defaultValue) {\n            case \"true\": case \"TRUE\":\n                defaultValue = true;\n                break;\n            case \"false\": case \"FALSE\":\n                defaultValue = false;\n                break;\n            default:\n                var match = numberRe.exec(defaultValue);\n                if (match)\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\n                break;\n        }\n        field.setOption(\"default\", defaultValue);\n    }\n\n    if (packableDescriptorType(descriptor.type)) {\n        if (edition === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\n            if (descriptor.options && !descriptor.options.packed)\n                field.setOption(\"packed\", false);\n        } else if ((!edition || edition === \"proto2\") && descriptor.options && descriptor.options.packed) // defaults to packed=false\n            field.setOption(\"packed\", true);\n    }\n\n    return field;\n};\n\n/**\n * Converts a field to a descriptor.\n * @returns {Message<IFieldDescriptorProto>} Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n */\nField.prototype.toDescriptor = function toDescriptor(edition) {\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\n\n    if (this.map) {\n\n        descriptor.type = 11; // message\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\n        descriptor.label = 3; // repeated\n\n    } else {\n\n        // Rewire field type\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType, this.delimited)) {\n            case 10: // group\n            case 11: // type\n            case 14: // enum\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\n                break;\n        }\n\n        // Rewire field rule\n        if (this.rule === \"repeated\") {\n            descriptor.label = 3;\n        } else if (this.required && edition === \"proto2\") {\n            descriptor.label = 2;\n        } else {\n            descriptor.label = 1;\n        }\n    }\n\n    // Handle extension field\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\n\n    // Handle part of oneof\n    if (this.partOf)\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\n            throw Error(\"missing oneof\");\n\n    if (this.options) {\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\n        if (this.options[\"default\"] != null)\n            descriptor.defaultValue = String(this.options[\"default\"]);\n        if (this.options.proto3_optional)\n            descriptor.proto3_optional = true;\n    }\n\n    if (edition === \"proto3\") { // defaults to packed=true\n        if (!this.packed)\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\n    } else if ((!edition || edition === \"proto2\") && this.packed) // defaults to packed=false\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\n\n    return descriptor;\n};\n\n// --- Enum ---\n\n/**\n * Properties of an EnumDescriptorProto message.\n * @interface IEnumDescriptorProto\n * @property {string} [name] Enum name\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\n * @property {IEnumOptions} [options] Enum options\n */\n\n/**\n * Properties of an EnumValueDescriptorProto message.\n * @interface IEnumValueDescriptorProto\n * @property {string} [name] Name\n * @property {number} [number] Value\n * @property {*} [options] Not supported\n */\n\n/**\n * Properties of an EnumOptions message.\n * @interface IEnumOptions\n * @property {boolean} [allowAlias] Whether aliases are allowed\n * @property {boolean} [deprecated]\n */\n\nvar unnamedEnumIndex = 0;\n\n/**\n * Creates an enum from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n * @param {boolean} [nested=false] Whether or not this is a top-level object\n * @returns {Enum} Enum instance\n */\nEnum.fromDescriptor = function fromDescriptor(descriptor, edition, nested) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\n\n    // Construct values object\n    var values = {};\n    if (descriptor.value)\n        for (var i = 0; i < descriptor.value.length; ++i) {\n            var name  = descriptor.value[i].name,\n                value = descriptor.value[i].number || 0;\n            values[name && name.length ? name : \"NAME\" + value] = value;\n        }\n\n    var enm = new Enum(\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\n        values,\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\n    );\n\n    if (!nested)\n        enm._edition = edition;\n\n    return enm;\n};\n\n/**\n * Converts an enum to a descriptor.\n * @returns {Message<IEnumDescriptorProto>} Descriptor\n */\nEnum.prototype.toDescriptor = function toDescriptor() {\n\n    // Values\n    var values = [];\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\n\n    return exports.EnumDescriptorProto.create({\n        name: this.name,\n        value: values,\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\n    });\n};\n\n// --- OneOf ---\n\n/**\n * Properties of a OneofDescriptorProto message.\n * @interface IOneofDescriptorProto\n * @property {string} [name] Oneof name\n * @property {*} [options] Not supported\n */\n\nvar unnamedOneofIndex = 0;\n\n/**\n * Creates a oneof from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {OneOf} OneOf instance\n */\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\n\n    return new OneOf(\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\n    );\n};\n\n/**\n * Converts a oneof to a descriptor.\n * @returns {Message<IOneofDescriptorProto>} Descriptor\n */\nOneOf.prototype.toDescriptor = function toDescriptor() {\n    return exports.OneofDescriptorProto.create({\n        name: this.name\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\n    });\n};\n\n// --- Service ---\n\n/**\n * Properties of a ServiceDescriptorProto message.\n * @interface IServiceDescriptorProto\n * @property {string} [name] Service name\n * @property {IMethodDescriptorProto[]} [method] Methods\n * @property {IServiceOptions} [options] Options\n */\n\n/**\n * Properties of a ServiceOptions message.\n * @interface IServiceOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedServiceIndex = 0;\n\n/**\n * Creates a service from a descriptor.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [edition=\"proto2\"] The syntax or edition to use\n * @param {boolean} [nested=false] Whether or not this is a top-level object\n * @returns {Service} Service instance\n */\nService.fromDescriptor = function fromDescriptor(descriptor, edition, nested) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\n\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\n    if (!nested)\n        service._edition = edition;\n    if (descriptor.method)\n        for (var i = 0; i < descriptor.method.length; ++i)\n            service.add(Method.fromDescriptor(descriptor.method[i]));\n\n    return service;\n};\n\n/**\n * Converts a service to a descriptor.\n * @returns {Message<IServiceDescriptorProto>} Descriptor\n */\nService.prototype.toDescriptor = function toDescriptor() {\n\n    // Methods\n    var methods = [];\n    for (var i = 0; i < this.methodsArray.length; ++i)\n        methods.push(this._methodsArray[i].toDescriptor());\n\n    return exports.ServiceDescriptorProto.create({\n        name: this.name,\n        method: methods,\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\n    });\n};\n\n// --- Method ---\n\n/**\n * Properties of a MethodDescriptorProto message.\n * @interface IMethodDescriptorProto\n * @property {string} [name] Method name\n * @property {string} [inputType] Request type name\n * @property {string} [outputType] Response type name\n * @property {IMethodOptions} [options] Not supported\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\n */\n\n/**\n * Properties of a MethodOptions message.\n *\n * Warning: this is not safe to use with editions protos, since it discards relevant file context.\n *\n * @interface IMethodOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedMethodIndex = 0;\n\n/**\n * Creates a method from a descriptor.\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Method} Reflected method instance\n */\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\n\n    return new Method(\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\n        \"rpc\",\n        descriptor.inputType,\n        descriptor.outputType,\n        Boolean(descriptor.clientStreaming),\n        Boolean(descriptor.serverStreaming),\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\n    );\n};\n\n/**\n * Converts a method to a descriptor.\n * @returns {Message<IMethodDescriptorProto>} Descriptor\n */\nMethod.prototype.toDescriptor = function toDescriptor() {\n    return exports.MethodDescriptorProto.create({\n        name: this.name,\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\n        clientStreaming: this.requestStream,\n        serverStreaming: this.responseStream,\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\n    });\n};\n\n// --- utility ---\n\n// Converts a descriptor type to a protobuf.js basic type\nfunction fromDescriptorType(type) {\n    switch (type) {\n        // 0 is reserved for errors\n        case 1: return \"double\";\n        case 2: return \"float\";\n        case 3: return \"int64\";\n        case 4: return \"uint64\";\n        case 5: return \"int32\";\n        case 6: return \"fixed64\";\n        case 7: return \"fixed32\";\n        case 8: return \"bool\";\n        case 9: return \"string\";\n        case 12: return \"bytes\";\n        case 13: return \"uint32\";\n        case 15: return \"sfixed32\";\n        case 16: return \"sfixed64\";\n        case 17: return \"sint32\";\n        case 18: return \"sint64\";\n    }\n    throw Error(\"illegal type: \" + type);\n}\n\n// Tests if a descriptor type is packable\nfunction packableDescriptorType(type) {\n    switch (type) {\n        case 1: // double\n        case 2: // float\n        case 3: // int64\n        case 4: // uint64\n        case 5: // int32\n        case 6: // fixed64\n        case 7: // fixed32\n        case 8: // bool\n        case 13: // uint32\n        case 14: // enum (!)\n        case 15: // sfixed32\n        case 16: // sfixed64\n        case 17: // sint32\n        case 18: // sint64\n            return true;\n    }\n    return false;\n}\n\n// Converts a protobuf.js basic type to a descriptor type\nfunction toDescriptorType(type, resolvedType, delimited) {\n    switch (type) {\n        // 0 is reserved for errors\n        case \"double\": return 1;\n        case \"float\": return 2;\n        case \"int64\": return 3;\n        case \"uint64\": return 4;\n        case \"int32\": return 5;\n        case \"fixed64\": return 6;\n        case \"fixed32\": return 7;\n        case \"bool\": return 8;\n        case \"string\": return 9;\n        case \"bytes\": return 12;\n        case \"uint32\": return 13;\n        case \"sfixed32\": return 15;\n        case \"sfixed64\": return 16;\n        case \"sint32\": return 17;\n        case \"sint64\": return 18;\n    }\n    if (resolvedType instanceof Enum)\n        return 14;\n    if (resolvedType instanceof Type)\n        return delimited ? 10 : 11;\n    throw Error(\"illegal type: \" + type);\n}\n\nfunction fromDescriptorOptionsRecursive(obj, type) {\n    var val = {};\n    for (var i = 0, field, key; i < type.fieldsArray.length; ++i) {\n        if ((key = (field = type._fieldsArray[i]).name) === \"uninterpretedOption\") continue;\n        if (!Object.prototype.hasOwnProperty.call(obj, key)) continue;\n\n        var newKey = underScore(key);\n        if (field.resolvedType instanceof Type) {\n            val[newKey] = fromDescriptorOptionsRecursive(obj[key], field.resolvedType);\n        } else if(field.resolvedType instanceof Enum) {\n            val[newKey] = field.resolvedType.valuesById[obj[key]];\n        } else {\n            val[newKey] = obj[key];\n        }\n    }\n    return val;\n}\n\n// Converts descriptor options to an options object\nfunction fromDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    return fromDescriptorOptionsRecursive(type.toObject(options), type);\n}\n\nfunction toDescriptorOptionsRecursive(obj, type) {\n    var val = {};\n    var keys = Object.keys(obj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newKey = $protobuf.util.camelCase(key);\n        if (!Object.prototype.hasOwnProperty.call(type.fields, newKey)) continue;\n        var field = type.fields[newKey];\n        if (field.resolvedType instanceof Type) {\n            val[newKey] = toDescriptorOptionsRecursive(obj[key], field.resolvedType);\n        } else {\n            val[newKey] = obj[key];\n        }\n        if (field.repeated && !Array.isArray(val[newKey])) {\n            val[newKey] = [val[newKey]];\n        }\n    }\n    return val;\n}\n\n// Converts an options object to descriptor options\nfunction toDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    return type.fromObject(toDescriptorOptionsRecursive(options, type));\n}\n\n// Calculates the shortest relative path from `from` to `to`.\nfunction shortname(from, to) {\n    var fromPath = from.fullName.split(\".\"),\n        toPath = to.fullName.split(\".\"),\n        i = 0,\n        j = 0,\n        k = toPath.length - 1;\n    if (!(from instanceof Root) && to instanceof Namespace)\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\n            var other = to.lookup(fromPath[i++], true);\n            if (other !== null && other !== to)\n                break;\n            ++j;\n        }\n    else\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\n    return toPath.slice(j).join(\".\");\n}\n\n// copied here from cli/targets/proto.js\nfunction underScore(str) {\n    return str.substring(0,1)\n         + str.substring(1)\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\n}\n\nfunction editionFromDescriptor(fileDescriptor) {\n    if (fileDescriptor.syntax === \"editions\") {\n        switch(fileDescriptor.edition) {\n            case exports.Edition.EDITION_2023:\n                return \"2023\";\n            default:\n                throw new Error(\"Unsupported edition \" + fileDescriptor.edition);\n        }\n    }\n    if (fileDescriptor.syntax === \"proto3\") {\n        return \"proto3\";\n    }\n    return \"proto2\";\n}\n\nfunction editionToDescriptor(edition, fileDescriptor) {\n    if (!edition) return;\n    if (edition === \"proto2\" || edition === \"proto3\") {\n        fileDescriptor.syntax = edition;\n    } else {\n        fileDescriptor.syntax = \"editions\";\n        switch(edition) {\n            case \"2023\":\n                fileDescriptor.edition = exports.Edition.EDITION_2023;\n                break;\n            default:\n                throw new Error(\"Unsupported edition \" + edition);\n        }\n    }\n}\n\n// --- exports ---\n\n/**\n * Reflected file descriptor set.\n * @name FileDescriptorSet\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file descriptor proto.\n * @name FileDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected descriptor proto.\n * @name DescriptorProto\n * @type {Type}\n * @property {Type} ExtensionRange\n * @property {Type} ReservedRange\n * @const\n * @tstype $protobuf.Type & {\n *     ExtensionRange: $protobuf.Type,\n *     ReservedRange: $protobuf.Type\n * }\n */\n\n/**\n * Reflected field descriptor proto.\n * @name FieldDescriptorProto\n * @type {Type}\n * @property {Enum} Label\n * @property {Enum} Type\n * @const\n * @tstype $protobuf.Type & {\n *     Label: $protobuf.Enum,\n *     Type: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof descriptor proto.\n * @name OneofDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum descriptor proto.\n * @name EnumDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service descriptor proto.\n * @name ServiceDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value descriptor proto.\n * @name EnumValueDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method descriptor proto.\n * @name MethodDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file options.\n * @name FileOptions\n * @type {Type}\n * @property {Enum} OptimizeMode\n * @const\n * @tstype $protobuf.Type & {\n *     OptimizeMode: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected message options.\n * @name MessageOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected field options.\n * @name FieldOptions\n * @type {Type}\n * @property {Enum} CType\n * @property {Enum} JSType\n * @const\n * @tstype $protobuf.Type & {\n *     CType: $protobuf.Enum,\n *     JSType: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof options.\n * @name OneofOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum options.\n * @name EnumOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value options.\n * @name EnumValueOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service options.\n * @name ServiceOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method options.\n * @name MethodOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected uninterpretet option.\n * @name UninterpretedOption\n * @type {Type}\n * @property {Type} NamePart\n * @const\n * @tstype $protobuf.Type & {\n *     NamePart: $protobuf.Type\n * }\n */\n\n/**\n * Reflected source code info.\n * @name SourceCodeInfo\n * @type {Type}\n * @property {Type} Location\n * @const\n * @tstype $protobuf.Type & {\n *     Location: $protobuf.Type\n * }\n */\n\n/**\n * Reflected generated code info.\n * @name GeneratedCodeInfo\n * @type {Type}\n * @property {Type} Annotation\n * @const\n * @tstype $protobuf.Type & {\n *     Annotation: $protobuf.Type\n * }\n */\n", "{\n  \"nested\": {\n    \"google\": {\n      \"nested\": {\n        \"protobuf\": {\n          \"nested\": {\n            \"Api\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"methods\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Method\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 3\n                },\n                \"version\": {\n                  \"type\": \"string\",\n                  \"id\": 4\n                },\n                \"sourceContext\": {\n                  \"type\": \"SourceContext\",\n                  \"id\": 5\n                },\n                \"mixins\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Mixin\",\n                  \"id\": 6\n                },\n                \"syntax\": {\n                  \"type\": \"Syntax\",\n                  \"id\": 7\n                }\n              }\n            },\n            \"Method\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"requestTypeUrl\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                },\n                \"requestStreaming\": {\n                  \"type\": \"bool\",\n                  \"id\": 3\n                },\n                \"responseTypeUrl\": {\n                  \"type\": \"string\",\n                  \"id\": 4\n                },\n                \"responseStreaming\": {\n                  \"type\": \"bool\",\n                  \"id\": 5\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 6\n                },\n                \"syntax\": {\n                  \"type\": \"Syntax\",\n                  \"id\": 7\n                }\n              }\n            },\n            \"Mixin\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"root\": {\n                  \"type\": \"string\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"SourceContext\": {\n              \"fields\": {\n                \"fileName\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                }\n              }\n            },\n            \"Option\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"value\": {\n                  \"type\": \"Any\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"Syntax\": {\n              \"values\": {\n                \"SYNTAX_PROTO2\": 0,\n                \"SYNTAX_PROTO3\": 1\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "{\n  \"nested\": {\n    \"google\": {\n      \"nested\": {\n        \"protobuf\": {\n          \"nested\": {\n            \"SourceContext\": {\n              \"fields\": {\n                \"fileName\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "{\n  \"nested\": {\n    \"google\": {\n      \"nested\": {\n        \"protobuf\": {\n          \"nested\": {\n            \"Type\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"fields\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Field\",\n                  \"id\": 2\n                },\n                \"oneofs\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"string\",\n                  \"id\": 3\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 4\n                },\n                \"sourceContext\": {\n                  \"type\": \"SourceContext\",\n                  \"id\": 5\n                },\n                \"syntax\": {\n                  \"type\": \"Syntax\",\n                  \"id\": 6\n                }\n              }\n            },\n            \"Field\": {\n              \"fields\": {\n                \"kind\": {\n                  \"type\": \"Kind\",\n                  \"id\": 1\n                },\n                \"cardinality\": {\n                  \"type\": \"Cardinality\",\n                  \"id\": 2\n                },\n                \"number\": {\n                  \"type\": \"int32\",\n                  \"id\": 3\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 4\n                },\n                \"typeUrl\": {\n                  \"type\": \"string\",\n                  \"id\": 6\n                },\n                \"oneofIndex\": {\n                  \"type\": \"int32\",\n                  \"id\": 7\n                },\n                \"packed\": {\n                  \"type\": \"bool\",\n                  \"id\": 8\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 9\n                },\n                \"jsonName\": {\n                  \"type\": \"string\",\n                  \"id\": 10\n                },\n                \"defaultValue\": {\n                  \"type\": \"string\",\n                  \"id\": 11\n                }\n              },\n              \"nested\": {\n                \"Kind\": {\n                  \"values\": {\n                    \"TYPE_UNKNOWN\": 0,\n                    \"TYPE_DOUBLE\": 1,\n                    \"TYPE_FLOAT\": 2,\n                    \"TYPE_INT64\": 3,\n                    \"TYPE_UINT64\": 4,\n                    \"TYPE_INT32\": 5,\n                    \"TYPE_FIXED64\": 6,\n                    \"TYPE_FIXED32\": 7,\n                    \"TYPE_BOOL\": 8,\n                    \"TYPE_STRING\": 9,\n                    \"TYPE_GROUP\": 10,\n                    \"TYPE_MESSAGE\": 11,\n                    \"TYPE_BYTES\": 12,\n                    \"TYPE_UINT32\": 13,\n                    \"TYPE_ENUM\": 14,\n                    \"TYPE_SFIXED32\": 15,\n                    \"TYPE_SFIXED64\": 16,\n                    \"TYPE_SINT32\": 17,\n                    \"TYPE_SINT64\": 18\n                  }\n                },\n                \"Cardinality\": {\n                  \"values\": {\n                    \"CARDINALITY_UNKNOWN\": 0,\n                    \"CARDINALITY_OPTIONAL\": 1,\n                    \"CARDINALITY_REQUIRED\": 2,\n                    \"CARDINALITY_REPEATED\": 3\n                  }\n                }\n              }\n            },\n            \"Enum\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"enumvalue\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"EnumValue\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 3\n                },\n                \"sourceContext\": {\n                  \"type\": \"SourceContext\",\n                  \"id\": 4\n                },\n                \"syntax\": {\n                  \"type\": \"Syntax\",\n                  \"id\": 5\n                }\n              }\n            },\n            \"EnumValue\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"number\": {\n                  \"type\": \"int32\",\n                  \"id\": 2\n                },\n                \"options\": {\n                  \"rule\": \"repeated\",\n                  \"type\": \"Option\",\n                  \"id\": 3\n                }\n              }\n            },\n            \"Option\": {\n              \"fields\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"value\": {\n                  \"type\": \"Any\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"Syntax\": {\n              \"values\": {\n                \"SYNTAX_PROTO2\": 0,\n                \"SYNTAX_PROTO3\": 1\n              }\n            },\n            \"Any\": {\n              \"fields\": {\n                \"type_url\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                },\n                \"value\": {\n                  \"type\": \"bytes\",\n                  \"id\": 2\n                }\n              }\n            },\n            \"SourceContext\": {\n              \"fields\": {\n                \"fileName\": {\n                  \"type\": \"string\",\n                  \"id\": 1\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}", "\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addCommonProtos = exports.loadProtosWithOptionsSync = exports.loadProtosWithOptions = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Protobuf = require(\"protobufjs\");\nfunction addIncludePathResolver(root, includePaths) {\n    const originalResolvePath = root.resolvePath;\n    root.resolvePath = (origin, target) => {\n        if (path.isAbsolute(target)) {\n            return target;\n        }\n        for (const directory of includePaths) {\n            const fullPath = path.join(directory, target);\n            try {\n                fs.accessSync(fullPath, fs.constants.R_OK);\n                return fullPath;\n            }\n            catch (err) {\n                continue;\n            }\n        }\n        process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n        return originalResolvePath(origin, target);\n    };\n}\nasync function loadProtosWithOptions(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            return Promise.reject(new Error('The includeDirs option must be an array'));\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = await root.load(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptions = loadProtosWithOptions;\nfunction loadProtosWithOptionsSync(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            throw new Error('The includeDirs option must be an array');\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = root.loadSync(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\nfunction addCommonProtos() {\n    // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n    // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n    // Using constant strings for compatibility with tools like Webpack\n    const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n    const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n    const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n    const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n    Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\nexports.addCommonProtos = addCommonProtos;\n", "// GENERATED FILE. DO NOT EDIT.\n(function (global, factory) {\n  function preferDefault(exports) {\n    return exports.default || exports;\n  }\n  if (typeof define === \"function\" && define.amd) {\n    define([], function () {\n      var exports = {};\n      factory(exports);\n      return preferDefault(exports);\n    });\n  } else if (typeof exports === \"object\") {\n    factory(exports);\n    if (typeof module === \"object\") module.exports = preferDefault(exports);\n  } else {\n    (function () {\n      var exports = {};\n      factory(exports);\n      global.Long = preferDefault(exports);\n    })();\n  }\n})(\n  typeof globalThis !== \"undefined\"\n    ? globalThis\n    : typeof self !== \"undefined\"\n      ? self\n      : this,\n  function (_exports) {\n    \"use strict\";\n\n    Object.defineProperty(_exports, \"__esModule\", {\n      value: true,\n    });\n    _exports.default = void 0;\n    /**\n     * @license\n     * Copyright 2009 The Closure Library Authors\n     * Copyright 2020 Daniel Wirtz / The long.js Authors.\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *     http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     *\n     * SPDX-License-Identifier: Apache-2.0\n     */\n\n    // WebAssembly optimizations to do native i64 multiplication and divide\n    var wasm = null;\n    try {\n      wasm = new WebAssembly.Instance(\n        new WebAssembly.Module(\n          new Uint8Array([\n            // \\0asm\n            0, 97, 115, 109,\n            // version 1\n            1, 0, 0, 0,\n            // section \"type\"\n            1, 13, 2,\n            // 0, () => i32\n            96, 0, 1, 127,\n            // 1, (i32, i32, i32, i32) => i32\n            96, 4, 127, 127, 127, 127, 1, 127,\n            // section \"function\"\n            3, 7, 6,\n            // 0, type 0\n            0,\n            // 1, type 1\n            1,\n            // 2, type 1\n            1,\n            // 3, type 1\n            1,\n            // 4, type 1\n            1,\n            // 5, type 1\n            1,\n            // section \"global\"\n            6, 6, 1,\n            // 0, \"high\", mutable i32\n            127, 1, 65, 0, 11,\n            // section \"export\"\n            7, 50, 6,\n            // 0, \"mul\"\n            3, 109, 117, 108, 0, 1,\n            // 1, \"div_s\"\n            5, 100, 105, 118, 95, 115, 0, 2,\n            // 2, \"div_u\"\n            5, 100, 105, 118, 95, 117, 0, 3,\n            // 3, \"rem_s\"\n            5, 114, 101, 109, 95, 115, 0, 4,\n            // 4, \"rem_u\"\n            5, 114, 101, 109, 95, 117, 0, 5,\n            // 5, \"get_high\"\n            8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0,\n            // section \"code\"\n            10, 191, 1, 6,\n            // 0, \"get_high\"\n            4, 0, 35, 0, 11,\n            // 1, \"mul\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n            // 2, \"div_s\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n            // 3, \"div_u\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n            // 4, \"rem_s\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n            // 5, \"rem_u\"\n            36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,\n            32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0,\n            32, 4, 167, 11,\n          ]),\n        ),\n        {},\n      ).exports;\n    } catch {\n      // no wasm support :(\n    }\n\n    /**\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n     *  See the from* functions below for more convenient ways of constructing Longs.\n     * @exports Long\n     * @class A Long class for representing a 64 bit two's-complement integer value.\n     * @param {number} low The low (signed) 32 bits of the long\n     * @param {number} high The high (signed) 32 bits of the long\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @constructor\n     */\n    function Long(low, high, unsigned) {\n      /**\n       * The low 32 bits as a signed value.\n       * @type {number}\n       */\n      this.low = low | 0;\n\n      /**\n       * The high 32 bits as a signed value.\n       * @type {number}\n       */\n      this.high = high | 0;\n\n      /**\n       * Whether unsigned or not.\n       * @type {boolean}\n       */\n      this.unsigned = !!unsigned;\n    }\n\n    // The internal representation of a long is the two given signed, 32-bit values.\n    // We use 32-bit pieces because these are the size of integers on which\n    // Javascript performs bit-operations.  For operations like addition and\n    // multiplication, we split each number into 16 bit pieces, which can easily be\n    // multiplied within Javascript's floating-point representation without overflow\n    // or change in sign.\n    //\n    // In the algorithms below, we frequently reduce the negative case to the\n    // positive case by negating the input(s) and then post-processing the result.\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n    // a positive number, it overflows back into a negative).  Not handling this\n    // case would often result in infinite recursion.\n    //\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n    // methods on which they depend.\n\n    /**\n     * An indicator used to reliably determine if an object is a Long or not.\n     * @type {boolean}\n     * @const\n     * @private\n     */\n    Long.prototype.__isLong__;\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\n      value: true,\n    });\n\n    /**\n     * @function\n     * @param {*} obj Object\n     * @returns {boolean}\n     * @inner\n     */\n    function isLong(obj) {\n      return (obj && obj[\"__isLong__\"]) === true;\n    }\n\n    /**\n     * @function\n     * @param {*} value number\n     * @returns {number}\n     * @inner\n     */\n    function ctz32(value) {\n      var c = Math.clz32(value & -value);\n      return value ? 31 - c : c;\n    }\n\n    /**\n     * Tests if the specified object is a Long.\n     * @function\n     * @param {*} obj Object\n     * @returns {boolean}\n     */\n    Long.isLong = isLong;\n\n    /**\n     * A cache of the Long representations of small integer values.\n     * @type {!Object}\n     * @inner\n     */\n    var INT_CACHE = {};\n\n    /**\n     * A cache of the Long representations of small unsigned integer values.\n     * @type {!Object}\n     * @inner\n     */\n    var UINT_CACHE = {};\n\n    /**\n     * @param {number} value\n     * @param {boolean=} unsigned\n     * @returns {!Long}\n     * @inner\n     */\n    function fromInt(value, unsigned) {\n      var obj, cachedObj, cache;\n      if (unsigned) {\n        value >>>= 0;\n        if ((cache = 0 <= value && value < 256)) {\n          cachedObj = UINT_CACHE[value];\n          if (cachedObj) return cachedObj;\n        }\n        obj = fromBits(value, 0, true);\n        if (cache) UINT_CACHE[value] = obj;\n        return obj;\n      } else {\n        value |= 0;\n        if ((cache = -128 <= value && value < 128)) {\n          cachedObj = INT_CACHE[value];\n          if (cachedObj) return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache) INT_CACHE[value] = obj;\n        return obj;\n      }\n    }\n\n    /**\n     * Returns a Long representing the given 32 bit integer value.\n     * @function\n     * @param {number} value The 32 bit integer in question\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromInt = fromInt;\n\n    /**\n     * @param {number} value\n     * @param {boolean=} unsigned\n     * @returns {!Long}\n     * @inner\n     */\n    function fromNumber(value, unsigned) {\n      if (isNaN(value)) return unsigned ? UZERO : ZERO;\n      if (unsigned) {\n        if (value < 0) return UZERO;\n        if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n      } else {\n        if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n      }\n      if (value < 0) return fromNumber(-value, unsigned).neg();\n      return fromBits(\n        value % TWO_PWR_32_DBL | 0,\n        (value / TWO_PWR_32_DBL) | 0,\n        unsigned,\n      );\n    }\n\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @function\n     * @param {number} value The number in question\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromNumber = fromNumber;\n\n    /**\n     * @param {number} lowBits\n     * @param {number} highBits\n     * @param {boolean=} unsigned\n     * @returns {!Long}\n     * @inner\n     */\n    function fromBits(lowBits, highBits, unsigned) {\n      return new Long(lowBits, highBits, unsigned);\n    }\n\n    /**\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n     *  assumed to use 32 bits.\n     * @function\n     * @param {number} lowBits The low 32 bits\n     * @param {number} highBits The high 32 bits\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromBits = fromBits;\n\n    /**\n     * @function\n     * @param {number} base\n     * @param {number} exponent\n     * @returns {number}\n     * @inner\n     */\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n\n    /**\n     * @param {string} str\n     * @param {(boolean|number)=} unsigned\n     * @param {number=} radix\n     * @returns {!Long}\n     * @inner\n     */\n    function fromString(str, unsigned, radix) {\n      if (str.length === 0) throw Error(\"empty string\");\n      if (typeof unsigned === \"number\") {\n        // For goog.math.long compatibility\n        radix = unsigned;\n        unsigned = false;\n      } else {\n        unsigned = !!unsigned;\n      }\n      if (\n        str === \"NaN\" ||\n        str === \"Infinity\" ||\n        str === \"+Infinity\" ||\n        str === \"-Infinity\"\n      )\n        return unsigned ? UZERO : ZERO;\n      radix = radix || 10;\n      if (radix < 2 || 36 < radix) throw RangeError(\"radix\");\n      var p;\n      if ((p = str.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");\n      else if (p === 0) {\n        return fromString(str.substring(1), unsigned, radix).neg();\n      }\n\n      // Do several (8) digits each time through the loop, so as to\n      // minimize the calls to the very expensive emulated div.\n      var radixToPower = fromNumber(pow_dbl(radix, 8));\n      var result = ZERO;\n      for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i),\n          value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n          var power = fromNumber(pow_dbl(radix, size));\n          result = result.mul(power).add(fromNumber(value));\n        } else {\n          result = result.mul(radixToPower);\n          result = result.add(fromNumber(value));\n        }\n      }\n      result.unsigned = unsigned;\n      return result;\n    }\n\n    /**\n     * Returns a Long representation of the given string, written using the specified radix.\n     * @function\n     * @param {string} str The textual representation of the Long\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromString = fromString;\n\n    /**\n     * @function\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n     * @param {boolean=} unsigned\n     * @returns {!Long}\n     * @inner\n     */\n    function fromValue(val, unsigned) {\n      if (typeof val === \"number\") return fromNumber(val, unsigned);\n      if (typeof val === \"string\") return fromString(val, unsigned);\n      // Throws for non-objects, converts non-instanceof Long:\n      return fromBits(\n        val.low,\n        val.high,\n        typeof unsigned === \"boolean\" ? unsigned : val.unsigned,\n      );\n    }\n\n    /**\n     * Converts the specified value to a Long using the appropriate from* function for its type.\n     * @function\n     * @param {!Long|number|bigint|string|!{low: number, high: number, unsigned: boolean}} val Value\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long}\n     */\n    Long.fromValue = fromValue;\n\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n    // no runtime penalty for these.\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_16_DBL = 1 << 16;\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_24_DBL = 1 << 24;\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n\n    /**\n     * @type {number}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n    /**\n     * @type {!Long}\n     * @const\n     * @inner\n     */\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var ZERO = fromInt(0);\n\n    /**\n     * Signed zero.\n     * @type {!Long}\n     */\n    Long.ZERO = ZERO;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var UZERO = fromInt(0, true);\n\n    /**\n     * Unsigned zero.\n     * @type {!Long}\n     */\n    Long.UZERO = UZERO;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var ONE = fromInt(1);\n\n    /**\n     * Signed one.\n     * @type {!Long}\n     */\n    Long.ONE = ONE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var UONE = fromInt(1, true);\n\n    /**\n     * Unsigned one.\n     * @type {!Long}\n     */\n    Long.UONE = UONE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var NEG_ONE = fromInt(-1);\n\n    /**\n     * Signed negative one.\n     * @type {!Long}\n     */\n    Long.NEG_ONE = NEG_ONE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var MAX_VALUE = fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\n\n    /**\n     * Maximum signed value.\n     * @type {!Long}\n     */\n    Long.MAX_VALUE = MAX_VALUE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var MAX_UNSIGNED_VALUE = fromBits(0xffffffff | 0, 0xffffffff | 0, true);\n\n    /**\n     * Maximum unsigned value.\n     * @type {!Long}\n     */\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n\n    /**\n     * @type {!Long}\n     * @inner\n     */\n    var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n\n    /**\n     * Minimum signed value.\n     * @type {!Long}\n     */\n    Long.MIN_VALUE = MIN_VALUE;\n\n    /**\n     * @alias Long.prototype\n     * @inner\n     */\n    var LongPrototype = Long.prototype;\n\n    /**\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n     * @this {!Long}\n     * @returns {number}\n     */\n    LongPrototype.toInt = function toInt() {\n      return this.unsigned ? this.low >>> 0 : this.low;\n    };\n\n    /**\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n     * @this {!Long}\n     * @returns {number}\n     */\n    LongPrototype.toNumber = function toNumber() {\n      if (this.unsigned)\n        return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n      return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    };\n\n    /**\n     * Converts the Long to a string written in the specified radix.\n     * @this {!Long}\n     * @param {number=} radix Radix (2-36), defaults to 10\n     * @returns {string}\n     * @override\n     * @throws {RangeError} If `radix` is out of range\n     */\n    LongPrototype.toString = function toString(radix) {\n      radix = radix || 10;\n      if (radix < 2 || 36 < radix) throw RangeError(\"radix\");\n      if (this.isZero()) return \"0\";\n      if (this.isNegative()) {\n        // Unsigned Longs are never negative\n        if (this.eq(MIN_VALUE)) {\n          // We need to change the Long value before it can be negated, so we remove\n          // the bottom-most digit in this base and then recurse to do the rest.\n          var radixLong = fromNumber(radix),\n            div = this.div(radixLong),\n            rem1 = div.mul(radixLong).sub(this);\n          return div.toString(radix) + rem1.toInt().toString(radix);\n        } else return \"-\" + this.neg().toString(radix);\n      }\n\n      // Do several (6) digits each time through the loop, so as to\n      // minimize the calls to the very expensive emulated div.\n      var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n        rem = this;\n      var result = \"\";\n      while (true) {\n        var remDiv = rem.div(radixToPower),\n          intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n          digits = intval.toString(radix);\n        rem = remDiv;\n        if (rem.isZero()) return digits + result;\n        else {\n          while (digits.length < 6) digits = \"0\" + digits;\n          result = \"\" + digits + result;\n        }\n      }\n    };\n\n    /**\n     * Gets the high 32 bits as a signed integer.\n     * @this {!Long}\n     * @returns {number} Signed high bits\n     */\n    LongPrototype.getHighBits = function getHighBits() {\n      return this.high;\n    };\n\n    /**\n     * Gets the high 32 bits as an unsigned integer.\n     * @this {!Long}\n     * @returns {number} Unsigned high bits\n     */\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n      return this.high >>> 0;\n    };\n\n    /**\n     * Gets the low 32 bits as a signed integer.\n     * @this {!Long}\n     * @returns {number} Signed low bits\n     */\n    LongPrototype.getLowBits = function getLowBits() {\n      return this.low;\n    };\n\n    /**\n     * Gets the low 32 bits as an unsigned integer.\n     * @this {!Long}\n     * @returns {number} Unsigned low bits\n     */\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n      return this.low >>> 0;\n    };\n\n    /**\n     * Gets the number of bits needed to represent the absolute value of this Long.\n     * @this {!Long}\n     * @returns {number}\n     */\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n      if (this.isNegative())\n        // Unsigned Longs are never negative\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n      var val = this.high != 0 ? this.high : this.low;\n      for (var bit = 31; bit > 0; bit--) if ((val & (1 << bit)) != 0) break;\n      return this.high != 0 ? bit + 33 : bit + 1;\n    };\n\n    /**\n     * Tests if this Long can be safely represented as a JavaScript number.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isSafeInteger = function isSafeInteger() {\n      // 2^53-1 is the maximum safe value\n      var top11Bits = this.high >> 21;\n      // [0, 2^53-1]\n      if (!top11Bits) return true;\n      // > 2^53-1\n      if (this.unsigned) return false;\n      // [-2^53, -1] except -2^53\n      return top11Bits === -1 && !(this.low === 0 && this.high === -0x200000);\n    };\n\n    /**\n     * Tests if this Long's value equals zero.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isZero = function isZero() {\n      return this.high === 0 && this.low === 0;\n    };\n\n    /**\n     * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n     * @returns {boolean}\n     */\n    LongPrototype.eqz = LongPrototype.isZero;\n\n    /**\n     * Tests if this Long's value is negative.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isNegative = function isNegative() {\n      return !this.unsigned && this.high < 0;\n    };\n\n    /**\n     * Tests if this Long's value is positive or zero.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isPositive = function isPositive() {\n      return this.unsigned || this.high >= 0;\n    };\n\n    /**\n     * Tests if this Long's value is odd.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isOdd = function isOdd() {\n      return (this.low & 1) === 1;\n    };\n\n    /**\n     * Tests if this Long's value is even.\n     * @this {!Long}\n     * @returns {boolean}\n     */\n    LongPrototype.isEven = function isEven() {\n      return (this.low & 1) === 0;\n    };\n\n    /**\n     * Tests if this Long's value equals the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.equals = function equals(other) {\n      if (!isLong(other)) other = fromValue(other);\n      if (\n        this.unsigned !== other.unsigned &&\n        this.high >>> 31 === 1 &&\n        other.high >>> 31 === 1\n      )\n        return false;\n      return this.high === other.high && this.low === other.low;\n    };\n\n    /**\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.eq = LongPrototype.equals;\n\n    /**\n     * Tests if this Long's value differs from the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.notEquals = function notEquals(other) {\n      return !this.eq(/* validates */ other);\n    };\n\n    /**\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.neq = LongPrototype.notEquals;\n\n    /**\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.ne = LongPrototype.notEquals;\n\n    /**\n     * Tests if this Long's value is less than the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.lessThan = function lessThan(other) {\n      return this.comp(/* validates */ other) < 0;\n    };\n\n    /**\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.lt = LongPrototype.lessThan;\n\n    /**\n     * Tests if this Long's value is less than or equal the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n      return this.comp(/* validates */ other) <= 0;\n    };\n\n    /**\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\n\n    /**\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.le = LongPrototype.lessThanOrEqual;\n\n    /**\n     * Tests if this Long's value is greater than the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.greaterThan = function greaterThan(other) {\n      return this.comp(/* validates */ other) > 0;\n    };\n\n    /**\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.gt = LongPrototype.greaterThan;\n\n    /**\n     * Tests if this Long's value is greater than or equal the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n      return this.comp(/* validates */ other) >= 0;\n    };\n\n    /**\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n\n    /**\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {boolean}\n     */\n    LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n\n    /**\n     * Compares this Long's value with the specified's.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n     *  if the given one is greater\n     */\n    LongPrototype.compare = function compare(other) {\n      if (!isLong(other)) other = fromValue(other);\n      if (this.eq(other)) return 0;\n      var thisNeg = this.isNegative(),\n        otherNeg = other.isNegative();\n      if (thisNeg && !otherNeg) return -1;\n      if (!thisNeg && otherNeg) return 1;\n      // At this point the sign bits are the same\n      if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;\n      // Both are positive if at least one is unsigned\n      return other.high >>> 0 > this.high >>> 0 ||\n        (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n        ? -1\n        : 1;\n    };\n\n    /**\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n     * @function\n     * @param {!Long|number|bigint|string} other Other value\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n     *  if the given one is greater\n     */\n    LongPrototype.comp = LongPrototype.compare;\n\n    /**\n     * Negates this Long's value.\n     * @this {!Long}\n     * @returns {!Long} Negated Long\n     */\n    LongPrototype.negate = function negate() {\n      if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\n      return this.not().add(ONE);\n    };\n\n    /**\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\n     * @function\n     * @returns {!Long} Negated Long\n     */\n    LongPrototype.neg = LongPrototype.negate;\n\n    /**\n     * Returns the sum of this and the specified Long.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} addend Addend\n     * @returns {!Long} Sum\n     */\n    LongPrototype.add = function add(addend) {\n      if (!isLong(addend)) addend = fromValue(addend);\n\n      // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n      var a48 = this.high >>> 16;\n      var a32 = this.high & 0xffff;\n      var a16 = this.low >>> 16;\n      var a00 = this.low & 0xffff;\n      var b48 = addend.high >>> 16;\n      var b32 = addend.high & 0xffff;\n      var b16 = addend.low >>> 16;\n      var b00 = addend.low & 0xffff;\n      var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n      c00 += a00 + b00;\n      c16 += c00 >>> 16;\n      c00 &= 0xffff;\n      c16 += a16 + b16;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c32 += a32 + b32;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c48 += a48 + b48;\n      c48 &= 0xffff;\n      return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    };\n\n    /**\n     * Returns the difference of this and the specified Long.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} subtrahend Subtrahend\n     * @returns {!Long} Difference\n     */\n    LongPrototype.subtract = function subtract(subtrahend) {\n      if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n      return this.add(subtrahend.neg());\n    };\n\n    /**\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n     * @function\n     * @param {!Long|number|bigint|string} subtrahend Subtrahend\n     * @returns {!Long} Difference\n     */\n    LongPrototype.sub = LongPrototype.subtract;\n\n    /**\n     * Returns the product of this and the specified Long.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} multiplier Multiplier\n     * @returns {!Long} Product\n     */\n    LongPrototype.multiply = function multiply(multiplier) {\n      if (this.isZero()) return this;\n      if (!isLong(multiplier)) multiplier = fromValue(multiplier);\n\n      // use wasm support if present\n      if (wasm) {\n        var low = wasm[\"mul\"](\n          this.low,\n          this.high,\n          multiplier.low,\n          multiplier.high,\n        );\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n      }\n      if (multiplier.isZero()) return this.unsigned ? UZERO : ZERO;\n      if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\n      if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\n      if (this.isNegative()) {\n        if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());\n        else return this.neg().mul(multiplier).neg();\n      } else if (multiplier.isNegative())\n        return this.mul(multiplier.neg()).neg();\n\n      // If both longs are small, use float multiplication\n      if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\n        return fromNumber(\n          this.toNumber() * multiplier.toNumber(),\n          this.unsigned,\n        );\n\n      // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n      // We can skip products that would overflow.\n\n      var a48 = this.high >>> 16;\n      var a32 = this.high & 0xffff;\n      var a16 = this.low >>> 16;\n      var a00 = this.low & 0xffff;\n      var b48 = multiplier.high >>> 16;\n      var b32 = multiplier.high & 0xffff;\n      var b16 = multiplier.low >>> 16;\n      var b00 = multiplier.low & 0xffff;\n      var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n      c00 += a00 * b00;\n      c16 += c00 >>> 16;\n      c00 &= 0xffff;\n      c16 += a16 * b00;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c16 += a00 * b16;\n      c32 += c16 >>> 16;\n      c16 &= 0xffff;\n      c32 += a32 * b00;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c32 += a16 * b16;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c32 += a00 * b32;\n      c48 += c32 >>> 16;\n      c32 &= 0xffff;\n      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n      c48 &= 0xffff;\n      return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    };\n\n    /**\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n     * @function\n     * @param {!Long|number|bigint|string} multiplier Multiplier\n     * @returns {!Long} Product\n     */\n    LongPrototype.mul = LongPrototype.multiply;\n\n    /**\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\n     *  unsigned if this Long is unsigned.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Quotient\n     */\n    LongPrototype.divide = function divide(divisor) {\n      if (!isLong(divisor)) divisor = fromValue(divisor);\n      if (divisor.isZero()) throw Error(\"division by zero\");\n\n      // use wasm support if present\n      if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (\n          !this.unsigned &&\n          this.high === -0x80000000 &&\n          divisor.low === -1 &&\n          divisor.high === -1\n        ) {\n          // be consistent with non-wasm code path\n          return this;\n        }\n        var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(\n          this.low,\n          this.high,\n          divisor.low,\n          divisor.high,\n        );\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n      }\n      if (this.isZero()) return this.unsigned ? UZERO : ZERO;\n      var approx, rem, res;\n      if (!this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (this.eq(MIN_VALUE)) {\n          if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\n            return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n          else if (divisor.eq(MIN_VALUE)) return ONE;\n          else {\n            // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n            var halfThis = this.shr(1);\n            approx = halfThis.div(divisor).shl(1);\n            if (approx.eq(ZERO)) {\n              return divisor.isNegative() ? ONE : NEG_ONE;\n            } else {\n              rem = this.sub(divisor.mul(approx));\n              res = approx.add(rem.div(divisor));\n              return res;\n            }\n          }\n        } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\n        if (this.isNegative()) {\n          if (divisor.isNegative()) return this.neg().div(divisor.neg());\n          return this.neg().div(divisor).neg();\n        } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n        res = ZERO;\n      } else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned) divisor = divisor.toUnsigned();\n        if (divisor.gt(this)) return UZERO;\n        if (divisor.gt(this.shru(1)))\n          // 15 >>> 1 = 7 ; with divisor = 8 ; true\n          return UONE;\n        res = UZERO;\n      }\n\n      // Repeat the following until the remainder is less than other:  find a\n      // floating-point that approximates remainder / other *from below*, add this\n      // into the result, and subtract it from the remainder.  It is critical that\n      // the approximate value is less than or equal to the real value so that the\n      // remainder never becomes negative.\n      rem = this;\n      while (rem.gte(divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n          delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n          // Decrease the approximation until it is smaller than the remainder.  Note\n          // that if it is too large, the product overflows and is negative.\n          approxRes = fromNumber(approx),\n          approxRem = approxRes.mul(divisor);\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\n          approx -= delta;\n          approxRes = fromNumber(approx, this.unsigned);\n          approxRem = approxRes.mul(divisor);\n        }\n\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (approxRes.isZero()) approxRes = ONE;\n        res = res.add(approxRes);\n        rem = rem.sub(approxRem);\n      }\n      return res;\n    };\n\n    /**\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n     * @function\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Quotient\n     */\n    LongPrototype.div = LongPrototype.divide;\n\n    /**\n     * Returns this Long modulo the specified.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Remainder\n     */\n    LongPrototype.modulo = function modulo(divisor) {\n      if (!isLong(divisor)) divisor = fromValue(divisor);\n\n      // use wasm support if present\n      if (wasm) {\n        var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(\n          this.low,\n          this.high,\n          divisor.low,\n          divisor.high,\n        );\n        return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n      }\n      return this.sub(this.div(divisor).mul(divisor));\n    };\n\n    /**\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n     * @function\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Remainder\n     */\n    LongPrototype.mod = LongPrototype.modulo;\n\n    /**\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n     * @function\n     * @param {!Long|number|bigint|string} divisor Divisor\n     * @returns {!Long} Remainder\n     */\n    LongPrototype.rem = LongPrototype.modulo;\n\n    /**\n     * Returns the bitwise NOT of this Long.\n     * @this {!Long}\n     * @returns {!Long}\n     */\n    LongPrototype.not = function not() {\n      return fromBits(~this.low, ~this.high, this.unsigned);\n    };\n\n    /**\n     * Returns count leading zeros of this Long.\n     * @this {!Long}\n     * @returns {!number}\n     */\n    LongPrototype.countLeadingZeros = function countLeadingZeros() {\n      return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n    };\n\n    /**\n     * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n     * @function\n     * @param {!Long}\n     * @returns {!number}\n     */\n    LongPrototype.clz = LongPrototype.countLeadingZeros;\n\n    /**\n     * Returns count trailing zeros of this Long.\n     * @this {!Long}\n     * @returns {!number}\n     */\n    LongPrototype.countTrailingZeros = function countTrailingZeros() {\n      return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n    };\n\n    /**\n     * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n     * @function\n     * @param {!Long}\n     * @returns {!number}\n     */\n    LongPrototype.ctz = LongPrototype.countTrailingZeros;\n\n    /**\n     * Returns the bitwise AND of this Long and the specified.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other Long\n     * @returns {!Long}\n     */\n    LongPrototype.and = function and(other) {\n      if (!isLong(other)) other = fromValue(other);\n      return fromBits(\n        this.low & other.low,\n        this.high & other.high,\n        this.unsigned,\n      );\n    };\n\n    /**\n     * Returns the bitwise OR of this Long and the specified.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other Long\n     * @returns {!Long}\n     */\n    LongPrototype.or = function or(other) {\n      if (!isLong(other)) other = fromValue(other);\n      return fromBits(\n        this.low | other.low,\n        this.high | other.high,\n        this.unsigned,\n      );\n    };\n\n    /**\n     * Returns the bitwise XOR of this Long and the given one.\n     * @this {!Long}\n     * @param {!Long|number|bigint|string} other Other Long\n     * @returns {!Long}\n     */\n    LongPrototype.xor = function xor(other) {\n      if (!isLong(other)) other = fromValue(other);\n      return fromBits(\n        this.low ^ other.low,\n        this.high ^ other.high,\n        this.unsigned,\n      );\n    };\n\n    /**\n     * Returns this Long with bits shifted to the left by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      else if (numBits < 32)\n        return fromBits(\n          this.low << numBits,\n          (this.high << numBits) | (this.low >>> (32 - numBits)),\n          this.unsigned,\n        );\n      else return fromBits(0, this.low << (numBits - 32), this.unsigned);\n    };\n\n    /**\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shl = LongPrototype.shiftLeft;\n\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shiftRight = function shiftRight(numBits) {\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      else if (numBits < 32)\n        return fromBits(\n          (this.low >>> numBits) | (this.high << (32 - numBits)),\n          this.high >> numBits,\n          this.unsigned,\n        );\n      else\n        return fromBits(\n          this.high >> (numBits - 32),\n          this.high >= 0 ? 0 : -1,\n          this.unsigned,\n        );\n    };\n\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shr = LongPrototype.shiftRight;\n\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      if (numBits < 32)\n        return fromBits(\n          (this.low >>> numBits) | (this.high << (32 - numBits)),\n          this.high >>> numBits,\n          this.unsigned,\n        );\n      if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n      return fromBits(this.high >>> (numBits - 32), 0, this.unsigned);\n    };\n\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n\n    /**\n     * Returns this Long with bits rotated to the left by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Rotated Long\n     */\n    LongPrototype.rotateLeft = function rotateLeft(numBits) {\n      var b;\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n      if (numBits < 32) {\n        b = 32 - numBits;\n        return fromBits(\n          (this.low << numBits) | (this.high >>> b),\n          (this.high << numBits) | (this.low >>> b),\n          this.unsigned,\n        );\n      }\n      numBits -= 32;\n      b = 32 - numBits;\n      return fromBits(\n        (this.high << numBits) | (this.low >>> b),\n        (this.low << numBits) | (this.high >>> b),\n        this.unsigned,\n      );\n    };\n    /**\n     * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Rotated Long\n     */\n    LongPrototype.rotl = LongPrototype.rotateLeft;\n\n    /**\n     * Returns this Long with bits rotated to the right by the given amount.\n     * @this {!Long}\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Rotated Long\n     */\n    LongPrototype.rotateRight = function rotateRight(numBits) {\n      var b;\n      if (isLong(numBits)) numBits = numBits.toInt();\n      if ((numBits &= 63) === 0) return this;\n      if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n      if (numBits < 32) {\n        b = 32 - numBits;\n        return fromBits(\n          (this.high << b) | (this.low >>> numBits),\n          (this.low << b) | (this.high >>> numBits),\n          this.unsigned,\n        );\n      }\n      numBits -= 32;\n      b = 32 - numBits;\n      return fromBits(\n        (this.low << b) | (this.high >>> numBits),\n        (this.high << b) | (this.low >>> numBits),\n        this.unsigned,\n      );\n    };\n    /**\n     * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n     * @function\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Rotated Long\n     */\n    LongPrototype.rotr = LongPrototype.rotateRight;\n\n    /**\n     * Converts this Long to signed.\n     * @this {!Long}\n     * @returns {!Long} Signed long\n     */\n    LongPrototype.toSigned = function toSigned() {\n      if (!this.unsigned) return this;\n      return fromBits(this.low, this.high, false);\n    };\n\n    /**\n     * Converts this Long to unsigned.\n     * @this {!Long}\n     * @returns {!Long} Unsigned long\n     */\n    LongPrototype.toUnsigned = function toUnsigned() {\n      if (this.unsigned) return this;\n      return fromBits(this.low, this.high, true);\n    };\n\n    /**\n     * Converts this Long to its byte representation.\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\n     * @this {!Long}\n     * @returns {!Array.<number>} Byte representation\n     */\n    LongPrototype.toBytes = function toBytes(le) {\n      return le ? this.toBytesLE() : this.toBytesBE();\n    };\n\n    /**\n     * Converts this Long to its little endian byte representation.\n     * @this {!Long}\n     * @returns {!Array.<number>} Little endian byte representation\n     */\n    LongPrototype.toBytesLE = function toBytesLE() {\n      var hi = this.high,\n        lo = this.low;\n      return [\n        lo & 0xff,\n        (lo >>> 8) & 0xff,\n        (lo >>> 16) & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        (hi >>> 8) & 0xff,\n        (hi >>> 16) & 0xff,\n        hi >>> 24,\n      ];\n    };\n\n    /**\n     * Converts this Long to its big endian byte representation.\n     * @this {!Long}\n     * @returns {!Array.<number>} Big endian byte representation\n     */\n    LongPrototype.toBytesBE = function toBytesBE() {\n      var hi = this.high,\n        lo = this.low;\n      return [\n        hi >>> 24,\n        (hi >>> 16) & 0xff,\n        (hi >>> 8) & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        (lo >>> 16) & 0xff,\n        (lo >>> 8) & 0xff,\n        lo & 0xff,\n      ];\n    };\n\n    /**\n     * Creates a Long from its byte representation.\n     * @param {!Array.<number>} bytes Byte representation\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\n     * @returns {Long} The corresponding Long value\n     */\n    Long.fromBytes = function fromBytes(bytes, unsigned, le) {\n      return le\n        ? Long.fromBytesLE(bytes, unsigned)\n        : Long.fromBytesBE(bytes, unsigned);\n    };\n\n    /**\n     * Creates a Long from its little endian byte representation.\n     * @param {!Array.<number>} bytes Little endian byte representation\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {Long} The corresponding Long value\n     */\n    Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n      return new Long(\n        bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24),\n        bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24),\n        unsigned,\n      );\n    };\n\n    /**\n     * Creates a Long from its big endian byte representation.\n     * @param {!Array.<number>} bytes Big endian byte representation\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {Long} The corresponding Long value\n     */\n    Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n      return new Long(\n        (bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7],\n        (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3],\n        unsigned,\n      );\n    };\n\n    // Support conversion to/from BigInt where available\n    if (typeof BigInt === \"function\") {\n      /**\n       * Returns a Long representing the given big integer.\n       * @function\n       * @param {number} value The big integer value\n       * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n       * @returns {!Long} The corresponding Long value\n       */\n      Long.fromBigInt = function fromBigInt(value, unsigned) {\n        var lowBits = Number(BigInt.asIntN(32, value));\n        var highBits = Number(BigInt.asIntN(32, value >> BigInt(32)));\n        return fromBits(lowBits, highBits, unsigned);\n      };\n\n      // Override\n      Long.fromValue = function fromValueWithBigInt(value, unsigned) {\n        if (typeof value === \"bigint\") return Long.fromBigInt(value, unsigned);\n        return fromValue(value, unsigned);\n      };\n\n      /**\n       * Converts the Long to its big integer representation.\n       * @this {!Long}\n       * @returns {bigint}\n       */\n      LongPrototype.toBigInt = function toBigInt() {\n        var lowBigInt = BigInt(this.low >>> 0);\n        var highBigInt = BigInt(this.unsigned ? this.high >>> 0 : this.high);\n        return (highBigInt << BigInt(32)) | lowBigInt;\n      };\n    }\n    var _default = (_exports.default = Long);\n  },\n);\n", "\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadFileDescriptorSetFromObject = exports.loadFileDescriptorSetFromBuffer = exports.fromJSON = exports.loadSync = exports.load = exports.IdempotencyLevel = exports.isAnyExtension = exports.Long = void 0;\nconst camelCase = require(\"lodash.camelcase\");\nconst Protobuf = require(\"protobufjs\");\nconst descriptor = require(\"protobufjs/ext/descriptor\");\nconst util_1 = require(\"./util\");\nconst Long = require(\"long\");\nexports.Long = Long;\nfunction isAnyExtension(obj) {\n    return ('@type' in obj) && (typeof obj['@type'] === 'string');\n}\nexports.isAnyExtension = isAnyExtension;\nvar IdempotencyLevel;\n(function (IdempotencyLevel) {\n    IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = \"IDEMPOTENCY_UNKNOWN\";\n    IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = \"NO_SIDE_EFFECTS\";\n    IdempotencyLevel[\"IDEMPOTENT\"] = \"IDEMPOTENT\";\n})(IdempotencyLevel = exports.IdempotencyLevel || (exports.IdempotencyLevel = {}));\nconst descriptorOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    defaults: true,\n    oneofs: true,\n    json: true,\n};\nfunction joinName(baseName, name) {\n    if (baseName === '') {\n        return name;\n    }\n    else {\n        return baseName + '.' + name;\n    }\n}\nfunction isHandledReflectionObject(obj) {\n    return (obj instanceof Protobuf.Service ||\n        obj instanceof Protobuf.Type ||\n        obj instanceof Protobuf.Enum);\n}\nfunction isNamespaceBase(obj) {\n    return obj instanceof Protobuf.Namespace || obj instanceof Protobuf.Root;\n}\nfunction getAllHandledReflectionObjects(obj, parentName) {\n    const objName = joinName(parentName, obj.name);\n    if (isHandledReflectionObject(obj)) {\n        return [[objName, obj]];\n    }\n    else {\n        if (isNamespaceBase(obj) && typeof obj.nested !== 'undefined') {\n            return Object.keys(obj.nested)\n                .map(name => {\n                return getAllHandledReflectionObjects(obj.nested[name], objName);\n            })\n                .reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\n        }\n    }\n    return [];\n}\nfunction createDeserializer(cls, options) {\n    return function deserialize(argBuf) {\n        return cls.toObject(cls.decode(argBuf), options);\n    };\n}\nfunction createSerializer(cls) {\n    return function serialize(arg) {\n        if (Array.isArray(arg)) {\n            throw new Error(`Failed to serialize message: expected object with ${cls.name} structure, got array instead`);\n        }\n        const message = cls.fromObject(arg);\n        return cls.encode(message).finish();\n    };\n}\nfunction mapMethodOptions(options) {\n    return (options || []).reduce((obj, item) => {\n        for (const [key, value] of Object.entries(item)) {\n            switch (key) {\n                case 'uninterpreted_option':\n                    obj.uninterpreted_option.push(item.uninterpreted_option);\n                    break;\n                default:\n                    obj[key] = value;\n            }\n        }\n        return obj;\n    }, {\n        deprecated: false,\n        idempotency_level: IdempotencyLevel.IDEMPOTENCY_UNKNOWN,\n        uninterpreted_option: [],\n    });\n}\nfunction createMethodDefinition(method, serviceName, options, fileDescriptors) {\n    /* This is only ever called after the corresponding root.resolveAll(), so we\n     * can assume that the resolved request and response types are non-null */\n    const requestType = method.resolvedRequestType;\n    const responseType = method.resolvedResponseType;\n    return {\n        path: '/' + serviceName + '/' + method.name,\n        requestStream: !!method.requestStream,\n        responseStream: !!method.responseStream,\n        requestSerialize: createSerializer(requestType),\n        requestDeserialize: createDeserializer(requestType, options),\n        responseSerialize: createSerializer(responseType),\n        responseDeserialize: createDeserializer(responseType, options),\n        // TODO(murgatroid99): Find a better way to handle this\n        originalName: camelCase(method.name),\n        requestType: createMessageDefinition(requestType, fileDescriptors),\n        responseType: createMessageDefinition(responseType, fileDescriptors),\n        options: mapMethodOptions(method.parsedOptions),\n    };\n}\nfunction createServiceDefinition(service, name, options, fileDescriptors) {\n    const def = {};\n    for (const method of service.methodsArray) {\n        def[method.name] = createMethodDefinition(method, name, options, fileDescriptors);\n    }\n    return def;\n}\nfunction createMessageDefinition(message, fileDescriptors) {\n    const messageDescriptor = message.toDescriptor('proto3');\n    return {\n        format: 'Protocol Buffer 3 DescriptorProto',\n        type: messageDescriptor.$type.toObject(messageDescriptor, descriptorOptions),\n        fileDescriptorProtos: fileDescriptors,\n    };\n}\nfunction createEnumDefinition(enumType, fileDescriptors) {\n    const enumDescriptor = enumType.toDescriptor('proto3');\n    return {\n        format: 'Protocol Buffer 3 EnumDescriptorProto',\n        type: enumDescriptor.$type.toObject(enumDescriptor, descriptorOptions),\n        fileDescriptorProtos: fileDescriptors,\n    };\n}\n/**\n * function createDefinition(obj: Protobuf.Service, name: string, options:\n * Options): ServiceDefinition; function createDefinition(obj: Protobuf.Type,\n * name: string, options: Options): MessageTypeDefinition; function\n * createDefinition(obj: Protobuf.Enum, name: string, options: Options):\n * EnumTypeDefinition;\n */\nfunction createDefinition(obj, name, options, fileDescriptors) {\n    if (obj instanceof Protobuf.Service) {\n        return createServiceDefinition(obj, name, options, fileDescriptors);\n    }\n    else if (obj instanceof Protobuf.Type) {\n        return createMessageDefinition(obj, fileDescriptors);\n    }\n    else if (obj instanceof Protobuf.Enum) {\n        return createEnumDefinition(obj, fileDescriptors);\n    }\n    else {\n        throw new Error('Type mismatch in reflection object handling');\n    }\n}\nfunction createPackageDefinition(root, options) {\n    const def = {};\n    root.resolveAll();\n    const descriptorList = root.toDescriptor('proto3').file;\n    const bufferList = descriptorList.map(value => Buffer.from(descriptor.FileDescriptorProto.encode(value).finish()));\n    for (const [name, obj] of getAllHandledReflectionObjects(root, '')) {\n        def[name] = createDefinition(obj, name, options, bufferList);\n    }\n    return def;\n}\nfunction createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options) {\n    options = options || {};\n    const root = Protobuf.Root.fromDescriptor(decodedDescriptorSet);\n    root.resolveAll();\n    return createPackageDefinition(root, options);\n}\n/**\n * Load a .proto file with the specified options.\n * @param filename One or multiple file paths to load. Can be an absolute path\n *     or relative to an include path.\n * @param options.keepCase Preserve field names. The default is to change them\n *     to camel case.\n * @param options.longs The type that should be used to represent `long` values.\n *     Valid options are `Number` and `String`. Defaults to a `Long` object type\n *     from a library.\n * @param options.enums The type that should be used to represent `enum` values.\n *     The only valid option is `String`. Defaults to the numeric value.\n * @param options.bytes The type that should be used to represent `bytes`\n *     values. Valid options are `Array` and `String`. The default is to use\n *     `Buffer`.\n * @param options.defaults Set default values on output objects. Defaults to\n *     `false`.\n * @param options.arrays Set empty arrays for missing array values even if\n *     `defaults` is `false`. Defaults to `false`.\n * @param options.objects Set empty objects for missing object values even if\n *     `defaults` is `false`. Defaults to `false`.\n * @param options.oneofs Set virtual oneof properties to the present field's\n *     name\n * @param options.json Represent Infinity and NaN as strings in float fields,\n *     and automatically decode google.protobuf.Any values.\n * @param options.includeDirs Paths to search for imported `.proto` files.\n */\nfunction load(filename, options) {\n    return (0, util_1.loadProtosWithOptions)(filename, options).then(loadedRoot => {\n        return createPackageDefinition(loadedRoot, options);\n    });\n}\nexports.load = load;\nfunction loadSync(filename, options) {\n    const loadedRoot = (0, util_1.loadProtosWithOptionsSync)(filename, options);\n    return createPackageDefinition(loadedRoot, options);\n}\nexports.loadSync = loadSync;\nfunction fromJSON(json, options) {\n    options = options || {};\n    const loadedRoot = Protobuf.Root.fromJSON(json);\n    loadedRoot.resolveAll();\n    return createPackageDefinition(loadedRoot, options);\n}\nexports.fromJSON = fromJSON;\nfunction loadFileDescriptorSetFromBuffer(descriptorSet, options) {\n    const decodedDescriptorSet = descriptor.FileDescriptorSet.decode(descriptorSet);\n    return createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options);\n}\nexports.loadFileDescriptorSetFromBuffer = loadFileDescriptorSetFromBuffer;\nfunction loadFileDescriptorSetFromObject(descriptorSet, options) {\n    const decodedDescriptorSet = descriptor.FileDescriptorSet.fromObject(descriptorSet);\n    return createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options);\n}\nexports.loadFileDescriptorSetFromObject = loadFileDescriptorSetFromObject;\n(0, util_1.addCommonProtos)();\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.getChannelzServiceDefinition = exports.getChannelzHandlers = exports.unregisterChannelzRef = exports.registerChannelzSocket = exports.registerChannelzServer = exports.registerChannelzSubchannel = exports.registerChannelzChannel = exports.ChannelzCallTracker = exports.ChannelzChildrenTracker = exports.ChannelzTrace = void 0;\nconst net_1 = require(\"net\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst admin_1 = require(\"./admin\");\nconst make_client_1 = require(\"./make-client\");\nfunction channelRefToMessage(ref) {\n    return {\n        channel_id: ref.id,\n        name: ref.name,\n    };\n}\nfunction subchannelRefToMessage(ref) {\n    return {\n        subchannel_id: ref.id,\n        name: ref.name,\n    };\n}\nfunction serverRefToMessage(ref) {\n    return {\n        server_id: ref.id,\n    };\n}\nfunction socketRefToMessage(ref) {\n    return {\n        socket_id: ref.id,\n        name: ref.name,\n    };\n}\n/**\n * The loose upper bound on the number of events that should be retained in a\n * trace. This may be exceeded by up to a factor of 2. Arbitrarily chosen as a\n * number that should be large enough to contain the recent relevant\n * information, but small enough to not use excessive memory.\n */\nconst TARGET_RETAINED_TRACES = 32;\nclass ChannelzTrace {\n    constructor() {\n        this.events = [];\n        this.eventsLogged = 0;\n        this.creationTimestamp = new Date();\n    }\n    addTrace(severity, description, child) {\n        const timestamp = new Date();\n        this.events.push({\n            description: description,\n            severity: severity,\n            timestamp: timestamp,\n            childChannel: (child === null || child === void 0 ? void 0 : child.kind) === 'channel' ? child : undefined,\n            childSubchannel: (child === null || child === void 0 ? void 0 : child.kind) === 'subchannel' ? child : undefined,\n        });\n        // Whenever the trace array gets too large, discard the first half\n        if (this.events.length >= TARGET_RETAINED_TRACES * 2) {\n            this.events = this.events.slice(TARGET_RETAINED_TRACES);\n        }\n        this.eventsLogged += 1;\n    }\n    getTraceMessage() {\n        return {\n            creation_timestamp: dateToProtoTimestamp(this.creationTimestamp),\n            num_events_logged: this.eventsLogged,\n            events: this.events.map(event => {\n                return {\n                    description: event.description,\n                    severity: event.severity,\n                    timestamp: dateToProtoTimestamp(event.timestamp),\n                    channel_ref: event.childChannel\n                        ? channelRefToMessage(event.childChannel)\n                        : null,\n                    subchannel_ref: event.childSubchannel\n                        ? subchannelRefToMessage(event.childSubchannel)\n                        : null,\n                };\n            }),\n        };\n    }\n}\nexports.ChannelzTrace = ChannelzTrace;\nclass ChannelzChildrenTracker {\n    constructor() {\n        this.channelChildren = new Map();\n        this.subchannelChildren = new Map();\n        this.socketChildren = new Map();\n    }\n    refChild(child) {\n        var _a, _b, _c;\n        switch (child.kind) {\n            case 'channel': {\n                const trackedChild = (_a = this.channelChildren.get(child.id)) !== null && _a !== void 0 ? _a : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.channelChildren.set(child.id, trackedChild);\n                break;\n            }\n            case 'subchannel': {\n                const trackedChild = (_b = this.subchannelChildren.get(child.id)) !== null && _b !== void 0 ? _b : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.subchannelChildren.set(child.id, trackedChild);\n                break;\n            }\n            case 'socket': {\n                const trackedChild = (_c = this.socketChildren.get(child.id)) !== null && _c !== void 0 ? _c : {\n                    ref: child,\n                    count: 0,\n                };\n                trackedChild.count += 1;\n                this.socketChildren.set(child.id, trackedChild);\n                break;\n            }\n        }\n    }\n    unrefChild(child) {\n        switch (child.kind) {\n            case 'channel': {\n                const trackedChild = this.channelChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.channelChildren.delete(child.id);\n                    }\n                    else {\n                        this.channelChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n            case 'subchannel': {\n                const trackedChild = this.subchannelChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.subchannelChildren.delete(child.id);\n                    }\n                    else {\n                        this.subchannelChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n            case 'socket': {\n                const trackedChild = this.socketChildren.get(child.id);\n                if (trackedChild !== undefined) {\n                    trackedChild.count -= 1;\n                    if (trackedChild.count === 0) {\n                        this.socketChildren.delete(child.id);\n                    }\n                    else {\n                        this.socketChildren.set(child.id, trackedChild);\n                    }\n                }\n                break;\n            }\n        }\n    }\n    getChildLists() {\n        const channels = [];\n        for (const { ref } of this.channelChildren.values()) {\n            channels.push(ref);\n        }\n        const subchannels = [];\n        for (const { ref } of this.subchannelChildren.values()) {\n            subchannels.push(ref);\n        }\n        const sockets = [];\n        for (const { ref } of this.socketChildren.values()) {\n            sockets.push(ref);\n        }\n        return { channels, subchannels, sockets };\n    }\n}\nexports.ChannelzChildrenTracker = ChannelzChildrenTracker;\nclass ChannelzCallTracker {\n    constructor() {\n        this.callsStarted = 0;\n        this.callsSucceeded = 0;\n        this.callsFailed = 0;\n        this.lastCallStartedTimestamp = null;\n    }\n    addCallStarted() {\n        this.callsStarted += 1;\n        this.lastCallStartedTimestamp = new Date();\n    }\n    addCallSucceeded() {\n        this.callsSucceeded += 1;\n    }\n    addCallFailed() {\n        this.callsFailed += 1;\n    }\n}\nexports.ChannelzCallTracker = ChannelzCallTracker;\nlet nextId = 1;\nfunction getNextId() {\n    return nextId++;\n}\nconst channels = [];\nconst subchannels = [];\nconst servers = [];\nconst sockets = [];\nfunction registerChannelzChannel(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'channel' };\n    if (channelzEnabled) {\n        channels[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzChannel = registerChannelzChannel;\nfunction registerChannelzSubchannel(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'subchannel' };\n    if (channelzEnabled) {\n        subchannels[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzSubchannel = registerChannelzSubchannel;\nfunction registerChannelzServer(getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, kind: 'server' };\n    if (channelzEnabled) {\n        servers[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzServer = registerChannelzServer;\nfunction registerChannelzSocket(name, getInfo, channelzEnabled) {\n    const id = getNextId();\n    const ref = { id, name, kind: 'socket' };\n    if (channelzEnabled) {\n        sockets[id] = { ref, getInfo };\n    }\n    return ref;\n}\nexports.registerChannelzSocket = registerChannelzSocket;\nfunction unregisterChannelzRef(ref) {\n    switch (ref.kind) {\n        case 'channel':\n            delete channels[ref.id];\n            return;\n        case 'subchannel':\n            delete subchannels[ref.id];\n            return;\n        case 'server':\n            delete servers[ref.id];\n            return;\n        case 'socket':\n            delete sockets[ref.id];\n            return;\n    }\n}\nexports.unregisterChannelzRef = unregisterChannelzRef;\n/**\n * Parse a single section of an IPv6 address as two bytes\n * @param addressSection A hexadecimal string of length up to 4\n * @returns The pair of bytes representing this address section\n */\nfunction parseIPv6Section(addressSection) {\n    const numberValue = Number.parseInt(addressSection, 16);\n    return [(numberValue / 256) | 0, numberValue % 256];\n}\n/**\n * Parse a chunk of an IPv6 address string to some number of bytes\n * @param addressChunk Some number of segments of up to 4 hexadecimal\n *   characters each, joined by colons.\n * @returns The list of bytes representing this address chunk\n */\nfunction parseIPv6Chunk(addressChunk) {\n    if (addressChunk === '') {\n        return [];\n    }\n    const bytePairs = addressChunk\n        .split(':')\n        .map(section => parseIPv6Section(section));\n    const result = [];\n    return result.concat(...bytePairs);\n}\n/**\n * Converts an IPv4 or IPv6 address from string representation to binary\n * representation\n * @param ipAddress an IP address in standard IPv4 or IPv6 text format\n * @returns\n */\nfunction ipAddressStringToBuffer(ipAddress) {\n    if ((0, net_1.isIPv4)(ipAddress)) {\n        return Buffer.from(Uint8Array.from(ipAddress.split('.').map(segment => Number.parseInt(segment))));\n    }\n    else if ((0, net_1.isIPv6)(ipAddress)) {\n        let leftSection;\n        let rightSection;\n        const doubleColonIndex = ipAddress.indexOf('::');\n        if (doubleColonIndex === -1) {\n            leftSection = ipAddress;\n            rightSection = '';\n        }\n        else {\n            leftSection = ipAddress.substring(0, doubleColonIndex);\n            rightSection = ipAddress.substring(doubleColonIndex + 2);\n        }\n        const leftBuffer = Buffer.from(parseIPv6Chunk(leftSection));\n        const rightBuffer = Buffer.from(parseIPv6Chunk(rightSection));\n        const middleBuffer = Buffer.alloc(16 - leftBuffer.length - rightBuffer.length, 0);\n        return Buffer.concat([leftBuffer, middleBuffer, rightBuffer]);\n    }\n    else {\n        return null;\n    }\n}\nfunction connectivityStateToMessage(state) {\n    switch (state) {\n        case connectivity_state_1.ConnectivityState.CONNECTING:\n            return {\n                state: 'CONNECTING',\n            };\n        case connectivity_state_1.ConnectivityState.IDLE:\n            return {\n                state: 'IDLE',\n            };\n        case connectivity_state_1.ConnectivityState.READY:\n            return {\n                state: 'READY',\n            };\n        case connectivity_state_1.ConnectivityState.SHUTDOWN:\n            return {\n                state: 'SHUTDOWN',\n            };\n        case connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE:\n            return {\n                state: 'TRANSIENT_FAILURE',\n            };\n        default:\n            return {\n                state: 'UNKNOWN',\n            };\n    }\n}\nfunction dateToProtoTimestamp(date) {\n    if (!date) {\n        return null;\n    }\n    const millisSinceEpoch = date.getTime();\n    return {\n        seconds: (millisSinceEpoch / 1000) | 0,\n        nanos: (millisSinceEpoch % 1000) * 1000000,\n    };\n}\nfunction getChannelMessage(channelEntry) {\n    const resolvedInfo = channelEntry.getInfo();\n    return {\n        ref: channelRefToMessage(channelEntry.ref),\n        data: {\n            target: resolvedInfo.target,\n            state: connectivityStateToMessage(resolvedInfo.state),\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        channel_ref: resolvedInfo.children.channels.map(ref => channelRefToMessage(ref)),\n        subchannel_ref: resolvedInfo.children.subchannels.map(ref => subchannelRefToMessage(ref)),\n    };\n}\nfunction GetChannel(call, callback) {\n    const channelId = Number.parseInt(call.request.channel_id);\n    const channelEntry = channels[channelId];\n    if (channelEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No channel data found for id ' + channelId,\n        });\n        return;\n    }\n    callback(null, { channel: getChannelMessage(channelEntry) });\n}\nfunction GetTopChannels(call, callback) {\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resultList = [];\n    let i = Number.parseInt(call.request.start_channel_id);\n    for (; i < channels.length; i++) {\n        const channelEntry = channels[i];\n        if (channelEntry === undefined) {\n            continue;\n        }\n        resultList.push(getChannelMessage(channelEntry));\n        if (resultList.length >= maxResults) {\n            break;\n        }\n    }\n    callback(null, {\n        channel: resultList,\n        end: i >= servers.length,\n    });\n}\nfunction getServerMessage(serverEntry) {\n    const resolvedInfo = serverEntry.getInfo();\n    return {\n        ref: serverRefToMessage(serverEntry.ref),\n        data: {\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        listen_socket: resolvedInfo.listenerChildren.sockets.map(ref => socketRefToMessage(ref)),\n    };\n}\nfunction GetServer(call, callback) {\n    const serverId = Number.parseInt(call.request.server_id);\n    const serverEntry = servers[serverId];\n    if (serverEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No server data found for id ' + serverId,\n        });\n        return;\n    }\n    callback(null, { server: getServerMessage(serverEntry) });\n}\nfunction GetServers(call, callback) {\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resultList = [];\n    let i = Number.parseInt(call.request.start_server_id);\n    for (; i < servers.length; i++) {\n        const serverEntry = servers[i];\n        if (serverEntry === undefined) {\n            continue;\n        }\n        resultList.push(getServerMessage(serverEntry));\n        if (resultList.length >= maxResults) {\n            break;\n        }\n    }\n    callback(null, {\n        server: resultList,\n        end: i >= servers.length,\n    });\n}\nfunction GetSubchannel(call, callback) {\n    const subchannelId = Number.parseInt(call.request.subchannel_id);\n    const subchannelEntry = subchannels[subchannelId];\n    if (subchannelEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No subchannel data found for id ' + subchannelId,\n        });\n        return;\n    }\n    const resolvedInfo = subchannelEntry.getInfo();\n    const subchannelMessage = {\n        ref: subchannelRefToMessage(subchannelEntry.ref),\n        data: {\n            target: resolvedInfo.target,\n            state: connectivityStateToMessage(resolvedInfo.state),\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        socket_ref: resolvedInfo.children.sockets.map(ref => socketRefToMessage(ref)),\n    };\n    callback(null, { subchannel: subchannelMessage });\n}\nfunction subchannelAddressToAddressMessage(subchannelAddress) {\n    var _a;\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(subchannelAddress)) {\n        return {\n            address: 'tcpip_address',\n            tcpip_address: {\n                ip_address: (_a = ipAddressStringToBuffer(subchannelAddress.host)) !== null && _a !== void 0 ? _a : undefined,\n                port: subchannelAddress.port,\n            },\n        };\n    }\n    else {\n        return {\n            address: 'uds_address',\n            uds_address: {\n                filename: subchannelAddress.path,\n            },\n        };\n    }\n}\nfunction GetSocket(call, callback) {\n    var _a, _b, _c, _d, _e;\n    const socketId = Number.parseInt(call.request.socket_id);\n    const socketEntry = sockets[socketId];\n    if (socketEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No socket data found for id ' + socketId,\n        });\n        return;\n    }\n    const resolvedInfo = socketEntry.getInfo();\n    const securityMessage = resolvedInfo.security\n        ? {\n            model: 'tls',\n            tls: {\n                cipher_suite: resolvedInfo.security.cipherSuiteStandardName\n                    ? 'standard_name'\n                    : 'other_name',\n                standard_name: (_a = resolvedInfo.security.cipherSuiteStandardName) !== null && _a !== void 0 ? _a : undefined,\n                other_name: (_b = resolvedInfo.security.cipherSuiteOtherName) !== null && _b !== void 0 ? _b : undefined,\n                local_certificate: (_c = resolvedInfo.security.localCertificate) !== null && _c !== void 0 ? _c : undefined,\n                remote_certificate: (_d = resolvedInfo.security.remoteCertificate) !== null && _d !== void 0 ? _d : undefined,\n            },\n        }\n        : null;\n    const socketMessage = {\n        ref: socketRefToMessage(socketEntry.ref),\n        local: resolvedInfo.localAddress\n            ? subchannelAddressToAddressMessage(resolvedInfo.localAddress)\n            : null,\n        remote: resolvedInfo.remoteAddress\n            ? subchannelAddressToAddressMessage(resolvedInfo.remoteAddress)\n            : null,\n        remote_name: (_e = resolvedInfo.remoteName) !== null && _e !== void 0 ? _e : undefined,\n        security: securityMessage,\n        data: {\n            keep_alives_sent: resolvedInfo.keepAlivesSent,\n            streams_started: resolvedInfo.streamsStarted,\n            streams_succeeded: resolvedInfo.streamsSucceeded,\n            streams_failed: resolvedInfo.streamsFailed,\n            last_local_stream_created_timestamp: dateToProtoTimestamp(resolvedInfo.lastLocalStreamCreatedTimestamp),\n            last_remote_stream_created_timestamp: dateToProtoTimestamp(resolvedInfo.lastRemoteStreamCreatedTimestamp),\n            messages_received: resolvedInfo.messagesReceived,\n            messages_sent: resolvedInfo.messagesSent,\n            last_message_received_timestamp: dateToProtoTimestamp(resolvedInfo.lastMessageReceivedTimestamp),\n            last_message_sent_timestamp: dateToProtoTimestamp(resolvedInfo.lastMessageSentTimestamp),\n            local_flow_control_window: resolvedInfo.localFlowControlWindow\n                ? { value: resolvedInfo.localFlowControlWindow }\n                : null,\n            remote_flow_control_window: resolvedInfo.remoteFlowControlWindow\n                ? { value: resolvedInfo.remoteFlowControlWindow }\n                : null,\n        },\n    };\n    callback(null, { socket: socketMessage });\n}\nfunction GetServerSockets(call, callback) {\n    const serverId = Number.parseInt(call.request.server_id);\n    const serverEntry = servers[serverId];\n    if (serverEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No server data found for id ' + serverId,\n        });\n        return;\n    }\n    const startId = Number.parseInt(call.request.start_socket_id);\n    const maxResults = Number.parseInt(call.request.max_results);\n    const resolvedInfo = serverEntry.getInfo();\n    // If we wanted to include listener sockets in the result, this line would\n    // instead say\n    // const allSockets = resolvedInfo.listenerChildren.sockets.concat(resolvedInfo.sessionChildren.sockets).sort((ref1, ref2) => ref1.id - ref2.id);\n    const allSockets = resolvedInfo.sessionChildren.sockets.sort((ref1, ref2) => ref1.id - ref2.id);\n    const resultList = [];\n    let i = 0;\n    for (; i < allSockets.length; i++) {\n        if (allSockets[i].id >= startId) {\n            resultList.push(socketRefToMessage(allSockets[i]));\n            if (resultList.length >= maxResults) {\n                break;\n            }\n        }\n    }\n    callback(null, {\n        socket_ref: resultList,\n        end: i >= allSockets.length,\n    });\n}\nfunction getChannelzHandlers() {\n    return {\n        GetChannel,\n        GetTopChannels,\n        GetServer,\n        GetServers,\n        GetSubchannel,\n        GetSocket,\n        GetServerSockets,\n    };\n}\nexports.getChannelzHandlers = getChannelzHandlers;\nlet loadedChannelzDefinition = null;\nfunction getChannelzServiceDefinition() {\n    if (loadedChannelzDefinition) {\n        return loadedChannelzDefinition;\n    }\n    /* The purpose of this complexity is to avoid loading @grpc/proto-loader at\n     * runtime for users who will not use/enable channelz. */\n    const loaderLoadSync = require('@grpc/proto-loader')\n        .loadSync;\n    const loadedProto = loaderLoadSync('channelz.proto', {\n        keepCase: true,\n        longs: String,\n        enums: String,\n        defaults: true,\n        oneofs: true,\n        includeDirs: [`${__dirname}/../../proto`],\n    });\n    const channelzGrpcObject = (0, make_client_1.loadPackageDefinition)(loadedProto);\n    loadedChannelzDefinition =\n        channelzGrpcObject.grpc.channelz.v1.Channelz.service;\n    return loadedChannelzDefinition;\n}\nexports.getChannelzServiceDefinition = getChannelzServiceDefinition;\nfunction setup() {\n    (0, admin_1.registerAdminService)(getChannelzServiceDefinition, getChannelzHandlers);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Subchannel = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst channelz_1 = require(\"./channelz\");\nconst TRACER_NAME = 'subchannel';\n/* setInterval and setTimeout only accept signed 32 bit integers. JS doesn't\n * have a constant for the max signed 32 bit integer, so this is a simple way\n * to calculate it */\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nclass Subchannel {\n    /**\n     * A class representing a connection to a single backend.\n     * @param channelTarget The target string for the channel as a whole\n     * @param subchannelAddress The address for the backend that this subchannel\n     *     will connect to\n     * @param options The channel options, plus any specific subchannel options\n     *     for this subchannel\n     * @param credentials The channel credentials used to establish this\n     *     connection\n     */\n    constructor(channelTarget, subchannelAddress, options, credentials, connector) {\n        var _a;\n        this.channelTarget = channelTarget;\n        this.subchannelAddress = subchannelAddress;\n        this.options = options;\n        this.credentials = credentials;\n        this.connector = connector;\n        /**\n         * The subchannel's current connectivity state. Invariant: `session` === `null`\n         * if and only if `connectivityState` is IDLE or TRANSIENT_FAILURE.\n         */\n        this.connectivityState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The underlying http2 session used to make requests.\n         */\n        this.transport = null;\n        /**\n         * Indicates that the subchannel should transition from TRANSIENT_FAILURE to\n         * CONNECTING instead of IDLE when the backoff timeout ends.\n         */\n        this.continueConnecting = false;\n        /**\n         * A list of listener functions that will be called whenever the connectivity\n         * state changes. Will be modified by `addConnectivityStateListener` and\n         * `removeConnectivityStateListener`\n         */\n        this.stateListeners = new Set();\n        /**\n         * Tracks channels and subchannel pools with references to this subchannel\n         */\n        this.refcount = 0;\n        // Channelz info\n        this.channelzEnabled = true;\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.childrenTracker = new channelz_1.ChannelzChildrenTracker();\n        // Channelz socket info\n        this.streamTracker = new channelz_1.ChannelzCallTracker();\n        const backoffOptions = {\n            initialDelay: options['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: options['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoffTimeout = new backoff_timeout_1.BackoffTimeout(() => {\n            this.handleBackoffTimer();\n        }, backoffOptions);\n        this.backoffTimeout.unref();\n        this.subchannelAddressString = (0, subchannel_address_1.subchannelAddressToString)(subchannelAddress);\n        this.keepaliveTime = (_a = options['grpc.keepalive_time_ms']) !== null && _a !== void 0 ? _a : -1;\n        if (options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.channelzRef = (0, channelz_1.registerChannelzSubchannel)(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Subchannel created');\n        }\n        this.trace('Subchannel constructed with options ' +\n            JSON.stringify(options, undefined, 2));\n    }\n    getChannelzInfo() {\n        return {\n            state: this.connectivityState,\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            children: this.childrenTracker.getChildLists(),\n            target: this.subchannelAddressString,\n        };\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    refTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'subchannel_refcount', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    handleBackoffTimer() {\n        if (this.continueConnecting) {\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.CONNECTING);\n        }\n        else {\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.IDLE);\n        }\n    }\n    /**\n     * Start a backoff timer with the current nextBackoff timeout\n     */\n    startBackoff() {\n        this.backoffTimeout.runOnce();\n    }\n    stopBackoff() {\n        this.backoffTimeout.stop();\n        this.backoffTimeout.reset();\n    }\n    startConnectingInternal() {\n        let options = this.options;\n        if (options['grpc.keepalive_time_ms']) {\n            const adjustedKeepaliveTime = Math.min(this.keepaliveTime, KEEPALIVE_MAX_TIME_MS);\n            options = Object.assign(Object.assign({}, options), { 'grpc.keepalive_time_ms': adjustedKeepaliveTime });\n        }\n        this.connector\n            .connect(this.subchannelAddress, this.credentials, options)\n            .then(transport => {\n            if (this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING], connectivity_state_1.ConnectivityState.READY)) {\n                this.transport = transport;\n                if (this.channelzEnabled) {\n                    this.childrenTracker.refChild(transport.getChannelzRef());\n                }\n                transport.addDisconnectListener(tooManyPings => {\n                    this.transitionToState([connectivity_state_1.ConnectivityState.READY], connectivity_state_1.ConnectivityState.IDLE);\n                    if (tooManyPings && this.keepaliveTime > 0) {\n                        this.keepaliveTime *= 2;\n                        logging.log(constants_1.LogVerbosity.ERROR, `Connection to ${(0, uri_parser_1.uriToString)(this.channelTarget)} at ${this.subchannelAddressString} rejected by server because of excess pings. Increasing ping interval to ${this.keepaliveTime} ms`);\n                    }\n                });\n            }\n            else {\n                /* If we can't transition from CONNECTING to READY here, we will\n                 * not be using this transport, so release its resources. */\n                transport.shutdown();\n            }\n        }, error => {\n            this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING], connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, `${error}`);\n        });\n    }\n    /**\n     * Initiate a state transition from any element of oldStates to the new\n     * state. If the current connectivityState is not in oldStates, do nothing.\n     * @param oldStates The set of states to transition from\n     * @param newState The state to transition to\n     * @returns True if the state changed, false otherwise\n     */\n    transitionToState(oldStates, newState, errorMessage) {\n        var _a, _b;\n        if (oldStates.indexOf(this.connectivityState) === -1) {\n            return false;\n        }\n        this.trace(connectivity_state_1.ConnectivityState[this.connectivityState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Connectivity state change to ' + connectivity_state_1.ConnectivityState[newState]);\n        }\n        const previousState = this.connectivityState;\n        this.connectivityState = newState;\n        switch (newState) {\n            case connectivity_state_1.ConnectivityState.READY:\n                this.stopBackoff();\n                break;\n            case connectivity_state_1.ConnectivityState.CONNECTING:\n                this.startBackoff();\n                this.startConnectingInternal();\n                this.continueConnecting = false;\n                break;\n            case connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE:\n                if (this.channelzEnabled && this.transport) {\n                    this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n                }\n                (_a = this.transport) === null || _a === void 0 ? void 0 : _a.shutdown();\n                this.transport = null;\n                /* If the backoff timer has already ended by the time we get to the\n                 * TRANSIENT_FAILURE state, we want to immediately transition out of\n                 * TRANSIENT_FAILURE as though the backoff timer is ending right now */\n                if (!this.backoffTimeout.isRunning()) {\n                    process.nextTick(() => {\n                        this.handleBackoffTimer();\n                    });\n                }\n                break;\n            case connectivity_state_1.ConnectivityState.IDLE:\n                if (this.channelzEnabled && this.transport) {\n                    this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n                }\n                (_b = this.transport) === null || _b === void 0 ? void 0 : _b.shutdown();\n                this.transport = null;\n                break;\n            default:\n                throw new Error(`Invalid state: unknown ConnectivityState ${newState}`);\n        }\n        for (const listener of this.stateListeners) {\n            listener(this, previousState, newState, this.keepaliveTime, errorMessage);\n        }\n        return true;\n    }\n    ref() {\n        this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount + 1));\n        this.refcount += 1;\n    }\n    unref() {\n        this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount - 1));\n        this.refcount -= 1;\n        if (this.refcount === 0) {\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Shutting down');\n            }\n            if (this.channelzEnabled) {\n                (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n            }\n            process.nextTick(() => {\n                this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING, connectivity_state_1.ConnectivityState.READY], connectivity_state_1.ConnectivityState.IDLE);\n            });\n        }\n    }\n    unrefIfOneRef() {\n        if (this.refcount === 1) {\n            this.unref();\n            return true;\n        }\n        return false;\n    }\n    createCall(metadata, host, method, listener) {\n        if (!this.transport) {\n            throw new Error('Cannot create call, subchannel not READY');\n        }\n        let statsTracker;\n        if (this.channelzEnabled) {\n            this.callTracker.addCallStarted();\n            this.streamTracker.addCallStarted();\n            statsTracker = {\n                onCallEnd: status => {\n                    if (status.code === constants_1.Status.OK) {\n                        this.callTracker.addCallSucceeded();\n                    }\n                    else {\n                        this.callTracker.addCallFailed();\n                    }\n                },\n            };\n        }\n        else {\n            statsTracker = {};\n        }\n        return this.transport.createCall(metadata, host, method, listener, statsTracker);\n    }\n    /**\n     * If the subchannel is currently IDLE, start connecting and switch to the\n     * CONNECTING state. If the subchannel is current in TRANSIENT_FAILURE,\n     * the next time it would transition to IDLE, start connecting again instead.\n     * Otherwise, do nothing.\n     */\n    startConnecting() {\n        process.nextTick(() => {\n            /* First, try to transition from IDLE to connecting. If that doesn't happen\n             * because the state is not currently IDLE, check if it is\n             * TRANSIENT_FAILURE, and if so indicate that it should go back to\n             * connecting after the backoff timer ends. Otherwise do nothing */\n            if (!this.transitionToState([connectivity_state_1.ConnectivityState.IDLE], connectivity_state_1.ConnectivityState.CONNECTING)) {\n                if (this.connectivityState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                    this.continueConnecting = true;\n                }\n            }\n        });\n    }\n    /**\n     * Get the subchannel's current connectivity state.\n     */\n    getConnectivityState() {\n        return this.connectivityState;\n    }\n    /**\n     * Add a listener function to be called whenever the subchannel's\n     * connectivity state changes.\n     * @param listener\n     */\n    addConnectivityStateListener(listener) {\n        this.stateListeners.add(listener);\n    }\n    /**\n     * Remove a listener previously added with `addConnectivityStateListener`\n     * @param listener A reference to a function previously passed to\n     *     `addConnectivityStateListener`\n     */\n    removeConnectivityStateListener(listener) {\n        this.stateListeners.delete(listener);\n    }\n    /**\n     * Reset the backoff timeout, and immediately start connecting if in backoff.\n     */\n    resetBackoff() {\n        process.nextTick(() => {\n            this.backoffTimeout.reset();\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.CONNECTING);\n        });\n    }\n    getAddress() {\n        return this.subchannelAddressString;\n    }\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    getRealSubchannel() {\n        return this;\n    }\n    realSubchannelEquals(other) {\n        return other.getRealSubchannel() === this;\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        if (newKeepaliveTime > this.keepaliveTime) {\n            this.keepaliveTime = newKeepaliveTime;\n        }\n    }\n}\nexports.Subchannel = Subchannel;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.DEFAULT_PORT = void 0;\nconst resolver_1 = require(\"./resolver\");\nconst dns = require(\"dns\");\nconst util = require(\"util\");\nconst service_config_1 = require(\"./service-config\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst net_1 = require(\"net\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst TRACER_NAME = 'dns_resolver';\nfunction trace(text) {\n    logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nexports.DEFAULT_PORT = 443;\nconst DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS = 30000;\nconst resolveTxtPromise = util.promisify(dns.resolveTxt);\nconst dnsLookupPromise = util.promisify(dns.lookup);\n/**\n * Merge any number of arrays into a single alternating array\n * @param arrays\n */\nfunction mergeArrays(...arrays) {\n    const result = [];\n    for (let i = 0; i <\n        Math.max.apply(null, arrays.map(array => array.length)); i++) {\n        for (const array of arrays) {\n            if (i < array.length) {\n                result.push(array[i]);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Resolver implementation that handles DNS names and IP addresses.\n */\nclass DnsResolver {\n    constructor(target, listener, channelOptions) {\n        var _a, _b, _c;\n        this.target = target;\n        this.listener = listener;\n        this.pendingLookupPromise = null;\n        this.pendingTxtPromise = null;\n        this.latestLookupResult = null;\n        this.latestServiceConfig = null;\n        this.latestServiceConfigError = null;\n        this.continueResolving = false;\n        this.isNextResolutionTimerRunning = false;\n        this.isServiceConfigEnabled = true;\n        this.returnedIpResult = false;\n        trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n        const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n        if (hostPort === null) {\n            this.ipResult = null;\n            this.dnsHostname = null;\n            this.port = null;\n        }\n        else {\n            if ((0, net_1.isIPv4)(hostPort.host) || (0, net_1.isIPv6)(hostPort.host)) {\n                this.ipResult = [\n                    {\n                        host: hostPort.host,\n                        port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : exports.DEFAULT_PORT,\n                    },\n                ];\n                this.dnsHostname = null;\n                this.port = null;\n            }\n            else {\n                this.ipResult = null;\n                this.dnsHostname = hostPort.host;\n                this.port = (_b = hostPort.port) !== null && _b !== void 0 ? _b : exports.DEFAULT_PORT;\n            }\n        }\n        this.percentage = Math.random() * 100;\n        if (channelOptions['grpc.service_config_disable_resolution'] === 1) {\n            this.isServiceConfigEnabled = false;\n        }\n        this.defaultResolutionError = {\n            code: constants_1.Status.UNAVAILABLE,\n            details: `Name resolution failed for target ${(0, uri_parser_1.uriToString)(this.target)}`,\n            metadata: new metadata_1.Metadata(),\n        };\n        const backoffOptions = {\n            initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoff = new backoff_timeout_1.BackoffTimeout(() => {\n            if (this.continueResolving) {\n                this.startResolutionWithBackoff();\n            }\n        }, backoffOptions);\n        this.backoff.unref();\n        this.minTimeBetweenResolutionsMs =\n            (_c = channelOptions['grpc.dns_min_time_between_resolutions_ms']) !== null && _c !== void 0 ? _c : DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS;\n        this.nextResolutionTimer = setTimeout(() => { }, 0);\n        clearTimeout(this.nextResolutionTimer);\n    }\n    /**\n     * If the target is an IP address, just provide that address as a result.\n     * Otherwise, initiate A, AAAA, and TXT lookups\n     */\n    startResolution() {\n        if (this.ipResult !== null) {\n            if (!this.returnedIpResult) {\n                trace('Returning IP address for target ' + (0, uri_parser_1.uriToString)(this.target));\n                setImmediate(() => {\n                    this.listener.onSuccessfulResolution(this.ipResult, null, null, null, {});\n                });\n                this.returnedIpResult = true;\n            }\n            this.backoff.stop();\n            this.backoff.reset();\n            this.stopNextResolutionTimer();\n            return;\n        }\n        if (this.dnsHostname === null) {\n            trace('Failed to parse DNS address ' + (0, uri_parser_1.uriToString)(this.target));\n            setImmediate(() => {\n                this.listener.onError({\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse DNS address ${(0, uri_parser_1.uriToString)(this.target)}`,\n                    metadata: new metadata_1.Metadata(),\n                });\n            });\n            this.stopNextResolutionTimer();\n        }\n        else {\n            if (this.pendingLookupPromise !== null) {\n                return;\n            }\n            trace('Looking up DNS hostname ' + this.dnsHostname);\n            /* We clear out latestLookupResult here to ensure that it contains the\n             * latest result since the last time we started resolving. That way, the\n             * TXT resolution handler can use it, but only if it finishes second. We\n             * don't clear out any previous service config results because it's\n             * better to use a service config that's slightly out of date than to\n             * revert to an effectively blank one. */\n            this.latestLookupResult = null;\n            const hostname = this.dnsHostname;\n            /* We lookup both address families here and then split them up later\n             * because when looking up a single family, dns.lookup outputs an error\n             * if the name exists but there are no records for that family, and that\n             * error is indistinguishable from other kinds of errors */\n            this.pendingLookupPromise = dnsLookupPromise(hostname, { all: true });\n            this.pendingLookupPromise.then(addressList => {\n                if (this.pendingLookupPromise === null) {\n                    return;\n                }\n                this.pendingLookupPromise = null;\n                this.backoff.reset();\n                this.backoff.stop();\n                const ip4Addresses = addressList.filter(addr => addr.family === 4);\n                const ip6Addresses = addressList.filter(addr => addr.family === 6);\n                this.latestLookupResult = mergeArrays(ip6Addresses, ip4Addresses).map(addr => ({ host: addr.address, port: +this.port }));\n                const allAddressesString = '[' +\n                    this.latestLookupResult\n                        .map(addr => addr.host + ':' + addr.port)\n                        .join(',') +\n                    ']';\n                trace('Resolved addresses for target ' +\n                    (0, uri_parser_1.uriToString)(this.target) +\n                    ': ' +\n                    allAddressesString);\n                if (this.latestLookupResult.length === 0) {\n                    this.listener.onError(this.defaultResolutionError);\n                    return;\n                }\n                /* If the TXT lookup has not yet finished, both of the last two\n                 * arguments will be null, which is the equivalent of getting an\n                 * empty TXT response. When the TXT lookup does finish, its handler\n                 * can update the service config by using the same address list */\n                this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {});\n            }, err => {\n                if (this.pendingLookupPromise === null) {\n                    return;\n                }\n                trace('Resolution error for target ' +\n                    (0, uri_parser_1.uriToString)(this.target) +\n                    ': ' +\n                    err.message);\n                this.pendingLookupPromise = null;\n                this.stopNextResolutionTimer();\n                this.listener.onError(this.defaultResolutionError);\n            });\n            /* If there already is a still-pending TXT resolution, we can just use\n             * that result when it comes in */\n            if (this.isServiceConfigEnabled && this.pendingTxtPromise === null) {\n                /* We handle the TXT query promise differently than the others because\n                 * the name resolution attempt as a whole is a success even if the TXT\n                 * lookup fails */\n                this.pendingTxtPromise = resolveTxtPromise(hostname);\n                this.pendingTxtPromise.then(txtRecord => {\n                    if (this.pendingTxtPromise === null) {\n                        return;\n                    }\n                    this.pendingTxtPromise = null;\n                    try {\n                        this.latestServiceConfig = (0, service_config_1.extractAndSelectServiceConfig)(txtRecord, this.percentage);\n                    }\n                    catch (err) {\n                        this.latestServiceConfigError = {\n                            code: constants_1.Status.UNAVAILABLE,\n                            details: `Parsing service config failed with error ${err.message}`,\n                            metadata: new metadata_1.Metadata(),\n                        };\n                    }\n                    if (this.latestLookupResult !== null) {\n                        /* We rely here on the assumption that calling this function with\n                         * identical parameters will be essentialy idempotent, and calling\n                         * it with the same address list and a different service config\n                         * should result in a fast and seamless switchover. */\n                        this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {});\n                    }\n                }, err => {\n                    /* If TXT lookup fails we should do nothing, which means that we\n                     * continue to use the result of the most recent successful lookup,\n                     * or the default null config object if there has never been a\n                     * successful lookup. We do not set the latestServiceConfigError\n                     * here because that is specifically used for response validation\n                     * errors. We still need to handle this error so that it does not\n                     * bubble up as an unhandled promise rejection. */\n                });\n            }\n        }\n    }\n    startNextResolutionTimer() {\n        var _a, _b;\n        clearTimeout(this.nextResolutionTimer);\n        this.nextResolutionTimer = (_b = (_a = setTimeout(() => {\n            this.stopNextResolutionTimer();\n            if (this.continueResolving) {\n                this.startResolutionWithBackoff();\n            }\n        }, this.minTimeBetweenResolutionsMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.isNextResolutionTimerRunning = true;\n    }\n    stopNextResolutionTimer() {\n        clearTimeout(this.nextResolutionTimer);\n        this.isNextResolutionTimerRunning = false;\n    }\n    startResolutionWithBackoff() {\n        if (this.pendingLookupPromise === null) {\n            this.continueResolving = false;\n            this.backoff.runOnce();\n            this.startNextResolutionTimer();\n            this.startResolution();\n        }\n    }\n    updateResolution() {\n        /* If there is a pending lookup, just let it finish. Otherwise, if the\n         * nextResolutionTimer or backoff timer is running, set the\n         * continueResolving flag to resolve when whichever of those timers\n         * fires. Otherwise, start resolving immediately. */\n        if (this.pendingLookupPromise === null) {\n            if (this.isNextResolutionTimerRunning || this.backoff.isRunning()) {\n                if (this.isNextResolutionTimerRunning) {\n                    trace('resolution update delayed by \"min time between resolutions\" rate limit');\n                }\n                else {\n                    trace('resolution update delayed by backoff timer until ' + this.backoff.getEndTime().toISOString());\n                }\n                this.continueResolving = true;\n            }\n            else {\n                this.startResolutionWithBackoff();\n            }\n        }\n    }\n    /**\n     * Reset the resolver to the same state it had when it was created. In-flight\n     * DNS requests cannot be cancelled, but they are discarded and their results\n     * will be ignored.\n     */\n    destroy() {\n        this.continueResolving = false;\n        this.backoff.reset();\n        this.backoff.stop();\n        this.stopNextResolutionTimer();\n        this.pendingLookupPromise = null;\n        this.pendingTxtPromise = null;\n        this.latestLookupResult = null;\n        this.latestServiceConfig = null;\n        this.latestServiceConfigError = null;\n        this.returnedIpResult = false;\n    }\n    /**\n     * Get the default authority for the given target. For IP targets, that is\n     * the IP address. For DNS targets, it is the hostname.\n     * @param target\n     */\n    static getDefaultAuthority(target) {\n        return target.path;\n    }\n}\n/**\n * Set up the DNS resolver class by registering it as the handler for the\n * \"dns:\" prefix and as the default resolver.\n */\nfunction setup() {\n    (0, resolver_1.registerResolver)('dns', DnsResolver);\n    (0, resolver_1.registerDefaultScheme)('dns');\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProxiedConnection = exports.mapProxyName = void 0;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst resolver_1 = require(\"./resolver\");\nconst http = require(\"http\");\nconst tls = require(\"tls\");\nconst logging = require(\"./logging\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst url_1 = require(\"url\");\nconst resolver_dns_1 = require(\"./resolver-dns\");\nconst TRACER_NAME = 'proxy';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nfunction getProxyInfo() {\n    let proxyEnv = '';\n    let envVar = '';\n    /* Prefer using 'grpc_proxy'. Fallback on 'http_proxy' if it is not set.\n     * Also prefer using 'https_proxy' with fallback on 'http_proxy'. The\n     * fallback behavior can be removed if there's a demand for it.\n     */\n    if (process.env.grpc_proxy) {\n        envVar = 'grpc_proxy';\n        proxyEnv = process.env.grpc_proxy;\n    }\n    else if (process.env.https_proxy) {\n        envVar = 'https_proxy';\n        proxyEnv = process.env.https_proxy;\n    }\n    else if (process.env.http_proxy) {\n        envVar = 'http_proxy';\n        proxyEnv = process.env.http_proxy;\n    }\n    else {\n        return {};\n    }\n    let proxyUrl;\n    try {\n        proxyUrl = new url_1.URL(proxyEnv);\n    }\n    catch (e) {\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `cannot parse value of \"${envVar}\" env var`);\n        return {};\n    }\n    if (proxyUrl.protocol !== 'http:') {\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `\"${proxyUrl.protocol}\" scheme not supported in proxy URI`);\n        return {};\n    }\n    let userCred = null;\n    if (proxyUrl.username) {\n        if (proxyUrl.password) {\n            (0, logging_1.log)(constants_1.LogVerbosity.INFO, 'userinfo found in proxy URI');\n            userCred = `${proxyUrl.username}:${proxyUrl.password}`;\n        }\n        else {\n            userCred = proxyUrl.username;\n        }\n    }\n    const hostname = proxyUrl.hostname;\n    let port = proxyUrl.port;\n    /* The proxy URL uses the scheme \"http:\", which has a default port number of\n     * 80. We need to set that explicitly here if it is omitted because otherwise\n     * it will use gRPC's default port 443. */\n    if (port === '') {\n        port = '80';\n    }\n    const result = {\n        address: `${hostname}:${port}`,\n    };\n    if (userCred) {\n        result.creds = userCred;\n    }\n    trace('Proxy server ' + result.address + ' set by environment variable ' + envVar);\n    return result;\n}\nfunction getNoProxyHostList() {\n    /* Prefer using 'no_grpc_proxy'. Fallback on 'no_proxy' if it is not set. */\n    let noProxyStr = process.env.no_grpc_proxy;\n    let envVar = 'no_grpc_proxy';\n    if (!noProxyStr) {\n        noProxyStr = process.env.no_proxy;\n        envVar = 'no_proxy';\n    }\n    if (noProxyStr) {\n        trace('No proxy server list set by environment variable ' + envVar);\n        return noProxyStr.split(',');\n    }\n    else {\n        return [];\n    }\n}\nfunction mapProxyName(target, options) {\n    var _a;\n    const noProxyResult = {\n        target: target,\n        extraOptions: {},\n    };\n    if (((_a = options['grpc.enable_http_proxy']) !== null && _a !== void 0 ? _a : 1) === 0) {\n        return noProxyResult;\n    }\n    if (target.scheme === 'unix') {\n        return noProxyResult;\n    }\n    const proxyInfo = getProxyInfo();\n    if (!proxyInfo.address) {\n        return noProxyResult;\n    }\n    const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n    if (!hostPort) {\n        return noProxyResult;\n    }\n    const serverHost = hostPort.host;\n    for (const host of getNoProxyHostList()) {\n        if (host === serverHost) {\n            trace('Not using proxy for target in no_proxy list: ' + (0, uri_parser_1.uriToString)(target));\n            return noProxyResult;\n        }\n    }\n    const extraOptions = {\n        'grpc.http_connect_target': (0, uri_parser_1.uriToString)(target),\n    };\n    if (proxyInfo.creds) {\n        extraOptions['grpc.http_connect_creds'] = proxyInfo.creds;\n    }\n    return {\n        target: {\n            scheme: 'dns',\n            path: proxyInfo.address,\n        },\n        extraOptions: extraOptions,\n    };\n}\nexports.mapProxyName = mapProxyName;\nfunction getProxiedConnection(address, channelOptions, connectionOptions) {\n    var _a;\n    if (!('grpc.http_connect_target' in channelOptions)) {\n        return Promise.resolve({});\n    }\n    const realTarget = channelOptions['grpc.http_connect_target'];\n    const parsedTarget = (0, uri_parser_1.parseUri)(realTarget);\n    if (parsedTarget === null) {\n        return Promise.resolve({});\n    }\n    const splitHostPost = (0, uri_parser_1.splitHostPort)(parsedTarget.path);\n    if (splitHostPost === null) {\n        return Promise.resolve({});\n    }\n    const hostPort = `${splitHostPost.host}:${(_a = splitHostPost.port) !== null && _a !== void 0 ? _a : resolver_dns_1.DEFAULT_PORT}`;\n    const options = {\n        method: 'CONNECT',\n        path: hostPort,\n    };\n    const headers = {\n        Host: hostPort,\n    };\n    // Connect to the subchannel address as a proxy\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(address)) {\n        options.host = address.host;\n        options.port = address.port;\n    }\n    else {\n        options.socketPath = address.path;\n    }\n    if ('grpc.http_connect_creds' in channelOptions) {\n        headers['Proxy-Authorization'] =\n            'Basic ' +\n                Buffer.from(channelOptions['grpc.http_connect_creds']).toString('base64');\n    }\n    options.headers = headers;\n    const proxyAddressString = (0, subchannel_address_1.subchannelAddressToString)(address);\n    trace('Using proxy ' + proxyAddressString + ' to connect to ' + options.path);\n    return new Promise((resolve, reject) => {\n        const request = http.request(options);\n        request.once('connect', (res, socket, head) => {\n            var _a;\n            request.removeAllListeners();\n            socket.removeAllListeners();\n            if (res.statusCode === 200) {\n                trace('Successfully connected to ' +\n                    options.path +\n                    ' through proxy ' +\n                    proxyAddressString);\n                if ('secureContext' in connectionOptions) {\n                    /* The proxy is connecting to a TLS server, so upgrade this socket\n                     * connection to a TLS connection.\n                     * This is a workaround for https://github.com/nodejs/node/issues/32922\n                     * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n                    const targetPath = (0, resolver_1.getDefaultAuthority)(parsedTarget);\n                    const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n                    const remoteHost = (_a = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _a !== void 0 ? _a : targetPath;\n                    const cts = tls.connect(Object.assign({ host: remoteHost, servername: remoteHost, socket: socket }, connectionOptions), () => {\n                        trace('Successfully established a TLS connection to ' +\n                            options.path +\n                            ' through proxy ' +\n                            proxyAddressString);\n                        resolve({ socket: cts, realTarget: parsedTarget });\n                    });\n                    cts.on('error', (error) => {\n                        trace('Failed to establish a TLS connection to ' +\n                            options.path +\n                            ' through proxy ' +\n                            proxyAddressString +\n                            ' with error ' +\n                            error.message);\n                        reject();\n                    });\n                }\n                else {\n                    trace('Successfully established a plaintext connection to ' +\n                        options.path +\n                        ' through proxy ' +\n                        proxyAddressString);\n                    resolve({\n                        socket,\n                        realTarget: parsedTarget,\n                    });\n                }\n            }\n            else {\n                (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to ' +\n                    options.path +\n                    ' through proxy ' +\n                    proxyAddressString +\n                    ' with status ' +\n                    res.statusCode);\n                reject();\n            }\n        });\n        request.once('error', err => {\n            request.removeAllListeners();\n            (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to proxy ' +\n                proxyAddressString +\n                ' with error ' +\n                err.message);\n            reject();\n        });\n        request.end();\n    });\n}\nexports.getProxiedConnection = getProxiedConnection;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamDecoder = void 0;\nvar ReadState;\n(function (ReadState) {\n    ReadState[ReadState[\"NO_DATA\"] = 0] = \"NO_DATA\";\n    ReadState[ReadState[\"READING_SIZE\"] = 1] = \"READING_SIZE\";\n    ReadState[ReadState[\"READING_MESSAGE\"] = 2] = \"READING_MESSAGE\";\n})(ReadState || (ReadState = {}));\nclass StreamDecoder {\n    constructor(maxReadMessageLength) {\n        this.maxReadMessageLength = maxReadMessageLength;\n        this.readState = ReadState.NO_DATA;\n        this.readCompressFlag = Buffer.alloc(1);\n        this.readPartialSize = Buffer.alloc(4);\n        this.readSizeRemaining = 4;\n        this.readMessageSize = 0;\n        this.readPartialMessage = [];\n        this.readMessageRemaining = 0;\n    }\n    write(data) {\n        let readHead = 0;\n        let toRead;\n        const result = [];\n        while (readHead < data.length) {\n            switch (this.readState) {\n                case ReadState.NO_DATA:\n                    this.readCompressFlag = data.slice(readHead, readHead + 1);\n                    readHead += 1;\n                    this.readState = ReadState.READING_SIZE;\n                    this.readPartialSize.fill(0);\n                    this.readSizeRemaining = 4;\n                    this.readMessageSize = 0;\n                    this.readMessageRemaining = 0;\n                    this.readPartialMessage = [];\n                    break;\n                case ReadState.READING_SIZE:\n                    toRead = Math.min(data.length - readHead, this.readSizeRemaining);\n                    data.copy(this.readPartialSize, 4 - this.readSizeRemaining, readHead, readHead + toRead);\n                    this.readSizeRemaining -= toRead;\n                    readHead += toRead;\n                    // readSizeRemaining >=0 here\n                    if (this.readSizeRemaining === 0) {\n                        this.readMessageSize = this.readPartialSize.readUInt32BE(0);\n                        if (this.maxReadMessageLength !== -1 && this.readMessageSize > this.maxReadMessageLength) {\n                            throw new Error(`Received message larger than max (${this.readMessageSize} vs ${this.maxReadMessageLength})`);\n                        }\n                        this.readMessageRemaining = this.readMessageSize;\n                        if (this.readMessageRemaining > 0) {\n                            this.readState = ReadState.READING_MESSAGE;\n                        }\n                        else {\n                            const message = Buffer.concat([this.readCompressFlag, this.readPartialSize], 5);\n                            this.readState = ReadState.NO_DATA;\n                            result.push(message);\n                        }\n                    }\n                    break;\n                case ReadState.READING_MESSAGE:\n                    toRead = Math.min(data.length - readHead, this.readMessageRemaining);\n                    this.readPartialMessage.push(data.slice(readHead, readHead + toRead));\n                    this.readMessageRemaining -= toRead;\n                    readHead += toRead;\n                    // readMessageRemaining >=0 here\n                    if (this.readMessageRemaining === 0) {\n                        // At this point, we have read a full message\n                        const framedMessageBuffers = [\n                            this.readCompressFlag,\n                            this.readPartialSize,\n                        ].concat(this.readPartialMessage);\n                        const framedMessage = Buffer.concat(framedMessageBuffers, this.readMessageSize + 5);\n                        this.readState = ReadState.NO_DATA;\n                        result.push(framedMessage);\n                    }\n                    break;\n                default:\n                    throw new Error('Unexpected read state');\n            }\n        }\n        return result;\n    }\n}\nexports.StreamDecoder = StreamDecoder;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SubchannelCall = void 0;\nconst http2 = require(\"http2\");\nconst os = require(\"os\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst stream_decoder_1 = require(\"./stream-decoder\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst TRACER_NAME = 'subchannel_call';\n/**\n * Should do approximately the same thing as util.getSystemErrorName but the\n * TypeScript types don't have that function for some reason so I just made my\n * own.\n * @param errno\n */\nfunction getSystemErrorName(errno) {\n    for (const [name, num] of Object.entries(os.constants.errno)) {\n        if (num === errno) {\n            return name;\n        }\n    }\n    return 'Unknown system error ' + errno;\n}\nclass Http2SubchannelCall {\n    constructor(http2Stream, callEventTracker, listener, transport, callId) {\n        var _a;\n        this.http2Stream = http2Stream;\n        this.callEventTracker = callEventTracker;\n        this.listener = listener;\n        this.transport = transport;\n        this.callId = callId;\n        this.isReadFilterPending = false;\n        this.isPushPending = false;\n        this.canPush = false;\n        /**\n         * Indicates that an 'end' event has come from the http2 stream, so there\n         * will be no more data events.\n         */\n        this.readsClosed = false;\n        this.statusOutput = false;\n        this.unpushedReadMessages = [];\n        // Status code mapped from :status. To be used if grpc-status is not received\n        this.mappedStatusCode = constants_1.Status.UNKNOWN;\n        // This is populated (non-null) if and only if the call has ended\n        this.finalStatus = null;\n        this.internalError = null;\n        const maxReceiveMessageLength = (_a = transport.getOptions()['grpc.max_receive_message_length']) !== null && _a !== void 0 ? _a : constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        this.decoder = new stream_decoder_1.StreamDecoder(maxReceiveMessageLength);\n        http2Stream.on('response', (headers, flags) => {\n            let headersString = '';\n            for (const header of Object.keys(headers)) {\n                headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n            }\n            this.trace('Received server headers:\\n' + headersString);\n            switch (headers[':status']) {\n                // TODO(murgatroid99): handle 100 and 101\n                case 400:\n                    this.mappedStatusCode = constants_1.Status.INTERNAL;\n                    break;\n                case 401:\n                    this.mappedStatusCode = constants_1.Status.UNAUTHENTICATED;\n                    break;\n                case 403:\n                    this.mappedStatusCode = constants_1.Status.PERMISSION_DENIED;\n                    break;\n                case 404:\n                    this.mappedStatusCode = constants_1.Status.UNIMPLEMENTED;\n                    break;\n                case 429:\n                case 502:\n                case 503:\n                case 504:\n                    this.mappedStatusCode = constants_1.Status.UNAVAILABLE;\n                    break;\n                default:\n                    this.mappedStatusCode = constants_1.Status.UNKNOWN;\n            }\n            if (flags & http2.constants.NGHTTP2_FLAG_END_STREAM) {\n                this.handleTrailers(headers);\n            }\n            else {\n                let metadata;\n                try {\n                    metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n                }\n                catch (error) {\n                    this.endCall({\n                        code: constants_1.Status.UNKNOWN,\n                        details: error.message,\n                        metadata: new metadata_1.Metadata(),\n                    });\n                    return;\n                }\n                this.listener.onReceiveMetadata(metadata);\n            }\n        });\n        http2Stream.on('trailers', (headers) => {\n            this.handleTrailers(headers);\n        });\n        http2Stream.on('data', (data) => {\n            /* If the status has already been output, allow the http2 stream to\n             * drain without processing the data. */\n            if (this.statusOutput) {\n                return;\n            }\n            this.trace('receive HTTP/2 data frame of length ' + data.length);\n            let messages;\n            try {\n                messages = this.decoder.write(data);\n            }\n            catch (e) {\n                this.cancelWithStatus(constants_1.Status.RESOURCE_EXHAUSTED, e.message);\n                return;\n            }\n            for (const message of messages) {\n                this.trace('parsed message of length ' + message.length);\n                this.callEventTracker.addMessageReceived();\n                this.tryPush(message);\n            }\n        });\n        http2Stream.on('end', () => {\n            this.readsClosed = true;\n            this.maybeOutputStatus();\n        });\n        http2Stream.on('close', () => {\n            /* Use process.next tick to ensure that this code happens after any\n             * \"error\" event that may be emitted at about the same time, so that\n             * we can bubble up the error message from that event. */\n            process.nextTick(() => {\n                var _a;\n                this.trace('HTTP/2 stream closed with code ' + http2Stream.rstCode);\n                /* If we have a final status with an OK status code, that means that\n                 * we have received all of the messages and we have processed the\n                 * trailers and the call completed successfully, so it doesn't matter\n                 * how the stream ends after that */\n                if (((_a = this.finalStatus) === null || _a === void 0 ? void 0 : _a.code) === constants_1.Status.OK) {\n                    return;\n                }\n                let code;\n                let details = '';\n                switch (http2Stream.rstCode) {\n                    case http2.constants.NGHTTP2_NO_ERROR:\n                        /* If we get a NO_ERROR code and we already have a status, the\n                         * stream completed properly and we just haven't fully processed\n                         * it yet */\n                        if (this.finalStatus !== null) {\n                            return;\n                        }\n                        code = constants_1.Status.INTERNAL;\n                        details = `Received RST_STREAM with code ${http2Stream.rstCode}`;\n                        break;\n                    case http2.constants.NGHTTP2_REFUSED_STREAM:\n                        code = constants_1.Status.UNAVAILABLE;\n                        details = 'Stream refused by server';\n                        break;\n                    case http2.constants.NGHTTP2_CANCEL:\n                        code = constants_1.Status.CANCELLED;\n                        details = 'Call cancelled';\n                        break;\n                    case http2.constants.NGHTTP2_ENHANCE_YOUR_CALM:\n                        code = constants_1.Status.RESOURCE_EXHAUSTED;\n                        details = 'Bandwidth exhausted or memory limit exceeded';\n                        break;\n                    case http2.constants.NGHTTP2_INADEQUATE_SECURITY:\n                        code = constants_1.Status.PERMISSION_DENIED;\n                        details = 'Protocol not secure enough';\n                        break;\n                    case http2.constants.NGHTTP2_INTERNAL_ERROR:\n                        code = constants_1.Status.INTERNAL;\n                        if (this.internalError === null) {\n                            /* This error code was previously handled in the default case, and\n                             * there are several instances of it online, so I wanted to\n                             * preserve the original error message so that people find existing\n                             * information in searches, but also include the more recognizable\n                             * \"Internal server error\" message. */\n                            details = `Received RST_STREAM with code ${http2Stream.rstCode} (Internal server error)`;\n                        }\n                        else {\n                            if (this.internalError.code === 'ECONNRESET' ||\n                                this.internalError.code === 'ETIMEDOUT') {\n                                code = constants_1.Status.UNAVAILABLE;\n                                details = this.internalError.message;\n                            }\n                            else {\n                                /* The \"Received RST_STREAM with code ...\" error is preserved\n                                 * here for continuity with errors reported online, but the\n                                 * error message at the end will probably be more relevant in\n                                 * most cases. */\n                                details = `Received RST_STREAM with code ${http2Stream.rstCode} triggered by internal client error: ${this.internalError.message}`;\n                            }\n                        }\n                        break;\n                    default:\n                        code = constants_1.Status.INTERNAL;\n                        details = `Received RST_STREAM with code ${http2Stream.rstCode}`;\n                }\n                // This is a no-op if trailers were received at all.\n                // This is OK, because status codes emitted here correspond to more\n                // catastrophic issues that prevent us from receiving trailers in the\n                // first place.\n                this.endCall({\n                    code,\n                    details,\n                    metadata: new metadata_1.Metadata(),\n                    rstCode: http2Stream.rstCode,\n                });\n            });\n        });\n        http2Stream.on('error', (err) => {\n            /* We need an error handler here to stop \"Uncaught Error\" exceptions\n             * from bubbling up. However, errors here should all correspond to\n             * \"close\" events, where we will handle the error more granularly */\n            /* Specifically looking for stream errors that were *not* constructed\n             * from a RST_STREAM response here:\n             * https://github.com/nodejs/node/blob/8b8620d580314050175983402dfddf2674e8e22a/lib/internal/http2/core.js#L2267\n             */\n            if (err.code !== 'ERR_HTTP2_STREAM_ERROR') {\n                this.trace('Node error event: message=' +\n                    err.message +\n                    ' code=' +\n                    err.code +\n                    ' errno=' +\n                    getSystemErrorName(err.errno) +\n                    ' syscall=' +\n                    err.syscall);\n                this.internalError = err;\n            }\n            this.callEventTracker.onStreamEnd(false);\n        });\n    }\n    onDisconnect() {\n        this.endCall({\n            code: constants_1.Status.UNAVAILABLE,\n            details: 'Connection dropped',\n            metadata: new metadata_1.Metadata(),\n        });\n    }\n    outputStatus() {\n        /* Precondition: this.finalStatus !== null */\n        if (!this.statusOutput) {\n            this.statusOutput = true;\n            this.trace('ended with status: code=' +\n                this.finalStatus.code +\n                ' details=\"' +\n                this.finalStatus.details +\n                '\"');\n            this.callEventTracker.onCallEnd(this.finalStatus);\n            /* We delay the actual action of bubbling up the status to insulate the\n             * cleanup code in this class from any errors that may be thrown in the\n             * upper layers as a result of bubbling up the status. In particular,\n             * if the status is not OK, the \"error\" event may be emitted\n             * synchronously at the top level, which will result in a thrown error if\n             * the user does not handle that event. */\n            process.nextTick(() => {\n                this.listener.onReceiveStatus(this.finalStatus);\n            });\n            /* Leave the http2 stream in flowing state to drain incoming messages, to\n             * ensure that the stream closure completes. The call stream already does\n             * not push more messages after the status is output, so the messages go\n             * nowhere either way. */\n            this.http2Stream.resume();\n        }\n    }\n    trace(text) {\n        logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callId + '] ' + text);\n    }\n    /**\n     * On first call, emits a 'status' event with the given StatusObject.\n     * Subsequent calls are no-ops.\n     * @param status The status of the call.\n     */\n    endCall(status) {\n        /* If the status is OK and a new status comes in (e.g. from a\n         * deserialization failure), that new status takes priority */\n        if (this.finalStatus === null || this.finalStatus.code === constants_1.Status.OK) {\n            this.finalStatus = status;\n            this.maybeOutputStatus();\n        }\n        this.destroyHttp2Stream();\n    }\n    maybeOutputStatus() {\n        if (this.finalStatus !== null) {\n            /* The combination check of readsClosed and that the two message buffer\n             * arrays are empty checks that there all incoming data has been fully\n             * processed */\n            if (this.finalStatus.code !== constants_1.Status.OK ||\n                (this.readsClosed &&\n                    this.unpushedReadMessages.length === 0 &&\n                    !this.isReadFilterPending &&\n                    !this.isPushPending)) {\n                this.outputStatus();\n            }\n        }\n    }\n    push(message) {\n        this.trace('pushing to reader message of length ' +\n            (message instanceof Buffer ? message.length : null));\n        this.canPush = false;\n        this.isPushPending = true;\n        process.nextTick(() => {\n            this.isPushPending = false;\n            /* If we have already output the status any later messages should be\n             * ignored, and can cause out-of-order operation errors higher up in the\n             * stack. Checking as late as possible here to avoid any race conditions.\n             */\n            if (this.statusOutput) {\n                return;\n            }\n            this.listener.onReceiveMessage(message);\n            this.maybeOutputStatus();\n        });\n    }\n    tryPush(messageBytes) {\n        if (this.canPush) {\n            this.http2Stream.pause();\n            this.push(messageBytes);\n        }\n        else {\n            this.trace('unpushedReadMessages.push message of length ' + messageBytes.length);\n            this.unpushedReadMessages.push(messageBytes);\n        }\n    }\n    handleTrailers(headers) {\n        this.callEventTracker.onStreamEnd(true);\n        let headersString = '';\n        for (const header of Object.keys(headers)) {\n            headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n        }\n        this.trace('Received server trailers:\\n' + headersString);\n        let metadata;\n        try {\n            metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n        }\n        catch (e) {\n            metadata = new metadata_1.Metadata();\n        }\n        const metadataMap = metadata.getMap();\n        let code = this.mappedStatusCode;\n        if (code === constants_1.Status.UNKNOWN &&\n            typeof metadataMap['grpc-status'] === 'string') {\n            const receivedStatus = Number(metadataMap['grpc-status']);\n            if (receivedStatus in constants_1.Status) {\n                code = receivedStatus;\n                this.trace('received status code ' + receivedStatus + ' from server');\n            }\n            metadata.remove('grpc-status');\n        }\n        let details = '';\n        if (typeof metadataMap['grpc-message'] === 'string') {\n            try {\n                details = decodeURI(metadataMap['grpc-message']);\n            }\n            catch (e) {\n                details = metadataMap['grpc-message'];\n            }\n            metadata.remove('grpc-message');\n            this.trace('received status details string \"' + details + '\" from server');\n        }\n        const status = { code, details, metadata };\n        // This is a no-op if the call was already ended when handling headers.\n        this.endCall(status);\n    }\n    destroyHttp2Stream() {\n        var _a;\n        // The http2 stream could already have been destroyed if cancelWithStatus\n        // is called in response to an internal http2 error.\n        if (!this.http2Stream.destroyed) {\n            /* If the call has ended with an OK status, communicate that when closing\n             * the stream, partly to avoid a situation in which we detect an error\n             * RST_STREAM as a result after we have the status */\n            let code;\n            if (((_a = this.finalStatus) === null || _a === void 0 ? void 0 : _a.code) === constants_1.Status.OK) {\n                code = http2.constants.NGHTTP2_NO_ERROR;\n            }\n            else {\n                code = http2.constants.NGHTTP2_CANCEL;\n            }\n            this.trace('close http2 stream with code ' + code);\n            this.http2Stream.close(code);\n        }\n    }\n    cancelWithStatus(status, details) {\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        this.endCall({ code: status, details, metadata: new metadata_1.Metadata() });\n    }\n    getStatus() {\n        return this.finalStatus;\n    }\n    getPeer() {\n        return this.transport.getPeerName();\n    }\n    getCallNumber() {\n        return this.callId;\n    }\n    startRead() {\n        /* If the stream has ended with an error, we should not emit any more\n         * messages and we should communicate that the stream has ended */\n        if (this.finalStatus !== null && this.finalStatus.code !== constants_1.Status.OK) {\n            this.readsClosed = true;\n            this.maybeOutputStatus();\n            return;\n        }\n        this.canPush = true;\n        if (this.unpushedReadMessages.length > 0) {\n            const nextMessage = this.unpushedReadMessages.shift();\n            this.push(nextMessage);\n            return;\n        }\n        /* Only resume reading from the http2Stream if we don't have any pending\n         * messages to emit */\n        this.http2Stream.resume();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        const cb = (error) => {\n            /* nextTick here ensures that no stream action can be taken in the call\n             * stack of the write callback, in order to hopefully work around\n             * https://github.com/nodejs/node/issues/49147 */\n            process.nextTick(() => {\n                var _a;\n                let code = constants_1.Status.UNAVAILABLE;\n                if ((error === null || error === void 0 ? void 0 : error.code) ===\n                    'ERR_STREAM_WRITE_AFTER_END') {\n                    code = constants_1.Status.INTERNAL;\n                }\n                if (error) {\n                    this.cancelWithStatus(code, `Write error: ${error.message}`);\n                }\n                (_a = context.callback) === null || _a === void 0 ? void 0 : _a.call(context);\n            });\n        };\n        this.trace('sending data chunk of length ' + message.length);\n        this.callEventTracker.addMessageSent();\n        try {\n            this.http2Stream.write(message, cb);\n        }\n        catch (error) {\n            this.endCall({\n                code: constants_1.Status.UNAVAILABLE,\n                details: `Write failed with error ${error.message}`,\n                metadata: new metadata_1.Metadata(),\n            });\n        }\n    }\n    halfClose() {\n        this.trace('end() called');\n        this.trace('calling end() on HTTP/2 stream');\n        this.http2Stream.end();\n    }\n}\nexports.Http2SubchannelCall = Http2SubchannelCall;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNextCallNumber = void 0;\nlet nextCallNumber = 0;\nfunction getNextCallNumber() {\n    return nextCallNumber++;\n}\nexports.getNextCallNumber = getNextCallNumber;\n", "\"use strict\";\n/*\n * Copyright 2023 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SubchannelConnector = void 0;\nconst http2 = require(\"http2\");\nconst tls_1 = require(\"tls\");\nconst channelz_1 = require(\"./channelz\");\nconst constants_1 = require(\"./constants\");\nconst http_proxy_1 = require(\"./http_proxy\");\nconst logging = require(\"./logging\");\nconst resolver_1 = require(\"./resolver\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst net = require(\"net\");\nconst subchannel_call_1 = require(\"./subchannel-call\");\nconst call_number_1 = require(\"./call-number\");\nconst TRACER_NAME = 'transport';\nconst FLOW_CONTROL_TRACER_NAME = 'transport_flowctrl';\nconst clientVersion = require('../../package.json').version;\nconst { HTTP2_HEADER_AUTHORITY, HTTP2_HEADER_CONTENT_TYPE, HTTP2_HEADER_METHOD, HTTP2_HEADER_PATH, HTTP2_HEADER_TE, HTTP2_HEADER_USER_AGENT, } = http2.constants;\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst tooManyPingsData = Buffer.from('too_many_pings', 'ascii');\nclass Http2Transport {\n    constructor(session, subchannelAddress, options, \n    /**\n     * Name of the remote server, if it is not the same as the subchannel\n     * address, i.e. if connecting through an HTTP CONNECT proxy.\n     */\n    remoteName) {\n        this.session = session;\n        this.options = options;\n        this.remoteName = remoteName;\n        /**\n         * The amount of time in between sending pings\n         */\n        this.keepaliveTimeMs = -1;\n        /**\n         * The amount of time to wait for an acknowledgement after sending a ping\n         */\n        this.keepaliveTimeoutMs = KEEPALIVE_TIMEOUT_MS;\n        /**\n         * Timer reference for timeout that indicates when to send the next ping\n         */\n        this.keepaliveTimerId = null;\n        /**\n         * Indicates that the keepalive timer ran out while there were no active\n         * calls, and a ping should be sent the next time a call starts.\n         */\n        this.pendingSendKeepalivePing = false;\n        /**\n         * Timer reference tracking when the most recent ping will be considered lost\n         */\n        this.keepaliveTimeoutId = null;\n        /**\n         * Indicates whether keepalive pings should be sent without any active calls\n         */\n        this.keepaliveWithoutCalls = false;\n        this.activeCalls = new Set();\n        this.disconnectListeners = [];\n        this.disconnectHandled = false;\n        this.channelzEnabled = true;\n        this.streamTracker = new channelz_1.ChannelzCallTracker();\n        this.keepalivesSent = 0;\n        this.messagesSent = 0;\n        this.messagesReceived = 0;\n        this.lastMessageSentTimestamp = null;\n        this.lastMessageReceivedTimestamp = null;\n        /* Populate subchannelAddressString and channelzRef before doing anything\n         * else, because they are used in the trace methods. */\n        this.subchannelAddressString = (0, subchannel_address_1.subchannelAddressToString)(subchannelAddress);\n        if (options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzSocket)(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled);\n        // Build user-agent string.\n        this.userAgent = [\n            options['grpc.primary_user_agent'],\n            `grpc-node-js/${clientVersion}`,\n            options['grpc.secondary_user_agent'],\n        ]\n            .filter(e => e)\n            .join(' '); // remove falsey values first\n        if ('grpc.keepalive_time_ms' in options) {\n            this.keepaliveTimeMs = options['grpc.keepalive_time_ms'];\n        }\n        if ('grpc.keepalive_timeout_ms' in options) {\n            this.keepaliveTimeoutMs = options['grpc.keepalive_timeout_ms'];\n        }\n        if ('grpc.keepalive_permit_without_calls' in options) {\n            this.keepaliveWithoutCalls =\n                options['grpc.keepalive_permit_without_calls'] === 1;\n        }\n        else {\n            this.keepaliveWithoutCalls = false;\n        }\n        session.once('close', () => {\n            this.trace('session closed');\n            this.stopKeepalivePings();\n            this.handleDisconnect();\n        });\n        session.once('goaway', (errorCode, lastStreamID, opaqueData) => {\n            let tooManyPings = false;\n            /* See the last paragraph of\n             * https://github.com/grpc/proposal/blob/master/A8-client-side-keepalive.md#basic-keepalive */\n            if (errorCode === http2.constants.NGHTTP2_ENHANCE_YOUR_CALM &&\n                opaqueData &&\n                opaqueData.equals(tooManyPingsData)) {\n                tooManyPings = true;\n            }\n            this.trace('connection closed by GOAWAY with code ' + errorCode + ' and data ' + (opaqueData === null || opaqueData === void 0 ? void 0 : opaqueData.toString()));\n            this.reportDisconnectToOwner(tooManyPings);\n        });\n        session.once('error', error => {\n            /* Do nothing here. Any error should also trigger a close event, which is\n             * where we want to handle that.  */\n            this.trace('connection closed with error ' + error.message);\n        });\n        if (logging.isTracerEnabled(TRACER_NAME)) {\n            session.on('remoteSettings', (settings) => {\n                this.trace('new settings received' +\n                    (this.session !== session ? ' on the old connection' : '') +\n                    ': ' +\n                    JSON.stringify(settings));\n            });\n            session.on('localSettings', (settings) => {\n                this.trace('local settings acknowledged by remote' +\n                    (this.session !== session ? ' on the old connection' : '') +\n                    ': ' +\n                    JSON.stringify(settings));\n            });\n        }\n        /* Start the keepalive timer last, because this can trigger trace logs,\n         * which should only happen after everything else is set up. */\n        if (this.keepaliveWithoutCalls) {\n            this.maybeStartKeepalivePingTimer();\n        }\n    }\n    getChannelzInfo() {\n        var _a, _b, _c;\n        const sessionSocket = this.session.socket;\n        const remoteAddress = sessionSocket.remoteAddress\n            ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.remoteAddress, sessionSocket.remotePort)\n            : null;\n        const localAddress = sessionSocket.localAddress\n            ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.localAddress, sessionSocket.localPort)\n            : null;\n        let tlsInfo;\n        if (this.session.encrypted) {\n            const tlsSocket = sessionSocket;\n            const cipherInfo = tlsSocket.getCipher();\n            const certificate = tlsSocket.getCertificate();\n            const peerCertificate = tlsSocket.getPeerCertificate();\n            tlsInfo = {\n                cipherSuiteStandardName: (_a = cipherInfo.standardName) !== null && _a !== void 0 ? _a : null,\n                cipherSuiteOtherName: cipherInfo.standardName ? null : cipherInfo.name,\n                localCertificate: certificate && 'raw' in certificate ? certificate.raw : null,\n                remoteCertificate: peerCertificate && 'raw' in peerCertificate\n                    ? peerCertificate.raw\n                    : null,\n            };\n        }\n        else {\n            tlsInfo = null;\n        }\n        const socketInfo = {\n            remoteAddress: remoteAddress,\n            localAddress: localAddress,\n            security: tlsInfo,\n            remoteName: this.remoteName,\n            streamsStarted: this.streamTracker.callsStarted,\n            streamsSucceeded: this.streamTracker.callsSucceeded,\n            streamsFailed: this.streamTracker.callsFailed,\n            messagesSent: this.messagesSent,\n            messagesReceived: this.messagesReceived,\n            keepAlivesSent: this.keepalivesSent,\n            lastLocalStreamCreatedTimestamp: this.streamTracker.lastCallStartedTimestamp,\n            lastRemoteStreamCreatedTimestamp: null,\n            lastMessageSentTimestamp: this.lastMessageSentTimestamp,\n            lastMessageReceivedTimestamp: this.lastMessageReceivedTimestamp,\n            localFlowControlWindow: (_b = this.session.state.localWindowSize) !== null && _b !== void 0 ? _b : null,\n            remoteFlowControlWindow: (_c = this.session.state.remoteWindowSize) !== null && _c !== void 0 ? _c : null,\n        };\n        return socketInfo;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    keepaliveTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'keepalive', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    flowControlTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, FLOW_CONTROL_TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    internalsTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'transport_internals', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    /**\n     * Indicate to the owner of this object that this transport should no longer\n     * be used. That happens if the connection drops, or if the server sends a\n     * GOAWAY.\n     * @param tooManyPings If true, this was triggered by a GOAWAY with data\n     * indicating that the session was closed becaues the client sent too many\n     * pings.\n     * @returns\n     */\n    reportDisconnectToOwner(tooManyPings) {\n        if (this.disconnectHandled) {\n            return;\n        }\n        this.disconnectHandled = true;\n        this.disconnectListeners.forEach(listener => listener(tooManyPings));\n    }\n    /**\n     * Handle connection drops, but not GOAWAYs.\n     */\n    handleDisconnect() {\n        this.reportDisconnectToOwner(false);\n        /* Give calls an event loop cycle to finish naturally before reporting the\n         * disconnnection to them. */\n        setImmediate(() => {\n            for (const call of this.activeCalls) {\n                call.onDisconnect();\n            }\n        });\n    }\n    addDisconnectListener(listener) {\n        this.disconnectListeners.push(listener);\n    }\n    clearKeepaliveTimer() {\n        if (!this.keepaliveTimerId) {\n            return;\n        }\n        clearTimeout(this.keepaliveTimerId);\n        this.keepaliveTimerId = null;\n    }\n    clearKeepaliveTimeout() {\n        if (!this.keepaliveTimeoutId) {\n            return;\n        }\n        clearTimeout(this.keepaliveTimeoutId);\n        this.keepaliveTimeoutId = null;\n    }\n    canSendPing() {\n        return (this.keepaliveTimeMs > 0 &&\n            (this.keepaliveWithoutCalls || this.activeCalls.size > 0));\n    }\n    maybeSendPing() {\n        var _a, _b;\n        this.clearKeepaliveTimer();\n        if (!this.canSendPing()) {\n            this.pendingSendKeepalivePing = true;\n            return;\n        }\n        if (this.channelzEnabled) {\n            this.keepalivesSent += 1;\n        }\n        this.keepaliveTrace('Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms');\n        if (!this.keepaliveTimeoutId) {\n            this.keepaliveTimeoutId = setTimeout(() => {\n                this.keepaliveTrace('Ping timeout passed without response');\n                this.handleDisconnect();\n            }, this.keepaliveTimeoutMs);\n            (_b = (_a = this.keepaliveTimeoutId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n        try {\n            this.session.ping((err, duration, payload) => {\n                if (err) {\n                    this.keepaliveTrace('Ping failed with error ' + err.message);\n                    this.handleDisconnect();\n                }\n                this.keepaliveTrace('Received ping response');\n                this.clearKeepaliveTimeout();\n                this.maybeStartKeepalivePingTimer();\n            });\n        }\n        catch (e) {\n            /* If we fail to send a ping, the connection is no longer functional, so\n             * we should discard it. */\n            this.handleDisconnect();\n        }\n    }\n    /**\n     * Starts the keepalive ping timer if appropriate. If the timer already ran\n     * out while there were no active requests, instead send a ping immediately.\n     * If the ping timer is already running or a ping is currently in flight,\n     * instead do nothing and wait for them to resolve.\n     */\n    maybeStartKeepalivePingTimer() {\n        var _a, _b;\n        if (!this.canSendPing()) {\n            return;\n        }\n        if (this.pendingSendKeepalivePing) {\n            this.pendingSendKeepalivePing = false;\n            this.maybeSendPing();\n        }\n        else if (!this.keepaliveTimerId && !this.keepaliveTimeoutId) {\n            this.keepaliveTrace('Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms');\n            this.keepaliveTimerId = (_b = (_a = setTimeout(() => {\n                this.maybeSendPing();\n            }, this.keepaliveTimeMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n        /* Otherwise, there is already either a keepalive timer or a ping pending,\n         * wait for those to resolve. */\n    }\n    stopKeepalivePings() {\n        if (this.keepaliveTimerId) {\n            clearTimeout(this.keepaliveTimerId);\n            this.keepaliveTimerId = null;\n        }\n        this.clearKeepaliveTimeout();\n    }\n    removeActiveCall(call) {\n        this.activeCalls.delete(call);\n        if (this.activeCalls.size === 0) {\n            this.session.unref();\n        }\n    }\n    addActiveCall(call) {\n        this.activeCalls.add(call);\n        if (this.activeCalls.size === 1) {\n            this.session.ref();\n            if (!this.keepaliveWithoutCalls) {\n                this.maybeStartKeepalivePingTimer();\n            }\n        }\n    }\n    createCall(metadata, host, method, listener, subchannelCallStatsTracker) {\n        const headers = metadata.toHttp2Headers();\n        headers[HTTP2_HEADER_AUTHORITY] = host;\n        headers[HTTP2_HEADER_USER_AGENT] = this.userAgent;\n        headers[HTTP2_HEADER_CONTENT_TYPE] = 'application/grpc';\n        headers[HTTP2_HEADER_METHOD] = 'POST';\n        headers[HTTP2_HEADER_PATH] = method;\n        headers[HTTP2_HEADER_TE] = 'trailers';\n        let http2Stream;\n        /* In theory, if an error is thrown by session.request because session has\n         * become unusable (e.g. because it has received a goaway), this subchannel\n         * should soon see the corresponding close or goaway event anyway and leave\n         * READY. But we have seen reports that this does not happen\n         * (https://github.com/googleapis/nodejs-firestore/issues/1023#issuecomment-653204096)\n         * so for defense in depth, we just discard the session when we see an\n         * error here.\n         */\n        try {\n            http2Stream = this.session.request(headers);\n        }\n        catch (e) {\n            this.handleDisconnect();\n            throw e;\n        }\n        this.flowControlTrace('local window size: ' +\n            this.session.state.localWindowSize +\n            ' remote window size: ' +\n            this.session.state.remoteWindowSize);\n        this.internalsTrace('session.closed=' +\n            this.session.closed +\n            ' session.destroyed=' +\n            this.session.destroyed +\n            ' session.socket.destroyed=' +\n            this.session.socket.destroyed);\n        let eventTracker;\n        // eslint-disable-next-line prefer-const\n        let call;\n        if (this.channelzEnabled) {\n            this.streamTracker.addCallStarted();\n            eventTracker = {\n                addMessageSent: () => {\n                    var _a;\n                    this.messagesSent += 1;\n                    this.lastMessageSentTimestamp = new Date();\n                    (_a = subchannelCallStatsTracker.addMessageSent) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                addMessageReceived: () => {\n                    var _a;\n                    this.messagesReceived += 1;\n                    this.lastMessageReceivedTimestamp = new Date();\n                    (_a = subchannelCallStatsTracker.addMessageReceived) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                onCallEnd: status => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onCallEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, status);\n                    this.removeActiveCall(call);\n                },\n                onStreamEnd: success => {\n                    var _a;\n                    if (success) {\n                        this.streamTracker.addCallSucceeded();\n                    }\n                    else {\n                        this.streamTracker.addCallFailed();\n                    }\n                    (_a = subchannelCallStatsTracker.onStreamEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, success);\n                },\n            };\n        }\n        else {\n            eventTracker = {\n                addMessageSent: () => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.addMessageSent) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                addMessageReceived: () => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.addMessageReceived) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                onCallEnd: status => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onCallEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, status);\n                    this.removeActiveCall(call);\n                },\n                onStreamEnd: success => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onStreamEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, success);\n                },\n            };\n        }\n        call = new subchannel_call_1.Http2SubchannelCall(http2Stream, eventTracker, listener, this, (0, call_number_1.getNextCallNumber)());\n        this.addActiveCall(call);\n        return call;\n    }\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    getPeerName() {\n        return this.subchannelAddressString;\n    }\n    getOptions() {\n        return this.options;\n    }\n    shutdown() {\n        this.session.close();\n        (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n    }\n}\nclass Http2SubchannelConnector {\n    constructor(channelTarget) {\n        this.channelTarget = channelTarget;\n        this.session = null;\n        this.isShutdown = false;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, (0, uri_parser_1.uriToString)(this.channelTarget) + ' ' + text);\n    }\n    createSession(address, credentials, options, proxyConnectionResult) {\n        if (this.isShutdown) {\n            return Promise.reject();\n        }\n        return new Promise((resolve, reject) => {\n            var _a, _b, _c;\n            let remoteName;\n            if (proxyConnectionResult.realTarget) {\n                remoteName = (0, uri_parser_1.uriToString)(proxyConnectionResult.realTarget);\n                this.trace('creating HTTP/2 session through proxy to ' +\n                    (0, uri_parser_1.uriToString)(proxyConnectionResult.realTarget));\n            }\n            else {\n                remoteName = null;\n                this.trace('creating HTTP/2 session to ' + (0, subchannel_address_1.subchannelAddressToString)(address));\n            }\n            const targetAuthority = (0, resolver_1.getDefaultAuthority)((_a = proxyConnectionResult.realTarget) !== null && _a !== void 0 ? _a : this.channelTarget);\n            let connectionOptions = credentials._getConnectionOptions() || {};\n            connectionOptions.maxSendHeaderBlockLength = Number.MAX_SAFE_INTEGER;\n            if ('grpc-node.max_session_memory' in options) {\n                connectionOptions.maxSessionMemory =\n                    options['grpc-node.max_session_memory'];\n            }\n            else {\n                /* By default, set a very large max session memory limit, to effectively\n                 * disable enforcement of the limit. Some testing indicates that Node's\n                 * behavior degrades badly when this limit is reached, so we solve that\n                 * by disabling the check entirely. */\n                connectionOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n            }\n            let addressScheme = 'http://';\n            if ('secureContext' in connectionOptions) {\n                addressScheme = 'https://';\n                // If provided, the value of grpc.ssl_target_name_override should be used\n                // to override the target hostname when checking server identity.\n                // This option is used for testing only.\n                if (options['grpc.ssl_target_name_override']) {\n                    const sslTargetNameOverride = options['grpc.ssl_target_name_override'];\n                    connectionOptions.checkServerIdentity = (host, cert) => {\n                        return (0, tls_1.checkServerIdentity)(sslTargetNameOverride, cert);\n                    };\n                    connectionOptions.servername = sslTargetNameOverride;\n                }\n                else {\n                    const authorityHostname = (_c = (_b = (0, uri_parser_1.splitHostPort)(targetAuthority)) === null || _b === void 0 ? void 0 : _b.host) !== null && _c !== void 0 ? _c : 'localhost';\n                    // We want to always set servername to support SNI\n                    connectionOptions.servername = authorityHostname;\n                }\n                if (proxyConnectionResult.socket) {\n                    /* This is part of the workaround for\n                     * https://github.com/nodejs/node/issues/32922. Without that bug,\n                     * proxyConnectionResult.socket would always be a plaintext socket and\n                     * this would say\n                     * connectionOptions.socket = proxyConnectionResult.socket; */\n                    connectionOptions.createConnection = (authority, option) => {\n                        return proxyConnectionResult.socket;\n                    };\n                }\n            }\n            else {\n                /* In all but the most recent versions of Node, http2.connect does not use\n                 * the options when establishing plaintext connections, so we need to\n                 * establish that connection explicitly. */\n                connectionOptions.createConnection = (authority, option) => {\n                    if (proxyConnectionResult.socket) {\n                        return proxyConnectionResult.socket;\n                    }\n                    else {\n                        /* net.NetConnectOpts is declared in a way that is more restrictive\n                         * than what net.connect will actually accept, so we use the type\n                         * assertion to work around that. */\n                        return net.connect(address);\n                    }\n                };\n            }\n            connectionOptions = Object.assign(Object.assign(Object.assign({}, connectionOptions), address), { enableTrace: options['grpc-node.tls_enable_trace'] === 1 });\n            /* http2.connect uses the options here:\n             * https://github.com/nodejs/node/blob/70c32a6d190e2b5d7b9ff9d5b6a459d14e8b7d59/lib/internal/http2/core.js#L3028-L3036\n             * The spread operator overides earlier values with later ones, so any port\n             * or host values in the options will be used rather than any values extracted\n             * from the first argument. In addition, the path overrides the host and port,\n             * as documented for plaintext connections here:\n             * https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener\n             * and for TLS connections here:\n             * https://nodejs.org/api/tls.html#tls_tls_connect_options_callback. In\n             * earlier versions of Node, http2.connect passes these options to\n             * tls.connect but not net.connect, so in the insecure case we still need\n             * to set the createConnection option above to create the connection\n             * explicitly. We cannot do that in the TLS case because http2.connect\n             * passes necessary additional options to tls.connect.\n             * The first argument just needs to be parseable as a URL and the scheme\n             * determines whether the connection will be established over TLS or not.\n             */\n            const session = http2.connect(addressScheme + targetAuthority, connectionOptions);\n            this.session = session;\n            let errorMessage = 'Failed to connect';\n            session.unref();\n            session.once('connect', () => {\n                session.removeAllListeners();\n                resolve(new Http2Transport(session, address, options, remoteName));\n                this.session = null;\n            });\n            session.once('close', () => {\n                this.session = null;\n                // Leave time for error event to happen before rejecting\n                setImmediate(() => {\n                    reject(`${errorMessage} (${new Date().toISOString()})`);\n                });\n            });\n            session.once('error', error => {\n                errorMessage = error.message;\n                this.trace('connection failed with error ' + errorMessage);\n            });\n        });\n    }\n    connect(address, credentials, options) {\n        var _a, _b;\n        if (this.isShutdown) {\n            return Promise.reject();\n        }\n        /* Pass connection options through to the proxy so that it's able to\n         * upgrade it's connection to support tls if needed.\n         * This is a workaround for https://github.com/nodejs/node/issues/32922\n         * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n        const connectionOptions = credentials._getConnectionOptions() || {};\n        if ('secureContext' in connectionOptions) {\n            connectionOptions.ALPNProtocols = ['h2'];\n            // If provided, the value of grpc.ssl_target_name_override should be used\n            // to override the target hostname when checking server identity.\n            // This option is used for testing only.\n            if (options['grpc.ssl_target_name_override']) {\n                const sslTargetNameOverride = options['grpc.ssl_target_name_override'];\n                connectionOptions.checkServerIdentity = (host, cert) => {\n                    return (0, tls_1.checkServerIdentity)(sslTargetNameOverride, cert);\n                };\n                connectionOptions.servername = sslTargetNameOverride;\n            }\n            else {\n                if ('grpc.http_connect_target' in options) {\n                    /* This is more or less how servername will be set in createSession\n                     * if a connection is successfully established through the proxy.\n                     * If the proxy is not used, these connectionOptions are discarded\n                     * anyway */\n                    const targetPath = (0, resolver_1.getDefaultAuthority)((_a = (0, uri_parser_1.parseUri)(options['grpc.http_connect_target'])) !== null && _a !== void 0 ? _a : {\n                        path: 'localhost',\n                    });\n                    const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n                    connectionOptions.servername = (_b = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _b !== void 0 ? _b : targetPath;\n                }\n            }\n            if (options['grpc-node.tls_enable_trace']) {\n                connectionOptions.enableTrace = true;\n            }\n        }\n        return (0, http_proxy_1.getProxiedConnection)(address, options, connectionOptions).then(result => this.createSession(address, credentials, options, result));\n    }\n    shutdown() {\n        var _a;\n        this.isShutdown = true;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.close();\n        this.session = null;\n    }\n}\nexports.Http2SubchannelConnector = Http2SubchannelConnector;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSubchannelPool = exports.SubchannelPool = void 0;\nconst channel_options_1 = require(\"./channel-options\");\nconst subchannel_1 = require(\"./subchannel\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst transport_1 = require(\"./transport\");\n// 10 seconds in milliseconds. This value is arbitrary.\n/**\n * The amount of time in between checks for dropping subchannels that have no\n * other references\n */\nconst REF_CHECK_INTERVAL = 10000;\nclass SubchannelPool {\n    /**\n     * A pool of subchannels use for making connections. Subchannels with the\n     * exact same parameters will be reused.\n     */\n    constructor() {\n        this.pool = Object.create(null);\n        /**\n         * A timer of a task performing a periodic subchannel cleanup.\n         */\n        this.cleanupTimer = null;\n    }\n    /**\n     * Unrefs all unused subchannels and cancels the cleanup task if all\n     * subchannels have been unrefed.\n     */\n    unrefUnusedSubchannels() {\n        let allSubchannelsUnrefed = true;\n        /* These objects are created with Object.create(null), so they do not\n         * have a prototype, which means that for (... in ...) loops over them\n         * do not need to be filtered */\n        // eslint-disable-disable-next-line:forin\n        for (const channelTarget in this.pool) {\n            const subchannelObjArray = this.pool[channelTarget];\n            const refedSubchannels = subchannelObjArray.filter(value => !value.subchannel.unrefIfOneRef());\n            if (refedSubchannels.length > 0) {\n                allSubchannelsUnrefed = false;\n            }\n            /* For each subchannel in the pool, try to unref it if it has\n             * exactly one ref (which is the ref from the pool itself). If that\n             * does happen, remove the subchannel from the pool */\n            this.pool[channelTarget] = refedSubchannels;\n        }\n        /* Currently we do not delete keys with empty values. If that results\n         * in significant memory usage we should change it. */\n        // Cancel the cleanup task if all subchannels have been unrefed.\n        if (allSubchannelsUnrefed && this.cleanupTimer !== null) {\n            clearInterval(this.cleanupTimer);\n            this.cleanupTimer = null;\n        }\n    }\n    /**\n     * Ensures that the cleanup task is spawned.\n     */\n    ensureCleanupTask() {\n        var _a, _b;\n        if (this.cleanupTimer === null) {\n            this.cleanupTimer = setInterval(() => {\n                this.unrefUnusedSubchannels();\n            }, REF_CHECK_INTERVAL);\n            // Unref because this timer should not keep the event loop running.\n            // Call unref only if it exists to address electron/electron#21162\n            (_b = (_a = this.cleanupTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    /**\n     * Get a subchannel if one already exists with exactly matching parameters.\n     * Otherwise, create and save a subchannel with those parameters.\n     * @param channelTarget\n     * @param subchannelTarget\n     * @param channelArguments\n     * @param channelCredentials\n     */\n    getOrCreateSubchannel(channelTargetUri, subchannelTarget, channelArguments, channelCredentials) {\n        this.ensureCleanupTask();\n        const channelTarget = (0, uri_parser_1.uriToString)(channelTargetUri);\n        if (channelTarget in this.pool) {\n            const subchannelObjArray = this.pool[channelTarget];\n            for (const subchannelObj of subchannelObjArray) {\n                if ((0, subchannel_address_1.subchannelAddressEqual)(subchannelTarget, subchannelObj.subchannelAddress) &&\n                    (0, channel_options_1.channelOptionsEqual)(channelArguments, subchannelObj.channelArguments) &&\n                    channelCredentials._equals(subchannelObj.channelCredentials)) {\n                    return subchannelObj.subchannel;\n                }\n            }\n        }\n        // If we get here, no matching subchannel was found\n        const subchannel = new subchannel_1.Subchannel(channelTargetUri, subchannelTarget, channelArguments, channelCredentials, new transport_1.Http2SubchannelConnector(channelTargetUri));\n        if (!(channelTarget in this.pool)) {\n            this.pool[channelTarget] = [];\n        }\n        this.pool[channelTarget].push({\n            subchannelAddress: subchannelTarget,\n            channelArguments,\n            channelCredentials,\n            subchannel,\n        });\n        subchannel.ref();\n        return subchannel;\n    }\n}\nexports.SubchannelPool = SubchannelPool;\nconst globalSubchannelPool = new SubchannelPool();\n/**\n * Get either the global subchannel pool, or a new subchannel pool.\n * @param global\n */\nfunction getSubchannelPool(global) {\n    if (global) {\n        return globalSubchannelPool;\n    }\n    else {\n        return new SubchannelPool();\n    }\n}\nexports.getSubchannelPool = getSubchannelPool;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterStackFactory = exports.FilterStack = void 0;\nclass FilterStack {\n    constructor(filters) {\n        this.filters = filters;\n    }\n    sendMetadata(metadata) {\n        let result = metadata;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMetadata(result);\n        }\n        return result;\n    }\n    receiveMetadata(metadata) {\n        let result = metadata;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMetadata(result);\n        }\n        return result;\n    }\n    sendMessage(message) {\n        let result = message;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMessage(result);\n        }\n        return result;\n    }\n    receiveMessage(message) {\n        let result = message;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMessage(result);\n        }\n        return result;\n    }\n    receiveTrailers(status) {\n        let result = status;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveTrailers(result);\n        }\n        return result;\n    }\n    push(filters) {\n        this.filters.unshift(...filters);\n    }\n    getFilters() {\n        return this.filters;\n    }\n}\nexports.FilterStack = FilterStack;\nclass FilterStackFactory {\n    constructor(factories) {\n        this.factories = factories;\n    }\n    push(filterFactories) {\n        this.factories.unshift(...filterFactories);\n    }\n    clone() {\n        return new FilterStackFactory([...this.factories]);\n    }\n    createFilter() {\n        return new FilterStack(this.factories.map(factory => factory.createFilter()));\n    }\n}\nexports.FilterStackFactory = FilterStackFactory;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionAlgorithms = void 0;\nvar CompressionAlgorithms;\n(function (CompressionAlgorithms) {\n    CompressionAlgorithms[CompressionAlgorithms[\"identity\"] = 0] = \"identity\";\n    CompressionAlgorithms[CompressionAlgorithms[\"deflate\"] = 1] = \"deflate\";\n    CompressionAlgorithms[CompressionAlgorithms[\"gzip\"] = 2] = \"gzip\";\n})(CompressionAlgorithms || (exports.CompressionAlgorithms = CompressionAlgorithms = {}));\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseFilter = void 0;\nclass BaseFilter {\n    async sendMetadata(metadata) {\n        return metadata;\n    }\n    receiveMetadata(metadata) {\n        return metadata;\n    }\n    async sendMessage(message) {\n        return message;\n    }\n    async receiveMessage(message) {\n        return message;\n    }\n    receiveTrailers(status) {\n        return status;\n    }\n}\nexports.BaseFilter = BaseFilter;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionFilterFactory = exports.CompressionFilter = void 0;\nconst zlib = require(\"zlib\");\nconst compression_algorithms_1 = require(\"./compression-algorithms\");\nconst constants_1 = require(\"./constants\");\nconst filter_1 = require(\"./filter\");\nconst logging = require(\"./logging\");\nconst isCompressionAlgorithmKey = (key) => {\n    return (typeof key === 'number' && typeof compression_algorithms_1.CompressionAlgorithms[key] === 'string');\n};\nclass CompressionHandler {\n    /**\n     * @param message Raw uncompressed message bytes\n     * @param compress Indicates whether the message should be compressed\n     * @return Framed message, compressed if applicable\n     */\n    async writeMessage(message, compress) {\n        let messageBuffer = message;\n        if (compress) {\n            messageBuffer = await this.compressMessage(messageBuffer);\n        }\n        const output = Buffer.allocUnsafe(messageBuffer.length + 5);\n        output.writeUInt8(compress ? 1 : 0, 0);\n        output.writeUInt32BE(messageBuffer.length, 1);\n        messageBuffer.copy(output, 5);\n        return output;\n    }\n    /**\n     * @param data Framed message, possibly compressed\n     * @return Uncompressed message\n     */\n    async readMessage(data) {\n        const compressed = data.readUInt8(0) === 1;\n        let messageBuffer = data.slice(5);\n        if (compressed) {\n            messageBuffer = await this.decompressMessage(messageBuffer);\n        }\n        return messageBuffer;\n    }\n}\nclass IdentityHandler extends CompressionHandler {\n    async compressMessage(message) {\n        return message;\n    }\n    async writeMessage(message, compress) {\n        const output = Buffer.allocUnsafe(message.length + 5);\n        /* With \"identity\" compression, messages should always be marked as\n         * uncompressed */\n        output.writeUInt8(0, 0);\n        output.writeUInt32BE(message.length, 1);\n        message.copy(output, 5);\n        return output;\n    }\n    decompressMessage(message) {\n        return Promise.reject(new Error('Received compressed message but \"grpc-encoding\" header was identity'));\n    }\n}\nclass DeflateHandler extends CompressionHandler {\n    constructor(maxRecvMessageLength) {\n        super();\n        this.maxRecvMessageLength = maxRecvMessageLength;\n    }\n    compressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.deflate(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n    decompressMessage(message) {\n        return new Promise((resolve, reject) => {\n            let totalLength = 0;\n            const messageParts = [];\n            const decompresser = zlib.createInflate();\n            decompresser.on('data', (chunk) => {\n                messageParts.push(chunk);\n                totalLength += chunk.byteLength;\n                if (this.maxRecvMessageLength !== -1 && totalLength > this.maxRecvMessageLength) {\n                    decompresser.destroy();\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`\n                    });\n                }\n            });\n            decompresser.on('end', () => {\n                resolve(Buffer.concat(messageParts));\n            });\n            decompresser.write(message);\n            decompresser.end();\n        });\n    }\n}\nclass GzipHandler extends CompressionHandler {\n    constructor(maxRecvMessageLength) {\n        super();\n        this.maxRecvMessageLength = maxRecvMessageLength;\n    }\n    compressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.gzip(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n    decompressMessage(message) {\n        return new Promise((resolve, reject) => {\n            let totalLength = 0;\n            const messageParts = [];\n            const decompresser = zlib.createGunzip();\n            decompresser.on('data', (chunk) => {\n                messageParts.push(chunk);\n                totalLength += chunk.byteLength;\n                if (this.maxRecvMessageLength !== -1 && totalLength > this.maxRecvMessageLength) {\n                    decompresser.destroy();\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`\n                    });\n                }\n            });\n            decompresser.on('end', () => {\n                resolve(Buffer.concat(messageParts));\n            });\n            decompresser.write(message);\n            decompresser.end();\n        });\n    }\n}\nclass UnknownHandler extends CompressionHandler {\n    constructor(compressionName) {\n        super();\n        this.compressionName = compressionName;\n    }\n    compressMessage(message) {\n        return Promise.reject(new Error(`Received message compressed with unsupported compression method ${this.compressionName}`));\n    }\n    decompressMessage(message) {\n        // This should be unreachable\n        return Promise.reject(new Error(`Compression method not supported: ${this.compressionName}`));\n    }\n}\nfunction getCompressionHandler(compressionName, maxReceiveMessageSize) {\n    switch (compressionName) {\n        case 'identity':\n            return new IdentityHandler();\n        case 'deflate':\n            return new DeflateHandler(maxReceiveMessageSize);\n        case 'gzip':\n            return new GzipHandler(maxReceiveMessageSize);\n        default:\n            return new UnknownHandler(compressionName);\n    }\n}\nclass CompressionFilter extends filter_1.BaseFilter {\n    constructor(channelOptions, sharedFilterConfig) {\n        var _a, _b;\n        super();\n        this.sharedFilterConfig = sharedFilterConfig;\n        this.sendCompression = new IdentityHandler();\n        this.receiveCompression = new IdentityHandler();\n        this.currentCompressionAlgorithm = 'identity';\n        const compressionAlgorithmKey = channelOptions['grpc.default_compression_algorithm'];\n        this.maxReceiveMessageLength = (_a = channelOptions['grpc.max_receive_message_length']) !== null && _a !== void 0 ? _a : constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        if (compressionAlgorithmKey !== undefined) {\n            if (isCompressionAlgorithmKey(compressionAlgorithmKey)) {\n                const clientSelectedEncoding = compression_algorithms_1.CompressionAlgorithms[compressionAlgorithmKey];\n                const serverSupportedEncodings = (_b = sharedFilterConfig.serverSupportedEncodingHeader) === null || _b === void 0 ? void 0 : _b.split(',');\n                /**\n                 * There are two possible situations here:\n                 * 1) We don't have any info yet from the server about what compression it supports\n                 *    In that case we should just use what the client tells us to use\n                 * 2) We've previously received a response from the server including a grpc-accept-encoding header\n                 *    In that case we only want to use the encoding chosen by the client if the server supports it\n                 */\n                if (!serverSupportedEncodings ||\n                    serverSupportedEncodings.includes(clientSelectedEncoding)) {\n                    this.currentCompressionAlgorithm = clientSelectedEncoding;\n                    this.sendCompression = getCompressionHandler(this.currentCompressionAlgorithm, -1);\n                }\n            }\n            else {\n                logging.log(constants_1.LogVerbosity.ERROR, `Invalid value provided for grpc.default_compression_algorithm option: ${compressionAlgorithmKey}`);\n            }\n        }\n    }\n    async sendMetadata(metadata) {\n        const headers = await metadata;\n        headers.set('grpc-accept-encoding', 'identity,deflate,gzip');\n        headers.set('accept-encoding', 'identity');\n        // No need to send the header if it's \"identity\" -  behavior is identical; save the bandwidth\n        if (this.currentCompressionAlgorithm === 'identity') {\n            headers.remove('grpc-encoding');\n        }\n        else {\n            headers.set('grpc-encoding', this.currentCompressionAlgorithm);\n        }\n        return headers;\n    }\n    receiveMetadata(metadata) {\n        const receiveEncoding = metadata.get('grpc-encoding');\n        if (receiveEncoding.length > 0) {\n            const encoding = receiveEncoding[0];\n            if (typeof encoding === 'string') {\n                this.receiveCompression = getCompressionHandler(encoding, this.maxReceiveMessageLength);\n            }\n        }\n        metadata.remove('grpc-encoding');\n        /* Check to see if the compression we're using to send messages is supported by the server\n         * If not, reset the sendCompression filter and have it use the default IdentityHandler */\n        const serverSupportedEncodingsHeader = metadata.get('grpc-accept-encoding')[0];\n        if (serverSupportedEncodingsHeader) {\n            this.sharedFilterConfig.serverSupportedEncodingHeader =\n                serverSupportedEncodingsHeader;\n            const serverSupportedEncodings = serverSupportedEncodingsHeader.split(',');\n            if (!serverSupportedEncodings.includes(this.currentCompressionAlgorithm)) {\n                this.sendCompression = new IdentityHandler();\n                this.currentCompressionAlgorithm = 'identity';\n            }\n        }\n        metadata.remove('grpc-accept-encoding');\n        return metadata;\n    }\n    async sendMessage(message) {\n        var _a;\n        /* This filter is special. The input message is the bare message bytes,\n         * and the output is a framed and possibly compressed message. For this\n         * reason, this filter should be at the bottom of the filter stack */\n        const resolvedMessage = await message;\n        let compress;\n        if (this.sendCompression instanceof IdentityHandler) {\n            compress = false;\n        }\n        else {\n            compress = (((_a = resolvedMessage.flags) !== null && _a !== void 0 ? _a : 0) & 2 /* WriteFlags.NoCompress */) === 0;\n        }\n        return {\n            message: await this.sendCompression.writeMessage(resolvedMessage.message, compress),\n            flags: resolvedMessage.flags,\n        };\n    }\n    async receiveMessage(message) {\n        /* This filter is also special. The input message is framed and possibly\n         * compressed, and the output message is deframed and uncompressed. So\n         * this is another reason that this filter should be at the bottom of the\n         * filter stack. */\n        return this.receiveCompression.readMessage(await message);\n    }\n}\nexports.CompressionFilter = CompressionFilter;\nclass CompressionFilterFactory {\n    constructor(channel, options) {\n        this.options = options;\n        this.sharedFilterConfig = {};\n    }\n    createFilter() {\n        return new CompressionFilter(this.options, this.sharedFilterConfig);\n    }\n}\nexports.CompressionFilterFactory = CompressionFilterFactory;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deadlineToString = exports.getRelativeTimeout = exports.getDeadlineTimeoutString = exports.minDeadline = void 0;\nfunction minDeadline(...deadlineList) {\n    let minValue = Infinity;\n    for (const deadline of deadlineList) {\n        const deadlineMsecs = deadline instanceof Date ? deadline.getTime() : deadline;\n        if (deadlineMsecs < minValue) {\n            minValue = deadlineMsecs;\n        }\n    }\n    return minValue;\n}\nexports.minDeadline = minDeadline;\nconst units = [\n    ['m', 1],\n    ['S', 1000],\n    ['M', 60 * 1000],\n    ['H', 60 * 60 * 1000],\n];\nfunction getDeadlineTimeoutString(deadline) {\n    const now = new Date().getTime();\n    if (deadline instanceof Date) {\n        deadline = deadline.getTime();\n    }\n    const timeoutMs = Math.max(deadline - now, 0);\n    for (const [unit, factor] of units) {\n        const amount = timeoutMs / factor;\n        if (amount < 1e8) {\n            return String(Math.ceil(amount)) + unit;\n        }\n    }\n    throw new Error('Deadline is too far in the future');\n}\nexports.getDeadlineTimeoutString = getDeadlineTimeoutString;\n/**\n * See https://nodejs.org/api/timers.html#settimeoutcallback-delay-args\n * In particular, \"When delay is larger than 2147483647 or less than 1, the\n * delay will be set to 1. Non-integer delays are truncated to an integer.\"\n * This number of milliseconds is almost 25 days.\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\n/**\n * Get the timeout value that should be passed to setTimeout now for the timer\n * to end at the deadline. For any deadline before now, the timer should end\n * immediately, represented by a value of 0. For any deadline more than\n * MAX_TIMEOUT_TIME milliseconds in the future, a timer cannot be set that will\n * end at that time, so it is treated as infinitely far in the future.\n * @param deadline\n * @returns\n */\nfunction getRelativeTimeout(deadline) {\n    const deadlineMs = deadline instanceof Date ? deadline.getTime() : deadline;\n    const now = new Date().getTime();\n    const timeout = deadlineMs - now;\n    if (timeout < 0) {\n        return 0;\n    }\n    else if (timeout > MAX_TIMEOUT_TIME) {\n        return Infinity;\n    }\n    else {\n        return timeout;\n    }\n}\nexports.getRelativeTimeout = getRelativeTimeout;\nfunction deadlineToString(deadline) {\n    if (deadline instanceof Date) {\n        return deadline.toISOString();\n    }\n    else {\n        const dateDeadline = new Date(deadline);\n        if (Number.isNaN(dateDeadline.getTime())) {\n            return '' + deadline;\n        }\n        else {\n            return dateDeadline.toISOString();\n        }\n    }\n}\nexports.deadlineToString = deadlineToString;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.restrictControlPlaneStatusCode = void 0;\nconst constants_1 = require(\"./constants\");\nconst INAPPROPRIATE_CONTROL_PLANE_CODES = [\n    constants_1.Status.OK,\n    constants_1.Status.INVALID_ARGUMENT,\n    constants_1.Status.NOT_FOUND,\n    constants_1.Status.ALREADY_EXISTS,\n    constants_1.Status.FAILED_PRECONDITION,\n    constants_1.Status.ABORTED,\n    constants_1.Status.OUT_OF_RANGE,\n    constants_1.Status.DATA_LOSS,\n];\nfunction restrictControlPlaneStatusCode(code, details) {\n    if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n        return {\n            code: constants_1.Status.INTERNAL,\n            details: `Invalid status from control plane: ${code} ${constants_1.Status[code]} ${details}`,\n        };\n    }\n    else {\n        return { code, details };\n    }\n}\nexports.restrictControlPlaneStatusCode = restrictControlPlaneStatusCode;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoadBalancingCall = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst picker_1 = require(\"./picker\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst http2 = require(\"http2\");\nconst TRACER_NAME = 'load_balancing_call';\nclass LoadBalancingCall {\n    constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber) {\n        var _a, _b;\n        this.channel = channel;\n        this.callConfig = callConfig;\n        this.methodName = methodName;\n        this.host = host;\n        this.credentials = credentials;\n        this.deadline = deadline;\n        this.callNumber = callNumber;\n        this.child = null;\n        this.readPending = false;\n        this.pendingMessage = null;\n        this.pendingHalfClose = false;\n        this.ended = false;\n        this.metadata = null;\n        this.listener = null;\n        this.onCallEnded = null;\n        const splitPath = this.methodName.split('/');\n        let serviceName = '';\n        /* The standard path format is \"/{serviceName}/{methodName}\", so if we split\n         * by '/', the first item should be empty and the second should be the\n         * service name */\n        if (splitPath.length >= 2) {\n            serviceName = splitPath[1];\n        }\n        const hostname = (_b = (_a = (0, uri_parser_1.splitHostPort)(this.host)) === null || _a === void 0 ? void 0 : _a.host) !== null && _b !== void 0 ? _b : 'localhost';\n        /* Currently, call credentials are only allowed on HTTPS connections, so we\n         * can assume that the scheme is \"https\" */\n        this.serviceUrl = `https://${hostname}/${serviceName}`;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    outputStatus(status, progress) {\n        var _a, _b;\n        if (!this.ended) {\n            this.ended = true;\n            this.trace('ended with status: code=' +\n                status.code +\n                ' details=\"' +\n                status.details +\n                '\"');\n            const finalStatus = Object.assign(Object.assign({}, status), { progress });\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(finalStatus);\n            (_b = this.onCallEnded) === null || _b === void 0 ? void 0 : _b.call(this, finalStatus.code);\n        }\n    }\n    doPick() {\n        var _a, _b;\n        if (this.ended) {\n            return;\n        }\n        if (!this.metadata) {\n            throw new Error('doPick called before start');\n        }\n        this.trace('Pick called');\n        const pickResult = this.channel.doPick(this.metadata, this.callConfig.pickInformation);\n        const subchannelString = pickResult.subchannel\n            ? '(' +\n                pickResult.subchannel.getChannelzRef().id +\n                ') ' +\n                pickResult.subchannel.getAddress()\n            : '' + pickResult.subchannel;\n        this.trace('Pick result: ' +\n            picker_1.PickResultType[pickResult.pickResultType] +\n            ' subchannel: ' +\n            subchannelString +\n            ' status: ' +\n            ((_a = pickResult.status) === null || _a === void 0 ? void 0 : _a.code) +\n            ' ' +\n            ((_b = pickResult.status) === null || _b === void 0 ? void 0 : _b.details));\n        switch (pickResult.pickResultType) {\n            case picker_1.PickResultType.COMPLETE:\n                this.credentials\n                    .generateMetadata({ service_url: this.serviceUrl })\n                    .then(credsMetadata => {\n                    var _a, _b, _c;\n                    /* If this call was cancelled (e.g. by the deadline) before\n                     * metadata generation finished, we shouldn't do anything with\n                     * it. */\n                    if (this.ended) {\n                        this.trace('Credentials metadata generation finished after call ended');\n                        return;\n                    }\n                    const finalMetadata = this.metadata.clone();\n                    finalMetadata.merge(credsMetadata);\n                    if (finalMetadata.get('authorization').length > 1) {\n                        this.outputStatus({\n                            code: constants_1.Status.INTERNAL,\n                            details: '\"authorization\" metadata cannot have multiple values',\n                            metadata: new metadata_1.Metadata(),\n                        }, 'PROCESSED');\n                    }\n                    if (pickResult.subchannel.getConnectivityState() !==\n                        connectivity_state_1.ConnectivityState.READY) {\n                        this.trace('Picked subchannel ' +\n                            subchannelString +\n                            ' has state ' +\n                            connectivity_state_1.ConnectivityState[pickResult.subchannel.getConnectivityState()] +\n                            ' after getting credentials metadata. Retrying pick');\n                        this.doPick();\n                        return;\n                    }\n                    if (this.deadline !== Infinity) {\n                        finalMetadata.set('grpc-timeout', (0, deadline_1.getDeadlineTimeoutString)(this.deadline));\n                    }\n                    try {\n                        this.child = pickResult\n                            .subchannel.getRealSubchannel()\n                            .createCall(finalMetadata, this.host, this.methodName, {\n                            onReceiveMetadata: metadata => {\n                                this.trace('Received metadata');\n                                this.listener.onReceiveMetadata(metadata);\n                            },\n                            onReceiveMessage: message => {\n                                this.trace('Received message');\n                                this.listener.onReceiveMessage(message);\n                            },\n                            onReceiveStatus: status => {\n                                this.trace('Received status');\n                                if (status.rstCode ===\n                                    http2.constants.NGHTTP2_REFUSED_STREAM) {\n                                    this.outputStatus(status, 'REFUSED');\n                                }\n                                else {\n                                    this.outputStatus(status, 'PROCESSED');\n                                }\n                            },\n                        });\n                    }\n                    catch (error) {\n                        this.trace('Failed to start call on picked subchannel ' +\n                            subchannelString +\n                            ' with error ' +\n                            error.message);\n                        this.outputStatus({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'Failed to start HTTP/2 stream with error ' +\n                                error.message,\n                            metadata: new metadata_1.Metadata(),\n                        }, 'NOT_STARTED');\n                        return;\n                    }\n                    (_b = (_a = this.callConfig).onCommitted) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    (_c = pickResult.onCallStarted) === null || _c === void 0 ? void 0 : _c.call(pickResult);\n                    this.onCallEnded = pickResult.onCallEnded;\n                    this.trace('Created child call [' + this.child.getCallNumber() + ']');\n                    if (this.readPending) {\n                        this.child.startRead();\n                    }\n                    if (this.pendingMessage) {\n                        this.child.sendMessageWithContext(this.pendingMessage.context, this.pendingMessage.message);\n                    }\n                    if (this.pendingHalfClose) {\n                        this.child.halfClose();\n                    }\n                }, (error) => {\n                    // We assume the error code isn't 0 (Status.OK)\n                    const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(typeof error.code === 'number' ? error.code : constants_1.Status.UNKNOWN, `Getting metadata from plugin failed with error: ${error.message}`);\n                    this.outputStatus({\n                        code: code,\n                        details: details,\n                        metadata: new metadata_1.Metadata(),\n                    }, 'PROCESSED');\n                });\n                break;\n            case picker_1.PickResultType.DROP:\n                const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n                setImmediate(() => {\n                    this.outputStatus({ code, details, metadata: pickResult.status.metadata }, 'DROP');\n                });\n                break;\n            case picker_1.PickResultType.TRANSIENT_FAILURE:\n                if (this.metadata.getOptions().waitForReady) {\n                    this.channel.queueCallForPick(this);\n                }\n                else {\n                    const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n                    setImmediate(() => {\n                        this.outputStatus({ code, details, metadata: pickResult.status.metadata }, 'PROCESSED');\n                    });\n                }\n                break;\n            case picker_1.PickResultType.QUEUE:\n                this.channel.queueCallForPick(this);\n        }\n    }\n    cancelWithStatus(status, details) {\n        var _a;\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n        this.outputStatus({ code: status, details: details, metadata: new metadata_1.Metadata() }, 'PROCESSED');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.listener = listener;\n        this.metadata = metadata;\n        this.doPick();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        if (this.child) {\n            this.child.sendMessageWithContext(context, message);\n        }\n        else {\n            this.pendingMessage = { context, message };\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        if (this.child) {\n            this.child.startRead();\n        }\n        else {\n            this.readPending = true;\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        if (this.child) {\n            this.child.halfClose();\n        }\n        else {\n            this.pendingHalfClose = true;\n        }\n    }\n    setCredentials(credentials) {\n        throw new Error('Method not implemented.');\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n}\nexports.LoadBalancingCall = LoadBalancingCall;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvingCall = void 0;\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst TRACER_NAME = 'resolving_call';\nclass ResolvingCall {\n    constructor(channel, method, options, filterStackFactory, credentials, callNumber) {\n        this.channel = channel;\n        this.method = method;\n        this.filterStackFactory = filterStackFactory;\n        this.credentials = credentials;\n        this.callNumber = callNumber;\n        this.child = null;\n        this.readPending = false;\n        this.pendingMessage = null;\n        this.pendingHalfClose = false;\n        this.ended = false;\n        this.readFilterPending = false;\n        this.writeFilterPending = false;\n        this.pendingChildStatus = null;\n        this.metadata = null;\n        this.listener = null;\n        this.statusWatchers = [];\n        this.deadlineTimer = setTimeout(() => { }, 0);\n        this.filterStack = null;\n        this.deadline = options.deadline;\n        this.host = options.host;\n        if (options.parentCall) {\n            if (options.flags & constants_1.Propagate.CANCELLATION) {\n                options.parentCall.on('cancelled', () => {\n                    this.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled by parent call');\n                });\n            }\n            if (options.flags & constants_1.Propagate.DEADLINE) {\n                this.trace('Propagating deadline from parent: ' +\n                    options.parentCall.getDeadline());\n                this.deadline = (0, deadline_1.minDeadline)(this.deadline, options.parentCall.getDeadline());\n            }\n        }\n        this.trace('Created');\n        this.runDeadlineTimer();\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    runDeadlineTimer() {\n        clearTimeout(this.deadlineTimer);\n        this.trace('Deadline: ' + (0, deadline_1.deadlineToString)(this.deadline));\n        const timeout = (0, deadline_1.getRelativeTimeout)(this.deadline);\n        if (timeout !== Infinity) {\n            this.trace('Deadline will be reached in ' + timeout + 'ms');\n            const handleDeadline = () => {\n                this.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n            };\n            if (timeout <= 0) {\n                process.nextTick(handleDeadline);\n            }\n            else {\n                this.deadlineTimer = setTimeout(handleDeadline, timeout);\n            }\n        }\n    }\n    outputStatus(status) {\n        if (!this.ended) {\n            this.ended = true;\n            if (!this.filterStack) {\n                this.filterStack = this.filterStackFactory.createFilter();\n            }\n            clearTimeout(this.deadlineTimer);\n            const filteredStatus = this.filterStack.receiveTrailers(status);\n            this.trace('ended with status: code=' +\n                filteredStatus.code +\n                ' details=\"' +\n                filteredStatus.details +\n                '\"');\n            this.statusWatchers.forEach(watcher => watcher(filteredStatus));\n            process.nextTick(() => {\n                var _a;\n                (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(filteredStatus);\n            });\n        }\n    }\n    sendMessageOnChild(context, message) {\n        if (!this.child) {\n            throw new Error('sendMessageonChild called with child not populated');\n        }\n        const child = this.child;\n        this.writeFilterPending = true;\n        this.filterStack.sendMessage(Promise.resolve({ message: message, flags: context.flags })).then(filteredMessage => {\n            this.writeFilterPending = false;\n            child.sendMessageWithContext(context, filteredMessage.message);\n            if (this.pendingHalfClose) {\n                child.halfClose();\n            }\n        }, (status) => {\n            this.cancelWithStatus(status.code, status.details);\n        });\n    }\n    getConfig() {\n        if (this.ended) {\n            return;\n        }\n        if (!this.metadata || !this.listener) {\n            throw new Error('getConfig called before start');\n        }\n        const configResult = this.channel.getConfig(this.method, this.metadata);\n        if (configResult.type === 'NONE') {\n            this.channel.queueCallForConfig(this);\n            return;\n        }\n        else if (configResult.type === 'ERROR') {\n            if (this.metadata.getOptions().waitForReady) {\n                this.channel.queueCallForConfig(this);\n            }\n            else {\n                this.outputStatus(configResult.error);\n            }\n            return;\n        }\n        // configResult.type === 'SUCCESS'\n        const config = configResult.config;\n        if (config.status !== constants_1.Status.OK) {\n            const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(config.status, 'Failed to route call to method ' + this.method);\n            this.outputStatus({\n                code: code,\n                details: details,\n                metadata: new metadata_1.Metadata(),\n            });\n            return;\n        }\n        if (config.methodConfig.timeout) {\n            const configDeadline = new Date();\n            configDeadline.setSeconds(configDeadline.getSeconds() + config.methodConfig.timeout.seconds);\n            configDeadline.setMilliseconds(configDeadline.getMilliseconds() +\n                config.methodConfig.timeout.nanos / 1000000);\n            this.deadline = (0, deadline_1.minDeadline)(this.deadline, configDeadline);\n            this.runDeadlineTimer();\n        }\n        this.filterStackFactory.push(config.dynamicFilterFactories);\n        this.filterStack = this.filterStackFactory.createFilter();\n        this.filterStack.sendMetadata(Promise.resolve(this.metadata)).then(filteredMetadata => {\n            this.child = this.channel.createInnerCall(config, this.method, this.host, this.credentials, this.deadline);\n            this.trace('Created child [' + this.child.getCallNumber() + ']');\n            this.child.start(filteredMetadata, {\n                onReceiveMetadata: metadata => {\n                    this.trace('Received metadata');\n                    this.listener.onReceiveMetadata(this.filterStack.receiveMetadata(metadata));\n                },\n                onReceiveMessage: message => {\n                    this.trace('Received message');\n                    this.readFilterPending = true;\n                    this.filterStack.receiveMessage(message).then(filteredMesssage => {\n                        this.trace('Finished filtering received message');\n                        this.readFilterPending = false;\n                        this.listener.onReceiveMessage(filteredMesssage);\n                        if (this.pendingChildStatus) {\n                            this.outputStatus(this.pendingChildStatus);\n                        }\n                    }, (status) => {\n                        this.cancelWithStatus(status.code, status.details);\n                    });\n                },\n                onReceiveStatus: status => {\n                    this.trace('Received status');\n                    if (this.readFilterPending) {\n                        this.pendingChildStatus = status;\n                    }\n                    else {\n                        this.outputStatus(status);\n                    }\n                },\n            });\n            if (this.readPending) {\n                this.child.startRead();\n            }\n            if (this.pendingMessage) {\n                this.sendMessageOnChild(this.pendingMessage.context, this.pendingMessage.message);\n            }\n            else if (this.pendingHalfClose) {\n                this.child.halfClose();\n            }\n        }, (status) => {\n            this.outputStatus(status);\n        });\n    }\n    reportResolverError(status) {\n        var _a;\n        if ((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.getOptions().waitForReady) {\n            this.channel.queueCallForConfig(this);\n        }\n        else {\n            this.outputStatus(status);\n        }\n    }\n    cancelWithStatus(status, details) {\n        var _a;\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n        this.outputStatus({\n            code: status,\n            details: details,\n            metadata: new metadata_1.Metadata(),\n        });\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.metadata = metadata.clone();\n        this.listener = listener;\n        this.getConfig();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        if (this.child) {\n            this.sendMessageOnChild(context, message);\n        }\n        else {\n            this.pendingMessage = { context, message };\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        if (this.child) {\n            this.child.startRead();\n        }\n        else {\n            this.readPending = true;\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        if (this.child && !this.writeFilterPending) {\n            this.child.halfClose();\n        }\n        else {\n            this.pendingHalfClose = true;\n        }\n    }\n    setCredentials(credentials) {\n        this.credentials = this.credentials.compose(credentials);\n    }\n    addStatusWatcher(watcher) {\n        this.statusWatchers.push(watcher);\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n}\nexports.ResolvingCall = ResolvingCall;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RetryingCall = exports.MessageBufferTracker = exports.RetryThrottler = void 0;\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'retrying_call';\nclass RetryThrottler {\n    constructor(maxTokens, tokenRatio, previousRetryThrottler) {\n        this.maxTokens = maxTokens;\n        this.tokenRatio = tokenRatio;\n        if (previousRetryThrottler) {\n            /* When carrying over tokens from a previous config, rescale them to the\n             * new max value */\n            this.tokens =\n                previousRetryThrottler.tokens *\n                    (maxTokens / previousRetryThrottler.maxTokens);\n        }\n        else {\n            this.tokens = maxTokens;\n        }\n    }\n    addCallSucceeded() {\n        this.tokens = Math.max(this.tokens + this.tokenRatio, this.maxTokens);\n    }\n    addCallFailed() {\n        this.tokens = Math.min(this.tokens - 1, 0);\n    }\n    canRetryCall() {\n        return this.tokens > this.maxTokens / 2;\n    }\n}\nexports.RetryThrottler = RetryThrottler;\nclass MessageBufferTracker {\n    constructor(totalLimit, limitPerCall) {\n        this.totalLimit = totalLimit;\n        this.limitPerCall = limitPerCall;\n        this.totalAllocated = 0;\n        this.allocatedPerCall = new Map();\n    }\n    allocate(size, callId) {\n        var _a;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (this.limitPerCall - currentPerCall < size ||\n            this.totalLimit - this.totalAllocated < size) {\n            return false;\n        }\n        this.allocatedPerCall.set(callId, currentPerCall + size);\n        this.totalAllocated += size;\n        return true;\n    }\n    free(size, callId) {\n        var _a;\n        if (this.totalAllocated < size) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} freed ${size} > total allocated ${this.totalAllocated}`);\n        }\n        this.totalAllocated -= size;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (currentPerCall < size) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} freed ${size} > allocated for call ${currentPerCall}`);\n        }\n        this.allocatedPerCall.set(callId, currentPerCall - size);\n    }\n    freeAll(callId) {\n        var _a;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (this.totalAllocated < currentPerCall) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} allocated ${currentPerCall} > total allocated ${this.totalAllocated}`);\n        }\n        this.totalAllocated -= currentPerCall;\n        this.allocatedPerCall.delete(callId);\n    }\n}\nexports.MessageBufferTracker = MessageBufferTracker;\nconst PREVIONS_RPC_ATTEMPTS_METADATA_KEY = 'grpc-previous-rpc-attempts';\nclass RetryingCall {\n    constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber, bufferTracker, retryThrottler) {\n        this.channel = channel;\n        this.callConfig = callConfig;\n        this.methodName = methodName;\n        this.host = host;\n        this.credentials = credentials;\n        this.deadline = deadline;\n        this.callNumber = callNumber;\n        this.bufferTracker = bufferTracker;\n        this.retryThrottler = retryThrottler;\n        this.listener = null;\n        this.initialMetadata = null;\n        this.underlyingCalls = [];\n        this.writeBuffer = [];\n        /**\n         * The offset of message indices in the writeBuffer. For example, if\n         * writeBufferOffset is 10, message 10 is in writeBuffer[0] and message 15\n         * is in writeBuffer[5].\n         */\n        this.writeBufferOffset = 0;\n        /**\n         * Tracks whether a read has been started, so that we know whether to start\n         * reads on new child calls. This only matters for the first read, because\n         * once a message comes in the child call becomes committed and there will\n         * be no new child calls.\n         */\n        this.readStarted = false;\n        this.transparentRetryUsed = false;\n        /**\n         * Number of attempts so far\n         */\n        this.attempts = 0;\n        this.hedgingTimer = null;\n        this.committedCallIndex = null;\n        this.initialRetryBackoffSec = 0;\n        this.nextRetryBackoffSec = 0;\n        if (callConfig.methodConfig.retryPolicy) {\n            this.state = 'RETRY';\n            const retryPolicy = callConfig.methodConfig.retryPolicy;\n            this.nextRetryBackoffSec = this.initialRetryBackoffSec = Number(retryPolicy.initialBackoff.substring(0, retryPolicy.initialBackoff.length - 1));\n        }\n        else if (callConfig.methodConfig.hedgingPolicy) {\n            this.state = 'HEDGING';\n        }\n        else {\n            this.state = 'TRANSPARENT_ONLY';\n        }\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    reportStatus(statusObject) {\n        this.trace('ended with status: code=' +\n            statusObject.code +\n            ' details=\"' +\n            statusObject.details +\n            '\"');\n        this.bufferTracker.freeAll(this.callNumber);\n        this.writeBufferOffset = this.writeBufferOffset + this.writeBuffer.length;\n        this.writeBuffer = [];\n        process.nextTick(() => {\n            var _a;\n            // Explicitly construct status object to remove progress field\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus({\n                code: statusObject.code,\n                details: statusObject.details,\n                metadata: statusObject.metadata,\n            });\n        });\n    }\n    cancelWithStatus(status, details) {\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        this.reportStatus({ code: status, details, metadata: new metadata_1.Metadata() });\n        for (const { call } of this.underlyingCalls) {\n            call.cancelWithStatus(status, details);\n        }\n    }\n    getPeer() {\n        if (this.committedCallIndex !== null) {\n            return this.underlyingCalls[this.committedCallIndex].call.getPeer();\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    getBufferEntry(messageIndex) {\n        var _a;\n        return ((_a = this.writeBuffer[messageIndex - this.writeBufferOffset]) !== null && _a !== void 0 ? _a : {\n            entryType: 'FREED',\n            allocated: false,\n        });\n    }\n    getNextBufferIndex() {\n        return this.writeBufferOffset + this.writeBuffer.length;\n    }\n    clearSentMessages() {\n        if (this.state !== 'COMMITTED') {\n            return;\n        }\n        const earliestNeededMessageIndex = this.underlyingCalls[this.committedCallIndex].nextMessageToSend;\n        for (let messageIndex = this.writeBufferOffset; messageIndex < earliestNeededMessageIndex; messageIndex++) {\n            const bufferEntry = this.getBufferEntry(messageIndex);\n            if (bufferEntry.allocated) {\n                this.bufferTracker.free(bufferEntry.message.message.length, this.callNumber);\n            }\n        }\n        this.writeBuffer = this.writeBuffer.slice(earliestNeededMessageIndex - this.writeBufferOffset);\n        this.writeBufferOffset = earliestNeededMessageIndex;\n    }\n    commitCall(index) {\n        if (this.state === 'COMMITTED') {\n            return;\n        }\n        if (this.underlyingCalls[index].state === 'COMPLETED') {\n            return;\n        }\n        this.trace('Committing call [' +\n            this.underlyingCalls[index].call.getCallNumber() +\n            '] at index ' +\n            index);\n        this.state = 'COMMITTED';\n        this.committedCallIndex = index;\n        for (let i = 0; i < this.underlyingCalls.length; i++) {\n            if (i === index) {\n                continue;\n            }\n            if (this.underlyingCalls[i].state === 'COMPLETED') {\n                continue;\n            }\n            this.underlyingCalls[i].state = 'COMPLETED';\n            this.underlyingCalls[i].call.cancelWithStatus(constants_1.Status.CANCELLED, 'Discarded in favor of other hedged attempt');\n        }\n        this.clearSentMessages();\n    }\n    commitCallWithMostMessages() {\n        if (this.state === 'COMMITTED') {\n            return;\n        }\n        let mostMessages = -1;\n        let callWithMostMessages = -1;\n        for (const [index, childCall] of this.underlyingCalls.entries()) {\n            if (childCall.state === 'ACTIVE' &&\n                childCall.nextMessageToSend > mostMessages) {\n                mostMessages = childCall.nextMessageToSend;\n                callWithMostMessages = index;\n            }\n        }\n        if (callWithMostMessages === -1) {\n            /* There are no active calls, disable retries to force the next call that\n             * is started to be committed. */\n            this.state = 'TRANSPARENT_ONLY';\n        }\n        else {\n            this.commitCall(callWithMostMessages);\n        }\n    }\n    isStatusCodeInList(list, code) {\n        return list.some(value => value === code ||\n            value.toString().toLowerCase() === constants_1.Status[code].toLowerCase());\n    }\n    getNextRetryBackoffMs() {\n        var _a;\n        const retryPolicy = (_a = this.callConfig) === null || _a === void 0 ? void 0 : _a.methodConfig.retryPolicy;\n        if (!retryPolicy) {\n            return 0;\n        }\n        const nextBackoffMs = Math.random() * this.nextRetryBackoffSec * 1000;\n        const maxBackoffSec = Number(retryPolicy.maxBackoff.substring(0, retryPolicy.maxBackoff.length - 1));\n        this.nextRetryBackoffSec = Math.min(this.nextRetryBackoffSec * retryPolicy.backoffMultiplier, maxBackoffSec);\n        return nextBackoffMs;\n    }\n    maybeRetryCall(pushback, callback) {\n        if (this.state !== 'RETRY') {\n            callback(false);\n            return;\n        }\n        const retryPolicy = this.callConfig.methodConfig.retryPolicy;\n        if (this.attempts >= Math.min(retryPolicy.maxAttempts, 5)) {\n            callback(false);\n            return;\n        }\n        let retryDelayMs;\n        if (pushback === null) {\n            retryDelayMs = this.getNextRetryBackoffMs();\n        }\n        else if (pushback < 0) {\n            this.state = 'TRANSPARENT_ONLY';\n            callback(false);\n            return;\n        }\n        else {\n            retryDelayMs = pushback;\n            this.nextRetryBackoffSec = this.initialRetryBackoffSec;\n        }\n        setTimeout(() => {\n            var _a, _b;\n            if (this.state !== 'RETRY') {\n                callback(false);\n                return;\n            }\n            if ((_b = (_a = this.retryThrottler) === null || _a === void 0 ? void 0 : _a.canRetryCall()) !== null && _b !== void 0 ? _b : true) {\n                callback(true);\n                this.attempts += 1;\n                this.startNewAttempt();\n            }\n        }, retryDelayMs);\n    }\n    countActiveCalls() {\n        let count = 0;\n        for (const call of this.underlyingCalls) {\n            if ((call === null || call === void 0 ? void 0 : call.state) === 'ACTIVE') {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    handleProcessedStatus(status, callIndex, pushback) {\n        var _a, _b, _c;\n        switch (this.state) {\n            case 'COMMITTED':\n            case 'TRANSPARENT_ONLY':\n                this.commitCall(callIndex);\n                this.reportStatus(status);\n                break;\n            case 'HEDGING':\n                if (this.isStatusCodeInList((_a = this.callConfig.methodConfig.hedgingPolicy.nonFatalStatusCodes) !== null && _a !== void 0 ? _a : [], status.code)) {\n                    (_b = this.retryThrottler) === null || _b === void 0 ? void 0 : _b.addCallFailed();\n                    let delayMs;\n                    if (pushback === null) {\n                        delayMs = 0;\n                    }\n                    else if (pushback < 0) {\n                        this.state = 'TRANSPARENT_ONLY';\n                        this.commitCall(callIndex);\n                        this.reportStatus(status);\n                        return;\n                    }\n                    else {\n                        delayMs = pushback;\n                    }\n                    setTimeout(() => {\n                        this.maybeStartHedgingAttempt();\n                        // If after trying to start a call there are no active calls, this was the last one\n                        if (this.countActiveCalls() === 0) {\n                            this.commitCall(callIndex);\n                            this.reportStatus(status);\n                        }\n                    }, delayMs);\n                }\n                else {\n                    this.commitCall(callIndex);\n                    this.reportStatus(status);\n                }\n                break;\n            case 'RETRY':\n                if (this.isStatusCodeInList(this.callConfig.methodConfig.retryPolicy.retryableStatusCodes, status.code)) {\n                    (_c = this.retryThrottler) === null || _c === void 0 ? void 0 : _c.addCallFailed();\n                    this.maybeRetryCall(pushback, retried => {\n                        if (!retried) {\n                            this.commitCall(callIndex);\n                            this.reportStatus(status);\n                        }\n                    });\n                }\n                else {\n                    this.commitCall(callIndex);\n                    this.reportStatus(status);\n                }\n                break;\n        }\n    }\n    getPushback(metadata) {\n        const mdValue = metadata.get('grpc-retry-pushback-ms');\n        if (mdValue.length === 0) {\n            return null;\n        }\n        try {\n            return parseInt(mdValue[0]);\n        }\n        catch (e) {\n            return -1;\n        }\n    }\n    handleChildStatus(status, callIndex) {\n        var _a;\n        if (this.underlyingCalls[callIndex].state === 'COMPLETED') {\n            return;\n        }\n        this.trace('state=' +\n            this.state +\n            ' handling status with progress ' +\n            status.progress +\n            ' from child [' +\n            this.underlyingCalls[callIndex].call.getCallNumber() +\n            '] in state ' +\n            this.underlyingCalls[callIndex].state);\n        this.underlyingCalls[callIndex].state = 'COMPLETED';\n        if (status.code === constants_1.Status.OK) {\n            (_a = this.retryThrottler) === null || _a === void 0 ? void 0 : _a.addCallSucceeded();\n            this.commitCall(callIndex);\n            this.reportStatus(status);\n            return;\n        }\n        if (this.state === 'COMMITTED') {\n            this.reportStatus(status);\n            return;\n        }\n        const pushback = this.getPushback(status.metadata);\n        switch (status.progress) {\n            case 'NOT_STARTED':\n                // RPC never leaves the client, always safe to retry\n                this.startNewAttempt();\n                break;\n            case 'REFUSED':\n                // RPC reaches the server library, but not the server application logic\n                if (this.transparentRetryUsed) {\n                    this.handleProcessedStatus(status, callIndex, pushback);\n                }\n                else {\n                    this.transparentRetryUsed = true;\n                    this.startNewAttempt();\n                }\n                break;\n            case 'DROP':\n                this.commitCall(callIndex);\n                this.reportStatus(status);\n                break;\n            case 'PROCESSED':\n                this.handleProcessedStatus(status, callIndex, pushback);\n                break;\n        }\n    }\n    maybeStartHedgingAttempt() {\n        if (this.state !== 'HEDGING') {\n            return;\n        }\n        if (!this.callConfig.methodConfig.hedgingPolicy) {\n            return;\n        }\n        const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n        if (this.attempts >= Math.min(hedgingPolicy.maxAttempts, 5)) {\n            return;\n        }\n        this.attempts += 1;\n        this.startNewAttempt();\n        this.maybeStartHedgingTimer();\n    }\n    maybeStartHedgingTimer() {\n        var _a, _b, _c;\n        if (this.hedgingTimer) {\n            clearTimeout(this.hedgingTimer);\n        }\n        if (this.state !== 'HEDGING') {\n            return;\n        }\n        if (!this.callConfig.methodConfig.hedgingPolicy) {\n            return;\n        }\n        const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n        if (this.attempts >= Math.min(hedgingPolicy.maxAttempts, 5)) {\n            return;\n        }\n        const hedgingDelayString = (_a = hedgingPolicy.hedgingDelay) !== null && _a !== void 0 ? _a : '0s';\n        const hedgingDelaySec = Number(hedgingDelayString.substring(0, hedgingDelayString.length - 1));\n        this.hedgingTimer = setTimeout(() => {\n            this.maybeStartHedgingAttempt();\n        }, hedgingDelaySec * 1000);\n        (_c = (_b = this.hedgingTimer).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    startNewAttempt() {\n        const child = this.channel.createLoadBalancingCall(this.callConfig, this.methodName, this.host, this.credentials, this.deadline);\n        this.trace('Created child call [' +\n            child.getCallNumber() +\n            '] for attempt ' +\n            this.attempts);\n        const index = this.underlyingCalls.length;\n        this.underlyingCalls.push({\n            state: 'ACTIVE',\n            call: child,\n            nextMessageToSend: 0,\n        });\n        const previousAttempts = this.attempts - 1;\n        const initialMetadata = this.initialMetadata.clone();\n        if (previousAttempts > 0) {\n            initialMetadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n        }\n        let receivedMetadata = false;\n        child.start(initialMetadata, {\n            onReceiveMetadata: metadata => {\n                this.trace('Received metadata from child [' + child.getCallNumber() + ']');\n                this.commitCall(index);\n                receivedMetadata = true;\n                if (previousAttempts > 0) {\n                    metadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n                }\n                if (this.underlyingCalls[index].state === 'ACTIVE') {\n                    this.listener.onReceiveMetadata(metadata);\n                }\n            },\n            onReceiveMessage: message => {\n                this.trace('Received message from child [' + child.getCallNumber() + ']');\n                this.commitCall(index);\n                if (this.underlyingCalls[index].state === 'ACTIVE') {\n                    this.listener.onReceiveMessage(message);\n                }\n            },\n            onReceiveStatus: status => {\n                this.trace('Received status from child [' + child.getCallNumber() + ']');\n                if (!receivedMetadata && previousAttempts > 0) {\n                    status.metadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n                }\n                this.handleChildStatus(status, index);\n            },\n        });\n        this.sendNextChildMessage(index);\n        if (this.readStarted) {\n            child.startRead();\n        }\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.listener = listener;\n        this.initialMetadata = metadata;\n        this.attempts += 1;\n        this.startNewAttempt();\n        this.maybeStartHedgingTimer();\n    }\n    handleChildWriteCompleted(childIndex) {\n        var _a, _b;\n        const childCall = this.underlyingCalls[childIndex];\n        const messageIndex = childCall.nextMessageToSend;\n        (_b = (_a = this.getBufferEntry(messageIndex)).callback) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.clearSentMessages();\n        childCall.nextMessageToSend += 1;\n        this.sendNextChildMessage(childIndex);\n    }\n    sendNextChildMessage(childIndex) {\n        const childCall = this.underlyingCalls[childIndex];\n        if (childCall.state === 'COMPLETED') {\n            return;\n        }\n        if (this.getBufferEntry(childCall.nextMessageToSend)) {\n            const bufferEntry = this.getBufferEntry(childCall.nextMessageToSend);\n            switch (bufferEntry.entryType) {\n                case 'MESSAGE':\n                    childCall.call.sendMessageWithContext({\n                        callback: error => {\n                            // Ignore error\n                            this.handleChildWriteCompleted(childIndex);\n                        },\n                    }, bufferEntry.message.message);\n                    break;\n                case 'HALF_CLOSE':\n                    childCall.nextMessageToSend += 1;\n                    childCall.call.halfClose();\n                    break;\n                case 'FREED':\n                    // Should not be possible\n                    break;\n            }\n        }\n    }\n    sendMessageWithContext(context, message) {\n        var _a;\n        this.trace('write() called with message of length ' + message.length);\n        const writeObj = {\n            message,\n            flags: context.flags,\n        };\n        const messageIndex = this.getNextBufferIndex();\n        const bufferEntry = {\n            entryType: 'MESSAGE',\n            message: writeObj,\n            allocated: this.bufferTracker.allocate(message.length, this.callNumber),\n        };\n        this.writeBuffer.push(bufferEntry);\n        if (bufferEntry.allocated) {\n            (_a = context.callback) === null || _a === void 0 ? void 0 : _a.call(context);\n            for (const [callIndex, call] of this.underlyingCalls.entries()) {\n                if (call.state === 'ACTIVE' &&\n                    call.nextMessageToSend === messageIndex) {\n                    call.call.sendMessageWithContext({\n                        callback: error => {\n                            // Ignore error\n                            this.handleChildWriteCompleted(callIndex);\n                        },\n                    }, message);\n                }\n            }\n        }\n        else {\n            this.commitCallWithMostMessages();\n            // commitCallWithMostMessages can fail if we are between ping attempts\n            if (this.committedCallIndex === null) {\n                return;\n            }\n            const call = this.underlyingCalls[this.committedCallIndex];\n            bufferEntry.callback = context.callback;\n            if (call.state === 'ACTIVE' && call.nextMessageToSend === messageIndex) {\n                call.call.sendMessageWithContext({\n                    callback: error => {\n                        // Ignore error\n                        this.handleChildWriteCompleted(this.committedCallIndex);\n                    },\n                }, message);\n            }\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        this.readStarted = true;\n        for (const underlyingCall of this.underlyingCalls) {\n            if ((underlyingCall === null || underlyingCall === void 0 ? void 0 : underlyingCall.state) === 'ACTIVE') {\n                underlyingCall.call.startRead();\n            }\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        const halfCloseIndex = this.getNextBufferIndex();\n        this.writeBuffer.push({\n            entryType: 'HALF_CLOSE',\n            allocated: false,\n        });\n        for (const call of this.underlyingCalls) {\n            if ((call === null || call === void 0 ? void 0 : call.state) === 'ACTIVE' &&\n                call.nextMessageToSend === halfCloseIndex) {\n                call.nextMessageToSend += 1;\n                call.call.halfClose();\n            }\n        }\n    }\n    setCredentials(newCredentials) {\n        throw new Error('Method not implemented.');\n    }\n    getMethod() {\n        return this.methodName;\n    }\n    getHost() {\n        return this.host;\n    }\n}\nexports.RetryingCall = RetryingCall;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseSubchannelWrapper = void 0;\nclass BaseSubchannelWrapper {\n    constructor(child) {\n        this.child = child;\n    }\n    getConnectivityState() {\n        return this.child.getConnectivityState();\n    }\n    addConnectivityStateListener(listener) {\n        this.child.addConnectivityStateListener(listener);\n    }\n    removeConnectivityStateListener(listener) {\n        this.child.removeConnectivityStateListener(listener);\n    }\n    startConnecting() {\n        this.child.startConnecting();\n    }\n    getAddress() {\n        return this.child.getAddress();\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        this.child.throttleKeepalive(newKeepaliveTime);\n    }\n    ref() {\n        this.child.ref();\n    }\n    unref() {\n        this.child.unref();\n    }\n    getChannelzRef() {\n        return this.child.getChannelzRef();\n    }\n    getRealSubchannel() {\n        return this.child.getRealSubchannel();\n    }\n    realSubchannelEquals(other) {\n        return this.getRealSubchannel() === other.getRealSubchannel();\n    }\n}\nexports.BaseSubchannelWrapper = BaseSubchannelWrapper;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalChannel = void 0;\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst resolving_load_balancer_1 = require(\"./resolving-load-balancer\");\nconst subchannel_pool_1 = require(\"./subchannel-pool\");\nconst picker_1 = require(\"./picker\");\nconst constants_1 = require(\"./constants\");\nconst filter_stack_1 = require(\"./filter-stack\");\nconst compression_filter_1 = require(\"./compression-filter\");\nconst resolver_1 = require(\"./resolver\");\nconst logging_1 = require(\"./logging\");\nconst http_proxy_1 = require(\"./http_proxy\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst channelz_1 = require(\"./channelz\");\nconst load_balancing_call_1 = require(\"./load-balancing-call\");\nconst deadline_1 = require(\"./deadline\");\nconst resolving_call_1 = require(\"./resolving-call\");\nconst call_number_1 = require(\"./call-number\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst retrying_call_1 = require(\"./retrying-call\");\nconst subchannel_interface_1 = require(\"./subchannel-interface\");\n/**\n * See https://nodejs.org/api/timers.html#timers_setinterval_callback_delay_args\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\nconst MIN_IDLE_TIMEOUT_MS = 1000;\n// 30 minutes\nconst DEFAULT_IDLE_TIMEOUT_MS = 30 * 60 * 1000;\nconst RETRY_THROTTLER_MAP = new Map();\nconst DEFAULT_RETRY_BUFFER_SIZE_BYTES = 1 << 24; // 16 MB\nconst DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES = 1 << 20; // 1 MB\nclass ChannelSubchannelWrapper extends subchannel_interface_1.BaseSubchannelWrapper {\n    constructor(childSubchannel, channel) {\n        super(childSubchannel);\n        this.channel = channel;\n        this.refCount = 0;\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime) => {\n            channel.throttleKeepalive(keepaliveTime);\n        };\n        childSubchannel.addConnectivityStateListener(this.subchannelStateListener);\n    }\n    ref() {\n        this.child.ref();\n        this.refCount += 1;\n    }\n    unref() {\n        this.child.unref();\n        this.refCount -= 1;\n        if (this.refCount <= 0) {\n            this.child.removeConnectivityStateListener(this.subchannelStateListener);\n            this.channel.removeWrappedSubchannel(this);\n        }\n    }\n}\nclass InternalChannel {\n    constructor(target, credentials, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.credentials = credentials;\n        this.options = options;\n        this.connectivityState = connectivity_state_1.ConnectivityState.IDLE;\n        this.currentPicker = new picker_1.UnavailablePicker();\n        /**\n         * Calls queued up to get a call config. Should only be populated before the\n         * first time the resolver returns a result, which includes the ConfigSelector.\n         */\n        this.configSelectionQueue = [];\n        this.pickQueue = [];\n        this.connectivityStateWatchers = [];\n        this.configSelector = null;\n        /**\n         * This is the error from the name resolver if it failed most recently. It\n         * is only used to end calls that start while there is no config selector\n         * and the name resolver is in backoff, so it should be nulled if\n         * configSelector becomes set or the channel state becomes anything other\n         * than TRANSIENT_FAILURE.\n         */\n        this.currentResolutionError = null;\n        this.wrappedSubchannels = new Set();\n        this.callCount = 0;\n        this.idleTimer = null;\n        // Channelz info\n        this.channelzEnabled = true;\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.childrenTracker = new channelz_1.ChannelzChildrenTracker();\n        if (typeof target !== 'string') {\n            throw new TypeError('Channel target must be a string');\n        }\n        if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n            throw new TypeError('Channel credentials must be a ChannelCredentials object');\n        }\n        if (options) {\n            if (typeof options !== 'object') {\n                throw new TypeError('Channel options must be an object');\n            }\n        }\n        this.originalTarget = target;\n        const originalTargetUri = (0, uri_parser_1.parseUri)(target);\n        if (originalTargetUri === null) {\n            throw new Error(`Could not parse target name \"${target}\"`);\n        }\n        /* This ensures that the target has a scheme that is registered with the\n         * resolver */\n        const defaultSchemeMapResult = (0, resolver_1.mapUriDefaultScheme)(originalTargetUri);\n        if (defaultSchemeMapResult === null) {\n            throw new Error(`Could not find a default scheme for target name \"${target}\"`);\n        }\n        this.callRefTimer = setInterval(() => { }, MAX_TIMEOUT_TIME);\n        (_b = (_a = this.callRefTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (this.options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.channelzRef = (0, channelz_1.registerChannelzChannel)(target, () => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Channel created');\n        }\n        if (this.options['grpc.default_authority']) {\n            this.defaultAuthority = this.options['grpc.default_authority'];\n        }\n        else {\n            this.defaultAuthority = (0, resolver_1.getDefaultAuthority)(defaultSchemeMapResult);\n        }\n        const proxyMapResult = (0, http_proxy_1.mapProxyName)(defaultSchemeMapResult, options);\n        this.target = proxyMapResult.target;\n        this.options = Object.assign({}, this.options, proxyMapResult.extraOptions);\n        /* The global boolean parameter to getSubchannelPool has the inverse meaning to what\n         * the grpc.use_local_subchannel_pool channel option means. */\n        this.subchannelPool = (0, subchannel_pool_1.getSubchannelPool)(((_c = options['grpc.use_local_subchannel_pool']) !== null && _c !== void 0 ? _c : 0) === 0);\n        this.retryBufferTracker = new retrying_call_1.MessageBufferTracker((_d = options['grpc.retry_buffer_size']) !== null && _d !== void 0 ? _d : DEFAULT_RETRY_BUFFER_SIZE_BYTES, (_e = options['grpc.per_rpc_retry_buffer_size']) !== null && _e !== void 0 ? _e : DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES);\n        this.keepaliveTime = (_f = options['grpc.keepalive_time_ms']) !== null && _f !== void 0 ? _f : -1;\n        this.idleTimeoutMs = Math.max((_g = options['grpc.client_idle_timeout_ms']) !== null && _g !== void 0 ? _g : DEFAULT_IDLE_TIMEOUT_MS, MIN_IDLE_TIMEOUT_MS);\n        const channelControlHelper = {\n            createSubchannel: (subchannelAddress, subchannelArgs) => {\n                const subchannel = this.subchannelPool.getOrCreateSubchannel(this.target, subchannelAddress, Object.assign({}, this.options, subchannelArgs), this.credentials);\n                subchannel.throttleKeepalive(this.keepaliveTime);\n                if (this.channelzEnabled) {\n                    this.channelzTrace.addTrace('CT_INFO', 'Created subchannel or used existing subchannel', subchannel.getChannelzRef());\n                }\n                const wrappedSubchannel = new ChannelSubchannelWrapper(subchannel, this);\n                this.wrappedSubchannels.add(wrappedSubchannel);\n                return wrappedSubchannel;\n            },\n            updateState: (connectivityState, picker) => {\n                this.currentPicker = picker;\n                const queueCopy = this.pickQueue.slice();\n                this.pickQueue = [];\n                if (queueCopy.length > 0) {\n                    this.callRefTimerUnref();\n                }\n                for (const call of queueCopy) {\n                    call.doPick();\n                }\n                this.updateState(connectivityState);\n            },\n            requestReresolution: () => {\n                // This should never be called.\n                throw new Error('Resolving load balancer should never call requestReresolution');\n            },\n            addChannelzChild: (child) => {\n                if (this.channelzEnabled) {\n                    this.childrenTracker.refChild(child);\n                }\n            },\n            removeChannelzChild: (child) => {\n                if (this.channelzEnabled) {\n                    this.childrenTracker.unrefChild(child);\n                }\n            },\n        };\n        this.resolvingLoadBalancer = new resolving_load_balancer_1.ResolvingLoadBalancer(this.target, channelControlHelper, options, (serviceConfig, configSelector) => {\n            if (serviceConfig.retryThrottling) {\n                RETRY_THROTTLER_MAP.set(this.getTarget(), new retrying_call_1.RetryThrottler(serviceConfig.retryThrottling.maxTokens, serviceConfig.retryThrottling.tokenRatio, RETRY_THROTTLER_MAP.get(this.getTarget())));\n            }\n            else {\n                RETRY_THROTTLER_MAP.delete(this.getTarget());\n            }\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Address resolution succeeded');\n            }\n            this.configSelector = configSelector;\n            this.currentResolutionError = null;\n            /* We process the queue asynchronously to ensure that the corresponding\n             * load balancer update has completed. */\n            process.nextTick(() => {\n                const localQueue = this.configSelectionQueue;\n                this.configSelectionQueue = [];\n                if (localQueue.length > 0) {\n                    this.callRefTimerUnref();\n                }\n                for (const call of localQueue) {\n                    call.getConfig();\n                }\n            });\n        }, status => {\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_WARNING', 'Address resolution failed with code ' +\n                    status.code +\n                    ' and details \"' +\n                    status.details +\n                    '\"');\n            }\n            if (this.configSelectionQueue.length > 0) {\n                this.trace('Name resolution failed with calls queued for config selection');\n            }\n            if (this.configSelector === null) {\n                this.currentResolutionError = Object.assign(Object.assign({}, (0, control_plane_status_1.restrictControlPlaneStatusCode)(status.code, status.details)), { metadata: status.metadata });\n            }\n            const localQueue = this.configSelectionQueue;\n            this.configSelectionQueue = [];\n            if (localQueue.length > 0) {\n                this.callRefTimerUnref();\n            }\n            for (const call of localQueue) {\n                call.reportResolverError(status);\n            }\n        });\n        this.filterStackFactory = new filter_stack_1.FilterStackFactory([\n            new compression_filter_1.CompressionFilterFactory(this, this.options),\n        ]);\n        this.trace('Channel constructed with options ' +\n            JSON.stringify(options, undefined, 2));\n        const error = new Error();\n        (0, logging_1.trace)(constants_1.LogVerbosity.DEBUG, 'channel_stacktrace', '(' +\n            this.channelzRef.id +\n            ') ' +\n            'Channel constructed \\n' +\n            ((_h = error.stack) === null || _h === void 0 ? void 0 : _h.substring(error.stack.indexOf('\\n') + 1)));\n        this.lastActivityTimestamp = new Date();\n    }\n    getChannelzInfo() {\n        return {\n            target: this.originalTarget,\n            state: this.connectivityState,\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            children: this.childrenTracker.getChildLists(),\n        };\n    }\n    trace(text, verbosityOverride) {\n        (0, logging_1.trace)(verbosityOverride !== null && verbosityOverride !== void 0 ? verbosityOverride : constants_1.LogVerbosity.DEBUG, 'channel', '(' + this.channelzRef.id + ') ' + (0, uri_parser_1.uriToString)(this.target) + ' ' + text);\n    }\n    callRefTimerRef() {\n        var _a, _b, _c, _d;\n        // If the hasRef function does not exist, always run the code\n        if (!((_b = (_a = this.callRefTimer).hasRef) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n            this.trace('callRefTimer.ref | configSelectionQueue.length=' +\n                this.configSelectionQueue.length +\n                ' pickQueue.length=' +\n                this.pickQueue.length);\n            (_d = (_c = this.callRefTimer).ref) === null || _d === void 0 ? void 0 : _d.call(_c);\n        }\n    }\n    callRefTimerUnref() {\n        var _a, _b;\n        // If the hasRef function does not exist, always run the code\n        if (!this.callRefTimer.hasRef || this.callRefTimer.hasRef()) {\n            this.trace('callRefTimer.unref | configSelectionQueue.length=' +\n                this.configSelectionQueue.length +\n                ' pickQueue.length=' +\n                this.pickQueue.length);\n            (_b = (_a = this.callRefTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    removeConnectivityStateWatcher(watcherObject) {\n        const watcherIndex = this.connectivityStateWatchers.findIndex(value => value === watcherObject);\n        if (watcherIndex >= 0) {\n            this.connectivityStateWatchers.splice(watcherIndex, 1);\n        }\n    }\n    updateState(newState) {\n        (0, logging_1.trace)(constants_1.LogVerbosity.DEBUG, 'connectivity_state', '(' +\n            this.channelzRef.id +\n            ') ' +\n            (0, uri_parser_1.uriToString)(this.target) +\n            ' ' +\n            connectivity_state_1.ConnectivityState[this.connectivityState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Connectivity state change to ' + connectivity_state_1.ConnectivityState[newState]);\n        }\n        this.connectivityState = newState;\n        const watchersCopy = this.connectivityStateWatchers.slice();\n        for (const watcherObject of watchersCopy) {\n            if (newState !== watcherObject.currentState) {\n                if (watcherObject.timer) {\n                    clearTimeout(watcherObject.timer);\n                }\n                this.removeConnectivityStateWatcher(watcherObject);\n                watcherObject.callback();\n            }\n        }\n        if (newState !== connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n            this.currentResolutionError = null;\n        }\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        if (newKeepaliveTime > this.keepaliveTime) {\n            this.keepaliveTime = newKeepaliveTime;\n            for (const wrappedSubchannel of this.wrappedSubchannels) {\n                wrappedSubchannel.throttleKeepalive(newKeepaliveTime);\n            }\n        }\n    }\n    removeWrappedSubchannel(wrappedSubchannel) {\n        this.wrappedSubchannels.delete(wrappedSubchannel);\n    }\n    doPick(metadata, extraPickInfo) {\n        return this.currentPicker.pick({\n            metadata: metadata,\n            extraPickInfo: extraPickInfo,\n        });\n    }\n    queueCallForPick(call) {\n        this.pickQueue.push(call);\n        this.callRefTimerRef();\n    }\n    getConfig(method, metadata) {\n        this.resolvingLoadBalancer.exitIdle();\n        if (this.configSelector) {\n            return {\n                type: 'SUCCESS',\n                config: this.configSelector(method, metadata),\n            };\n        }\n        else {\n            if (this.currentResolutionError) {\n                return {\n                    type: 'ERROR',\n                    error: this.currentResolutionError,\n                };\n            }\n            else {\n                return {\n                    type: 'NONE',\n                };\n            }\n        }\n    }\n    queueCallForConfig(call) {\n        this.configSelectionQueue.push(call);\n        this.callRefTimerRef();\n    }\n    enterIdle() {\n        this.resolvingLoadBalancer.destroy();\n        this.updateState(connectivity_state_1.ConnectivityState.IDLE);\n        this.currentPicker = new picker_1.QueuePicker(this.resolvingLoadBalancer);\n        if (this.idleTimer) {\n            clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n    }\n    startIdleTimeout(timeoutMs) {\n        var _a, _b;\n        this.idleTimer = setTimeout(() => {\n            if (this.callCount > 0) {\n                /* If there is currently a call, the channel will not go idle for a\n                 * period of at least idleTimeoutMs, so check again after that time.\n                 */\n                this.startIdleTimeout(this.idleTimeoutMs);\n                return;\n            }\n            const now = new Date();\n            const timeSinceLastActivity = now.valueOf() - this.lastActivityTimestamp.valueOf();\n            if (timeSinceLastActivity >= this.idleTimeoutMs) {\n                this.trace('Idle timer triggered after ' +\n                    this.idleTimeoutMs +\n                    'ms of inactivity');\n                this.enterIdle();\n            }\n            else {\n                /* Whenever the timer fires with the latest activity being too recent,\n                 * set the timer again for the time when the time since the last\n                 * activity is equal to the timeout. This should result in the timer\n                 * firing no more than once every idleTimeoutMs/2 on average. */\n                this.startIdleTimeout(this.idleTimeoutMs - timeSinceLastActivity);\n            }\n        }, timeoutMs);\n        (_b = (_a = this.idleTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    maybeStartIdleTimer() {\n        if (this.connectivityState !== connectivity_state_1.ConnectivityState.SHUTDOWN && !this.idleTimer) {\n            this.startIdleTimeout(this.idleTimeoutMs);\n        }\n    }\n    onCallStart() {\n        if (this.channelzEnabled) {\n            this.callTracker.addCallStarted();\n        }\n        this.callCount += 1;\n    }\n    onCallEnd(status) {\n        if (this.channelzEnabled) {\n            if (status.code === constants_1.Status.OK) {\n                this.callTracker.addCallSucceeded();\n            }\n            else {\n                this.callTracker.addCallFailed();\n            }\n        }\n        this.callCount -= 1;\n        this.lastActivityTimestamp = new Date();\n        this.maybeStartIdleTimer();\n    }\n    createLoadBalancingCall(callConfig, method, host, credentials, deadline) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createLoadBalancingCall [' + callNumber + '] method=\"' + method + '\"');\n        return new load_balancing_call_1.LoadBalancingCall(this, callConfig, method, host, credentials, deadline, callNumber);\n    }\n    createRetryingCall(callConfig, method, host, credentials, deadline) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createRetryingCall [' + callNumber + '] method=\"' + method + '\"');\n        return new retrying_call_1.RetryingCall(this, callConfig, method, host, credentials, deadline, callNumber, this.retryBufferTracker, RETRY_THROTTLER_MAP.get(this.getTarget()));\n    }\n    createInnerCall(callConfig, method, host, credentials, deadline) {\n        // Create a RetryingCall if retries are enabled\n        if (this.options['grpc.enable_retries'] === 0) {\n            return this.createLoadBalancingCall(callConfig, method, host, credentials, deadline);\n        }\n        else {\n            return this.createRetryingCall(callConfig, method, host, credentials, deadline);\n        }\n    }\n    createResolvingCall(method, deadline, host, parentCall, propagateFlags) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createResolvingCall [' +\n            callNumber +\n            '] method=\"' +\n            method +\n            '\", deadline=' +\n            (0, deadline_1.deadlineToString)(deadline));\n        const finalOptions = {\n            deadline: deadline,\n            flags: propagateFlags !== null && propagateFlags !== void 0 ? propagateFlags : constants_1.Propagate.DEFAULTS,\n            host: host !== null && host !== void 0 ? host : this.defaultAuthority,\n            parentCall: parentCall,\n        };\n        const call = new resolving_call_1.ResolvingCall(this, method, finalOptions, this.filterStackFactory.clone(), this.credentials._getCallCredentials(), callNumber);\n        this.onCallStart();\n        call.addStatusWatcher(status => {\n            this.onCallEnd(status);\n        });\n        return call;\n    }\n    close() {\n        this.resolvingLoadBalancer.destroy();\n        this.updateState(connectivity_state_1.ConnectivityState.SHUTDOWN);\n        clearInterval(this.callRefTimer);\n        if (this.idleTimer) {\n            clearTimeout(this.idleTimer);\n        }\n        if (this.channelzEnabled) {\n            (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n        }\n        this.subchannelPool.unrefUnusedSubchannels();\n    }\n    getTarget() {\n        return (0, uri_parser_1.uriToString)(this.target);\n    }\n    getConnectivityState(tryToConnect) {\n        const connectivityState = this.connectivityState;\n        if (tryToConnect) {\n            this.resolvingLoadBalancer.exitIdle();\n            this.lastActivityTimestamp = new Date();\n            this.maybeStartIdleTimer();\n        }\n        return connectivityState;\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n        if (this.connectivityState === connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            throw new Error('Channel has been shut down');\n        }\n        let timer = null;\n        if (deadline !== Infinity) {\n            const deadlineDate = deadline instanceof Date ? deadline : new Date(deadline);\n            const now = new Date();\n            if (deadline === -Infinity || deadlineDate <= now) {\n                process.nextTick(callback, new Error('Deadline passed without connectivity state change'));\n                return;\n            }\n            timer = setTimeout(() => {\n                this.removeConnectivityStateWatcher(watcherObject);\n                callback(new Error('Deadline passed without connectivity state change'));\n            }, deadlineDate.getTime() - now.getTime());\n        }\n        const watcherObject = {\n            currentState,\n            callback,\n            timer,\n        };\n        this.connectivityStateWatchers.push(watcherObject);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n        if (typeof method !== 'string') {\n            throw new TypeError('Channel#createCall: method must be a string');\n        }\n        if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n            throw new TypeError('Channel#createCall: deadline must be a number or Date');\n        }\n        if (this.connectivityState === connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            throw new Error('Channel has been shut down');\n        }\n        return this.createResolvingCall(method, deadline, host, parentCall, propagateFlags);\n    }\n}\nexports.InternalChannel = InternalChannel;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelImplementation = void 0;\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst internal_channel_1 = require(\"./internal-channel\");\nclass ChannelImplementation {\n    constructor(target, credentials, options) {\n        if (typeof target !== 'string') {\n            throw new TypeError('Channel target must be a string');\n        }\n        if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n            throw new TypeError('Channel credentials must be a ChannelCredentials object');\n        }\n        if (options) {\n            if (typeof options !== 'object') {\n                throw new TypeError('Channel options must be an object');\n            }\n        }\n        this.internalChannel = new internal_channel_1.InternalChannel(target, credentials, options);\n    }\n    close() {\n        this.internalChannel.close();\n    }\n    getTarget() {\n        return this.internalChannel.getTarget();\n    }\n    getConnectivityState(tryToConnect) {\n        return this.internalChannel.getConnectivityState(tryToConnect);\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n        this.internalChannel.watchConnectivityState(currentState, deadline, callback);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.internalChannel.getChannelzRef();\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n        if (typeof method !== 'string') {\n            throw new TypeError('Channel#createCall: method must be a string');\n        }\n        if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n            throw new TypeError('Channel#createCall: deadline must be a number or Date');\n        }\n        return this.internalChannel.createCall(method, deadline, host, parentCall, propagateFlags);\n    }\n}\nexports.ChannelImplementation = ChannelImplementation;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2ServerCallStream = exports.ServerDuplexStreamImpl = exports.ServerWritableStreamImpl = exports.ServerReadableStreamImpl = exports.ServerUnaryCallImpl = void 0;\nconst events_1 = require(\"events\");\nconst http2 = require(\"http2\");\nconst stream_1 = require(\"stream\");\nconst zlib = require(\"zlib\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst stream_decoder_1 = require(\"./stream-decoder\");\nconst logging = require(\"./logging\");\nconst error_1 = require(\"./error\");\nconst TRACER_NAME = 'server_call';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst GRPC_ACCEPT_ENCODING_HEADER = 'grpc-accept-encoding';\nconst GRPC_ENCODING_HEADER = 'grpc-encoding';\nconst GRPC_MESSAGE_HEADER = 'grpc-message';\nconst GRPC_STATUS_HEADER = 'grpc-status';\nconst GRPC_TIMEOUT_HEADER = 'grpc-timeout';\nconst DEADLINE_REGEX = /(\\d{1,8})\\s*([HMSmun])/;\nconst deadlineUnitsToMs = {\n    H: 3600000,\n    M: 60000,\n    S: 1000,\n    m: 1,\n    u: 0.001,\n    n: 0.000001,\n};\nconst defaultCompressionHeaders = {\n    // TODO(cjihrig): Remove these encoding headers from the default response\n    // once compression is integrated.\n    [GRPC_ACCEPT_ENCODING_HEADER]: 'identity,deflate,gzip',\n    [GRPC_ENCODING_HEADER]: 'identity',\n};\nconst defaultResponseHeaders = {\n    [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_OK,\n    [http2.constants.HTTP2_HEADER_CONTENT_TYPE]: 'application/grpc+proto',\n};\nconst defaultResponseOptions = {\n    waitForTrailers: true,\n};\nclass ServerUnaryCallImpl extends events_1.EventEmitter {\n    constructor(call, metadata, request) {\n        super();\n        this.call = call;\n        this.metadata = metadata;\n        this.request = request;\n        this.cancelled = false;\n        this.call.setupSurfaceCall(this);\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n}\nexports.ServerUnaryCallImpl = ServerUnaryCallImpl;\nclass ServerReadableStreamImpl extends stream_1.Readable {\n    constructor(call, metadata, deserialize, encoding) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.deserialize = deserialize;\n        this.cancelled = false;\n        this.call.setupSurfaceCall(this);\n        this.call.setupReadable(this, encoding);\n    }\n    _read(size) {\n        if (!this.call.consumeUnpushedMessages(this)) {\n            return;\n        }\n        this.call.resume();\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n}\nexports.ServerReadableStreamImpl = ServerReadableStreamImpl;\nclass ServerWritableStreamImpl extends stream_1.Writable {\n    constructor(call, metadata, serialize, request) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.serialize = serialize;\n        this.request = request;\n        this.cancelled = false;\n        this.trailingMetadata = new metadata_1.Metadata();\n        this.call.setupSurfaceCall(this);\n        this.on('error', err => {\n            this.call.sendError(err);\n            this.end();\n        });\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n    _write(chunk, encoding, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        try {\n            const response = this.call.serializeMessage(chunk);\n            if (!this.call.write(response)) {\n                this.call.once('drain', callback);\n                return;\n            }\n        }\n        catch (err) {\n            this.emit('error', {\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            });\n        }\n        callback();\n    }\n    _final(callback) {\n        this.call.sendStatus({\n            code: constants_1.Status.OK,\n            details: 'OK',\n            metadata: this.trailingMetadata,\n        });\n        callback(null);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    end(metadata) {\n        if (metadata) {\n            this.trailingMetadata = metadata;\n        }\n        return super.end();\n    }\n}\nexports.ServerWritableStreamImpl = ServerWritableStreamImpl;\nclass ServerDuplexStreamImpl extends stream_1.Duplex {\n    constructor(call, metadata, serialize, deserialize, encoding) {\n        super({ objectMode: true });\n        this.call = call;\n        this.metadata = metadata;\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n        this.cancelled = false;\n        this.trailingMetadata = new metadata_1.Metadata();\n        this.call.setupSurfaceCall(this);\n        this.call.setupReadable(this, encoding);\n        this.on('error', err => {\n            this.call.sendError(err);\n            this.end();\n        });\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.call.getPath();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    end(metadata) {\n        if (metadata) {\n            this.trailingMetadata = metadata;\n        }\n        return super.end();\n    }\n}\nexports.ServerDuplexStreamImpl = ServerDuplexStreamImpl;\nServerDuplexStreamImpl.prototype._read =\n    ServerReadableStreamImpl.prototype._read;\nServerDuplexStreamImpl.prototype._write =\n    ServerWritableStreamImpl.prototype._write;\nServerDuplexStreamImpl.prototype._final =\n    ServerWritableStreamImpl.prototype._final;\n// Internal class that wraps the HTTP2 request.\nclass Http2ServerCallStream extends events_1.EventEmitter {\n    constructor(stream, handler, options) {\n        super();\n        this.stream = stream;\n        this.handler = handler;\n        this.cancelled = false;\n        this.deadlineTimer = null;\n        this.statusSent = false;\n        this.deadline = Infinity;\n        this.wantTrailers = false;\n        this.metadataSent = false;\n        this.canPush = false;\n        this.isPushPending = false;\n        this.bufferedMessages = [];\n        this.messagesToPush = [];\n        this.maxSendMessageSize = constants_1.DEFAULT_MAX_SEND_MESSAGE_LENGTH;\n        this.maxReceiveMessageSize = constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        this.stream.once('error', (err) => {\n            /* We need an error handler to avoid uncaught error event exceptions, but\n             * there is nothing we can reasonably do here. Any error event should\n             * have a corresponding close event, which handles emitting the cancelled\n             * event. And the stream is now in a bad state, so we can't reasonably\n             * expect to be able to send an error over it. */\n        });\n        this.stream.once('close', () => {\n            var _a;\n            trace('Request to method ' +\n                ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.path) +\n                ' stream closed with rstCode ' +\n                this.stream.rstCode);\n            if (!this.statusSent) {\n                this.cancelled = true;\n                this.emit('cancelled', 'cancelled');\n                this.emit('streamEnd', false);\n                this.sendStatus({\n                    code: constants_1.Status.CANCELLED,\n                    details: 'Cancelled by client',\n                    metadata: null,\n                });\n                if (this.deadlineTimer)\n                    clearTimeout(this.deadlineTimer);\n            }\n        });\n        this.stream.on('drain', () => {\n            this.emit('drain');\n        });\n        if ('grpc.max_send_message_length' in options) {\n            this.maxSendMessageSize = options['grpc.max_send_message_length'];\n        }\n        if ('grpc.max_receive_message_length' in options) {\n            this.maxReceiveMessageSize = options['grpc.max_receive_message_length'];\n        }\n    }\n    checkCancelled() {\n        /* In some cases the stream can become destroyed before the close event\n         * fires. That creates a race condition that this check works around */\n        if (this.stream.destroyed || this.stream.closed) {\n            this.cancelled = true;\n        }\n        return this.cancelled;\n    }\n    getDecompressedMessage(message, encoding) {\n        const messageContents = message.subarray(5);\n        if (encoding === 'identity') {\n            return messageContents;\n        }\n        else if (encoding === 'deflate' || encoding === 'gzip') {\n            let decompresser;\n            if (encoding === 'deflate') {\n                decompresser = zlib.createInflate();\n            }\n            else {\n                decompresser = zlib.createGunzip();\n            }\n            return new Promise((resolve, reject) => {\n                let totalLength = 0;\n                const messageParts = [];\n                decompresser.on('data', (chunk) => {\n                    messageParts.push(chunk);\n                    totalLength += chunk.byteLength;\n                    if (this.maxReceiveMessageSize !== -1 && totalLength > this.maxReceiveMessageSize) {\n                        decompresser.destroy();\n                        reject({\n                            code: constants_1.Status.RESOURCE_EXHAUSTED,\n                            details: `Received message that decompresses to a size larger than ${this.maxReceiveMessageSize}`\n                        });\n                    }\n                });\n                decompresser.on('end', () => {\n                    resolve(Buffer.concat(messageParts));\n                });\n                decompresser.write(messageContents);\n                decompresser.end();\n            });\n        }\n        else {\n            return Promise.reject({\n                code: constants_1.Status.UNIMPLEMENTED,\n                details: `Received message compressed with unsupported encoding \"${encoding}\"`,\n            });\n        }\n    }\n    sendMetadata(customMetadata) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (this.metadataSent) {\n            return;\n        }\n        this.metadataSent = true;\n        const custom = customMetadata ? customMetadata.toHttp2Headers() : null;\n        // TODO(cjihrig): Include compression headers.\n        const headers = Object.assign(Object.assign(Object.assign({}, defaultResponseHeaders), defaultCompressionHeaders), custom);\n        this.stream.respond(headers, defaultResponseOptions);\n    }\n    receiveMetadata(headers) {\n        const metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n        if (logging.isTracerEnabled(TRACER_NAME)) {\n            trace('Request to ' +\n                this.handler.path +\n                ' received headers ' +\n                JSON.stringify(metadata.toJSON()));\n        }\n        // TODO(cjihrig): Receive compression metadata.\n        const timeoutHeader = metadata.get(GRPC_TIMEOUT_HEADER);\n        if (timeoutHeader.length > 0) {\n            const match = timeoutHeader[0].toString().match(DEADLINE_REGEX);\n            if (match === null) {\n                const err = new Error('Invalid deadline');\n                err.code = constants_1.Status.OUT_OF_RANGE;\n                this.sendError(err);\n                return metadata;\n            }\n            const timeout = (+match[1] * deadlineUnitsToMs[match[2]]) | 0;\n            const now = new Date();\n            this.deadline = now.setMilliseconds(now.getMilliseconds() + timeout);\n            this.deadlineTimer = setTimeout(handleExpiredDeadline, timeout, this);\n            metadata.remove(GRPC_TIMEOUT_HEADER);\n        }\n        // Remove several headers that should not be propagated to the application\n        metadata.remove(http2.constants.HTTP2_HEADER_ACCEPT_ENCODING);\n        metadata.remove(http2.constants.HTTP2_HEADER_TE);\n        metadata.remove(http2.constants.HTTP2_HEADER_CONTENT_TYPE);\n        metadata.remove('grpc-accept-encoding');\n        return metadata;\n    }\n    receiveUnaryMessage(encoding) {\n        return new Promise((resolve, reject) => {\n            const { stream } = this;\n            let receivedLength = 0;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const call = this;\n            const body = [];\n            const limit = this.maxReceiveMessageSize;\n            this.stream.on('data', onData);\n            this.stream.on('end', onEnd);\n            this.stream.on('error', onEnd);\n            function onData(chunk) {\n                receivedLength += chunk.byteLength;\n                if (limit !== -1 && receivedLength > limit) {\n                    stream.removeListener('data', onData);\n                    stream.removeListener('end', onEnd);\n                    stream.removeListener('error', onEnd);\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message larger than max (${receivedLength} vs. ${limit})`,\n                    });\n                    return;\n                }\n                body.push(chunk);\n            }\n            function onEnd(err) {\n                stream.removeListener('data', onData);\n                stream.removeListener('end', onEnd);\n                stream.removeListener('error', onEnd);\n                if (err !== undefined) {\n                    reject({ code: constants_1.Status.INTERNAL, details: err.message });\n                    return;\n                }\n                if (receivedLength === 0) {\n                    reject({\n                        code: constants_1.Status.INTERNAL,\n                        details: 'received empty unary message',\n                    });\n                    return;\n                }\n                call.emit('receiveMessage');\n                const requestBytes = Buffer.concat(body, receivedLength);\n                const compressed = requestBytes.readUInt8(0) === 1;\n                const compressedMessageEncoding = compressed ? encoding : 'identity';\n                const decompressedMessage = call.getDecompressedMessage(requestBytes, compressedMessageEncoding);\n                if (Buffer.isBuffer(decompressedMessage)) {\n                    resolve(call.deserializeMessageWithInternalError(decompressedMessage));\n                    return;\n                }\n                decompressedMessage.then(decompressed => resolve(call.deserializeMessageWithInternalError(decompressed)), (err) => reject(err.code\n                    ? err\n                    : {\n                        code: constants_1.Status.INTERNAL,\n                        details: `Received \"grpc-encoding\" header \"${encoding}\" but ${encoding} decompression failed`,\n                    }));\n            }\n        });\n    }\n    async deserializeMessageWithInternalError(buffer) {\n        try {\n            return this.deserializeMessage(buffer);\n        }\n        catch (err) {\n            throw {\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            };\n        }\n    }\n    serializeMessage(value) {\n        const messageBuffer = this.handler.serialize(value);\n        // TODO(cjihrig): Call compression aware serializeMessage().\n        const byteLength = messageBuffer.byteLength;\n        const output = Buffer.allocUnsafe(byteLength + 5);\n        output.writeUInt8(0, 0);\n        output.writeUInt32BE(byteLength, 1);\n        messageBuffer.copy(output, 5);\n        return output;\n    }\n    deserializeMessage(bytes) {\n        return this.handler.deserialize(bytes);\n    }\n    async sendUnaryMessage(err, value, metadata, flags) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (metadata === undefined) {\n            metadata = null;\n        }\n        if (err) {\n            if (!Object.prototype.hasOwnProperty.call(err, 'metadata') && metadata) {\n                err.metadata = metadata;\n            }\n            this.sendError(err);\n            return;\n        }\n        try {\n            const response = this.serializeMessage(value);\n            this.write(response);\n            this.sendStatus({ code: constants_1.Status.OK, details: 'OK', metadata });\n        }\n        catch (err) {\n            this.sendError({\n                details: (0, error_1.getErrorMessage)(err),\n                code: constants_1.Status.INTERNAL,\n            });\n        }\n    }\n    sendStatus(statusObj) {\n        var _a, _b;\n        this.emit('callEnd', statusObj.code);\n        this.emit('streamEnd', statusObj.code === constants_1.Status.OK);\n        if (this.checkCancelled()) {\n            return;\n        }\n        trace('Request to method ' +\n            ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.path) +\n            ' ended with status code: ' +\n            constants_1.Status[statusObj.code] +\n            ' details: ' +\n            statusObj.details);\n        if (this.deadlineTimer)\n            clearTimeout(this.deadlineTimer);\n        if (this.stream.headersSent) {\n            if (!this.wantTrailers) {\n                this.wantTrailers = true;\n                this.stream.once('wantTrailers', () => {\n                    var _a;\n                    const trailersToSend = Object.assign({ [GRPC_STATUS_HEADER]: statusObj.code, [GRPC_MESSAGE_HEADER]: encodeURI(statusObj.details) }, (_a = statusObj.metadata) === null || _a === void 0 ? void 0 : _a.toHttp2Headers());\n                    this.stream.sendTrailers(trailersToSend);\n                    this.statusSent = true;\n                });\n                this.stream.end();\n            }\n        }\n        else {\n            // Trailers-only response\n            const trailersToSend = Object.assign(Object.assign({ [GRPC_STATUS_HEADER]: statusObj.code, [GRPC_MESSAGE_HEADER]: encodeURI(statusObj.details) }, defaultResponseHeaders), (_b = statusObj.metadata) === null || _b === void 0 ? void 0 : _b.toHttp2Headers());\n            this.stream.respond(trailersToSend, { endStream: true });\n            this.statusSent = true;\n        }\n    }\n    sendError(error) {\n        const status = {\n            code: constants_1.Status.UNKNOWN,\n            details: 'message' in error ? error.message : 'Unknown Error',\n            metadata: 'metadata' in error && error.metadata !== undefined\n                ? error.metadata\n                : null,\n        };\n        if ('code' in error &&\n            typeof error.code === 'number' &&\n            Number.isInteger(error.code)) {\n            status.code = error.code;\n            if ('details' in error && typeof error.details === 'string') {\n                status.details = error.details;\n            }\n        }\n        this.sendStatus(status);\n    }\n    write(chunk) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (this.maxSendMessageSize !== -1 &&\n            chunk.length > this.maxSendMessageSize) {\n            this.sendError({\n                code: constants_1.Status.RESOURCE_EXHAUSTED,\n                details: `Sent message larger than max (${chunk.length} vs. ${this.maxSendMessageSize})`,\n            });\n            return;\n        }\n        this.sendMetadata();\n        this.emit('sendMessage');\n        return this.stream.write(chunk);\n    }\n    resume() {\n        this.stream.resume();\n    }\n    setupSurfaceCall(call) {\n        this.once('cancelled', reason => {\n            call.cancelled = true;\n            call.emit('cancelled', reason);\n        });\n        this.once('callEnd', status => call.emit('callEnd', status));\n    }\n    setupReadable(readable, encoding) {\n        const decoder = new stream_decoder_1.StreamDecoder(this.maxReceiveMessageSize);\n        let readsDone = false;\n        let pendingMessageProcessing = false;\n        let pushedEnd = false;\n        const maybePushEnd = async () => {\n            if (!pushedEnd && readsDone && !pendingMessageProcessing) {\n                pushedEnd = true;\n                await this.pushOrBufferMessage(readable, null);\n            }\n        };\n        this.stream.on('data', async (data) => {\n            let messages;\n            try {\n                messages = decoder.write(data);\n            }\n            catch (e) {\n                this.sendError({\n                    code: constants_1.Status.RESOURCE_EXHAUSTED,\n                    details: e.message\n                });\n                return;\n            }\n            pendingMessageProcessing = true;\n            this.stream.pause();\n            for (const message of messages) {\n                this.emit('receiveMessage');\n                const compressed = message.readUInt8(0) === 1;\n                const compressedMessageEncoding = compressed ? encoding : 'identity';\n                let decompressedMessage;\n                try {\n                    decompressedMessage = await this.getDecompressedMessage(message, compressedMessageEncoding);\n                }\n                catch (e) {\n                    this.sendError(e);\n                    return;\n                }\n                // Encountered an error with decompression; it'll already have been propogated back\n                // Just return early\n                if (!decompressedMessage)\n                    return;\n                await this.pushOrBufferMessage(readable, decompressedMessage);\n            }\n            pendingMessageProcessing = false;\n            this.stream.resume();\n            await maybePushEnd();\n        });\n        this.stream.once('end', async () => {\n            readsDone = true;\n            await maybePushEnd();\n        });\n    }\n    consumeUnpushedMessages(readable) {\n        this.canPush = true;\n        while (this.messagesToPush.length > 0) {\n            const nextMessage = this.messagesToPush.shift();\n            const canPush = readable.push(nextMessage);\n            if (nextMessage === null || canPush === false) {\n                this.canPush = false;\n                break;\n            }\n        }\n        return this.canPush;\n    }\n    async pushOrBufferMessage(readable, messageBytes) {\n        if (this.isPushPending) {\n            this.bufferedMessages.push(messageBytes);\n        }\n        else {\n            await this.pushMessage(readable, messageBytes);\n        }\n    }\n    async pushMessage(readable, messageBytes) {\n        if (messageBytes === null) {\n            trace('Received end of stream');\n            if (this.canPush) {\n                readable.push(null);\n            }\n            else {\n                this.messagesToPush.push(null);\n            }\n            return;\n        }\n        trace('Received message of length ' + messageBytes.length);\n        this.isPushPending = true;\n        try {\n            const deserialized = await this.deserializeMessage(messageBytes);\n            if (this.canPush) {\n                if (!readable.push(deserialized)) {\n                    this.canPush = false;\n                    this.stream.pause();\n                }\n            }\n            else {\n                this.messagesToPush.push(deserialized);\n            }\n        }\n        catch (error) {\n            // Ignore any remaining messages when errors occur.\n            this.bufferedMessages.length = 0;\n            let code = (0, error_1.getErrorCode)(error);\n            if (code === null || code < constants_1.Status.OK || code > constants_1.Status.UNAUTHENTICATED) {\n                code = constants_1.Status.INTERNAL;\n            }\n            readable.emit('error', {\n                details: (0, error_1.getErrorMessage)(error),\n                code: code,\n            });\n        }\n        this.isPushPending = false;\n        if (this.bufferedMessages.length > 0) {\n            await this.pushMessage(readable, this.bufferedMessages.shift());\n        }\n    }\n    getPeer() {\n        var _a;\n        const socket = (_a = this.stream.session) === null || _a === void 0 ? void 0 : _a.socket;\n        if (socket === null || socket === void 0 ? void 0 : socket.remoteAddress) {\n            if (socket.remotePort) {\n                return `${socket.remoteAddress}:${socket.remotePort}`;\n            }\n            else {\n                return socket.remoteAddress;\n            }\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    getDeadline() {\n        return this.deadline;\n    }\n    getPath() {\n        return this.handler.path;\n    }\n}\nexports.Http2ServerCallStream = Http2ServerCallStream;\nfunction handleExpiredDeadline(call) {\n    const err = new Error('Deadline exceeded');\n    err.code = constants_1.Status.DEADLINE_EXCEEDED;\n    call.sendError(err);\n    call.cancelled = true;\n    call.emit('cancelled', 'deadline');\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerCredentials = void 0;\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n    static createInsecure() {\n        return new InsecureServerCredentials();\n    }\n    static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n        if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n            throw new TypeError('rootCerts must be null or a Buffer');\n        }\n        if (!Array.isArray(keyCertPairs)) {\n            throw new TypeError('keyCertPairs must be an array');\n        }\n        if (typeof checkClientCertificate !== 'boolean') {\n            throw new TypeError('checkClientCertificate must be a boolean');\n        }\n        const cert = [];\n        const key = [];\n        for (let i = 0; i < keyCertPairs.length; i++) {\n            const pair = keyCertPairs[i];\n            if (pair === null || typeof pair !== 'object') {\n                throw new TypeError(`keyCertPair[${i}] must be an object`);\n            }\n            if (!Buffer.isBuffer(pair.private_key)) {\n                throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n            }\n            if (!Buffer.isBuffer(pair.cert_chain)) {\n                throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n            }\n            cert.push(pair.cert_chain);\n            key.push(pair.private_key);\n        }\n        return new SecureServerCredentials({\n            ca: rootCerts || (0, tls_helpers_1.getDefaultRootsData)() || undefined,\n            cert,\n            key,\n            requestCert: checkClientCertificate,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n    }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n    _isSecure() {\n        return false;\n    }\n    _getSettings() {\n        return null;\n    }\n}\nclass SecureServerCredentials extends ServerCredentials {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    _isSecure() {\n        return true;\n    }\n    _getSettings() {\n        return this.options;\n    }\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = void 0;\nconst http2 = require(\"http2\");\nconst constants_1 = require(\"./constants\");\nconst server_call_1 = require(\"./server-call\");\nconst server_credentials_1 = require(\"./server-credentials\");\nconst resolver_1 = require(\"./resolver\");\nconst logging = require(\"./logging\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst channelz_1 = require(\"./channelz\");\nconst UNLIMITED_CONNECTION_AGE_MS = ~(1 << 31);\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst { HTTP2_HEADER_PATH } = http2.constants;\nconst TRACER_NAME = 'server';\nfunction noop() { }\nfunction getUnimplementedStatusResponse(methodName) {\n    return {\n        code: constants_1.Status.UNIMPLEMENTED,\n        details: `The server does not implement the method ${methodName}`,\n    };\n}\nfunction getDefaultHandler(handlerType, methodName) {\n    const unimplementedStatusResponse = getUnimplementedStatusResponse(methodName);\n    switch (handlerType) {\n        case 'unary':\n            return (call, callback) => {\n                callback(unimplementedStatusResponse, null);\n            };\n        case 'clientStream':\n            return (call, callback) => {\n                callback(unimplementedStatusResponse, null);\n            };\n        case 'serverStream':\n            return (call) => {\n                call.emit('error', unimplementedStatusResponse);\n            };\n        case 'bidi':\n            return (call) => {\n                call.emit('error', unimplementedStatusResponse);\n            };\n        default:\n            throw new Error(`Invalid handlerType ${handlerType}`);\n    }\n}\nclass Server {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        this.http2ServerList = [];\n        this.handlers = new Map();\n        this.sessions = new Map();\n        this.started = false;\n        this.shutdown = false;\n        this.serverAddressString = 'null';\n        // Channelz Info\n        this.channelzEnabled = true;\n        this.channelzTrace = new channelz_1.ChannelzTrace();\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.listenerChildrenTracker = new channelz_1.ChannelzChildrenTracker();\n        this.sessionChildrenTracker = new channelz_1.ChannelzChildrenTracker();\n        this.options = options !== null && options !== void 0 ? options : {};\n        if (this.options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzServer)(() => this.getChannelzInfo(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Server created');\n        }\n        this.maxConnectionAgeMs =\n            (_a = this.options['grpc.max_connection_age_ms']) !== null && _a !== void 0 ? _a : UNLIMITED_CONNECTION_AGE_MS;\n        this.maxConnectionAgeGraceMs =\n            (_b = this.options['grpc.max_connection_age_grace_ms']) !== null && _b !== void 0 ? _b : UNLIMITED_CONNECTION_AGE_MS;\n        this.keepaliveTimeMs =\n            (_c = this.options['grpc.keepalive_time_ms']) !== null && _c !== void 0 ? _c : KEEPALIVE_MAX_TIME_MS;\n        this.keepaliveTimeoutMs =\n            (_d = this.options['grpc.keepalive_timeout_ms']) !== null && _d !== void 0 ? _d : KEEPALIVE_TIMEOUT_MS;\n        this.trace('Server constructed');\n    }\n    getChannelzInfo() {\n        return {\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            listenerChildren: this.listenerChildrenTracker.getChildLists(),\n            sessionChildren: this.sessionChildrenTracker.getChildLists(),\n        };\n    }\n    getChannelzSessionInfoGetter(session) {\n        return () => {\n            var _a, _b, _c;\n            const sessionInfo = this.sessions.get(session);\n            const sessionSocket = session.socket;\n            const remoteAddress = sessionSocket.remoteAddress\n                ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.remoteAddress, sessionSocket.remotePort)\n                : null;\n            const localAddress = sessionSocket.localAddress\n                ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.localAddress, sessionSocket.localPort)\n                : null;\n            let tlsInfo;\n            if (session.encrypted) {\n                const tlsSocket = sessionSocket;\n                const cipherInfo = tlsSocket.getCipher();\n                const certificate = tlsSocket.getCertificate();\n                const peerCertificate = tlsSocket.getPeerCertificate();\n                tlsInfo = {\n                    cipherSuiteStandardName: (_a = cipherInfo.standardName) !== null && _a !== void 0 ? _a : null,\n                    cipherSuiteOtherName: cipherInfo.standardName\n                        ? null\n                        : cipherInfo.name,\n                    localCertificate: certificate && 'raw' in certificate ? certificate.raw : null,\n                    remoteCertificate: peerCertificate && 'raw' in peerCertificate\n                        ? peerCertificate.raw\n                        : null,\n                };\n            }\n            else {\n                tlsInfo = null;\n            }\n            const socketInfo = {\n                remoteAddress: remoteAddress,\n                localAddress: localAddress,\n                security: tlsInfo,\n                remoteName: null,\n                streamsStarted: sessionInfo.streamTracker.callsStarted,\n                streamsSucceeded: sessionInfo.streamTracker.callsSucceeded,\n                streamsFailed: sessionInfo.streamTracker.callsFailed,\n                messagesSent: sessionInfo.messagesSent,\n                messagesReceived: sessionInfo.messagesReceived,\n                keepAlivesSent: 0,\n                lastLocalStreamCreatedTimestamp: null,\n                lastRemoteStreamCreatedTimestamp: sessionInfo.streamTracker.lastCallStartedTimestamp,\n                lastMessageSentTimestamp: sessionInfo.lastMessageSentTimestamp,\n                lastMessageReceivedTimestamp: sessionInfo.lastMessageReceivedTimestamp,\n                localFlowControlWindow: (_b = session.state.localWindowSize) !== null && _b !== void 0 ? _b : null,\n                remoteFlowControlWindow: (_c = session.state.remoteWindowSize) !== null && _c !== void 0 ? _c : null,\n            };\n            return socketInfo;\n        };\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' + this.channelzRef.id + ') ' + text);\n    }\n    addProtoService() {\n        throw new Error('Not implemented. Use addService() instead');\n    }\n    addService(service, implementation) {\n        if (service === null ||\n            typeof service !== 'object' ||\n            implementation === null ||\n            typeof implementation !== 'object') {\n            throw new Error('addService() requires two objects as arguments');\n        }\n        const serviceKeys = Object.keys(service);\n        if (serviceKeys.length === 0) {\n            throw new Error('Cannot add an empty service to a server');\n        }\n        serviceKeys.forEach(name => {\n            const attrs = service[name];\n            let methodType;\n            if (attrs.requestStream) {\n                if (attrs.responseStream) {\n                    methodType = 'bidi';\n                }\n                else {\n                    methodType = 'clientStream';\n                }\n            }\n            else {\n                if (attrs.responseStream) {\n                    methodType = 'serverStream';\n                }\n                else {\n                    methodType = 'unary';\n                }\n            }\n            let implFn = implementation[name];\n            let impl;\n            if (implFn === undefined && typeof attrs.originalName === 'string') {\n                implFn = implementation[attrs.originalName];\n            }\n            if (implFn !== undefined) {\n                impl = implFn.bind(implementation);\n            }\n            else {\n                impl = getDefaultHandler(methodType, name);\n            }\n            const success = this.register(attrs.path, impl, attrs.responseSerialize, attrs.requestDeserialize, methodType);\n            if (success === false) {\n                throw new Error(`Method handler for ${attrs.path} already provided.`);\n            }\n        });\n    }\n    removeService(service) {\n        if (service === null || typeof service !== 'object') {\n            throw new Error('removeService() requires object as argument');\n        }\n        const serviceKeys = Object.keys(service);\n        serviceKeys.forEach(name => {\n            const attrs = service[name];\n            this.unregister(attrs.path);\n        });\n    }\n    bind(port, creds) {\n        throw new Error('Not implemented. Use bindAsync() instead');\n    }\n    bindAsync(port, creds, callback) {\n        if (this.started === true) {\n            throw new Error('server is already started');\n        }\n        if (this.shutdown) {\n            throw new Error('bindAsync called after shutdown');\n        }\n        if (typeof port !== 'string') {\n            throw new TypeError('port must be a string');\n        }\n        if (creds === null || !(creds instanceof server_credentials_1.ServerCredentials)) {\n            throw new TypeError('creds must be a ServerCredentials object');\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError('callback must be a function');\n        }\n        const initialPortUri = (0, uri_parser_1.parseUri)(port);\n        if (initialPortUri === null) {\n            throw new Error(`Could not parse port \"${port}\"`);\n        }\n        const portUri = (0, resolver_1.mapUriDefaultScheme)(initialPortUri);\n        if (portUri === null) {\n            throw new Error(`Could not get a default scheme for port \"${port}\"`);\n        }\n        const serverOptions = {\n            maxSendHeaderBlockLength: Number.MAX_SAFE_INTEGER,\n        };\n        if ('grpc-node.max_session_memory' in this.options) {\n            serverOptions.maxSessionMemory =\n                this.options['grpc-node.max_session_memory'];\n        }\n        else {\n            /* By default, set a very large max session memory limit, to effectively\n             * disable enforcement of the limit. Some testing indicates that Node's\n             * behavior degrades badly when this limit is reached, so we solve that\n             * by disabling the check entirely. */\n            serverOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n        }\n        if ('grpc.max_concurrent_streams' in this.options) {\n            serverOptions.settings = {\n                maxConcurrentStreams: this.options['grpc.max_concurrent_streams'],\n            };\n        }\n        const deferredCallback = (error, port) => {\n            process.nextTick(() => callback(error, port));\n        };\n        const setupServer = () => {\n            let http2Server;\n            if (creds._isSecure()) {\n                const secureServerOptions = Object.assign(serverOptions, creds._getSettings());\n                secureServerOptions.enableTrace =\n                    this.options['grpc-node.tls_enable_trace'] === 1;\n                http2Server = http2.createSecureServer(secureServerOptions);\n                http2Server.on('secureConnection', (socket) => {\n                    /* These errors need to be handled by the user of Http2SecureServer,\n                     * according to https://github.com/nodejs/node/issues/35824 */\n                    socket.on('error', (e) => {\n                        this.trace('An incoming TLS connection closed with error: ' + e.message);\n                    });\n                });\n            }\n            else {\n                http2Server = http2.createServer(serverOptions);\n            }\n            http2Server.setTimeout(0, noop);\n            this._setupHandlers(http2Server);\n            return http2Server;\n        };\n        const bindSpecificPort = (addressList, portNum, previousCount) => {\n            if (addressList.length === 0) {\n                return Promise.resolve({ port: portNum, count: previousCount });\n            }\n            return Promise.all(addressList.map(address => {\n                this.trace('Attempting to bind ' + (0, subchannel_address_1.subchannelAddressToString)(address));\n                let addr;\n                if ((0, subchannel_address_1.isTcpSubchannelAddress)(address)) {\n                    addr = {\n                        host: address.host,\n                        port: portNum,\n                    };\n                }\n                else {\n                    addr = address;\n                }\n                const http2Server = setupServer();\n                return new Promise((resolve, reject) => {\n                    const onError = (err) => {\n                        this.trace('Failed to bind ' +\n                            (0, subchannel_address_1.subchannelAddressToString)(address) +\n                            ' with error ' +\n                            err.message);\n                        resolve(err);\n                    };\n                    http2Server.once('error', onError);\n                    http2Server.listen(addr, () => {\n                        if (this.shutdown) {\n                            http2Server.close();\n                            resolve(new Error('bindAsync failed because server is shutdown'));\n                            return;\n                        }\n                        const boundAddress = http2Server.address();\n                        let boundSubchannelAddress;\n                        if (typeof boundAddress === 'string') {\n                            boundSubchannelAddress = {\n                                path: boundAddress,\n                            };\n                        }\n                        else {\n                            boundSubchannelAddress = {\n                                host: boundAddress.address,\n                                port: boundAddress.port,\n                            };\n                        }\n                        const channelzRef = (0, channelz_1.registerChannelzSocket)((0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress), () => {\n                            return {\n                                localAddress: boundSubchannelAddress,\n                                remoteAddress: null,\n                                security: null,\n                                remoteName: null,\n                                streamsStarted: 0,\n                                streamsSucceeded: 0,\n                                streamsFailed: 0,\n                                messagesSent: 0,\n                                messagesReceived: 0,\n                                keepAlivesSent: 0,\n                                lastLocalStreamCreatedTimestamp: null,\n                                lastRemoteStreamCreatedTimestamp: null,\n                                lastMessageSentTimestamp: null,\n                                lastMessageReceivedTimestamp: null,\n                                localFlowControlWindow: null,\n                                remoteFlowControlWindow: null,\n                            };\n                        }, this.channelzEnabled);\n                        if (this.channelzEnabled) {\n                            this.listenerChildrenTracker.refChild(channelzRef);\n                        }\n                        this.http2ServerList.push({\n                            server: http2Server,\n                            channelzRef: channelzRef,\n                        });\n                        this.trace('Successfully bound ' +\n                            (0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress));\n                        resolve('port' in boundSubchannelAddress\n                            ? boundSubchannelAddress.port\n                            : portNum);\n                        http2Server.removeListener('error', onError);\n                    });\n                });\n            })).then(results => {\n                let count = 0;\n                for (const result of results) {\n                    if (typeof result === 'number') {\n                        count += 1;\n                        if (result !== portNum) {\n                            throw new Error('Invalid state: multiple port numbers added from single address');\n                        }\n                    }\n                }\n                return {\n                    port: portNum,\n                    count: count + previousCount,\n                };\n            });\n        };\n        const bindWildcardPort = (addressList) => {\n            if (addressList.length === 0) {\n                return Promise.resolve({ port: 0, count: 0 });\n            }\n            const address = addressList[0];\n            const http2Server = setupServer();\n            return new Promise((resolve, reject) => {\n                const onError = (err) => {\n                    this.trace('Failed to bind ' +\n                        (0, subchannel_address_1.subchannelAddressToString)(address) +\n                        ' with error ' +\n                        err.message);\n                    resolve(bindWildcardPort(addressList.slice(1)));\n                };\n                http2Server.once('error', onError);\n                http2Server.listen(address, () => {\n                    if (this.shutdown) {\n                        http2Server.close();\n                        resolve({ port: 0, count: 0 });\n                        return;\n                    }\n                    const boundAddress = http2Server.address();\n                    const boundSubchannelAddress = {\n                        host: boundAddress.address,\n                        port: boundAddress.port,\n                    };\n                    const channelzRef = (0, channelz_1.registerChannelzSocket)((0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress), () => {\n                        return {\n                            localAddress: boundSubchannelAddress,\n                            remoteAddress: null,\n                            security: null,\n                            remoteName: null,\n                            streamsStarted: 0,\n                            streamsSucceeded: 0,\n                            streamsFailed: 0,\n                            messagesSent: 0,\n                            messagesReceived: 0,\n                            keepAlivesSent: 0,\n                            lastLocalStreamCreatedTimestamp: null,\n                            lastRemoteStreamCreatedTimestamp: null,\n                            lastMessageSentTimestamp: null,\n                            lastMessageReceivedTimestamp: null,\n                            localFlowControlWindow: null,\n                            remoteFlowControlWindow: null,\n                        };\n                    }, this.channelzEnabled);\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.refChild(channelzRef);\n                    }\n                    this.http2ServerList.push({\n                        server: http2Server,\n                        channelzRef: channelzRef,\n                    });\n                    this.trace('Successfully bound ' +\n                        (0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress));\n                    resolve(bindSpecificPort(addressList.slice(1), boundAddress.port, 1));\n                    http2Server.removeListener('error', onError);\n                });\n            });\n        };\n        const resolverListener = {\n            onSuccessfulResolution: (addressList, serviceConfig, serviceConfigError) => {\n                // We only want one resolution result. Discard all future results\n                resolverListener.onSuccessfulResolution = () => { };\n                if (this.shutdown) {\n                    deferredCallback(new Error(`bindAsync failed because server is shutdown`), 0);\n                }\n                if (addressList.length === 0) {\n                    deferredCallback(new Error(`No addresses resolved for port ${port}`), 0);\n                    return;\n                }\n                let bindResultPromise;\n                if ((0, subchannel_address_1.isTcpSubchannelAddress)(addressList[0])) {\n                    if (addressList[0].port === 0) {\n                        bindResultPromise = bindWildcardPort(addressList);\n                    }\n                    else {\n                        bindResultPromise = bindSpecificPort(addressList, addressList[0].port, 0);\n                    }\n                }\n                else {\n                    // Use an arbitrary non-zero port for non-TCP addresses\n                    bindResultPromise = bindSpecificPort(addressList, 1, 0);\n                }\n                bindResultPromise.then(bindResult => {\n                    if (bindResult.count === 0) {\n                        const errorString = `No address added out of total ${addressList.length} resolved`;\n                        logging.log(constants_1.LogVerbosity.ERROR, errorString);\n                        deferredCallback(new Error(errorString), 0);\n                    }\n                    else {\n                        if (bindResult.count < addressList.length) {\n                            logging.log(constants_1.LogVerbosity.INFO, `WARNING Only ${bindResult.count} addresses added out of total ${addressList.length} resolved`);\n                        }\n                        deferredCallback(null, bindResult.port);\n                    }\n                }, error => {\n                    const errorString = `No address added out of total ${addressList.length} resolved`;\n                    logging.log(constants_1.LogVerbosity.ERROR, errorString);\n                    deferredCallback(new Error(errorString), 0);\n                });\n            },\n            onError: error => {\n                deferredCallback(new Error(error.details), 0);\n            },\n        };\n        const resolver = (0, resolver_1.createResolver)(portUri, resolverListener, this.options);\n        resolver.updateResolution();\n    }\n    forceShutdown() {\n        // Close the server if it is still running.\n        for (const { server: http2Server, channelzRef: ref } of this\n            .http2ServerList) {\n            if (http2Server.listening) {\n                http2Server.close(() => {\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.unrefChild(ref);\n                        (0, channelz_1.unregisterChannelzRef)(ref);\n                    }\n                });\n            }\n        }\n        this.started = false;\n        this.shutdown = true;\n        // Always destroy any available sessions. It's possible that one or more\n        // tryShutdown() calls are in progress. Don't wait on them to finish.\n        this.sessions.forEach((channelzInfo, session) => {\n            // Cast NGHTTP2_CANCEL to any because TypeScript doesn't seem to\n            // recognize destroy(code) as a valid signature.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            session.destroy(http2.constants.NGHTTP2_CANCEL);\n        });\n        this.sessions.clear();\n        if (this.channelzEnabled) {\n            (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n        }\n    }\n    register(name, handler, serialize, deserialize, type) {\n        if (this.handlers.has(name)) {\n            return false;\n        }\n        this.handlers.set(name, {\n            func: handler,\n            serialize,\n            deserialize,\n            type,\n            path: name,\n        });\n        return true;\n    }\n    unregister(name) {\n        return this.handlers.delete(name);\n    }\n    start() {\n        if (this.http2ServerList.length === 0 ||\n            this.http2ServerList.every(({ server: http2Server }) => http2Server.listening !== true)) {\n            throw new Error('server must be bound in order to start');\n        }\n        if (this.started === true) {\n            throw new Error('server is already started');\n        }\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Starting');\n        }\n        this.started = true;\n    }\n    tryShutdown(callback) {\n        const wrappedCallback = (error) => {\n            if (this.channelzEnabled) {\n                (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n            }\n            callback(error);\n        };\n        let pendingChecks = 0;\n        function maybeCallback() {\n            pendingChecks--;\n            if (pendingChecks === 0) {\n                wrappedCallback();\n            }\n        }\n        // Close the server if necessary.\n        this.started = false;\n        this.shutdown = true;\n        for (const { server: http2Server, channelzRef: ref } of this\n            .http2ServerList) {\n            if (http2Server.listening) {\n                pendingChecks++;\n                http2Server.close(() => {\n                    if (this.channelzEnabled) {\n                        this.listenerChildrenTracker.unrefChild(ref);\n                        (0, channelz_1.unregisterChannelzRef)(ref);\n                    }\n                    maybeCallback();\n                });\n            }\n        }\n        this.sessions.forEach((channelzInfo, session) => {\n            if (!session.closed) {\n                pendingChecks += 1;\n                session.close(maybeCallback);\n            }\n        });\n        if (pendingChecks === 0) {\n            wrappedCallback();\n        }\n    }\n    addHttp2Port() {\n        throw new Error('Not yet implemented');\n    }\n    /**\n     * Get the channelz reference object for this server. The returned value is\n     * garbage if channelz is disabled for this server.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    _verifyContentType(stream, headers) {\n        const contentType = headers[http2.constants.HTTP2_HEADER_CONTENT_TYPE];\n        if (typeof contentType !== 'string' ||\n            !contentType.startsWith('application/grpc')) {\n            stream.respond({\n                [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE,\n            }, { endStream: true });\n            return false;\n        }\n        return true;\n    }\n    _retrieveHandler(path) {\n        this.trace('Received call to method ' +\n            path +\n            ' at address ' +\n            this.serverAddressString);\n        const handler = this.handlers.get(path);\n        if (handler === undefined) {\n            this.trace('No handler registered for method ' +\n                path +\n                '. Sending UNIMPLEMENTED status.');\n            return null;\n        }\n        return handler;\n    }\n    _respondWithError(err, stream, channelzSessionInfo = null) {\n        const call = new server_call_1.Http2ServerCallStream(stream, null, this.options);\n        if (err.code === undefined) {\n            err.code = constants_1.Status.INTERNAL;\n        }\n        if (this.channelzEnabled) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n        }\n        call.sendError(err);\n    }\n    _channelzHandler(stream, headers) {\n        const channelzSessionInfo = this.sessions.get(stream.session);\n        this.callTracker.addCallStarted();\n        channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallStarted();\n        if (!this._verifyContentType(stream, headers)) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n            return;\n        }\n        const path = headers[HTTP2_HEADER_PATH];\n        const handler = this._retrieveHandler(path);\n        if (!handler) {\n            this._respondWithError(getUnimplementedStatusResponse(path), stream, channelzSessionInfo);\n            return;\n        }\n        const call = new server_call_1.Http2ServerCallStream(stream, handler, this.options);\n        call.once('callEnd', (code) => {\n            if (code === constants_1.Status.OK) {\n                this.callTracker.addCallSucceeded();\n            }\n            else {\n                this.callTracker.addCallFailed();\n            }\n        });\n        if (channelzSessionInfo) {\n            call.once('streamEnd', (success) => {\n                if (success) {\n                    channelzSessionInfo.streamTracker.addCallSucceeded();\n                }\n                else {\n                    channelzSessionInfo.streamTracker.addCallFailed();\n                }\n            });\n            call.on('sendMessage', () => {\n                channelzSessionInfo.messagesSent += 1;\n                channelzSessionInfo.lastMessageSentTimestamp = new Date();\n            });\n            call.on('receiveMessage', () => {\n                channelzSessionInfo.messagesReceived += 1;\n                channelzSessionInfo.lastMessageReceivedTimestamp = new Date();\n            });\n        }\n        if (!this._runHandlerForCall(call, handler, headers)) {\n            this.callTracker.addCallFailed();\n            channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n            call.sendError({\n                code: constants_1.Status.INTERNAL,\n                details: `Unknown handler type: ${handler.type}`,\n            });\n        }\n    }\n    _streamHandler(stream, headers) {\n        if (this._verifyContentType(stream, headers) !== true) {\n            return;\n        }\n        const path = headers[HTTP2_HEADER_PATH];\n        const handler = this._retrieveHandler(path);\n        if (!handler) {\n            this._respondWithError(getUnimplementedStatusResponse(path), stream, null);\n            return;\n        }\n        const call = new server_call_1.Http2ServerCallStream(stream, handler, this.options);\n        if (!this._runHandlerForCall(call, handler, headers)) {\n            call.sendError({\n                code: constants_1.Status.INTERNAL,\n                details: `Unknown handler type: ${handler.type}`,\n            });\n        }\n    }\n    _runHandlerForCall(call, handler, headers) {\n        var _a;\n        const metadata = call.receiveMetadata(headers);\n        const encoding = (_a = metadata.get('grpc-encoding')[0]) !== null && _a !== void 0 ? _a : 'identity';\n        metadata.remove('grpc-encoding');\n        const { type } = handler;\n        if (type === 'unary') {\n            handleUnary(call, handler, metadata, encoding);\n        }\n        else if (type === 'clientStream') {\n            handleClientStreaming(call, handler, metadata, encoding);\n        }\n        else if (type === 'serverStream') {\n            handleServerStreaming(call, handler, metadata, encoding);\n        }\n        else if (type === 'bidi') {\n            handleBidiStreaming(call, handler, metadata, encoding);\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    _setupHandlers(http2Server) {\n        if (http2Server === null) {\n            return;\n        }\n        const serverAddress = http2Server.address();\n        let serverAddressString = 'null';\n        if (serverAddress) {\n            if (typeof serverAddress === 'string') {\n                serverAddressString = serverAddress;\n            }\n            else {\n                serverAddressString = serverAddress.address + ':' + serverAddress.port;\n            }\n        }\n        this.serverAddressString = serverAddressString;\n        const handler = this.channelzEnabled\n            ? this._channelzHandler\n            : this._streamHandler;\n        http2Server.on('stream', handler.bind(this));\n        http2Server.on('session', session => {\n            var _a, _b, _c, _d, _e;\n            if (!this.started) {\n                session.destroy();\n                return;\n            }\n            const channelzRef = (0, channelz_1.registerChannelzSocket)((_a = session.socket.remoteAddress) !== null && _a !== void 0 ? _a : 'unknown', this.getChannelzSessionInfoGetter(session), this.channelzEnabled);\n            const channelzSessionInfo = {\n                ref: channelzRef,\n                streamTracker: new channelz_1.ChannelzCallTracker(),\n                messagesSent: 0,\n                messagesReceived: 0,\n                lastMessageSentTimestamp: null,\n                lastMessageReceivedTimestamp: null,\n            };\n            this.sessions.set(session, channelzSessionInfo);\n            const clientAddress = session.socket.remoteAddress;\n            if (this.channelzEnabled) {\n                this.channelzTrace.addTrace('CT_INFO', 'Connection established by client ' + clientAddress);\n                this.sessionChildrenTracker.refChild(channelzRef);\n            }\n            let connectionAgeTimer = null;\n            let connectionAgeGraceTimer = null;\n            let sessionClosedByServer = false;\n            if (this.maxConnectionAgeMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                // Apply a random jitter within a +/-10% range\n                const jitterMagnitude = this.maxConnectionAgeMs / 10;\n                const jitter = Math.random() * jitterMagnitude * 2 - jitterMagnitude;\n                connectionAgeTimer = (_c = (_b = setTimeout(() => {\n                    var _a, _b;\n                    sessionClosedByServer = true;\n                    if (this.channelzEnabled) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by max connection age from ' + clientAddress);\n                    }\n                    try {\n                        session.goaway(http2.constants.NGHTTP2_NO_ERROR, ~(1 << 31), Buffer.from('max_age'));\n                    }\n                    catch (e) {\n                        // The goaway can't be sent because the session is already closed\n                        session.destroy();\n                        return;\n                    }\n                    session.close();\n                    /* Allow a grace period after sending the GOAWAY before forcibly\n                     * closing the connection. */\n                    if (this.maxConnectionAgeGraceMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                        connectionAgeGraceTimer = (_b = (_a = setTimeout(() => {\n                            session.destroy();\n                        }, this.maxConnectionAgeGraceMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    }\n                }, this.maxConnectionAgeMs + jitter)).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n            }\n            const keeapliveTimeTimer = (_e = (_d = setInterval(() => {\n                var _a, _b;\n                const timeoutTImer = (_b = (_a = setTimeout(() => {\n                    sessionClosedByServer = true;\n                    if (this.channelzEnabled) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by keepalive timeout from ' + clientAddress);\n                    }\n                    session.close();\n                }, this.keepaliveTimeoutMs)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n                try {\n                    session.ping((err, duration, payload) => {\n                        clearTimeout(timeoutTImer);\n                    });\n                }\n                catch (e) {\n                    // The ping can't be sent because the session is already closed\n                    session.destroy();\n                }\n            }, this.keepaliveTimeMs)).unref) === null || _e === void 0 ? void 0 : _e.call(_d);\n            session.on('close', () => {\n                if (this.channelzEnabled) {\n                    if (!sessionClosedByServer) {\n                        this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by client ' + clientAddress);\n                    }\n                    this.sessionChildrenTracker.unrefChild(channelzRef);\n                    (0, channelz_1.unregisterChannelzRef)(channelzRef);\n                }\n                if (connectionAgeTimer) {\n                    clearTimeout(connectionAgeTimer);\n                }\n                if (connectionAgeGraceTimer) {\n                    clearTimeout(connectionAgeGraceTimer);\n                }\n                if (keeapliveTimeTimer) {\n                    clearTimeout(keeapliveTimeTimer);\n                }\n                this.sessions.delete(session);\n            });\n        });\n    }\n}\nexports.Server = Server;\nasync function handleUnary(call, handler, metadata, encoding) {\n    try {\n        const request = await call.receiveUnaryMessage(encoding);\n        if (request === undefined || call.cancelled) {\n            return;\n        }\n        const emitter = new server_call_1.ServerUnaryCallImpl(call, metadata, request);\n        handler.func(emitter, (err, value, trailer, flags) => {\n            call.sendUnaryMessage(err, value, trailer, flags);\n        });\n    }\n    catch (err) {\n        call.sendError(err);\n    }\n}\nfunction handleClientStreaming(call, handler, metadata, encoding) {\n    const stream = new server_call_1.ServerReadableStreamImpl(call, metadata, handler.deserialize, encoding);\n    function respond(err, value, trailer, flags) {\n        stream.destroy();\n        call.sendUnaryMessage(err, value, trailer, flags);\n    }\n    if (call.cancelled) {\n        return;\n    }\n    stream.on('error', respond);\n    handler.func(stream, respond);\n}\nasync function handleServerStreaming(call, handler, metadata, encoding) {\n    try {\n        const request = await call.receiveUnaryMessage(encoding);\n        if (request === undefined || call.cancelled) {\n            return;\n        }\n        const stream = new server_call_1.ServerWritableStreamImpl(call, metadata, handler.serialize, request);\n        handler.func(stream);\n    }\n    catch (err) {\n        call.sendError(err);\n    }\n}\nfunction handleBidiStreaming(call, handler, metadata, encoding) {\n    const stream = new server_call_1.ServerDuplexStreamImpl(call, metadata, handler.serialize, handler.deserialize, encoding);\n    if (call.cancelled) {\n        return;\n    }\n    handler.func(stream);\n}\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusBuilder = void 0;\n/**\n * A builder for gRPC status objects.\n */\nclass StatusBuilder {\n    constructor() {\n        this.code = null;\n        this.details = null;\n        this.metadata = null;\n    }\n    /**\n     * Adds a status code to the builder.\n     */\n    withCode(code) {\n        this.code = code;\n        return this;\n    }\n    /**\n     * Adds details to the builder.\n     */\n    withDetails(details) {\n        this.details = details;\n        return this;\n    }\n    /**\n     * Adds metadata to the builder.\n     */\n    withMetadata(metadata) {\n        this.metadata = metadata;\n        return this;\n    }\n    /**\n     * Builds the status object.\n     */\n    build() {\n        const status = {};\n        if (this.code !== null) {\n            status.code = this.code;\n        }\n        if (this.details !== null) {\n            status.details = this.details;\n        }\n        if (this.metadata !== null) {\n            status.metadata = this.metadata;\n        }\n        return status;\n    }\n}\nexports.StatusBuilder = StatusBuilder;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDuration = exports.durationToMs = exports.msToDuration = void 0;\nfunction msToDuration(millis) {\n    return {\n        seconds: (millis / 1000) | 0,\n        nanos: ((millis % 1000) * 1000000) | 0,\n    };\n}\nexports.msToDuration = msToDuration;\nfunction durationToMs(duration) {\n    return (duration.seconds * 1000 + duration.nanos / 1000000) | 0;\n}\nexports.durationToMs = durationToMs;\nfunction isDuration(value) {\n    return typeof value.seconds === 'number' && typeof value.nanos === 'number';\n}\nexports.isDuration = isDuration;\n", "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.OutlierDetectionLoadBalancer = exports.OutlierDetectionLoadBalancingConfig = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst duration_1 = require(\"./duration\");\nconst experimental_1 = require(\"./experimental\");\nconst load_balancer_1 = require(\"./load-balancer\");\nconst load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nconst picker_1 = require(\"./picker\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst subchannel_interface_1 = require(\"./subchannel-interface\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'outlier_detection';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'outlier_detection';\nconst OUTLIER_DETECTION_ENABLED = ((_a = process.env.GRPC_EXPERIMENTAL_ENABLE_OUTLIER_DETECTION) !== null && _a !== void 0 ? _a : 'true') === 'true';\nconst defaultSuccessRateEjectionConfig = {\n    stdev_factor: 1900,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 100,\n};\nconst defaultFailurePercentageEjectionConfig = {\n    threshold: 85,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 50,\n};\nfunction validateFieldType(obj, fieldName, expectedType, objectName) {\n    if (fieldName in obj && typeof obj[fieldName] !== expectedType) {\n        const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n        throw new Error(`outlier detection config ${fullFieldName} parse error: expected ${expectedType}, got ${typeof obj[fieldName]}`);\n    }\n}\nfunction validatePositiveDuration(obj, fieldName, objectName) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    if (fieldName in obj) {\n        if (!(0, duration_1.isDuration)(obj[fieldName])) {\n            throw new Error(`outlier detection config ${fullFieldName} parse error: expected Duration, got ${typeof obj[fieldName]}`);\n        }\n        if (!(obj[fieldName].seconds >= 0 &&\n            obj[fieldName].seconds <= 315576000000 &&\n            obj[fieldName].nanos >= 0 &&\n            obj[fieldName].nanos <= 999999999)) {\n            throw new Error(`outlier detection config ${fullFieldName} parse error: values out of range for non-negative Duaration`);\n        }\n    }\n}\nfunction validatePercentage(obj, fieldName, objectName) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    validateFieldType(obj, fieldName, 'number', objectName);\n    if (fieldName in obj && !(obj[fieldName] >= 0 && obj[fieldName] <= 100)) {\n        throw new Error(`outlier detection config ${fullFieldName} parse error: value out of range for percentage (0-100)`);\n    }\n}\nclass OutlierDetectionLoadBalancingConfig {\n    constructor(intervalMs, baseEjectionTimeMs, maxEjectionTimeMs, maxEjectionPercent, successRateEjection, failurePercentageEjection, childPolicy) {\n        this.childPolicy = childPolicy;\n        if (childPolicy.length > 0 &&\n            childPolicy[0].getLoadBalancerName() === 'pick_first') {\n            throw new Error('outlier_detection LB policy cannot have a pick_first child policy');\n        }\n        this.intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 10000;\n        this.baseEjectionTimeMs = baseEjectionTimeMs !== null && baseEjectionTimeMs !== void 0 ? baseEjectionTimeMs : 30000;\n        this.maxEjectionTimeMs = maxEjectionTimeMs !== null && maxEjectionTimeMs !== void 0 ? maxEjectionTimeMs : 300000;\n        this.maxEjectionPercent = maxEjectionPercent !== null && maxEjectionPercent !== void 0 ? maxEjectionPercent : 10;\n        this.successRateEjection = successRateEjection\n            ? Object.assign(Object.assign({}, defaultSuccessRateEjectionConfig), successRateEjection) : null;\n        this.failurePercentageEjection = failurePercentageEjection\n            ? Object.assign(Object.assign({}, defaultFailurePercentageEjectionConfig), failurePercentageEjection) : null;\n    }\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    toJsonObject() {\n        return {\n            interval: (0, duration_1.msToDuration)(this.intervalMs),\n            base_ejection_time: (0, duration_1.msToDuration)(this.baseEjectionTimeMs),\n            max_ejection_time: (0, duration_1.msToDuration)(this.maxEjectionTimeMs),\n            max_ejection_percent: this.maxEjectionPercent,\n            success_rate_ejection: this.successRateEjection,\n            failure_percentage_ejection: this.failurePercentageEjection,\n            child_policy: this.childPolicy.map(policy => policy.toJsonObject()),\n        };\n    }\n    getIntervalMs() {\n        return this.intervalMs;\n    }\n    getBaseEjectionTimeMs() {\n        return this.baseEjectionTimeMs;\n    }\n    getMaxEjectionTimeMs() {\n        return this.maxEjectionTimeMs;\n    }\n    getMaxEjectionPercent() {\n        return this.maxEjectionPercent;\n    }\n    getSuccessRateEjectionConfig() {\n        return this.successRateEjection;\n    }\n    getFailurePercentageEjectionConfig() {\n        return this.failurePercentageEjection;\n    }\n    getChildPolicy() {\n        return this.childPolicy;\n    }\n    copyWithChildPolicy(childPolicy) {\n        return new OutlierDetectionLoadBalancingConfig(this.intervalMs, this.baseEjectionTimeMs, this.maxEjectionTimeMs, this.maxEjectionPercent, this.successRateEjection, this.failurePercentageEjection, childPolicy);\n    }\n    static createFromJson(obj) {\n        var _a;\n        validatePositiveDuration(obj, 'interval');\n        validatePositiveDuration(obj, 'base_ejection_time');\n        validatePositiveDuration(obj, 'max_ejection_time');\n        validatePercentage(obj, 'max_ejection_percent');\n        if ('success_rate_ejection' in obj) {\n            if (typeof obj.success_rate_ejection !== 'object') {\n                throw new Error('outlier detection config success_rate_ejection must be an object');\n            }\n            validateFieldType(obj.success_rate_ejection, 'stdev_factor', 'number', 'success_rate_ejection');\n            validatePercentage(obj.success_rate_ejection, 'enforcement_percentage', 'success_rate_ejection');\n            validateFieldType(obj.success_rate_ejection, 'minimum_hosts', 'number', 'success_rate_ejection');\n            validateFieldType(obj.success_rate_ejection, 'request_volume', 'number', 'success_rate_ejection');\n        }\n        if ('failure_percentage_ejection' in obj) {\n            if (typeof obj.failure_percentage_ejection !== 'object') {\n                throw new Error('outlier detection config failure_percentage_ejection must be an object');\n            }\n            validatePercentage(obj.failure_percentage_ejection, 'threshold', 'failure_percentage_ejection');\n            validatePercentage(obj.failure_percentage_ejection, 'enforcement_percentage', 'failure_percentage_ejection');\n            validateFieldType(obj.failure_percentage_ejection, 'minimum_hosts', 'number', 'failure_percentage_ejection');\n            validateFieldType(obj.failure_percentage_ejection, 'request_volume', 'number', 'failure_percentage_ejection');\n        }\n        return new OutlierDetectionLoadBalancingConfig(obj.interval ? (0, duration_1.durationToMs)(obj.interval) : null, obj.base_ejection_time ? (0, duration_1.durationToMs)(obj.base_ejection_time) : null, obj.max_ejection_time ? (0, duration_1.durationToMs)(obj.max_ejection_time) : null, (_a = obj.max_ejection_percent) !== null && _a !== void 0 ? _a : null, obj.success_rate_ejection, obj.failure_percentage_ejection, obj.child_policy.map(load_balancer_1.validateLoadBalancingConfig));\n    }\n}\nexports.OutlierDetectionLoadBalancingConfig = OutlierDetectionLoadBalancingConfig;\nclass OutlierDetectionSubchannelWrapper extends subchannel_interface_1.BaseSubchannelWrapper {\n    constructor(childSubchannel, mapEntry) {\n        super(childSubchannel);\n        this.mapEntry = mapEntry;\n        this.stateListeners = [];\n        this.ejected = false;\n        this.refCount = 0;\n        this.childSubchannelState = childSubchannel.getConnectivityState();\n        childSubchannel.addConnectivityStateListener((subchannel, previousState, newState, keepaliveTime) => {\n            this.childSubchannelState = newState;\n            if (!this.ejected) {\n                for (const listener of this.stateListeners) {\n                    listener(this, previousState, newState, keepaliveTime);\n                }\n            }\n        });\n    }\n    getConnectivityState() {\n        if (this.ejected) {\n            return connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE;\n        }\n        else {\n            return this.childSubchannelState;\n        }\n    }\n    /**\n     * Add a listener function to be called whenever the wrapper's\n     * connectivity state changes.\n     * @param listener\n     */\n    addConnectivityStateListener(listener) {\n        this.stateListeners.push(listener);\n    }\n    /**\n     * Remove a listener previously added with `addConnectivityStateListener`\n     * @param listener A reference to a function previously passed to\n     *     `addConnectivityStateListener`\n     */\n    removeConnectivityStateListener(listener) {\n        const listenerIndex = this.stateListeners.indexOf(listener);\n        if (listenerIndex > -1) {\n            this.stateListeners.splice(listenerIndex, 1);\n        }\n    }\n    ref() {\n        this.child.ref();\n        this.refCount += 1;\n    }\n    unref() {\n        this.child.unref();\n        this.refCount -= 1;\n        if (this.refCount <= 0) {\n            if (this.mapEntry) {\n                const index = this.mapEntry.subchannelWrappers.indexOf(this);\n                if (index >= 0) {\n                    this.mapEntry.subchannelWrappers.splice(index, 1);\n                }\n            }\n        }\n    }\n    eject() {\n        this.ejected = true;\n        for (const listener of this.stateListeners) {\n            listener(this, this.childSubchannelState, connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, -1);\n        }\n    }\n    uneject() {\n        this.ejected = false;\n        for (const listener of this.stateListeners) {\n            listener(this, connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, this.childSubchannelState, -1);\n        }\n    }\n    getMapEntry() {\n        return this.mapEntry;\n    }\n    getWrappedSubchannel() {\n        return this.child;\n    }\n}\nfunction createEmptyBucket() {\n    return {\n        success: 0,\n        failure: 0,\n    };\n}\nclass CallCounter {\n    constructor() {\n        this.activeBucket = createEmptyBucket();\n        this.inactiveBucket = createEmptyBucket();\n    }\n    addSuccess() {\n        this.activeBucket.success += 1;\n    }\n    addFailure() {\n        this.activeBucket.failure += 1;\n    }\n    switchBuckets() {\n        this.inactiveBucket = this.activeBucket;\n        this.activeBucket = createEmptyBucket();\n    }\n    getLastSuccesses() {\n        return this.inactiveBucket.success;\n    }\n    getLastFailures() {\n        return this.inactiveBucket.failure;\n    }\n}\nclass OutlierDetectionPicker {\n    constructor(wrappedPicker, countCalls) {\n        this.wrappedPicker = wrappedPicker;\n        this.countCalls = countCalls;\n    }\n    pick(pickArgs) {\n        const wrappedPick = this.wrappedPicker.pick(pickArgs);\n        if (wrappedPick.pickResultType === picker_1.PickResultType.COMPLETE) {\n            const subchannelWrapper = wrappedPick.subchannel;\n            const mapEntry = subchannelWrapper.getMapEntry();\n            if (mapEntry) {\n                let onCallEnded = wrappedPick.onCallEnded;\n                if (this.countCalls) {\n                    onCallEnded = statusCode => {\n                        var _a;\n                        if (statusCode === constants_1.Status.OK) {\n                            mapEntry.counter.addSuccess();\n                        }\n                        else {\n                            mapEntry.counter.addFailure();\n                        }\n                        (_a = wrappedPick.onCallEnded) === null || _a === void 0 ? void 0 : _a.call(wrappedPick, statusCode);\n                    };\n                }\n                return Object.assign(Object.assign({}, wrappedPick), { subchannel: subchannelWrapper.getWrappedSubchannel(), onCallEnded: onCallEnded });\n            }\n            else {\n                return Object.assign(Object.assign({}, wrappedPick), { subchannel: subchannelWrapper.getWrappedSubchannel() });\n            }\n        }\n        else {\n            return wrappedPick;\n        }\n    }\n}\nclass OutlierDetectionLoadBalancer {\n    constructor(channelControlHelper) {\n        this.addressMap = new Map();\n        this.latestConfig = null;\n        this.timerStartTime = null;\n        this.childBalancer = new load_balancer_child_handler_1.ChildLoadBalancerHandler((0, experimental_1.createChildChannelControlHelper)(channelControlHelper, {\n            createSubchannel: (subchannelAddress, subchannelArgs) => {\n                const originalSubchannel = channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs);\n                const mapEntry = this.addressMap.get((0, subchannel_address_1.subchannelAddressToString)(subchannelAddress));\n                const subchannelWrapper = new OutlierDetectionSubchannelWrapper(originalSubchannel, mapEntry);\n                if ((mapEntry === null || mapEntry === void 0 ? void 0 : mapEntry.currentEjectionTimestamp) !== null) {\n                    // If the address is ejected, propagate that to the new subchannel wrapper\n                    subchannelWrapper.eject();\n                }\n                mapEntry === null || mapEntry === void 0 ? void 0 : mapEntry.subchannelWrappers.push(subchannelWrapper);\n                return subchannelWrapper;\n            },\n            updateState: (connectivityState, picker) => {\n                if (connectivityState === connectivity_state_1.ConnectivityState.READY) {\n                    channelControlHelper.updateState(connectivityState, new OutlierDetectionPicker(picker, this.isCountingEnabled()));\n                }\n                else {\n                    channelControlHelper.updateState(connectivityState, picker);\n                }\n            },\n        }));\n        this.ejectionTimer = setInterval(() => { }, 0);\n        clearInterval(this.ejectionTimer);\n    }\n    isCountingEnabled() {\n        return (this.latestConfig !== null &&\n            (this.latestConfig.getSuccessRateEjectionConfig() !== null ||\n                this.latestConfig.getFailurePercentageEjectionConfig() !== null));\n    }\n    getCurrentEjectionPercent() {\n        let ejectionCount = 0;\n        for (const mapEntry of this.addressMap.values()) {\n            if (mapEntry.currentEjectionTimestamp !== null) {\n                ejectionCount += 1;\n            }\n        }\n        return (ejectionCount * 100) / this.addressMap.size;\n    }\n    runSuccessRateCheck(ejectionTimestamp) {\n        if (!this.latestConfig) {\n            return;\n        }\n        const successRateConfig = this.latestConfig.getSuccessRateEjectionConfig();\n        if (!successRateConfig) {\n            return;\n        }\n        trace('Running success rate check');\n        // Step 1\n        const targetRequestVolume = successRateConfig.request_volume;\n        let addresesWithTargetVolume = 0;\n        const successRates = [];\n        for (const [address, mapEntry] of this.addressMap) {\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            trace('Stats for ' +\n                address +\n                ': successes=' +\n                successes +\n                ' failures=' +\n                failures +\n                ' targetRequestVolume=' +\n                targetRequestVolume);\n            if (successes + failures >= targetRequestVolume) {\n                addresesWithTargetVolume += 1;\n                successRates.push(successes / (successes + failures));\n            }\n        }\n        trace('Found ' +\n            addresesWithTargetVolume +\n            ' success rate candidates; currentEjectionPercent=' +\n            this.getCurrentEjectionPercent() +\n            ' successRates=[' +\n            successRates +\n            ']');\n        if (addresesWithTargetVolume < successRateConfig.minimum_hosts) {\n            return;\n        }\n        // Step 2\n        const successRateMean = successRates.reduce((a, b) => a + b) / successRates.length;\n        let successRateDeviationSum = 0;\n        for (const rate of successRates) {\n            const deviation = rate - successRateMean;\n            successRateDeviationSum += deviation * deviation;\n        }\n        const successRateVariance = successRateDeviationSum / successRates.length;\n        const successRateStdev = Math.sqrt(successRateVariance);\n        const ejectionThreshold = successRateMean -\n            successRateStdev * (successRateConfig.stdev_factor / 1000);\n        trace('stdev=' + successRateStdev + ' ejectionThreshold=' + ejectionThreshold);\n        // Step 3\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            // Step 3.i\n            if (this.getCurrentEjectionPercent() >=\n                this.latestConfig.getMaxEjectionPercent()) {\n                break;\n            }\n            // Step 3.ii\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            if (successes + failures < targetRequestVolume) {\n                continue;\n            }\n            // Step 3.iii\n            const successRate = successes / (successes + failures);\n            trace('Checking candidate ' + address + ' successRate=' + successRate);\n            if (successRate < ejectionThreshold) {\n                const randomNumber = Math.random() * 100;\n                trace('Candidate ' +\n                    address +\n                    ' randomNumber=' +\n                    randomNumber +\n                    ' enforcement_percentage=' +\n                    successRateConfig.enforcement_percentage);\n                if (randomNumber < successRateConfig.enforcement_percentage) {\n                    trace('Ejecting candidate ' + address);\n                    this.eject(mapEntry, ejectionTimestamp);\n                }\n            }\n        }\n    }\n    runFailurePercentageCheck(ejectionTimestamp) {\n        if (!this.latestConfig) {\n            return;\n        }\n        const failurePercentageConfig = this.latestConfig.getFailurePercentageEjectionConfig();\n        if (!failurePercentageConfig) {\n            return;\n        }\n        trace('Running failure percentage check. threshold=' +\n            failurePercentageConfig.threshold +\n            ' request volume threshold=' +\n            failurePercentageConfig.request_volume);\n        // Step 1\n        let addressesWithTargetVolume = 0;\n        for (const mapEntry of this.addressMap.values()) {\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            if (successes + failures >= failurePercentageConfig.request_volume) {\n                addressesWithTargetVolume += 1;\n            }\n        }\n        if (addressesWithTargetVolume < failurePercentageConfig.minimum_hosts) {\n            return;\n        }\n        // Step 2\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            // Step 2.i\n            if (this.getCurrentEjectionPercent() >=\n                this.latestConfig.getMaxEjectionPercent()) {\n                break;\n            }\n            // Step 2.ii\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            trace('Candidate successes=' + successes + ' failures=' + failures);\n            if (successes + failures < failurePercentageConfig.request_volume) {\n                continue;\n            }\n            // Step 2.iii\n            const failurePercentage = (failures * 100) / (failures + successes);\n            if (failurePercentage > failurePercentageConfig.threshold) {\n                const randomNumber = Math.random() * 100;\n                trace('Candidate ' +\n                    address +\n                    ' randomNumber=' +\n                    randomNumber +\n                    ' enforcement_percentage=' +\n                    failurePercentageConfig.enforcement_percentage);\n                if (randomNumber < failurePercentageConfig.enforcement_percentage) {\n                    trace('Ejecting candidate ' + address);\n                    this.eject(mapEntry, ejectionTimestamp);\n                }\n            }\n        }\n    }\n    eject(mapEntry, ejectionTimestamp) {\n        mapEntry.currentEjectionTimestamp = new Date();\n        mapEntry.ejectionTimeMultiplier += 1;\n        for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n            subchannelWrapper.eject();\n        }\n    }\n    uneject(mapEntry) {\n        mapEntry.currentEjectionTimestamp = null;\n        for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n            subchannelWrapper.uneject();\n        }\n    }\n    switchAllBuckets() {\n        for (const mapEntry of this.addressMap.values()) {\n            mapEntry.counter.switchBuckets();\n        }\n    }\n    startTimer(delayMs) {\n        var _a, _b;\n        this.ejectionTimer = setTimeout(() => this.runChecks(), delayMs);\n        (_b = (_a = this.ejectionTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    runChecks() {\n        const ejectionTimestamp = new Date();\n        trace('Ejection timer running');\n        this.switchAllBuckets();\n        if (!this.latestConfig) {\n            return;\n        }\n        this.timerStartTime = ejectionTimestamp;\n        this.startTimer(this.latestConfig.getIntervalMs());\n        this.runSuccessRateCheck(ejectionTimestamp);\n        this.runFailurePercentageCheck(ejectionTimestamp);\n        for (const [address, mapEntry] of this.addressMap.entries()) {\n            if (mapEntry.currentEjectionTimestamp === null) {\n                if (mapEntry.ejectionTimeMultiplier > 0) {\n                    mapEntry.ejectionTimeMultiplier -= 1;\n                }\n            }\n            else {\n                const baseEjectionTimeMs = this.latestConfig.getBaseEjectionTimeMs();\n                const maxEjectionTimeMs = this.latestConfig.getMaxEjectionTimeMs();\n                const returnTime = new Date(mapEntry.currentEjectionTimestamp.getTime());\n                returnTime.setMilliseconds(returnTime.getMilliseconds() +\n                    Math.min(baseEjectionTimeMs * mapEntry.ejectionTimeMultiplier, Math.max(baseEjectionTimeMs, maxEjectionTimeMs)));\n                if (returnTime < new Date()) {\n                    trace('Unejecting ' + address);\n                    this.uneject(mapEntry);\n                }\n            }\n        }\n    }\n    updateAddressList(addressList, lbConfig, attributes) {\n        if (!(lbConfig instanceof OutlierDetectionLoadBalancingConfig)) {\n            return;\n        }\n        const subchannelAddresses = new Set();\n        for (const address of addressList) {\n            subchannelAddresses.add((0, subchannel_address_1.subchannelAddressToString)(address));\n        }\n        for (const address of subchannelAddresses) {\n            if (!this.addressMap.has(address)) {\n                trace('Adding map entry for ' + address);\n                this.addressMap.set(address, {\n                    counter: new CallCounter(),\n                    currentEjectionTimestamp: null,\n                    ejectionTimeMultiplier: 0,\n                    subchannelWrappers: [],\n                });\n            }\n        }\n        for (const key of this.addressMap.keys()) {\n            if (!subchannelAddresses.has(key)) {\n                trace('Removing map entry for ' + key);\n                this.addressMap.delete(key);\n            }\n        }\n        const childPolicy = (0, load_balancer_1.getFirstUsableConfig)(lbConfig.getChildPolicy(), true);\n        this.childBalancer.updateAddressList(addressList, childPolicy, attributes);\n        if (lbConfig.getSuccessRateEjectionConfig() ||\n            lbConfig.getFailurePercentageEjectionConfig()) {\n            if (this.timerStartTime) {\n                trace('Previous timer existed. Replacing timer');\n                clearTimeout(this.ejectionTimer);\n                const remainingDelay = lbConfig.getIntervalMs() -\n                    (new Date().getTime() - this.timerStartTime.getTime());\n                this.startTimer(remainingDelay);\n            }\n            else {\n                trace('Starting new timer');\n                this.timerStartTime = new Date();\n                this.startTimer(lbConfig.getIntervalMs());\n                this.switchAllBuckets();\n            }\n        }\n        else {\n            trace('Counting disabled. Cancelling timer.');\n            this.timerStartTime = null;\n            clearTimeout(this.ejectionTimer);\n            for (const mapEntry of this.addressMap.values()) {\n                this.uneject(mapEntry);\n                mapEntry.ejectionTimeMultiplier = 0;\n            }\n        }\n        this.latestConfig = lbConfig;\n    }\n    exitIdle() {\n        this.childBalancer.exitIdle();\n    }\n    resetBackoff() {\n        this.childBalancer.resetBackoff();\n    }\n    destroy() {\n        clearTimeout(this.ejectionTimer);\n        this.childBalancer.destroy();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.OutlierDetectionLoadBalancer = OutlierDetectionLoadBalancer;\nfunction setup() {\n    if (OUTLIER_DETECTION_ENABLED) {\n        (0, experimental_1.registerLoadBalancerType)(TYPE_NAME, OutlierDetectionLoadBalancer, OutlierDetectionLoadBalancingConfig);\n    }\n}\nexports.setup = setup;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutlierDetectionLoadBalancingConfig = exports.BaseSubchannelWrapper = exports.registerAdminService = exports.FilterStackFactory = exports.BaseFilter = exports.PickResultType = exports.QueuePicker = exports.UnavailablePicker = exports.ChildLoadBalancerHandler = exports.subchannelAddressToString = exports.validateLoadBalancingConfig = exports.getFirstUsableConfig = exports.registerLoadBalancerType = exports.createChildChannelControlHelper = exports.BackoffTimeout = exports.durationToMs = exports.uriToString = exports.createResolver = exports.registerResolver = exports.log = exports.trace = void 0;\nvar logging_1 = require(\"./logging\");\nObject.defineProperty(exports, \"trace\", { enumerable: true, get: function () { return logging_1.trace; } });\nObject.defineProperty(exports, \"log\", { enumerable: true, get: function () { return logging_1.log; } });\nvar resolver_1 = require(\"./resolver\");\nObject.defineProperty(exports, \"registerResolver\", { enumerable: true, get: function () { return resolver_1.registerResolver; } });\nObject.defineProperty(exports, \"createResolver\", { enumerable: true, get: function () { return resolver_1.createResolver; } });\nvar uri_parser_1 = require(\"./uri-parser\");\nObject.defineProperty(exports, \"uriToString\", { enumerable: true, get: function () { return uri_parser_1.uriToString; } });\nvar duration_1 = require(\"./duration\");\nObject.defineProperty(exports, \"durationToMs\", { enumerable: true, get: function () { return duration_1.durationToMs; } });\nvar backoff_timeout_1 = require(\"./backoff-timeout\");\nObject.defineProperty(exports, \"BackoffTimeout\", { enumerable: true, get: function () { return backoff_timeout_1.BackoffTimeout; } });\nvar load_balancer_1 = require(\"./load-balancer\");\nObject.defineProperty(exports, \"createChildChannelControlHelper\", { enumerable: true, get: function () { return load_balancer_1.createChildChannelControlHelper; } });\nObject.defineProperty(exports, \"registerLoadBalancerType\", { enumerable: true, get: function () { return load_balancer_1.registerLoadBalancerType; } });\nObject.defineProperty(exports, \"getFirstUsableConfig\", { enumerable: true, get: function () { return load_balancer_1.getFirstUsableConfig; } });\nObject.defineProperty(exports, \"validateLoadBalancingConfig\", { enumerable: true, get: function () { return load_balancer_1.validateLoadBalancingConfig; } });\nvar subchannel_address_1 = require(\"./subchannel-address\");\nObject.defineProperty(exports, \"subchannelAddressToString\", { enumerable: true, get: function () { return subchannel_address_1.subchannelAddressToString; } });\nvar load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nObject.defineProperty(exports, \"ChildLoadBalancerHandler\", { enumerable: true, get: function () { return load_balancer_child_handler_1.ChildLoadBalancerHandler; } });\nvar picker_1 = require(\"./picker\");\nObject.defineProperty(exports, \"UnavailablePicker\", { enumerable: true, get: function () { return picker_1.UnavailablePicker; } });\nObject.defineProperty(exports, \"QueuePicker\", { enumerable: true, get: function () { return picker_1.QueuePicker; } });\nObject.defineProperty(exports, \"PickResultType\", { enumerable: true, get: function () { return picker_1.PickResultType; } });\nvar filter_1 = require(\"./filter\");\nObject.defineProperty(exports, \"BaseFilter\", { enumerable: true, get: function () { return filter_1.BaseFilter; } });\nvar filter_stack_1 = require(\"./filter-stack\");\nObject.defineProperty(exports, \"FilterStackFactory\", { enumerable: true, get: function () { return filter_stack_1.FilterStackFactory; } });\nvar admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"registerAdminService\", { enumerable: true, get: function () { return admin_1.registerAdminService; } });\nvar subchannel_interface_1 = require(\"./subchannel-interface\");\nObject.defineProperty(exports, \"BaseSubchannelWrapper\", { enumerable: true, get: function () { return subchannel_interface_1.BaseSubchannelWrapper; } });\nvar load_balancer_outlier_detection_1 = require(\"./load-balancer-outlier-detection\");\nObject.defineProperty(exports, \"OutlierDetectionLoadBalancingConfig\", { enumerable: true, get: function () { return load_balancer_outlier_detection_1.OutlierDetectionLoadBalancingConfig; } });\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\nconst resolver_1 = require(\"./resolver\");\nclass UdsResolver {\n    constructor(target, listener, channelOptions) {\n        this.listener = listener;\n        this.addresses = [];\n        this.hasReturnedResult = false;\n        let path;\n        if (target.authority === '') {\n            path = '/' + target.path;\n        }\n        else {\n            path = target.path;\n        }\n        this.addresses = [{ path }];\n    }\n    updateResolution() {\n        if (!this.hasReturnedResult) {\n            this.hasReturnedResult = true;\n            process.nextTick(this.listener.onSuccessfulResolution, this.addresses, null, null, null, {});\n        }\n    }\n    destroy() {\n        // This resolver owns no resources, so we do nothing here.\n    }\n    static getDefaultAuthority(target) {\n        return 'localhost';\n    }\n}\nfunction setup() {\n    (0, resolver_1.registerResolver)('unix', UdsResolver);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\nconst net_1 = require(\"net\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst resolver_1 = require(\"./resolver\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'ip_resolver';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst IPV4_SCHEME = 'ipv4';\nconst IPV6_SCHEME = 'ipv6';\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nconst DEFAULT_PORT = 443;\nclass IpResolver {\n    constructor(target, listener, channelOptions) {\n        var _a;\n        this.listener = listener;\n        this.addresses = [];\n        this.error = null;\n        this.hasReturnedResult = false;\n        trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n        const addresses = [];\n        if (!(target.scheme === IPV4_SCHEME || target.scheme === IPV6_SCHEME)) {\n            this.error = {\n                code: constants_1.Status.UNAVAILABLE,\n                details: `Unrecognized scheme ${target.scheme} in IP resolver`,\n                metadata: new metadata_1.Metadata(),\n            };\n            return;\n        }\n        const pathList = target.path.split(',');\n        for (const path of pathList) {\n            const hostPort = (0, uri_parser_1.splitHostPort)(path);\n            if (hostPort === null) {\n                this.error = {\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse ${target.scheme} address ${path}`,\n                    metadata: new metadata_1.Metadata(),\n                };\n                return;\n            }\n            if ((target.scheme === IPV4_SCHEME && !(0, net_1.isIPv4)(hostPort.host)) ||\n                (target.scheme === IPV6_SCHEME && !(0, net_1.isIPv6)(hostPort.host))) {\n                this.error = {\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse ${target.scheme} address ${path}`,\n                    metadata: new metadata_1.Metadata(),\n                };\n                return;\n            }\n            addresses.push({\n                host: hostPort.host,\n                port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : DEFAULT_PORT,\n            });\n        }\n        this.addresses = addresses;\n        trace('Parsed ' + target.scheme + ' address list ' + this.addresses);\n    }\n    updateResolution() {\n        if (!this.hasReturnedResult) {\n            this.hasReturnedResult = true;\n            process.nextTick(() => {\n                if (this.error) {\n                    this.listener.onError(this.error);\n                }\n                else {\n                    this.listener.onSuccessfulResolution(this.addresses, null, null, null, {});\n                }\n            });\n        }\n    }\n    destroy() {\n        this.hasReturnedResult = false;\n    }\n    static getDefaultAuthority(target) {\n        return target.path.split(',')[0];\n    }\n}\nfunction setup() {\n    (0, resolver_1.registerResolver)(IPV4_SCHEME, IpResolver);\n    (0, resolver_1.registerResolver)(IPV6_SCHEME, IpResolver);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.PickFirstLoadBalancer = exports.shuffled = exports.PickFirstLoadBalancingConfig = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst picker_1 = require(\"./picker\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst TRACER_NAME = 'pick_first';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'pick_first';\n/**\n * Delay after starting a connection on a subchannel before starting a\n * connection on the next subchannel in the list, for Happy Eyeballs algorithm.\n */\nconst CONNECTION_DELAY_INTERVAL_MS = 250;\nclass PickFirstLoadBalancingConfig {\n    constructor(shuffleAddressList) {\n        this.shuffleAddressList = shuffleAddressList;\n    }\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    toJsonObject() {\n        return {\n            [TYPE_NAME]: {\n                shuffleAddressList: this.shuffleAddressList,\n            },\n        };\n    }\n    getShuffleAddressList() {\n        return this.shuffleAddressList;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static createFromJson(obj) {\n        if ('shuffleAddressList' in obj &&\n            !(typeof obj.shuffleAddressList === 'boolean')) {\n            throw new Error('pick_first config field shuffleAddressList must be a boolean if provided');\n        }\n        return new PickFirstLoadBalancingConfig(obj.shuffleAddressList === true);\n    }\n}\nexports.PickFirstLoadBalancingConfig = PickFirstLoadBalancingConfig;\n/**\n * Picker for a `PickFirstLoadBalancer` in the READY state. Always returns the\n * picked subchannel.\n */\nclass PickFirstPicker {\n    constructor(subchannel) {\n        this.subchannel = subchannel;\n    }\n    pick(pickArgs) {\n        return {\n            pickResultType: picker_1.PickResultType.COMPLETE,\n            subchannel: this.subchannel,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\n/**\n * Return a new array with the elements of the input array in a random order\n * @param list The input array\n * @returns A shuffled array of the elements of list\n */\nfunction shuffled(list) {\n    const result = list.slice();\n    for (let i = result.length - 1; i > 1; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = result[i];\n        result[i] = result[j];\n        result[j] = temp;\n    }\n    return result;\n}\nexports.shuffled = shuffled;\nclass PickFirstLoadBalancer {\n    /**\n     * Load balancer that attempts to connect to each backend in the address list\n     * in order, and picks the first one that connects, using it for every\n     * request.\n     * @param channelControlHelper `ChannelControlHelper` instance provided by\n     *     this load balancer's owner.\n     */\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        /**\n         * The list of subchannels this load balancer is currently attempting to\n         * connect to.\n         */\n        this.children = [];\n        /**\n         * The current connectivity state of the load balancer.\n         */\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The index within the `subchannels` array of the subchannel with the most\n         * recently started connection attempt.\n         */\n        this.currentSubchannelIndex = 0;\n        /**\n         * The currently picked subchannel used for making calls. Populated if\n         * and only if the load balancer's current state is READY. In that case,\n         * the subchannel's current state is also READY.\n         */\n        this.currentPick = null;\n        /**\n         * Listener callback attached to each subchannel in the `subchannels` list\n         * while establishing a connection.\n         */\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime, errorMessage) => {\n            this.onSubchannelStateUpdate(subchannel, previousState, newState, errorMessage);\n        };\n        this.triedAllSubchannels = false;\n        /**\n         * The LB policy enters sticky TRANSIENT_FAILURE mode when all\n         * subchannels have failed to connect at least once, and it stays in that\n         * mode until a connection attempt is successful. While in sticky TF mode,\n         * the LB policy continuously attempts to connect to all of its subchannels.\n         */\n        this.stickyTransientFailureMode = false;\n        /**\n         * Indicates whether we called channelControlHelper.requestReresolution since\n         * the last call to updateAddressList\n         */\n        this.requestedResolutionSinceLastUpdate = false;\n        /**\n         * The most recent error reported by any subchannel as it transitioned to\n         * TRANSIENT_FAILURE.\n         */\n        this.lastError = null;\n        this.latestAddressList = null;\n        this.connectionDelayTimeout = setTimeout(() => { }, 0);\n        clearTimeout(this.connectionDelayTimeout);\n    }\n    allChildrenHaveReportedTF() {\n        return this.children.every(child => child.hasReportedTransientFailure);\n    }\n    calculateAndReportNewState() {\n        if (this.currentPick) {\n            this.updateState(connectivity_state_1.ConnectivityState.READY, new PickFirstPicker(this.currentPick));\n        }\n        else if (this.children.length === 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        }\n        else {\n            if (this.stickyTransientFailureMode) {\n                this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker({ details: `No connection established. Last error: ${this.lastError}` }));\n            }\n            else {\n                this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n            }\n        }\n    }\n    requestReresolution() {\n        this.requestedResolutionSinceLastUpdate = true;\n        this.channelControlHelper.requestReresolution();\n    }\n    maybeEnterStickyTransientFailureMode() {\n        if (!this.allChildrenHaveReportedTF()) {\n            return;\n        }\n        if (!this.requestedResolutionSinceLastUpdate) {\n            /* Each time we get an update we reset each subchannel's\n             * hasReportedTransientFailure flag, so the next time we get to this\n             * point after that, each subchannel has reported TRANSIENT_FAILURE\n             * at least once since then. That is the trigger for requesting\n             * reresolution, whether or not the LB policy is already in sticky TF\n             * mode. */\n            this.requestReresolution();\n        }\n        if (this.stickyTransientFailureMode) {\n            return;\n        }\n        this.stickyTransientFailureMode = true;\n        for (const { subchannel } of this.children) {\n            subchannel.startConnecting();\n        }\n        this.calculateAndReportNewState();\n    }\n    removeCurrentPick() {\n        if (this.currentPick !== null) {\n            /* Unref can cause a state change, which can cause a change in the value\n             * of this.currentPick, so we hold a local reference to make sure that\n             * does not impact this function. */\n            const currentPick = this.currentPick;\n            this.currentPick = null;\n            currentPick.unref();\n            currentPick.removeConnectivityStateListener(this.subchannelStateListener);\n            this.channelControlHelper.removeChannelzChild(currentPick.getChannelzRef());\n        }\n    }\n    onSubchannelStateUpdate(subchannel, previousState, newState, errorMessage) {\n        var _a;\n        if ((_a = this.currentPick) === null || _a === void 0 ? void 0 : _a.realSubchannelEquals(subchannel)) {\n            if (newState !== connectivity_state_1.ConnectivityState.READY) {\n                this.removeCurrentPick();\n                this.calculateAndReportNewState();\n                this.requestReresolution();\n            }\n            return;\n        }\n        for (const [index, child] of this.children.entries()) {\n            if (subchannel.realSubchannelEquals(child.subchannel)) {\n                if (newState === connectivity_state_1.ConnectivityState.READY) {\n                    this.pickSubchannel(child.subchannel);\n                }\n                if (newState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                    child.hasReportedTransientFailure = true;\n                    if (errorMessage) {\n                        this.lastError = errorMessage;\n                    }\n                    this.maybeEnterStickyTransientFailureMode();\n                    if (index === this.currentSubchannelIndex) {\n                        this.startNextSubchannelConnecting(index + 1);\n                    }\n                }\n                child.subchannel.startConnecting();\n                return;\n            }\n        }\n    }\n    startNextSubchannelConnecting(startIndex) {\n        clearTimeout(this.connectionDelayTimeout);\n        if (this.triedAllSubchannels) {\n            return;\n        }\n        for (const [index, child] of this.children.entries()) {\n            if (index >= startIndex) {\n                const subchannelState = child.subchannel.getConnectivityState();\n                if (subchannelState === connectivity_state_1.ConnectivityState.IDLE ||\n                    subchannelState === connectivity_state_1.ConnectivityState.CONNECTING) {\n                    this.startConnecting(index);\n                    return;\n                }\n            }\n        }\n        this.triedAllSubchannels = true;\n        this.maybeEnterStickyTransientFailureMode();\n    }\n    /**\n     * Have a single subchannel in the `subchannels` list start connecting.\n     * @param subchannelIndex The index into the `subchannels` list.\n     */\n    startConnecting(subchannelIndex) {\n        var _a, _b;\n        clearTimeout(this.connectionDelayTimeout);\n        this.currentSubchannelIndex = subchannelIndex;\n        if (this.children[subchannelIndex].subchannel.getConnectivityState() ===\n            connectivity_state_1.ConnectivityState.IDLE) {\n            trace('Start connecting to subchannel with address ' +\n                this.children[subchannelIndex].subchannel.getAddress());\n            process.nextTick(() => {\n                var _a;\n                (_a = this.children[subchannelIndex]) === null || _a === void 0 ? void 0 : _a.subchannel.startConnecting();\n            });\n        }\n        this.connectionDelayTimeout = (_b = (_a = setTimeout(() => {\n            this.startNextSubchannelConnecting(subchannelIndex + 1);\n        }, CONNECTION_DELAY_INTERVAL_MS)).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    pickSubchannel(subchannel) {\n        if (this.currentPick && subchannel.realSubchannelEquals(this.currentPick)) {\n            return;\n        }\n        trace('Pick subchannel with address ' + subchannel.getAddress());\n        this.stickyTransientFailureMode = false;\n        if (this.currentPick !== null) {\n            this.currentPick.unref();\n            this.channelControlHelper.removeChannelzChild(this.currentPick.getChannelzRef());\n            this.currentPick.removeConnectivityStateListener(this.subchannelStateListener);\n        }\n        this.currentPick = subchannel;\n        subchannel.ref();\n        this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n        this.resetSubchannelList();\n        clearTimeout(this.connectionDelayTimeout);\n        this.calculateAndReportNewState();\n    }\n    updateState(newState, picker) {\n        trace(connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        this.currentState = newState;\n        this.channelControlHelper.updateState(newState, picker);\n    }\n    resetSubchannelList() {\n        for (const child of this.children) {\n            if (!(this.currentPick && child.subchannel.realSubchannelEquals(this.currentPick))) {\n                /* The connectivity state listener is the same whether the subchannel\n                 * is in the list of children or it is the currentPick, so if it is in\n                 * both, removing it here would cause problems. In particular, that\n                 * always happens immediately after the subchannel is picked. */\n                child.subchannel.removeConnectivityStateListener(this.subchannelStateListener);\n            }\n            /* Refs are counted independently for the children list and the\n             * currentPick, so we call unref whether or not the child is the\n             * currentPick. Channelz child references are also refcounted, so\n             * removeChannelzChild can be handled the same way. */\n            child.subchannel.unref();\n            this.channelControlHelper.removeChannelzChild(child.subchannel.getChannelzRef());\n        }\n        this.currentSubchannelIndex = 0;\n        this.children = [];\n        this.triedAllSubchannels = false;\n        this.requestedResolutionSinceLastUpdate = false;\n    }\n    connectToAddressList(addressList) {\n        const newChildrenList = addressList.map(address => ({\n            subchannel: this.channelControlHelper.createSubchannel(address, {}),\n            hasReportedTransientFailure: false,\n        }));\n        /* Ref each subchannel before resetting the list, to ensure that\n         * subchannels shared between the list don't drop to 0 refs during the\n         * transition. */\n        for (const { subchannel } of newChildrenList) {\n            subchannel.ref();\n            this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n        }\n        this.resetSubchannelList();\n        this.children = newChildrenList;\n        for (const { subchannel } of this.children) {\n            subchannel.addConnectivityStateListener(this.subchannelStateListener);\n            if (subchannel.getConnectivityState() === connectivity_state_1.ConnectivityState.READY) {\n                this.pickSubchannel(subchannel);\n                return;\n            }\n        }\n        for (const child of this.children) {\n            if (child.subchannel.getConnectivityState() ===\n                connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                child.hasReportedTransientFailure = true;\n            }\n        }\n        this.startNextSubchannelConnecting(0);\n        this.calculateAndReportNewState();\n    }\n    updateAddressList(addressList, lbConfig) {\n        if (!(lbConfig instanceof PickFirstLoadBalancingConfig)) {\n            return;\n        }\n        /* Previously, an update would be discarded if it was identical to the\n         * previous update, to minimize churn. Now the DNS resolver is\n         * rate-limited, so that is less of a concern. */\n        if (lbConfig.getShuffleAddressList()) {\n            addressList = shuffled(addressList);\n        }\n        this.latestAddressList = addressList;\n        this.connectToAddressList(addressList);\n    }\n    exitIdle() {\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE && this.latestAddressList) {\n            this.connectToAddressList(this.latestAddressList);\n        }\n    }\n    resetBackoff() {\n        /* The pick first load balancer does not have a connection backoff, so this\n         * does nothing */\n    }\n    destroy() {\n        this.resetSubchannelList();\n        this.removeCurrentPick();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.PickFirstLoadBalancer = PickFirstLoadBalancer;\nfunction setup() {\n    (0, load_balancer_1.registerLoadBalancerType)(TYPE_NAME, PickFirstLoadBalancer, PickFirstLoadBalancingConfig);\n    (0, load_balancer_1.registerDefaultLoadBalancerType)(TYPE_NAME);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = exports.RoundRobinLoadBalancer = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst picker_1 = require(\"./picker\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst TRACER_NAME = 'round_robin';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'round_robin';\nclass RoundRobinLoadBalancingConfig {\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    constructor() { }\n    toJsonObject() {\n        return {\n            [TYPE_NAME]: {},\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static createFromJson(obj) {\n        return new RoundRobinLoadBalancingConfig();\n    }\n}\nclass RoundRobinPicker {\n    constructor(subchannelList, nextIndex = 0) {\n        this.subchannelList = subchannelList;\n        this.nextIndex = nextIndex;\n    }\n    pick(pickArgs) {\n        const pickedSubchannel = this.subchannelList[this.nextIndex];\n        this.nextIndex = (this.nextIndex + 1) % this.subchannelList.length;\n        return {\n            pickResultType: picker_1.PickResultType.COMPLETE,\n            subchannel: pickedSubchannel,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n    /**\n     * Check what the next subchannel returned would be. Used by the load\n     * balancer implementation to preserve this part of the picker state if\n     * possible when a subchannel connects or disconnects.\n     */\n    peekNextSubchannel() {\n        return this.subchannelList[this.nextIndex];\n    }\n}\nclass RoundRobinLoadBalancer {\n    constructor(channelControlHelper) {\n        this.channelControlHelper = channelControlHelper;\n        this.subchannels = [];\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        this.currentReadyPicker = null;\n        this.lastError = null;\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime, errorMessage) => {\n            this.calculateAndUpdateState();\n            if (newState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE ||\n                newState === connectivity_state_1.ConnectivityState.IDLE) {\n                if (errorMessage) {\n                    this.lastError = errorMessage;\n                }\n                this.channelControlHelper.requestReresolution();\n                subchannel.startConnecting();\n            }\n        };\n    }\n    countSubchannelsWithState(state) {\n        return this.subchannels.filter(subchannel => subchannel.getConnectivityState() === state).length;\n    }\n    calculateAndUpdateState() {\n        if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.READY) > 0) {\n            const readySubchannels = this.subchannels.filter(subchannel => subchannel.getConnectivityState() === connectivity_state_1.ConnectivityState.READY);\n            let index = 0;\n            if (this.currentReadyPicker !== null) {\n                index = readySubchannels.indexOf(this.currentReadyPicker.peekNextSubchannel());\n                if (index < 0) {\n                    index = 0;\n                }\n            }\n            this.updateState(connectivity_state_1.ConnectivityState.READY, new RoundRobinPicker(readySubchannels, index));\n        }\n        else if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.CONNECTING) > 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n        }\n        else if (this.countSubchannelsWithState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) > 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker({ details: `No connection established. Last error: ${this.lastError}` }));\n        }\n        else {\n            this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        }\n    }\n    updateState(newState, picker) {\n        trace(connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (newState === connectivity_state_1.ConnectivityState.READY) {\n            this.currentReadyPicker = picker;\n        }\n        else {\n            this.currentReadyPicker = null;\n        }\n        this.currentState = newState;\n        this.channelControlHelper.updateState(newState, picker);\n    }\n    resetSubchannelList() {\n        for (const subchannel of this.subchannels) {\n            subchannel.removeConnectivityStateListener(this.subchannelStateListener);\n            subchannel.unref();\n            this.channelControlHelper.removeChannelzChild(subchannel.getChannelzRef());\n        }\n        this.subchannels = [];\n    }\n    updateAddressList(addressList, lbConfig) {\n        this.resetSubchannelList();\n        trace('Connect to address list ' +\n            addressList.map(address => (0, subchannel_address_1.subchannelAddressToString)(address)));\n        this.subchannels = addressList.map(address => this.channelControlHelper.createSubchannel(address, {}));\n        for (const subchannel of this.subchannels) {\n            subchannel.ref();\n            subchannel.addConnectivityStateListener(this.subchannelStateListener);\n            this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n            const subchannelState = subchannel.getConnectivityState();\n            if (subchannelState === connectivity_state_1.ConnectivityState.IDLE ||\n                subchannelState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                subchannel.startConnecting();\n            }\n        }\n        this.calculateAndUpdateState();\n    }\n    exitIdle() {\n        for (const subchannel of this.subchannels) {\n            subchannel.startConnecting();\n        }\n    }\n    resetBackoff() {\n        /* The pick first load balancer does not have a connection backoff, so this\n         * does nothing */\n    }\n    destroy() {\n        this.resetSubchannelList();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.RoundRobinLoadBalancer = RoundRobinLoadBalancer;\nfunction setup() {\n    (0, load_balancer_1.registerLoadBalancerType)(TYPE_NAME, RoundRobinLoadBalancer, RoundRobinLoadBalancingConfig);\n}\nexports.setup = setup;\n", "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.experimental = exports.addAdminServicesToServer = exports.getChannelzHandlers = exports.getChannelzServiceDefinition = exports.InterceptorConfigurationError = exports.InterceptingCall = exports.RequesterBuilder = exports.ListenerBuilder = exports.StatusBuilder = exports.getClientChannel = exports.ServerCredentials = exports.Server = exports.setLogVerbosity = exports.setLogger = exports.load = exports.loadObject = exports.CallCredentials = exports.ChannelCredentials = exports.waitForClientReady = exports.closeClient = exports.Channel = exports.makeGenericClientConstructor = exports.makeClientConstructor = exports.loadPackageDefinition = exports.Client = exports.compressionAlgorithms = exports.propagate = exports.connectivityState = exports.status = exports.logVerbosity = exports.Metadata = exports.credentials = void 0;\nconst call_credentials_1 = require(\"./call-credentials\");\nObject.defineProperty(exports, \"CallCredentials\", { enumerable: true, get: function () { return call_credentials_1.CallCredentials; } });\nconst channel_1 = require(\"./channel\");\nObject.defineProperty(exports, \"Channel\", { enumerable: true, get: function () { return channel_1.ChannelImplementation; } });\nconst compression_algorithms_1 = require(\"./compression-algorithms\");\nObject.defineProperty(exports, \"compressionAlgorithms\", { enumerable: true, get: function () { return compression_algorithms_1.CompressionAlgorithms; } });\nconst connectivity_state_1 = require(\"./connectivity-state\");\nObject.defineProperty(exports, \"connectivityState\", { enumerable: true, get: function () { return connectivity_state_1.ConnectivityState; } });\nconst channel_credentials_1 = require(\"./channel-credentials\");\nObject.defineProperty(exports, \"ChannelCredentials\", { enumerable: true, get: function () { return channel_credentials_1.ChannelCredentials; } });\nconst client_1 = require(\"./client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return client_1.Client; } });\nconst constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"logVerbosity\", { enumerable: true, get: function () { return constants_1.LogVerbosity; } });\nObject.defineProperty(exports, \"status\", { enumerable: true, get: function () { return constants_1.Status; } });\nObject.defineProperty(exports, \"propagate\", { enumerable: true, get: function () { return constants_1.Propagate; } });\nconst logging = require(\"./logging\");\nconst make_client_1 = require(\"./make-client\");\nObject.defineProperty(exports, \"loadPackageDefinition\", { enumerable: true, get: function () { return make_client_1.loadPackageDefinition; } });\nObject.defineProperty(exports, \"makeClientConstructor\", { enumerable: true, get: function () { return make_client_1.makeClientConstructor; } });\nObject.defineProperty(exports, \"makeGenericClientConstructor\", { enumerable: true, get: function () { return make_client_1.makeClientConstructor; } });\nconst metadata_1 = require(\"./metadata\");\nObject.defineProperty(exports, \"Metadata\", { enumerable: true, get: function () { return metadata_1.Metadata; } });\nconst server_1 = require(\"./server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_1.Server; } });\nconst server_credentials_1 = require(\"./server-credentials\");\nObject.defineProperty(exports, \"ServerCredentials\", { enumerable: true, get: function () { return server_credentials_1.ServerCredentials; } });\nconst status_builder_1 = require(\"./status-builder\");\nObject.defineProperty(exports, \"StatusBuilder\", { enumerable: true, get: function () { return status_builder_1.StatusBuilder; } });\n/**** Client Credentials ****/\n// Using assign only copies enumerable properties, which is what we want\nexports.credentials = {\n    /**\n     * Combine a ChannelCredentials with any number of CallCredentials into a\n     * single ChannelCredentials object.\n     * @param channelCredentials The ChannelCredentials object.\n     * @param callCredentials Any number of CallCredentials objects.\n     * @return The resulting ChannelCredentials object.\n     */\n    combineChannelCredentials: (channelCredentials, ...callCredentials) => {\n        return callCredentials.reduce((acc, other) => acc.compose(other), channelCredentials);\n    },\n    /**\n     * Combine any number of CallCredentials into a single CallCredentials\n     * object.\n     * @param first The first CallCredentials object.\n     * @param additional Any number of additional CallCredentials objects.\n     * @return The resulting CallCredentials object.\n     */\n    combineCallCredentials: (first, ...additional) => {\n        return additional.reduce((acc, other) => acc.compose(other), first);\n    },\n    // from channel-credentials.ts\n    createInsecure: channel_credentials_1.ChannelCredentials.createInsecure,\n    createSsl: channel_credentials_1.ChannelCredentials.createSsl,\n    createFromSecureContext: channel_credentials_1.ChannelCredentials.createFromSecureContext,\n    // from call-credentials.ts\n    createFromMetadataGenerator: call_credentials_1.CallCredentials.createFromMetadataGenerator,\n    createFromGoogleCredential: call_credentials_1.CallCredentials.createFromGoogleCredential,\n    createEmpty: call_credentials_1.CallCredentials.createEmpty,\n};\n/**\n * Close a Client object.\n * @param client The client to close.\n */\nconst closeClient = (client) => client.close();\nexports.closeClient = closeClient;\nconst waitForClientReady = (client, deadline, callback) => client.waitForReady(deadline, callback);\nexports.waitForClientReady = waitForClientReady;\n/* eslint-enable @typescript-eslint/no-explicit-any */\n/**** Unimplemented function stubs ****/\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst loadObject = (value, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.loadObject = loadObject;\nconst load = (filename, format, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.load = load;\nconst setLogger = (logger) => {\n    logging.setLogger(logger);\n};\nexports.setLogger = setLogger;\nconst setLogVerbosity = (verbosity) => {\n    logging.setLoggerVerbosity(verbosity);\n};\nexports.setLogVerbosity = setLogVerbosity;\nconst getClientChannel = (client) => {\n    return client_1.Client.prototype.getChannel.call(client);\n};\nexports.getClientChannel = getClientChannel;\nvar client_interceptors_1 = require(\"./client-interceptors\");\nObject.defineProperty(exports, \"ListenerBuilder\", { enumerable: true, get: function () { return client_interceptors_1.ListenerBuilder; } });\nObject.defineProperty(exports, \"RequesterBuilder\", { enumerable: true, get: function () { return client_interceptors_1.RequesterBuilder; } });\nObject.defineProperty(exports, \"InterceptingCall\", { enumerable: true, get: function () { return client_interceptors_1.InterceptingCall; } });\nObject.defineProperty(exports, \"InterceptorConfigurationError\", { enumerable: true, get: function () { return client_interceptors_1.InterceptorConfigurationError; } });\nvar channelz_1 = require(\"./channelz\");\nObject.defineProperty(exports, \"getChannelzServiceDefinition\", { enumerable: true, get: function () { return channelz_1.getChannelzServiceDefinition; } });\nObject.defineProperty(exports, \"getChannelzHandlers\", { enumerable: true, get: function () { return channelz_1.getChannelzHandlers; } });\nvar admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"addAdminServicesToServer\", { enumerable: true, get: function () { return admin_1.addAdminServicesToServer; } });\nconst experimental = require(\"./experimental\");\nexports.experimental = experimental;\nconst resolver_dns = require(\"./resolver-dns\");\nconst resolver_uds = require(\"./resolver-uds\");\nconst resolver_ip = require(\"./resolver-ip\");\nconst load_balancer_pick_first = require(\"./load-balancer-pick-first\");\nconst load_balancer_round_robin = require(\"./load-balancer-round-robin\");\nconst load_balancer_outlier_detection = require(\"./load-balancer-outlier-detection\");\nconst channelz = require(\"./channelz\");\n(() => {\n    resolver_dns.setup();\n    resolver_uds.setup();\n    resolver_ip.setup();\n    load_balancer_pick_first.setup();\n    load_balancer_round_robin.setup();\n    load_balancer_outlier_detection.setup();\n    channelz.setup();\n})();\n", "import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { auditTrail as auditTrail$1, collection as collection$1, collectionChanges as collectionChanges$1, collectionCount as collectionCount$1, collectionCountSnap as collectionCountSnap$1, collectionData as collectionData$1, doc as doc$1, docData as docData$1, fromRef as fromRef$1, snapToData as snapToData$1, sortedChanges as sortedChanges$1 } from 'rxfire/firestore';\nimport { addDoc as addDoc$1, aggregateFieldEqual as aggregateFieldEqual$1, aggregateQuerySnapshotEqual as aggregateQuerySnapshotEqual$1, and as and$1, clearIndexedDbPersistence as clearIndexedDbPersistence$1, collection as collection$2, collectionGroup as collectionGroup$1, connectFirestoreEmulator as connectFirestoreEmulator$1, deleteAllPersistentCacheIndexes as deleteAllPersistentCacheIndexes$1, deleteDoc as deleteDoc$1, deleteField as deleteField$1, disableNetwork as disableNetwork$1, disablePersistentCacheIndexAutoCreation as disablePersistentCacheIndexAutoCreation$1, doc as doc$2, documentId as documentId$1, enableIndexedDbPersistence as enableIndexedDbPersistence$1, enableMultiTabIndexedDbPersistence as enableMultiTabIndexedDbPersistence$1, enableNetwork as enableNetwork$1, enablePersistentCacheIndexAutoCreation as enablePersistentCacheIndexAutoCreation$1, endAt as endAt$1, endBefore as endBefore$1, getAggregateFromServer as getAggregateFromServer$1, getCountFromServer as getCountFromServer$1, getDoc as getDoc$1, getDocFromCache as getDocFromCache$1, getDocFromServer as getDocFromServer$1, getDocs as getDocs$1, getDocsFromCache as getDocsFromCache$1, getDocsFromServer as getDocsFromServer$1, getFirestore as getFirestore$1, getPersistentCacheIndexManager as getPersistentCacheIndexManager$1, increment as increment$1, initializeFirestore as initializeFirestore$1, limit as limit$1, limitToLast as limitToLast$1, loadBundle as loadBundle$1, namedQuery as namedQuery$1, onSnapshot as onSnapshot$1, onSnapshotsInSync as onSnapshotsInSync$1, or as or$1, orderBy as orderBy$1, query as query$1, queryEqual as queryEqual$1, refEqual as refEqual$1, runTransaction as runTransaction$1, setDoc as setDoc$1, setIndexConfiguration as setIndexConfiguration$1, setLogLevel as setLogLevel$1, snapshotEqual as snapshotEqual$1, startAfter as startAfter$1, startAt as startAt$1, sum as sum$1, terminate as terminate$1, updateDoc as updateDoc$1, vector as vector$1, waitForPendingWrites as waitForPendingWrites$1, where as where$1, writeBatch as writeBatch$1 } from 'firebase/firestore';\nexport * from 'firebase/firestore';\nclass Firestore {\n  constructor(firestore) {\n    return firestore;\n  }\n}\nconst FIRESTORE_PROVIDER_NAME = 'firestore';\nclass FirestoreInstances {\n  constructor() {\n    return _getAllInstancesOf(FIRESTORE_PROVIDER_NAME);\n  }\n}\nconst firestoreInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(FIRESTORE_PROVIDER_NAME))), distinct());\nconst PROVIDED_FIRESTORE_INSTANCES = new InjectionToken('angularfire2.firestore-instances');\nfunction defaultFirestoreInstanceFactory(provided, defaultApp) {\n  const defaultFirestore = _getDefaultInstanceOf(FIRESTORE_PROVIDER_NAME, provided, defaultApp);\n  return defaultFirestore && new Firestore(defaultFirestore);\n}\nfunction firestoreInstanceFactory(fn) {\n  return (zone, injector) => {\n    const firestore = zone.runOutsideAngular(() => fn(injector));\n    return new Firestore(firestore);\n  };\n}\nconst FIRESTORE_INSTANCES_PROVIDER = {\n  provide: FirestoreInstances,\n  deps: [[new Optional(), PROVIDED_FIRESTORE_INSTANCES]]\n};\nconst DEFAULT_FIRESTORE_INSTANCE_PROVIDER = {\n  provide: Firestore,\n  useFactory: defaultFirestoreInstanceFactory,\n  deps: [[new Optional(), PROVIDED_FIRESTORE_INSTANCES], FirebaseApp]\n};\nclass FirestoreModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'fst');\n  }\n  static ɵfac = function FirestoreModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FirestoreModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FirestoreModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FirestoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideFirestore(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'fst');\n  return makeEnvironmentProviders([DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER, {\n    provide: PROVIDED_FIRESTORE_INSTANCES,\n    useFactory: firestoreInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, _AngularFireSchedulers, FirebaseApps,\n    // Firestore+Auth work better if Auth is loaded first\n    [new Optional(), AuthInstances], [new Optional(), AppCheckInstances], ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst auditTrail = _zoneWrap(auditTrail$1, true);\nconst collectionSnapshots = _zoneWrap(collection$1, true);\nconst collectionChanges = _zoneWrap(collectionChanges$1, true);\nconst collectionCount = _zoneWrap(collectionCount$1, true);\nconst collectionCountSnap = _zoneWrap(collectionCountSnap$1, true);\nconst collectionData = _zoneWrap(collectionData$1, true);\nconst docSnapshots = _zoneWrap(doc$1, true);\nconst docData = _zoneWrap(docData$1, true);\nconst fromRef = _zoneWrap(fromRef$1, true);\nconst snapToData = _zoneWrap(snapToData$1, true);\nconst sortedChanges = _zoneWrap(sortedChanges$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst addDoc = _zoneWrap(addDoc$1, true, 2);\nconst aggregateFieldEqual = _zoneWrap(aggregateFieldEqual$1, true, 2);\nconst aggregateQuerySnapshotEqual = _zoneWrap(aggregateQuerySnapshotEqual$1, true, 2);\nconst and = _zoneWrap(and$1, true, 2);\nconst clearIndexedDbPersistence = _zoneWrap(clearIndexedDbPersistence$1, true);\nconst collection = _zoneWrap(collection$2, true, 2);\nconst collectionGroup = _zoneWrap(collectionGroup$1, true, 2);\nconst connectFirestoreEmulator = _zoneWrap(connectFirestoreEmulator$1, true);\nconst deleteAllPersistentCacheIndexes = _zoneWrap(deleteAllPersistentCacheIndexes$1, true);\nconst deleteDoc = _zoneWrap(deleteDoc$1, true, 2);\nconst deleteField = _zoneWrap(deleteField$1, true, 2);\nconst disableNetwork = _zoneWrap(disableNetwork$1, true);\nconst disablePersistentCacheIndexAutoCreation = _zoneWrap(disablePersistentCacheIndexAutoCreation$1, true);\nconst doc = _zoneWrap(doc$2, true, 2);\nconst documentId = _zoneWrap(documentId$1, true, 2);\nconst enableIndexedDbPersistence = _zoneWrap(enableIndexedDbPersistence$1, true);\nconst enableMultiTabIndexedDbPersistence = _zoneWrap(enableMultiTabIndexedDbPersistence$1, true);\nconst enableNetwork = _zoneWrap(enableNetwork$1, true);\nconst enablePersistentCacheIndexAutoCreation = _zoneWrap(enablePersistentCacheIndexAutoCreation$1, true);\nconst endAt = _zoneWrap(endAt$1, true, 2);\nconst endBefore = _zoneWrap(endBefore$1, true, 2);\nconst getAggregateFromServer = _zoneWrap(getAggregateFromServer$1, true);\nconst getCountFromServer = _zoneWrap(getCountFromServer$1, true);\nconst getDoc = _zoneWrap(getDoc$1, true);\nconst getDocFromCache = _zoneWrap(getDocFromCache$1, true);\nconst getDocFromServer = _zoneWrap(getDocFromServer$1, true);\nconst getDocs = _zoneWrap(getDocs$1, true);\nconst getDocsFromCache = _zoneWrap(getDocsFromCache$1, true);\nconst getDocsFromServer = _zoneWrap(getDocsFromServer$1, true);\nconst getFirestore = _zoneWrap(getFirestore$1, true);\nconst getPersistentCacheIndexManager = _zoneWrap(getPersistentCacheIndexManager$1, true);\nconst increment = _zoneWrap(increment$1, true, 2);\nconst initializeFirestore = _zoneWrap(initializeFirestore$1, true);\nconst limit = _zoneWrap(limit$1, true, 2);\nconst limitToLast = _zoneWrap(limitToLast$1, true, 2);\nconst loadBundle = _zoneWrap(loadBundle$1, true);\nconst namedQuery = _zoneWrap(namedQuery$1, true, 2);\nconst onSnapshot = _zoneWrap(onSnapshot$1, true);\nconst onSnapshotsInSync = _zoneWrap(onSnapshotsInSync$1, true);\nconst or = _zoneWrap(or$1, true, 2);\nconst orderBy = _zoneWrap(orderBy$1, true, 2);\nconst query = _zoneWrap(query$1, true, 2);\nconst queryEqual = _zoneWrap(queryEqual$1, true, 2);\nconst refEqual = _zoneWrap(refEqual$1, true, 2);\nconst runTransaction = _zoneWrap(runTransaction$1, true);\nconst setDoc = _zoneWrap(setDoc$1, true, 2);\nconst setIndexConfiguration = _zoneWrap(setIndexConfiguration$1, true);\nconst setLogLevel = _zoneWrap(setLogLevel$1, true);\nconst snapshotEqual = _zoneWrap(snapshotEqual$1, true, 2);\nconst startAfter = _zoneWrap(startAfter$1, true, 2);\nconst startAt = _zoneWrap(startAt$1, true, 2);\nconst sum = _zoneWrap(sum$1, true, 2);\nconst terminate = _zoneWrap(terminate$1, true);\nconst updateDoc = _zoneWrap(updateDoc$1, true, 2);\nconst vector = _zoneWrap(vector$1, true, 2);\nconst waitForPendingWrites = _zoneWrap(waitForPendingWrites$1, true);\nconst where = _zoneWrap(where$1, true, 2);\nconst writeBatch = _zoneWrap(writeBatch$1, true, 2);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Firestore, FirestoreInstances, FirestoreModule, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, auditTrail, clearIndexedDbPersistence, collection, collectionChanges, collectionCount, collectionCountSnap, collectionData, collectionGroup, collectionSnapshots, connectFirestoreEmulator, deleteAllPersistentCacheIndexes, deleteDoc, deleteField, disableNetwork, disablePersistentCacheIndexAutoCreation, doc, docData, docSnapshots, documentId, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, enableNetwork, enablePersistentCacheIndexAutoCreation, endAt, endBefore, firestoreInstance$, fromRef, getAggregateFromServer, getCountFromServer, getDoc, getDocFromCache, getDocFromServer, getDocs, getDocsFromCache, getDocsFromServer, getFirestore, getPersistentCacheIndexManager, increment, initializeFirestore, limit, limitToLast, loadBundle, namedQuery, onSnapshot, onSnapshotsInSync, or, orderBy, provideFirestore, query, queryEqual, refEqual, runTransaction, setDoc, setIndexConfiguration, setLogLevel, snapToData, snapshotEqual, sortedChanges, startAfter, startAt, sum, terminate, updateDoc, vector, waitForPendingWrites, where, writeBatch };\n", "import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Optional, PLATFORM_ID, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { getLimitedUseToken as getLimitedUseToken$1, getToken as getToken$1, initializeAppCheck as initializeAppCheck$1, onTokenChanged as onTokenChanged$1, setTokenAutoRefreshEnabled as setTokenAutoRefreshEnabled$1 } from 'firebase/app-check';\nexport * from 'firebase/app-check';\nconst APP_CHECK_PROVIDER_NAME = 'app-check';\nclass AppCheck {\n  constructor(appCheck) {\n    return appCheck;\n  }\n}\nclass AppCheckInstances {\n  constructor() {\n    return _getAllInstancesOf(APP_CHECK_PROVIDER_NAME);\n  }\n}\nconst appCheckInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(APP_CHECK_PROVIDER_NAME))), distinct());\nconst PROVIDED_APP_CHECK_INSTANCES = new InjectionToken('angularfire2.app-check-instances');\nfunction defaultAppCheckInstanceFactory(provided, defaultApp) {\n  const defaultAppCheck = _getDefaultInstanceOf(APP_CHECK_PROVIDER_NAME, provided, defaultApp);\n  return defaultAppCheck && new AppCheck(defaultAppCheck);\n}\nconst LOCALHOSTS = ['localhost', '0.0.0.0', '127.0.0.1'];\nconst isLocalhost = typeof window !== 'undefined' && LOCALHOSTS.includes(window.location.hostname);\nfunction appCheckInstanceFactory(fn) {\n  return (zone, injector, platformId) => {\n    // Node should use admin token provider, browser devmode and localhost should use debug token\n    if (!isPlatformServer(platformId) && (isDevMode() || isLocalhost)) {\n      globalThis.FIREBASE_APPCHECK_DEBUG_TOKEN ??= true;\n    }\n    const appCheck = zone.runOutsideAngular(() => fn(injector));\n    return new AppCheck(appCheck);\n  };\n}\nconst APP_CHECK_INSTANCES_PROVIDER = {\n  provide: AppCheckInstances,\n  deps: [[new Optional(), PROVIDED_APP_CHECK_INSTANCES]]\n};\nconst DEFAULT_APP_CHECK_INSTANCE_PROVIDER = {\n  provide: AppCheck,\n  useFactory: defaultAppCheckInstanceFactory,\n  deps: [[new Optional(), PROVIDED_APP_CHECK_INSTANCES], FirebaseApp, PLATFORM_ID]\n};\nclass AppCheckModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'app-check');\n  }\n  static ɵfac = function AppCheckModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AppCheckModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AppCheckModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AppCheckModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideAppCheck(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'app-check');\n  return makeEnvironmentProviders([DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER, {\n    provide: PROVIDED_APP_CHECK_INSTANCES,\n    useFactory: appCheckInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, PLATFORM_ID, _AngularFireSchedulers, FirebaseApps, ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getLimitedUseToken = _zoneWrap(getLimitedUseToken$1, true, 2);\nconst getToken = _zoneWrap(getToken$1, true);\nconst initializeAppCheck = _zoneWrap(initializeAppCheck$1, true);\nconst onTokenChanged = _zoneWrap(onTokenChanged$1, true);\nconst setTokenAutoRefreshEnabled = _zoneWrap(setTokenAutoRefreshEnabled$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AppCheck, AppCheckInstances, AppCheckModule, appCheckInstance$, getLimitedUseToken, getToken, initializeAppCheck, onTokenChanged, provideAppCheck, setTokenAutoRefreshEnabled };\n", "import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Deferred, ErrorFactory, isIndexedDBAvailable, getGlobal, base64, issuedAtTime, calculateBackoffMillis, getModularInstance } from '@firebase/util';\nimport { Logger } from '@firebase/logger';\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst APP_CHECK_STATES = new Map();\nconst DEFAULT_STATE = {\n    activated: false,\n    tokenObservers: []\n};\nconst DEBUG_STATE = {\n    initialized: false,\n    enabled: false\n};\n/**\n * Gets a reference to the state object.\n */\nfunction getStateReference(app) {\n    return APP_CHECK_STATES.get(app) || Object.assign({}, DEFAULT_STATE);\n}\n/**\n * Set once on initialization. The map should hold the same reference to the\n * same object until this entry is deleted.\n */\nfunction setInitialState(app, state) {\n    APP_CHECK_STATES.set(app, state);\n    return APP_CHECK_STATES.get(app);\n}\nfunction getDebugState() {\n    return DEBUG_STATE;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst BASE_ENDPOINT = 'https://content-firebaseappcheck.googleapis.com/v1';\nconst EXCHANGE_RECAPTCHA_TOKEN_METHOD = 'exchangeRecaptchaV3Token';\nconst EXCHANGE_RECAPTCHA_ENTERPRISE_TOKEN_METHOD = 'exchangeRecaptchaEnterpriseToken';\nconst EXCHANGE_DEBUG_TOKEN_METHOD = 'exchangeDebugToken';\nconst TOKEN_REFRESH_TIME = {\n    /**\n     * The offset time before token natural expiration to run the refresh.\n     * This is currently 5 minutes.\n     */\n    OFFSET_DURATION: 5 * 60 * 1000,\n    /**\n     * This is the first retrial wait after an error. This is currently\n     * 30 seconds.\n     */\n    RETRIAL_MIN_WAIT: 30 * 1000,\n    /**\n     * This is the maximum retrial wait, currently 16 minutes.\n     */\n    RETRIAL_MAX_WAIT: 16 * 60 * 1000\n};\n/**\n * One day in millis, for certain error code backoffs.\n */\nconst ONE_DAY = 24 * 60 * 60 * 1000;\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Port from auth proactiverefresh.js\n *\n */\n// TODO: move it to @firebase/util?\n// TODO: allow to config whether refresh should happen in the background\nclass Refresher {\n    constructor(operation, retryPolicy, getWaitDuration, lowerBound, upperBound) {\n        this.operation = operation;\n        this.retryPolicy = retryPolicy;\n        this.getWaitDuration = getWaitDuration;\n        this.lowerBound = lowerBound;\n        this.upperBound = upperBound;\n        this.pending = null;\n        this.nextErrorWaitInterval = lowerBound;\n        if (lowerBound > upperBound) {\n            throw new Error('Proactive refresh lower bound greater than upper bound!');\n        }\n    }\n    start() {\n        this.nextErrorWaitInterval = this.lowerBound;\n        this.process(true).catch(() => {\n            /* we don't care about the result */\n        });\n    }\n    stop() {\n        if (this.pending) {\n            this.pending.reject('cancelled');\n            this.pending = null;\n        }\n    }\n    isRunning() {\n        return !!this.pending;\n    }\n    async process(hasSucceeded) {\n        this.stop();\n        try {\n            this.pending = new Deferred();\n            this.pending.promise.catch(_e => {\n                /* ignore */\n            });\n            await sleep(this.getNextRun(hasSucceeded));\n            // Why do we resolve a promise, then immediate wait for it?\n            // We do it to make the promise chain cancellable.\n            // We can call stop() which rejects the promise before the following line execute, which makes\n            // the code jump to the catch block.\n            // TODO: unit test this\n            this.pending.resolve();\n            await this.pending.promise;\n            this.pending = new Deferred();\n            this.pending.promise.catch(_e => {\n                /* ignore */\n            });\n            await this.operation();\n            this.pending.resolve();\n            await this.pending.promise;\n            this.process(true).catch(() => {\n                /* we don't care about the result */\n            });\n        }\n        catch (error) {\n            if (this.retryPolicy(error)) {\n                this.process(false).catch(() => {\n                    /* we don't care about the result */\n                });\n            }\n            else {\n                this.stop();\n            }\n        }\n    }\n    getNextRun(hasSucceeded) {\n        if (hasSucceeded) {\n            // If last operation succeeded, reset next error wait interval and return\n            // the default wait duration.\n            this.nextErrorWaitInterval = this.lowerBound;\n            // Return typical wait duration interval after a successful operation.\n            return this.getWaitDuration();\n        }\n        else {\n            // Get next error wait interval.\n            const currentErrorWaitInterval = this.nextErrorWaitInterval;\n            // Double interval for next consecutive error.\n            this.nextErrorWaitInterval *= 2;\n            // Make sure next wait interval does not exceed the maximum upper bound.\n            if (this.nextErrorWaitInterval > this.upperBound) {\n                this.nextErrorWaitInterval = this.upperBound;\n            }\n            return currentErrorWaitInterval;\n        }\n    }\n}\nfunction sleep(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERRORS = {\n    [\"already-initialized\" /* AppCheckError.ALREADY_INITIALIZED */]: 'You have already called initializeAppCheck() for FirebaseApp {$appName} with ' +\n        'different options. To avoid this error, call initializeAppCheck() with the ' +\n        'same options as when it was originally called. This will return the ' +\n        'already initialized instance.',\n    [\"use-before-activation\" /* AppCheckError.USE_BEFORE_ACTIVATION */]: 'App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. ' +\n        'Call initializeAppCheck() before instantiating other Firebase services.',\n    [\"fetch-network-error\" /* AppCheckError.FETCH_NETWORK_ERROR */]: 'Fetch failed to connect to a network. Check Internet connection. ' +\n        'Original error: {$originalErrorMessage}.',\n    [\"fetch-parse-error\" /* AppCheckError.FETCH_PARSE_ERROR */]: 'Fetch client could not parse response.' +\n        ' Original error: {$originalErrorMessage}.',\n    [\"fetch-status-error\" /* AppCheckError.FETCH_STATUS_ERROR */]: 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\n    [\"storage-open\" /* AppCheckError.STORAGE_OPEN */]: 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n    [\"storage-get\" /* AppCheckError.STORAGE_GET */]: 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n    [\"storage-set\" /* AppCheckError.STORAGE_WRITE */]: 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n    [\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */]: 'ReCAPTCHA error.',\n    [\"initial-throttle\" /* AppCheckError.INITIAL_THROTTLE */]: `{$httpStatus} error. Attempts allowed again after {$time}`,\n    [\"throttled\" /* AppCheckError.THROTTLED */]: `Requests throttled due to previous {$httpStatus} error. Attempts allowed again after {$time}`\n};\nconst ERROR_FACTORY = new ErrorFactory('appCheck', 'AppCheck', ERRORS);\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getRecaptcha(isEnterprise = false) {\n    var _a;\n    if (isEnterprise) {\n        return (_a = self.grecaptcha) === null || _a === void 0 ? void 0 : _a.enterprise;\n    }\n    return self.grecaptcha;\n}\nfunction ensureActivated(app) {\n    if (!getStateReference(app).activated) {\n        throw ERROR_FACTORY.create(\"use-before-activation\" /* AppCheckError.USE_BEFORE_ACTIVATION */, {\n            appName: app.name\n        });\n    }\n}\nfunction getDurationString(durationInMillis) {\n    const totalSeconds = Math.round(durationInMillis / 1000);\n    const days = Math.floor(totalSeconds / (3600 * 24));\n    const hours = Math.floor((totalSeconds - days * 3600 * 24) / 3600);\n    const minutes = Math.floor((totalSeconds - days * 3600 * 24 - hours * 3600) / 60);\n    const seconds = totalSeconds - days * 3600 * 24 - hours * 3600 - minutes * 60;\n    let result = '';\n    if (days) {\n        result += pad(days) + 'd:';\n    }\n    if (hours) {\n        result += pad(hours) + 'h:';\n    }\n    result += pad(minutes) + 'm:' + pad(seconds) + 's';\n    return result;\n}\nfunction pad(value) {\n    if (value === 0) {\n        return '00';\n    }\n    return value >= 10 ? value.toString() : '0' + value;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function exchangeToken({ url, body }, heartbeatServiceProvider) {\n    const headers = {\n        'Content-Type': 'application/json'\n    };\n    // If heartbeat service exists, add heartbeat header string to the header.\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\n        optional: true\n    });\n    if (heartbeatService) {\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n        if (heartbeatsHeader) {\n            headers['X-Firebase-Client'] = heartbeatsHeader;\n        }\n    }\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers\n    };\n    let response;\n    try {\n        response = await fetch(url, options);\n    }\n    catch (originalError) {\n        throw ERROR_FACTORY.create(\"fetch-network-error\" /* AppCheckError.FETCH_NETWORK_ERROR */, {\n            originalErrorMessage: originalError === null || originalError === void 0 ? void 0 : originalError.message\n        });\n    }\n    if (response.status !== 200) {\n        throw ERROR_FACTORY.create(\"fetch-status-error\" /* AppCheckError.FETCH_STATUS_ERROR */, {\n            httpStatus: response.status\n        });\n    }\n    let responseBody;\n    try {\n        // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n        responseBody = await response.json();\n    }\n    catch (originalError) {\n        throw ERROR_FACTORY.create(\"fetch-parse-error\" /* AppCheckError.FETCH_PARSE_ERROR */, {\n            originalErrorMessage: originalError === null || originalError === void 0 ? void 0 : originalError.message\n        });\n    }\n    // Protobuf duration format.\n    // https://developers.google.com/protocol-buffers/docs/reference/java/com/google/protobuf/Duration\n    const match = responseBody.ttl.match(/^([\\d.]+)(s)$/);\n    if (!match || !match[2] || isNaN(Number(match[1]))) {\n        throw ERROR_FACTORY.create(\"fetch-parse-error\" /* AppCheckError.FETCH_PARSE_ERROR */, {\n            originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration ` +\n                `format: ${responseBody.ttl}`\n        });\n    }\n    const timeToLiveAsNumber = Number(match[1]) * 1000;\n    const now = Date.now();\n    return {\n        token: responseBody.token,\n        expireTimeMillis: now + timeToLiveAsNumber,\n        issuedAtTimeMillis: now\n    };\n}\nfunction getExchangeRecaptchaV3TokenRequest(app, reCAPTCHAToken) {\n    const { projectId, appId, apiKey } = app.options;\n    return {\n        url: `${BASE_ENDPOINT}/projects/${projectId}/apps/${appId}:${EXCHANGE_RECAPTCHA_TOKEN_METHOD}?key=${apiKey}`,\n        body: {\n            'recaptcha_v3_token': reCAPTCHAToken\n        }\n    };\n}\nfunction getExchangeRecaptchaEnterpriseTokenRequest(app, reCAPTCHAToken) {\n    const { projectId, appId, apiKey } = app.options;\n    return {\n        url: `${BASE_ENDPOINT}/projects/${projectId}/apps/${appId}:${EXCHANGE_RECAPTCHA_ENTERPRISE_TOKEN_METHOD}?key=${apiKey}`,\n        body: {\n            'recaptcha_enterprise_token': reCAPTCHAToken\n        }\n    };\n}\nfunction getExchangeDebugTokenRequest(app, debugToken) {\n    const { projectId, appId, apiKey } = app.options;\n    return {\n        url: `${BASE_ENDPOINT}/projects/${projectId}/apps/${appId}:${EXCHANGE_DEBUG_TOKEN_METHOD}?key=${apiKey}`,\n        body: {\n            // eslint-disable-next-line\n            debug_token: debugToken\n        }\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DB_NAME = 'firebase-app-check-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-app-check-store';\nconst DEBUG_TOKEN_KEY = 'debug-token';\nlet dbPromise = null;\nfunction getDBPromise() {\n    if (dbPromise) {\n        return dbPromise;\n    }\n    dbPromise = new Promise((resolve, reject) => {\n        try {\n            const request = indexedDB.open(DB_NAME, DB_VERSION);\n            request.onsuccess = event => {\n                resolve(event.target.result);\n            };\n            request.onerror = event => {\n                var _a;\n                reject(ERROR_FACTORY.create(\"storage-open\" /* AppCheckError.STORAGE_OPEN */, {\n                    originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n                }));\n            };\n            request.onupgradeneeded = event => {\n                const db = event.target.result;\n                // We don't use 'break' in this switch statement, the fall-through\n                // behavior is what we want, because if there are multiple versions between\n                // the old version and the current version, we want ALL the migrations\n                // that correspond to those versions to run, not only the last one.\n                // eslint-disable-next-line default-case\n                switch (event.oldVersion) {\n                    case 0:\n                        db.createObjectStore(STORE_NAME, {\n                            keyPath: 'compositeKey'\n                        });\n                }\n            };\n        }\n        catch (e) {\n            reject(ERROR_FACTORY.create(\"storage-open\" /* AppCheckError.STORAGE_OPEN */, {\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n            }));\n        }\n    });\n    return dbPromise;\n}\nfunction readTokenFromIndexedDB(app) {\n    return read(computeKey(app));\n}\nfunction writeTokenToIndexedDB(app, token) {\n    return write(computeKey(app), token);\n}\nfunction writeDebugTokenToIndexedDB(token) {\n    return write(DEBUG_TOKEN_KEY, token);\n}\nfunction readDebugTokenFromIndexedDB() {\n    return read(DEBUG_TOKEN_KEY);\n}\nasync function write(key, value) {\n    const db = await getDBPromise();\n    const transaction = db.transaction(STORE_NAME, 'readwrite');\n    const store = transaction.objectStore(STORE_NAME);\n    const request = store.put({\n        compositeKey: key,\n        value\n    });\n    return new Promise((resolve, reject) => {\n        request.onsuccess = _event => {\n            resolve();\n        };\n        transaction.onerror = event => {\n            var _a;\n            reject(ERROR_FACTORY.create(\"storage-set\" /* AppCheckError.STORAGE_WRITE */, {\n                originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n            }));\n        };\n    });\n}\nasync function read(key) {\n    const db = await getDBPromise();\n    const transaction = db.transaction(STORE_NAME, 'readonly');\n    const store = transaction.objectStore(STORE_NAME);\n    const request = store.get(key);\n    return new Promise((resolve, reject) => {\n        request.onsuccess = event => {\n            const result = event.target.result;\n            if (result) {\n                resolve(result.value);\n            }\n            else {\n                resolve(undefined);\n            }\n        };\n        transaction.onerror = event => {\n            var _a;\n            reject(ERROR_FACTORY.create(\"storage-get\" /* AppCheckError.STORAGE_GET */, {\n                originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n            }));\n        };\n    });\n}\nfunction computeKey(app) {\n    return `${app.options.appId}-${app.name}`;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logger = new Logger('@firebase/app-check');\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Always resolves. In case of an error reading from indexeddb, resolve with undefined\n */\nasync function readTokenFromStorage(app) {\n    if (isIndexedDBAvailable()) {\n        let token = undefined;\n        try {\n            token = await readTokenFromIndexedDB(app);\n        }\n        catch (e) {\n            // swallow the error and return undefined\n            logger.warn(`Failed to read token from IndexedDB. Error: ${e}`);\n        }\n        return token;\n    }\n    return undefined;\n}\n/**\n * Always resolves. In case of an error writing to indexeddb, print a warning and resolve the promise\n */\nfunction writeTokenToStorage(app, token) {\n    if (isIndexedDBAvailable()) {\n        return writeTokenToIndexedDB(app, token).catch(e => {\n            // swallow the error and resolve the promise\n            logger.warn(`Failed to write token to IndexedDB. Error: ${e}`);\n        });\n    }\n    return Promise.resolve();\n}\nasync function readOrCreateDebugTokenFromStorage() {\n    /**\n     * Theoretically race condition can happen if we read, then write in 2 separate transactions.\n     * But it won't happen here, because this function will be called exactly once.\n     */\n    let existingDebugToken = undefined;\n    try {\n        existingDebugToken = await readDebugTokenFromIndexedDB();\n    }\n    catch (_e) {\n        // failed to read from indexeddb. We assume there is no existing debug token, and generate a new one.\n    }\n    if (!existingDebugToken) {\n        // create a new debug token\n        // This function is only available in secure contexts. See https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\n        const newToken = crypto.randomUUID();\n        // We don't need to block on writing to indexeddb\n        // In case persistence failed, a new debug token will be generated every time the page is refreshed.\n        // It renders the debug token useless because you have to manually register(whitelist) the new token in the firebase console again and again.\n        // If you see this error trying to use debug token, it probably means you are using a browser that doesn't support indexeddb.\n        // You should switch to a different browser that supports indexeddb\n        writeDebugTokenToIndexedDB(newToken).catch(e => logger.warn(`Failed to persist debug token to IndexedDB. Error: ${e}`));\n        return newToken;\n    }\n    else {\n        return existingDebugToken;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction isDebugMode() {\n    const debugState = getDebugState();\n    return debugState.enabled;\n}\nasync function getDebugToken() {\n    const state = getDebugState();\n    if (state.enabled && state.token) {\n        return state.token.promise;\n    }\n    else {\n        // should not happen!\n        throw Error(`\n            Can't get debug token in production mode.\n        `);\n    }\n}\nfunction initializeDebugMode() {\n    const globals = getGlobal();\n    const debugState = getDebugState();\n    // Set to true if this function has been called, whether or not\n    // it enabled debug mode.\n    debugState.initialized = true;\n    if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== 'string' &&\n        globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== true) {\n        return;\n    }\n    debugState.enabled = true;\n    const deferredToken = new Deferred();\n    debugState.token = deferredToken;\n    if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN === 'string') {\n        deferredToken.resolve(globals.FIREBASE_APPCHECK_DEBUG_TOKEN);\n    }\n    else {\n        deferredToken.resolve(readOrCreateDebugTokenFromStorage());\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Initial hardcoded value agreed upon across platforms for initial launch.\n// Format left open for possible dynamic error values and other fields in the future.\nconst defaultTokenErrorData = { error: 'UNKNOWN_ERROR' };\n/**\n * Stringify and base64 encode token error data.\n *\n * @param tokenError Error data, currently hardcoded.\n */\nfunction formatDummyToken(tokenErrorData) {\n    return base64.encodeString(JSON.stringify(tokenErrorData), \n    /* webSafe= */ false);\n}\n/**\n * This function always resolves.\n * The result will contain an error field if there is any error.\n * In case there is an error, the token field in the result will be populated with a dummy value\n */\nasync function getToken$2(appCheck, forceRefresh = false, shouldLogErrors = false) {\n    const app = appCheck.app;\n    ensureActivated(app);\n    const state = getStateReference(app);\n    /**\n     * First check if there is a token in memory from a previous `getToken()` call.\n     */\n    let token = state.token;\n    let error = undefined;\n    /**\n     * If an invalid token was found in memory, clear token from\n     * memory and unset the local variable `token`.\n     */\n    if (token && !isValid(token)) {\n        state.token = undefined;\n        token = undefined;\n    }\n    /**\n     * If there is no valid token in memory, try to load token from indexedDB.\n     */\n    if (!token) {\n        // cachedTokenPromise contains the token found in IndexedDB or undefined if not found.\n        const cachedToken = await state.cachedTokenPromise;\n        if (cachedToken) {\n            if (isValid(cachedToken)) {\n                token = cachedToken;\n            }\n            else {\n                // If there was an invalid token in the indexedDB cache, clear it.\n                await writeTokenToStorage(app, undefined);\n            }\n        }\n    }\n    // Return the cached token (from either memory or indexedDB) if it's valid\n    if (!forceRefresh && token && isValid(token)) {\n        return {\n            token: token.token\n        };\n    }\n    // Only set to true if this `getToken()` call is making the actual\n    // REST call to the exchange endpoint, versus waiting for an already\n    // in-flight call (see debug and regular exchange endpoint paths below)\n    let shouldCallListeners = false;\n    /**\n     * DEBUG MODE\n     * If debug mode is set, and there is no cached token, fetch a new App\n     * Check token using the debug token, and return it directly.\n     */\n    if (isDebugMode()) {\n        try {\n            // Avoid making another call to the exchange endpoint if one is in flight.\n            if (!state.exchangeTokenPromise) {\n                state.exchangeTokenPromise = exchangeToken(getExchangeDebugTokenRequest(app, await getDebugToken()), appCheck.heartbeatServiceProvider).finally(() => {\n                    // Clear promise when settled - either resolved or rejected.\n                    state.exchangeTokenPromise = undefined;\n                });\n                shouldCallListeners = true;\n            }\n            const tokenFromDebugExchange = await state.exchangeTokenPromise;\n            // Write debug token to indexedDB.\n            await writeTokenToStorage(app, tokenFromDebugExchange);\n            // Write debug token to state.\n            state.token = tokenFromDebugExchange;\n            return { token: tokenFromDebugExchange.token };\n        }\n        catch (e) {\n            if (e.code === `appCheck/${\"throttled\" /* AppCheckError.THROTTLED */}` ||\n                e.code ===\n                    `appCheck/${\"initial-throttle\" /* AppCheckError.INITIAL_THROTTLE */}`) {\n                // Warn if throttled, but do not treat it as an error.\n                logger.warn(e.message);\n            }\n            else if (shouldLogErrors) {\n                logger.error(e);\n            }\n            // Return dummy token and error\n            return makeDummyTokenResult(e);\n        }\n    }\n    /**\n     * There are no valid tokens in memory or indexedDB and we are not in\n     * debug mode.\n     * Request a new token from the exchange endpoint.\n     */\n    try {\n        // Avoid making another call to the exchange endpoint if one is in flight.\n        if (!state.exchangeTokenPromise) {\n            // state.provider is populated in initializeAppCheck()\n            // ensureActivated() at the top of this function checks that\n            // initializeAppCheck() has been called.\n            state.exchangeTokenPromise = state.provider.getToken().finally(() => {\n                // Clear promise when settled - either resolved or rejected.\n                state.exchangeTokenPromise = undefined;\n            });\n            shouldCallListeners = true;\n        }\n        token = await getStateReference(app).exchangeTokenPromise;\n    }\n    catch (e) {\n        if (e.code === `appCheck/${\"throttled\" /* AppCheckError.THROTTLED */}` ||\n            e.code === `appCheck/${\"initial-throttle\" /* AppCheckError.INITIAL_THROTTLE */}`) {\n            // Warn if throttled, but do not treat it as an error.\n            logger.warn(e.message);\n        }\n        else if (shouldLogErrors) {\n            logger.error(e);\n        }\n        // Always save error to be added to dummy token.\n        error = e;\n    }\n    let interopTokenResult;\n    if (!token) {\n        // If token is undefined, there must be an error.\n        // Return a dummy token along with the error.\n        interopTokenResult = makeDummyTokenResult(error);\n    }\n    else if (error) {\n        if (isValid(token)) {\n            // It's also possible a valid token exists, but there's also an error.\n            // (Such as if the token is almost expired, tries to refresh, and\n            // the exchange request fails.)\n            // We add a special error property here so that the refresher will\n            // count this as a failed attempt and use the backoff instead of\n            // retrying repeatedly with no delay, but any 3P listeners will not\n            // be hindered in getting the still-valid token.\n            interopTokenResult = {\n                token: token.token,\n                internalError: error\n            };\n        }\n        else {\n            // No invalid tokens should make it to this step. Memory and cached tokens\n            // are checked. Other tokens are from fresh exchanges. But just in case.\n            interopTokenResult = makeDummyTokenResult(error);\n        }\n    }\n    else {\n        interopTokenResult = {\n            token: token.token\n        };\n        // write the new token to the memory state as well as the persistent storage.\n        // Only do it if we got a valid new token\n        state.token = token;\n        await writeTokenToStorage(app, token);\n    }\n    if (shouldCallListeners) {\n        notifyTokenListeners(app, interopTokenResult);\n    }\n    return interopTokenResult;\n}\n/**\n * Internal API for limited use tokens. Skips all FAC state and simply calls\n * the underlying provider.\n */\nasync function getLimitedUseToken$1(appCheck) {\n    const app = appCheck.app;\n    ensureActivated(app);\n    const { provider } = getStateReference(app);\n    if (isDebugMode()) {\n        const debugToken = await getDebugToken();\n        const { token } = await exchangeToken(getExchangeDebugTokenRequest(app, debugToken), appCheck.heartbeatServiceProvider);\n        return { token };\n    }\n    else {\n        // provider is definitely valid since we ensure AppCheck was activated\n        const { token } = await provider.getToken();\n        return { token };\n    }\n}\nfunction addTokenListener(appCheck, type, listener, onError) {\n    const { app } = appCheck;\n    const state = getStateReference(app);\n    const tokenObserver = {\n        next: listener,\n        error: onError,\n        type\n    };\n    state.tokenObservers = [...state.tokenObservers, tokenObserver];\n    // Invoke the listener async immediately if there is a valid token\n    // in memory.\n    if (state.token && isValid(state.token)) {\n        const validToken = state.token;\n        Promise.resolve()\n            .then(() => {\n            listener({ token: validToken.token });\n            initTokenRefresher(appCheck);\n        })\n            .catch(() => {\n            /* we don't care about exceptions thrown in listeners */\n        });\n    }\n    /**\n     * Wait for any cached token promise to resolve before starting the token\n     * refresher. The refresher checks to see if there is an existing token\n     * in state and calls the exchange endpoint if not. We should first let the\n     * IndexedDB check have a chance to populate state if it can.\n     *\n     * Listener call isn't needed here because cachedTokenPromise will call any\n     * listeners that exist when it resolves.\n     */\n    // state.cachedTokenPromise is always populated in `activate()`.\n    void state.cachedTokenPromise.then(() => initTokenRefresher(appCheck));\n}\nfunction removeTokenListener(app, listener) {\n    const state = getStateReference(app);\n    const newObservers = state.tokenObservers.filter(tokenObserver => tokenObserver.next !== listener);\n    if (newObservers.length === 0 &&\n        state.tokenRefresher &&\n        state.tokenRefresher.isRunning()) {\n        state.tokenRefresher.stop();\n    }\n    state.tokenObservers = newObservers;\n}\n/**\n * Logic to create and start refresher as needed.\n */\nfunction initTokenRefresher(appCheck) {\n    const { app } = appCheck;\n    const state = getStateReference(app);\n    // Create the refresher but don't start it if `isTokenAutoRefreshEnabled`\n    // is not true.\n    let refresher = state.tokenRefresher;\n    if (!refresher) {\n        refresher = createTokenRefresher(appCheck);\n        state.tokenRefresher = refresher;\n    }\n    if (!refresher.isRunning() && state.isTokenAutoRefreshEnabled) {\n        refresher.start();\n    }\n}\nfunction createTokenRefresher(appCheck) {\n    const { app } = appCheck;\n    return new Refresher(\n    // Keep in mind when this fails for any reason other than the ones\n    // for which we should retry, it will effectively stop the proactive refresh.\n    async () => {\n        const state = getStateReference(app);\n        // If there is no token, we will try to load it from storage and use it\n        // If there is a token, we force refresh it because we know it's going to expire soon\n        let result;\n        if (!state.token) {\n            result = await getToken$2(appCheck);\n        }\n        else {\n            result = await getToken$2(appCheck, true);\n        }\n        /**\n         * getToken() always resolves. In case the result has an error field defined, it means\n         * the operation failed, and we should retry.\n         */\n        if (result.error) {\n            throw result.error;\n        }\n        /**\n         * A special `internalError` field reflects that there was an error\n         * getting a new token from the exchange endpoint, but there's still a\n         * previous token that's valid for now and this should be passed to 2P/3P\n         * requests for a token. But we want this callback (`this.operation` in\n         * `Refresher`) to throw in order to kick off the Refresher's retry\n         * backoff. (Setting `hasSucceeded` to false.)\n         */\n        if (result.internalError) {\n            throw result.internalError;\n        }\n    }, () => {\n        return true;\n    }, () => {\n        const state = getStateReference(app);\n        if (state.token) {\n            // issuedAtTime + (50% * total TTL) + 5 minutes\n            let nextRefreshTimeMillis = state.token.issuedAtTimeMillis +\n                (state.token.expireTimeMillis - state.token.issuedAtTimeMillis) *\n                    0.5 +\n                5 * 60 * 1000;\n            // Do not allow refresh time to be past (expireTime - 5 minutes)\n            const latestAllowableRefresh = state.token.expireTimeMillis - 5 * 60 * 1000;\n            nextRefreshTimeMillis = Math.min(nextRefreshTimeMillis, latestAllowableRefresh);\n            return Math.max(0, nextRefreshTimeMillis - Date.now());\n        }\n        else {\n            return 0;\n        }\n    }, TOKEN_REFRESH_TIME.RETRIAL_MIN_WAIT, TOKEN_REFRESH_TIME.RETRIAL_MAX_WAIT);\n}\nfunction notifyTokenListeners(app, token) {\n    const observers = getStateReference(app).tokenObservers;\n    for (const observer of observers) {\n        try {\n            if (observer.type === \"EXTERNAL\" /* ListenerType.EXTERNAL */ && token.error != null) {\n                // If this listener was added by a 3P call, send any token error to\n                // the supplied error handler. A 3P observer always has an error\n                // handler.\n                observer.error(token.error);\n            }\n            else {\n                // If the token has no error field, always return the token.\n                // If this is a 2P listener, return the token, whether or not it\n                // has an error field.\n                observer.next(token);\n            }\n        }\n        catch (e) {\n            // Errors in the listener function itself are always ignored.\n        }\n    }\n}\nfunction isValid(token) {\n    return token.expireTimeMillis - Date.now() > 0;\n}\nfunction makeDummyTokenResult(error) {\n    return {\n        token: formatDummyToken(defaultTokenErrorData),\n        error\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * AppCheck Service class.\n */\nclass AppCheckService {\n    constructor(app, heartbeatServiceProvider) {\n        this.app = app;\n        this.heartbeatServiceProvider = heartbeatServiceProvider;\n    }\n    _delete() {\n        const { tokenObservers } = getStateReference(this.app);\n        for (const tokenObserver of tokenObservers) {\n            removeTokenListener(this.app, tokenObserver.next);\n        }\n        return Promise.resolve();\n    }\n}\nfunction factory(app, heartbeatServiceProvider) {\n    return new AppCheckService(app, heartbeatServiceProvider);\n}\nfunction internalFactory(appCheck) {\n    return {\n        getToken: forceRefresh => getToken$2(appCheck, forceRefresh),\n        getLimitedUseToken: () => getLimitedUseToken$1(appCheck),\n        addTokenListener: listener => addTokenListener(appCheck, \"INTERNAL\" /* ListenerType.INTERNAL */, listener),\n        removeTokenListener: listener => removeTokenListener(appCheck.app, listener)\n    };\n}\n\nconst name = \"@firebase/app-check\";\nconst version = \"0.10.1\";\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst RECAPTCHA_URL = 'https://www.google.com/recaptcha/api.js';\nconst RECAPTCHA_ENTERPRISE_URL = 'https://www.google.com/recaptcha/enterprise.js';\nfunction initializeV3(app, siteKey) {\n    const initialized = new Deferred();\n    const state = getStateReference(app);\n    state.reCAPTCHAState = { initialized };\n    const divId = makeDiv(app);\n    const grecaptcha = getRecaptcha(false);\n    if (!grecaptcha) {\n        loadReCAPTCHAV3Script(() => {\n            const grecaptcha = getRecaptcha(false);\n            if (!grecaptcha) {\n                // it shouldn't happen.\n                throw new Error('no recaptcha');\n            }\n            queueWidgetRender(app, siteKey, grecaptcha, divId, initialized);\n        });\n    }\n    else {\n        queueWidgetRender(app, siteKey, grecaptcha, divId, initialized);\n    }\n    return initialized.promise;\n}\nfunction initializeEnterprise(app, siteKey) {\n    const initialized = new Deferred();\n    const state = getStateReference(app);\n    state.reCAPTCHAState = { initialized };\n    const divId = makeDiv(app);\n    const grecaptcha = getRecaptcha(true);\n    if (!grecaptcha) {\n        loadReCAPTCHAEnterpriseScript(() => {\n            const grecaptcha = getRecaptcha(true);\n            if (!grecaptcha) {\n                // it shouldn't happen.\n                throw new Error('no recaptcha');\n            }\n            queueWidgetRender(app, siteKey, grecaptcha, divId, initialized);\n        });\n    }\n    else {\n        queueWidgetRender(app, siteKey, grecaptcha, divId, initialized);\n    }\n    return initialized.promise;\n}\n/**\n * Add listener to render the widget and resolve the promise when\n * the grecaptcha.ready() event fires.\n */\nfunction queueWidgetRender(app, siteKey, grecaptcha, container, initialized) {\n    grecaptcha.ready(() => {\n        // Invisible widgets allow us to set a different siteKey for each widget,\n        // so we use them to support multiple apps\n        renderInvisibleWidget(app, siteKey, grecaptcha, container);\n        initialized.resolve(grecaptcha);\n    });\n}\n/**\n * Add invisible div to page.\n */\nfunction makeDiv(app) {\n    const divId = `fire_app_check_${app.name}`;\n    const invisibleDiv = document.createElement('div');\n    invisibleDiv.id = divId;\n    invisibleDiv.style.display = 'none';\n    document.body.appendChild(invisibleDiv);\n    return divId;\n}\nasync function getToken$1(app) {\n    ensureActivated(app);\n    // ensureActivated() guarantees that reCAPTCHAState is set\n    const reCAPTCHAState = getStateReference(app).reCAPTCHAState;\n    const recaptcha = await reCAPTCHAState.initialized.promise;\n    return new Promise((resolve, _reject) => {\n        // Updated after initialization is complete.\n        const reCAPTCHAState = getStateReference(app).reCAPTCHAState;\n        recaptcha.ready(() => {\n            resolve(\n            // widgetId is guaranteed to be available if reCAPTCHAState.initialized.promise resolved.\n            recaptcha.execute(reCAPTCHAState.widgetId, {\n                action: 'fire_app_check'\n            }));\n        });\n    });\n}\n/**\n *\n * @param app\n * @param container - Id of a HTML element.\n */\nfunction renderInvisibleWidget(app, siteKey, grecaptcha, container) {\n    const widgetId = grecaptcha.render(container, {\n        sitekey: siteKey,\n        size: 'invisible',\n        // Success callback - set state\n        callback: () => {\n            getStateReference(app).reCAPTCHAState.succeeded = true;\n        },\n        // Failure callback - set state\n        'error-callback': () => {\n            getStateReference(app).reCAPTCHAState.succeeded = false;\n        }\n    });\n    const state = getStateReference(app);\n    state.reCAPTCHAState = Object.assign(Object.assign({}, state.reCAPTCHAState), { // state.reCAPTCHAState is set in the initialize()\n        widgetId });\n}\nfunction loadReCAPTCHAV3Script(onload) {\n    const script = document.createElement('script');\n    script.src = RECAPTCHA_URL;\n    script.onload = onload;\n    document.head.appendChild(script);\n}\nfunction loadReCAPTCHAEnterpriseScript(onload) {\n    const script = document.createElement('script');\n    script.src = RECAPTCHA_ENTERPRISE_URL;\n    script.onload = onload;\n    document.head.appendChild(script);\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * App Check provider that can obtain a reCAPTCHA V3 token and exchange it\n * for an App Check token.\n *\n * @public\n */\nclass ReCaptchaV3Provider {\n    /**\n     * Create a ReCaptchaV3Provider instance.\n     * @param siteKey - ReCAPTCHA V3 siteKey.\n     */\n    constructor(_siteKey) {\n        this._siteKey = _siteKey;\n        /**\n         * Throttle requests on certain error codes to prevent too many retries\n         * in a short time.\n         */\n        this._throttleData = null;\n    }\n    /**\n     * Returns an App Check token.\n     * @internal\n     */\n    async getToken() {\n        var _a, _b, _c;\n        throwIfThrottled(this._throttleData);\n        // Top-level `getToken()` has already checked that App Check is initialized\n        // and therefore this._app and this._heartbeatServiceProvider are available.\n        const attestedClaimsToken = await getToken$1(this._app).catch(_e => {\n            // reCaptcha.execute() throws null which is not very descriptive.\n            throw ERROR_FACTORY.create(\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */);\n        });\n        // Check if a failure state was set by the recaptcha \"error-callback\".\n        if (!((_a = getStateReference(this._app).reCAPTCHAState) === null || _a === void 0 ? void 0 : _a.succeeded)) {\n            throw ERROR_FACTORY.create(\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */);\n        }\n        let result;\n        try {\n            result = await exchangeToken(getExchangeRecaptchaV3TokenRequest(this._app, attestedClaimsToken), this._heartbeatServiceProvider);\n        }\n        catch (e) {\n            if ((_b = e.code) === null || _b === void 0 ? void 0 : _b.includes(\"fetch-status-error\" /* AppCheckError.FETCH_STATUS_ERROR */)) {\n                this._throttleData = setBackoff(Number((_c = e.customData) === null || _c === void 0 ? void 0 : _c.httpStatus), this._throttleData);\n                throw ERROR_FACTORY.create(\"initial-throttle\" /* AppCheckError.INITIAL_THROTTLE */, {\n                    time: getDurationString(this._throttleData.allowRequestsAfter - Date.now()),\n                    httpStatus: this._throttleData.httpStatus\n                });\n            }\n            else {\n                throw e;\n            }\n        }\n        // If successful, clear throttle data.\n        this._throttleData = null;\n        return result;\n    }\n    /**\n     * @internal\n     */\n    initialize(app) {\n        this._app = app;\n        this._heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n        initializeV3(app, this._siteKey).catch(() => {\n            /* we don't care about the initialization result */\n        });\n    }\n    /**\n     * @internal\n     */\n    isEqual(otherProvider) {\n        if (otherProvider instanceof ReCaptchaV3Provider) {\n            return this._siteKey === otherProvider._siteKey;\n        }\n        else {\n            return false;\n        }\n    }\n}\n/**\n * App Check provider that can obtain a reCAPTCHA Enterprise token and exchange it\n * for an App Check token.\n *\n * @public\n */\nclass ReCaptchaEnterpriseProvider {\n    /**\n     * Create a ReCaptchaEnterpriseProvider instance.\n     * @param siteKey - reCAPTCHA Enterprise score-based site key.\n     */\n    constructor(_siteKey) {\n        this._siteKey = _siteKey;\n        /**\n         * Throttle requests on certain error codes to prevent too many retries\n         * in a short time.\n         */\n        this._throttleData = null;\n    }\n    /**\n     * Returns an App Check token.\n     * @internal\n     */\n    async getToken() {\n        var _a, _b, _c;\n        throwIfThrottled(this._throttleData);\n        // Top-level `getToken()` has already checked that App Check is initialized\n        // and therefore this._app and this._heartbeatServiceProvider are available.\n        const attestedClaimsToken = await getToken$1(this._app).catch(_e => {\n            // reCaptcha.execute() throws null which is not very descriptive.\n            throw ERROR_FACTORY.create(\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */);\n        });\n        // Check if a failure state was set by the recaptcha \"error-callback\".\n        if (!((_a = getStateReference(this._app).reCAPTCHAState) === null || _a === void 0 ? void 0 : _a.succeeded)) {\n            throw ERROR_FACTORY.create(\"recaptcha-error\" /* AppCheckError.RECAPTCHA_ERROR */);\n        }\n        let result;\n        try {\n            result = await exchangeToken(getExchangeRecaptchaEnterpriseTokenRequest(this._app, attestedClaimsToken), this._heartbeatServiceProvider);\n        }\n        catch (e) {\n            if ((_b = e.code) === null || _b === void 0 ? void 0 : _b.includes(\"fetch-status-error\" /* AppCheckError.FETCH_STATUS_ERROR */)) {\n                this._throttleData = setBackoff(Number((_c = e.customData) === null || _c === void 0 ? void 0 : _c.httpStatus), this._throttleData);\n                throw ERROR_FACTORY.create(\"initial-throttle\" /* AppCheckError.INITIAL_THROTTLE */, {\n                    time: getDurationString(this._throttleData.allowRequestsAfter - Date.now()),\n                    httpStatus: this._throttleData.httpStatus\n                });\n            }\n            else {\n                throw e;\n            }\n        }\n        // If successful, clear throttle data.\n        this._throttleData = null;\n        return result;\n    }\n    /**\n     * @internal\n     */\n    initialize(app) {\n        this._app = app;\n        this._heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n        initializeEnterprise(app, this._siteKey).catch(() => {\n            /* we don't care about the initialization result */\n        });\n    }\n    /**\n     * @internal\n     */\n    isEqual(otherProvider) {\n        if (otherProvider instanceof ReCaptchaEnterpriseProvider) {\n            return this._siteKey === otherProvider._siteKey;\n        }\n        else {\n            return false;\n        }\n    }\n}\n/**\n * Custom provider class.\n * @public\n */\nclass CustomProvider {\n    constructor(_customProviderOptions) {\n        this._customProviderOptions = _customProviderOptions;\n    }\n    /**\n     * @internal\n     */\n    async getToken() {\n        // custom provider\n        const customToken = await this._customProviderOptions.getToken();\n        // Try to extract IAT from custom token, in case this token is not\n        // being newly issued. JWT timestamps are in seconds since epoch.\n        const issuedAtTimeSeconds = issuedAtTime(customToken.token);\n        // Very basic validation, use current timestamp as IAT if JWT\n        // has no `iat` field or value is out of bounds.\n        const issuedAtTimeMillis = issuedAtTimeSeconds !== null &&\n            issuedAtTimeSeconds < Date.now() &&\n            issuedAtTimeSeconds > 0\n            ? issuedAtTimeSeconds * 1000\n            : Date.now();\n        return Object.assign(Object.assign({}, customToken), { issuedAtTimeMillis });\n    }\n    /**\n     * @internal\n     */\n    initialize(app) {\n        this._app = app;\n    }\n    /**\n     * @internal\n     */\n    isEqual(otherProvider) {\n        if (otherProvider instanceof CustomProvider) {\n            return (this._customProviderOptions.getToken.toString() ===\n                otherProvider._customProviderOptions.getToken.toString());\n        }\n        else {\n            return false;\n        }\n    }\n}\n/**\n * Set throttle data to block requests until after a certain time\n * depending on the failed request's status code.\n * @param httpStatus - Status code of failed request.\n * @param throttleData - `ThrottleData` object containing previous throttle\n * data state.\n * @returns Data about current throttle state and expiration time.\n */\nfunction setBackoff(httpStatus, throttleData) {\n    /**\n     * Block retries for 1 day for the following error codes:\n     *\n     * 404: Likely malformed URL.\n     *\n     * 403:\n     * - Attestation failed\n     * - Wrong API key\n     * - Project deleted\n     */\n    if (httpStatus === 404 || httpStatus === 403) {\n        return {\n            backoffCount: 1,\n            allowRequestsAfter: Date.now() + ONE_DAY,\n            httpStatus\n        };\n    }\n    else {\n        /**\n         * For all other error codes, the time when it is ok to retry again\n         * is based on exponential backoff.\n         */\n        const backoffCount = throttleData ? throttleData.backoffCount : 0;\n        const backoffMillis = calculateBackoffMillis(backoffCount, 1000, 2);\n        return {\n            backoffCount: backoffCount + 1,\n            allowRequestsAfter: Date.now() + backoffMillis,\n            httpStatus\n        };\n    }\n}\nfunction throwIfThrottled(throttleData) {\n    if (throttleData) {\n        if (Date.now() - throttleData.allowRequestsAfter <= 0) {\n            // If before, throw.\n            throw ERROR_FACTORY.create(\"throttled\" /* AppCheckError.THROTTLED */, {\n                time: getDurationString(throttleData.allowRequestsAfter - Date.now()),\n                httpStatus: throttleData.httpStatus\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Activate App Check for the given app. Can be called only once per app.\n * @param app - the {@link @firebase/app#FirebaseApp} to activate App Check for\n * @param options - App Check initialization options\n * @public\n */\nfunction initializeAppCheck(app = getApp(), options) {\n    app = getModularInstance(app);\n    const provider = _getProvider(app, 'app-check');\n    // Ensure initializeDebugMode() is only called once.\n    if (!getDebugState().initialized) {\n        initializeDebugMode();\n    }\n    // Log a message containing the debug token when `initializeAppCheck()`\n    // is called in debug mode.\n    if (isDebugMode()) {\n        // Do not block initialization to get the token for the message.\n        void getDebugToken().then(token => \n        // Not using logger because I don't think we ever want this accidentally hidden.\n        console.log(`App Check debug token: ${token}. You will need to add it to your app's App Check settings in the Firebase console for it to work.`));\n    }\n    if (provider.isInitialized()) {\n        const existingInstance = provider.getImmediate();\n        const initialOptions = provider.getOptions();\n        if (initialOptions.isTokenAutoRefreshEnabled ===\n            options.isTokenAutoRefreshEnabled &&\n            initialOptions.provider.isEqual(options.provider)) {\n            return existingInstance;\n        }\n        else {\n            throw ERROR_FACTORY.create(\"already-initialized\" /* AppCheckError.ALREADY_INITIALIZED */, {\n                appName: app.name\n            });\n        }\n    }\n    const appCheck = provider.initialize({ options });\n    _activate(app, options.provider, options.isTokenAutoRefreshEnabled);\n    // If isTokenAutoRefreshEnabled is false, do not send any requests to the\n    // exchange endpoint without an explicit call from the user either directly\n    // or through another Firebase library (storage, functions, etc.)\n    if (getStateReference(app).isTokenAutoRefreshEnabled) {\n        // Adding a listener will start the refresher and fetch a token if needed.\n        // This gets a token ready and prevents a delay when an internal library\n        // requests the token.\n        // Listener function does not need to do anything, its base functionality\n        // of calling getToken() already fetches token and writes it to memory/storage.\n        addTokenListener(appCheck, \"INTERNAL\" /* ListenerType.INTERNAL */, () => { });\n    }\n    return appCheck;\n}\n/**\n * Activate App Check\n * @param app - Firebase app to activate App Check for.\n * @param provider - reCAPTCHA v3 provider or\n * custom token provider.\n * @param isTokenAutoRefreshEnabled - If true, the SDK automatically\n * refreshes App Check tokens as needed. If undefined, defaults to the\n * value of `app.automaticDataCollectionEnabled`, which defaults to\n * false and can be set in the app config.\n */\nfunction _activate(app, provider, isTokenAutoRefreshEnabled = false) {\n    // Create an entry in the APP_CHECK_STATES map. Further changes should\n    // directly mutate this object.\n    const state = setInitialState(app, Object.assign({}, DEFAULT_STATE));\n    state.activated = true;\n    state.provider = provider; // Read cached token from storage if it exists and store it in memory.\n    state.cachedTokenPromise = readTokenFromStorage(app).then(cachedToken => {\n        if (cachedToken && isValid(cachedToken)) {\n            state.token = cachedToken;\n            // notify all listeners with the cached token\n            notifyTokenListeners(app, { token: cachedToken.token });\n        }\n        return cachedToken;\n    });\n    // Global `automaticDataCollectionEnabled` (defaults to true) and\n    // `isTokenAutoRefreshEnabled` must both be true.\n    state.isTokenAutoRefreshEnabled =\n        isTokenAutoRefreshEnabled && app.automaticDataCollectionEnabled;\n    if (!app.automaticDataCollectionEnabled && isTokenAutoRefreshEnabled) {\n        logger.warn('`isTokenAutoRefreshEnabled` is true but ' +\n            '`automaticDataCollectionEnabled` was set to false during' +\n            ' `initializeApp()`. This blocks automatic token refresh.');\n    }\n    state.provider.initialize(app);\n}\n/**\n * Set whether App Check will automatically refresh tokens as needed.\n *\n * @param appCheckInstance - The App Check service instance.\n * @param isTokenAutoRefreshEnabled - If true, the SDK automatically\n * refreshes App Check tokens as needed. This overrides any value set\n * during `initializeAppCheck()`.\n * @public\n */\nfunction setTokenAutoRefreshEnabled(appCheckInstance, isTokenAutoRefreshEnabled) {\n    const app = appCheckInstance.app;\n    const state = getStateReference(app);\n    // This will exist if any product libraries have called\n    // `addTokenListener()`\n    if (state.tokenRefresher) {\n        if (isTokenAutoRefreshEnabled === true) {\n            state.tokenRefresher.start();\n        }\n        else {\n            state.tokenRefresher.stop();\n        }\n    }\n    state.isTokenAutoRefreshEnabled = isTokenAutoRefreshEnabled;\n}\n/**\n * Get the current App Check token. If `forceRefresh` is false, this function first\n * checks for a valid token in memory, then local persistence (IndexedDB).\n * If not found, or if `forceRefresh` is true, it makes a request to the\n * App Check endpoint for a fresh token. That request attaches\n * to the most recent in-flight request if one is present.\n *\n * @param appCheckInstance - The App Check service instance.\n * @param forceRefresh - If true, will always try to fetch a fresh token.\n * If false, will use a cached token if found in storage.\n * @public\n */\nasync function getToken(appCheckInstance, forceRefresh) {\n    const result = await getToken$2(appCheckInstance, forceRefresh);\n    if (result.error) {\n        throw result.error;\n    }\n    if (result.internalError) {\n        throw result.internalError;\n    }\n    return { token: result.token };\n}\n/**\n * Requests a Firebase App Check token. This method should be used\n * only if you need to authorize requests to a non-Firebase backend.\n *\n * Returns limited-use tokens that are intended for use with your\n * non-Firebase backend endpoints that are protected with\n * <a href=\"https://firebase.google.com/docs/app-check/custom-resource-backend#replay-protection\">\n * Replay Protection</a>. This method\n * does not affect the token generation behavior of the\n * #getAppCheckToken() method.\n *\n * @param appCheckInstance - The App Check service instance.\n * @returns The limited use token.\n * @public\n */\nfunction getLimitedUseToken(appCheckInstance) {\n    return getLimitedUseToken$1(appCheckInstance);\n}\n/**\n * Wraps `addTokenListener`/`removeTokenListener` methods in an `Observer`\n * pattern for public use.\n */\nfunction onTokenChanged(appCheckInstance, onNextOrObserver, onError, \n/**\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the token stream is never-ending.\n * It is added only for API consistency with the observer pattern, which\n * we follow in JS APIs.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nonCompletion) {\n    let nextFn = () => { };\n    let errorFn = () => { };\n    if (onNextOrObserver.next != null) {\n        nextFn = onNextOrObserver.next.bind(onNextOrObserver);\n    }\n    else {\n        nextFn = onNextOrObserver;\n    }\n    if (onNextOrObserver.error != null) {\n        errorFn = onNextOrObserver.error.bind(onNextOrObserver);\n    }\n    else if (onError) {\n        errorFn = onError;\n    }\n    addTokenListener(appCheckInstance, \"EXTERNAL\" /* ListenerType.EXTERNAL */, nextFn, errorFn);\n    return () => removeTokenListener(appCheckInstance.app, nextFn);\n}\n\n/**\n * The Firebase App Check Web SDK.\n *\n * @remarks\n * Firebase App Check does not work in a Node.js environment using `ReCaptchaV3Provider` or\n * `ReCaptchaEnterpriseProvider`, but can be used in Node.js if you use\n * `CustomProvider` and write your own attestation method.\n *\n * @packageDocumentation\n */\nconst APP_CHECK_NAME = 'app-check';\nconst APP_CHECK_NAME_INTERNAL = 'app-check-internal';\nfunction registerAppCheck() {\n    // The public interface\n    _registerComponent(new Component(APP_CHECK_NAME, container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const heartbeatServiceProvider = container.getProvider('heartbeat');\n        return factory(app, heartbeatServiceProvider);\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\n        .setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */)\n        /**\n         * Initialize app-check-internal after app-check is initialized to make AppCheck available to\n         * other Firebase SDKs\n         */\n        .setInstanceCreatedCallback((container, _identifier, _appcheckService) => {\n        container.getProvider(APP_CHECK_NAME_INTERNAL).initialize();\n    }));\n    // The internal interface used by other Firebase products\n    _registerComponent(new Component(APP_CHECK_NAME_INTERNAL, container => {\n        const appCheck = container.getProvider('app-check').getImmediate();\n        return internalFactory(appCheck);\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */).setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */));\n    registerVersion(name, version);\n}\nregisterAppCheck();\n\nexport { CustomProvider, ReCaptchaEnterpriseProvider, ReCaptchaV3Provider, getLimitedUseToken, getToken, initializeAppCheck, onTokenChanged, setTokenAutoRefreshEnabled };\n\n", "import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\nimport { registerVersion } from 'firebase/app';\nimport { authState as authState$1, idToken as idToken$1, user as user$1 } from 'rxfire/auth';\nimport { applyActionCode as applyActionCode$1, beforeAuthStateChanged as beforeAuthStateChanged$1, checkActionCode as checkActionCode$1, confirmPasswordReset as confirmPasswordReset$1, connectAuthEmulator as connectAuthEmulator$1, createUserWithEmailAndPassword as createUserWithEmailAndPassword$1, deleteUser as deleteUser$1, fetchSignInMethodsForEmail as fetchSignInMethodsForEmail$1, getAdditionalUserInfo as getAdditionalUserInfo$1, getAuth as getAuth$1, getIdToken as getIdToken$1, getIdTokenResult as getIdTokenResult$1, getMultiFactorResolver as getMultiFactorResolver$1, getRedirectResult as getRedirectResult$1, initializeAuth as initializeAuth$1, initializeRecaptchaConfig as initializeRecaptchaConfig$1, isSignInWithEmailLink as isSignInWithEmailLink$1, linkWithCredential as linkWithCredential$1, linkWithPhoneNumber as linkWithPhoneNumber$1, linkWithPopup as linkWithPopup$1, linkWithRedirect as linkWithRedirect$1, onAuthStateChanged as onAuthStateChanged$1, onIdTokenChanged as onIdTokenChanged$1, parseActionCodeURL as parseActionCodeURL$1, reauthenticateWithCredential as reauthenticateWithCredential$1, reauthenticateWithPhoneNumber as reauthenticateWithPhoneNumber$1, reauthenticateWithPopup as reauthenticateWithPopup$1, reauthenticateWithRedirect as reauthenticateWithRedirect$1, reload as reload$1, revokeAccessToken as revokeAccessToken$1, sendEmailVerification as sendEmailVerification$1, sendPasswordResetEmail as sendPasswordResetEmail$1, sendSignInLinkToEmail as sendSignInLinkToEmail$1, setPersistence as setPersistence$1, signInAnonymously as signInAnonymously$1, signInWithCredential as signInWithCredential$1, signInWithCustomToken as signInWithCustomToken$1, signInWithEmailAndPassword as signInWithEmailAndPassword$1, signInWithEmailLink as signInWithEmailLink$1, signInWithPhoneNumber as signInWithPhoneNumber$1, signInWithPopup as signInWithPopup$1, signInWithRedirect as signInWithRedirect$1, signOut as signOut$1, unlink as unlink$1, updateCurrentUser as updateCurrentUser$1, updateEmail as updateEmail$1, updatePassword as updatePassword$1, updatePhoneNumber as updatePhoneNumber$1, updateProfile as updateProfile$1, useDeviceLanguage as useDeviceLanguage$1, validatePassword as validatePassword$1, verifyBeforeUpdateEmail as verifyBeforeUpdateEmail$1, verifyPasswordResetCode as verifyPasswordResetCode$1 } from 'firebase/auth';\nexport * from 'firebase/auth';\nconst AUTH_PROVIDER_NAME = 'auth';\nclass Auth {\n  constructor(auth) {\n    return auth;\n  }\n}\nclass AuthInstances {\n  constructor() {\n    return _getAllInstancesOf(AUTH_PROVIDER_NAME);\n  }\n}\nconst authInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(AUTH_PROVIDER_NAME))), distinct());\nconst PROVIDED_AUTH_INSTANCES = new InjectionToken('angularfire2.auth-instances');\nfunction defaultAuthInstanceFactory(provided, defaultApp) {\n  const defaultAuth = _getDefaultInstanceOf(AUTH_PROVIDER_NAME, provided, defaultApp);\n  return defaultAuth && new Auth(defaultAuth);\n}\nfunction authInstanceFactory(fn) {\n  return (zone, injector) => {\n    const auth = zone.runOutsideAngular(() => fn(injector));\n    return new Auth(auth);\n  };\n}\nconst AUTH_INSTANCES_PROVIDER = {\n  provide: AuthInstances,\n  deps: [[new Optional(), PROVIDED_AUTH_INSTANCES]]\n};\nconst DEFAULT_AUTH_INSTANCE_PROVIDER = {\n  provide: Auth,\n  useFactory: defaultAuthInstanceFactory,\n  deps: [[new Optional(), PROVIDED_AUTH_INSTANCES], FirebaseApp]\n};\nclass AuthModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'auth');\n  }\n  static ɵfac = function AuthModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AuthModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AuthModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_AUTH_INSTANCE_PROVIDER, AUTH_INSTANCES_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_AUTH_INSTANCE_PROVIDER, AUTH_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideAuth(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'auth');\n  return makeEnvironmentProviders([DEFAULT_AUTH_INSTANCE_PROVIDER, AUTH_INSTANCES_PROVIDER, {\n    provide: PROVIDED_AUTH_INSTANCES,\n    useFactory: authInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, _AngularFireSchedulers, FirebaseApps, [new Optional(), AppCheckInstances], ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst authState = _zoneWrap(authState$1, true);\nconst idToken = _zoneWrap(idToken$1, true);\nconst user = _zoneWrap(user$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst applyActionCode = _zoneWrap(applyActionCode$1, true);\nconst beforeAuthStateChanged = _zoneWrap(beforeAuthStateChanged$1, true);\nconst checkActionCode = _zoneWrap(checkActionCode$1, true);\nconst confirmPasswordReset = _zoneWrap(confirmPasswordReset$1, true, 2);\nconst connectAuthEmulator = _zoneWrap(connectAuthEmulator$1, true);\nconst createUserWithEmailAndPassword = _zoneWrap(createUserWithEmailAndPassword$1, true, 2);\nconst deleteUser = _zoneWrap(deleteUser$1, true, 2);\nconst fetchSignInMethodsForEmail = _zoneWrap(fetchSignInMethodsForEmail$1, true, 2);\nconst getAdditionalUserInfo = _zoneWrap(getAdditionalUserInfo$1, true, 2);\nconst getAuth = _zoneWrap(getAuth$1, true);\nconst getIdToken = _zoneWrap(getIdToken$1, true);\nconst getIdTokenResult = _zoneWrap(getIdTokenResult$1, true);\nconst getMultiFactorResolver = _zoneWrap(getMultiFactorResolver$1, true);\nconst getRedirectResult = _zoneWrap(getRedirectResult$1, true);\nconst initializeAuth = _zoneWrap(initializeAuth$1, true);\nconst initializeRecaptchaConfig = _zoneWrap(initializeRecaptchaConfig$1, true);\nconst isSignInWithEmailLink = _zoneWrap(isSignInWithEmailLink$1, true);\nconst linkWithCredential = _zoneWrap(linkWithCredential$1, true, 2);\nconst linkWithPhoneNumber = _zoneWrap(linkWithPhoneNumber$1, true, 2);\nconst linkWithPopup = _zoneWrap(linkWithPopup$1, true, 2);\nconst linkWithRedirect = _zoneWrap(linkWithRedirect$1, true, 2);\nconst onAuthStateChanged = _zoneWrap(onAuthStateChanged$1, true);\nconst onIdTokenChanged = _zoneWrap(onIdTokenChanged$1, true);\nconst parseActionCodeURL = _zoneWrap(parseActionCodeURL$1, true);\nconst reauthenticateWithCredential = _zoneWrap(reauthenticateWithCredential$1, true, 2);\nconst reauthenticateWithPhoneNumber = _zoneWrap(reauthenticateWithPhoneNumber$1, true, 2);\nconst reauthenticateWithPopup = _zoneWrap(reauthenticateWithPopup$1, true, 2);\nconst reauthenticateWithRedirect = _zoneWrap(reauthenticateWithRedirect$1, true, 2);\nconst reload = _zoneWrap(reload$1, true, 2);\nconst revokeAccessToken = _zoneWrap(revokeAccessToken$1, true, 2);\nconst sendEmailVerification = _zoneWrap(sendEmailVerification$1, true, 2);\nconst sendPasswordResetEmail = _zoneWrap(sendPasswordResetEmail$1, true, 2);\nconst sendSignInLinkToEmail = _zoneWrap(sendSignInLinkToEmail$1, true, 2);\nconst setPersistence = _zoneWrap(setPersistence$1, true);\nconst signInAnonymously = _zoneWrap(signInAnonymously$1, true, 2);\nconst signInWithCredential = _zoneWrap(signInWithCredential$1, true, 2);\nconst signInWithCustomToken = _zoneWrap(signInWithCustomToken$1, true, 2);\nconst signInWithEmailAndPassword = _zoneWrap(signInWithEmailAndPassword$1, true, 2);\nconst signInWithEmailLink = _zoneWrap(signInWithEmailLink$1, true, 2);\nconst signInWithPhoneNumber = _zoneWrap(signInWithPhoneNumber$1, true, 2);\nconst signInWithPopup = _zoneWrap(signInWithPopup$1, true, 2);\nconst signInWithRedirect = _zoneWrap(signInWithRedirect$1, true, 2);\nconst signOut = _zoneWrap(signOut$1, true, 2);\nconst unlink = _zoneWrap(unlink$1, true, 2);\nconst updateCurrentUser = _zoneWrap(updateCurrentUser$1, true, 2);\nconst updateEmail = _zoneWrap(updateEmail$1, true, 2);\nconst updatePassword = _zoneWrap(updatePassword$1, true, 2);\nconst updatePhoneNumber = _zoneWrap(updatePhoneNumber$1, true, 2);\nconst updateProfile = _zoneWrap(updateProfile$1, true, 2);\nconst useDeviceLanguage = _zoneWrap(useDeviceLanguage$1, true, 2);\nconst validatePassword = _zoneWrap(validatePassword$1, true, 2);\nconst verifyBeforeUpdateEmail = _zoneWrap(verifyBeforeUpdateEmail$1, true, 2);\nconst verifyPasswordResetCode = _zoneWrap(verifyPasswordResetCode$1, true, 2);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Auth, AuthInstances, AuthModule, applyActionCode, authInstance$, authState, beforeAuthStateChanged, checkActionCode, confirmPasswordReset, connectAuthEmulator, createUserWithEmailAndPassword, deleteUser, fetchSignInMethodsForEmail, getAdditionalUserInfo, getAuth, getIdToken, getIdTokenResult, getMultiFactorResolver, getRedirectResult, idToken, initializeAuth, initializeRecaptchaConfig, isSignInWithEmailLink, linkWithCredential, linkWithPhoneNumber, linkWithPopup, linkWithRedirect, onAuthStateChanged, onIdTokenChanged, parseActionCodeURL, provideAuth, reauthenticateWithCredential, reauthenticateWithPhoneNumber, reauthenticateWithPopup, reauthenticateWithRedirect, reload, revokeAccessToken, sendEmailVerification, sendPasswordResetEmail, sendSignInLinkToEmail, setPersistence, signInAnonymously, signInWithCredential, signInWithCustomToken, signInWithEmailAndPassword, signInWithEmailLink, signInWithPhoneNumber, signInWithPopup, signInWithRedirect, signOut, unlink, updateCurrentUser, updateEmail, updatePassword, updatePhoneNumber, updateProfile, useDeviceLanguage, user, validatePassword, verifyBeforeUpdateEmail, verifyPasswordResetCode };\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { SDK_VERSION, _isFirebaseServerApp, _getProvider, _registerComponent, registerVersion, getApp } from '@firebase/app';\nimport { ErrorFactory, isBrowserExtension, isMobileCordova, isReactNative, FirebaseError, querystring, isCloudflareWorker, isCloudWorkstation, getModularInstance, base64Decode, getUA, isIE, createSubscribe, deepEqual, pingServer, updateEmulatorBanner, querystringDecode, extractQuerystring, getDefaultEmulatorHost } from '@firebase/util';\nimport { __rest } from 'tslib';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An enum of factors that may be used for multifactor authentication.\n *\n * @public\n */\nconst FactorId = {\n    /** Phone as second factor */\n    PHONE: 'phone',\n    TOTP: 'totp'\n};\n/**\n * Enumeration of supported providers.\n *\n * @public\n */\nconst ProviderId = {\n    /** Facebook provider ID */\n    FACEBOOK: 'facebook.com',\n    /** GitHub provider ID */\n    GITHUB: 'github.com',\n    /** Google provider ID */\n    GOOGLE: 'google.com',\n    /** Password provider */\n    PASSWORD: 'password',\n    /** Phone provider */\n    PHONE: 'phone',\n    /** Twitter provider ID */\n    TWITTER: 'twitter.com'\n};\n/**\n * Enumeration of supported sign-in methods.\n *\n * @public\n */\nconst SignInMethod = {\n    /** Email link sign in method */\n    EMAIL_LINK: 'emailLink',\n    /** Email/password sign in method */\n    EMAIL_PASSWORD: 'password',\n    /** Facebook sign in method */\n    FACEBOOK: 'facebook.com',\n    /** GitHub sign in method */\n    GITHUB: 'github.com',\n    /** Google sign in method */\n    GOOGLE: 'google.com',\n    /** Phone sign in method */\n    PHONE: 'phone',\n    /** Twitter sign in method */\n    TWITTER: 'twitter.com'\n};\n/**\n * Enumeration of supported operation types.\n *\n * @public\n */\nconst OperationType = {\n    /** Operation involving linking an additional provider to an already signed-in user. */\n    LINK: 'link',\n    /** Operation involving using a provider to reauthenticate an already signed-in user. */\n    REAUTHENTICATE: 'reauthenticate',\n    /** Operation involving signing in a user. */\n    SIGN_IN: 'signIn'\n};\n/**\n * An enumeration of the possible email action types.\n *\n * @public\n */\nconst ActionCodeOperation = {\n    /** The email link sign-in action. */\n    EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n    /** The password reset action. */\n    PASSWORD_RESET: 'PASSWORD_RESET',\n    /** The email revocation action. */\n    RECOVER_EMAIL: 'RECOVER_EMAIL',\n    /** The revert second factor addition email action. */\n    REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',\n    /** The revert second factor addition email action. */\n    VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',\n    /** The email verification action. */\n    VERIFY_EMAIL: 'VERIFY_EMAIL'\n};\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction _debugErrorMap() {\n    return {\n        [\"admin-restricted-operation\" /* AuthErrorCode.ADMIN_ONLY_OPERATION */]: 'This operation is restricted to administrators only.',\n        [\"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */]: '',\n        [\"app-not-authorized\" /* AuthErrorCode.APP_NOT_AUTHORIZED */]: \"This app, identified by the domain where it's hosted, is not \" +\n            'authorized to use Firebase Authentication with the provided API key. ' +\n            'Review your key configuration in the Google API console.',\n        [\"app-not-installed\" /* AuthErrorCode.APP_NOT_INSTALLED */]: 'The requested mobile application corresponding to the identifier (' +\n            'Android package name or iOS bundle ID) provided is not installed on ' +\n            'this device.',\n        [\"captcha-check-failed\" /* AuthErrorCode.CAPTCHA_CHECK_FAILED */]: 'The reCAPTCHA response token provided is either invalid, expired, ' +\n            'already used or the domain associated with it does not match the list ' +\n            'of whitelisted domains.',\n        [\"code-expired\" /* AuthErrorCode.CODE_EXPIRED */]: 'The SMS code has expired. Please re-send the verification code to try ' +\n            'again.',\n        [\"cordova-not-ready\" /* AuthErrorCode.CORDOVA_NOT_READY */]: 'Cordova framework is not ready.',\n        [\"cors-unsupported\" /* AuthErrorCode.CORS_UNSUPPORTED */]: 'This browser is not supported.',\n        [\"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */]: 'This credential is already associated with a different user account.',\n        [\"custom-token-mismatch\" /* AuthErrorCode.CREDENTIAL_MISMATCH */]: 'The custom token corresponds to a different audience.',\n        [\"requires-recent-login\" /* AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */]: 'This operation is sensitive and requires recent authentication. Log in ' +\n            'again before retrying this request.',\n        [\"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */]: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n            'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n            'starting any other Firebase SDK.',\n        [\"dynamic-link-not-activated\" /* AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED */]: 'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n            'conditions.',\n        [\"email-change-needs-verification\" /* AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION */]: 'Multi-factor users must always have a verified email.',\n        [\"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */]: 'The email address is already in use by another account.',\n        [\"emulator-config-failed\" /* AuthErrorCode.EMULATOR_CONFIG_FAILED */]: 'Auth instance has already been used to make a network call. Auth can ' +\n            'no longer be configured to use the emulator. Try calling ' +\n            '\"connectAuthEmulator()\" sooner.',\n        [\"expired-action-code\" /* AuthErrorCode.EXPIRED_OOB_CODE */]: 'The action code has expired.',\n        [\"cancelled-popup-request\" /* AuthErrorCode.EXPIRED_POPUP_REQUEST */]: 'This operation has been cancelled due to another conflicting popup being opened.',\n        [\"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */]: 'An internal AuthError has occurred.',\n        [\"invalid-app-credential\" /* AuthErrorCode.INVALID_APP_CREDENTIAL */]: 'The phone verification request contains an invalid application verifier.' +\n            ' The reCAPTCHA token response is either invalid or expired.',\n        [\"invalid-app-id\" /* AuthErrorCode.INVALID_APP_ID */]: 'The mobile app identifier is not registered for the current project.',\n        [\"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */]: \"This user's credential isn't valid for this project. This can happen \" +\n            \"if the user's token has been tampered with, or if the user isn't for \" +\n            'the project associated with this API key.',\n        [\"invalid-auth-event\" /* AuthErrorCode.INVALID_AUTH_EVENT */]: 'An internal AuthError has occurred.',\n        [\"invalid-verification-code\" /* AuthErrorCode.INVALID_CODE */]: 'The SMS verification code used to create the phone auth credential is ' +\n            'invalid. Please resend the verification code sms and be sure to use the ' +\n            'verification code provided by the user.',\n        [\"invalid-continue-uri\" /* AuthErrorCode.INVALID_CONTINUE_URI */]: 'The continue URL provided in the request is invalid.',\n        [\"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */]: 'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n            'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n            'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n            'cordova-plugin-customurlscheme.',\n        [\"invalid-custom-token\" /* AuthErrorCode.INVALID_CUSTOM_TOKEN */]: 'The custom token format is incorrect. Please check the documentation.',\n        [\"invalid-dynamic-link-domain\" /* AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN */]: 'The provided dynamic link domain is not configured or authorized for the current project.',\n        [\"invalid-email\" /* AuthErrorCode.INVALID_EMAIL */]: 'The email address is badly formatted.',\n        [\"invalid-emulator-scheme\" /* AuthErrorCode.INVALID_EMULATOR_SCHEME */]: 'Emulator URL must start with a valid scheme (http:// or https://).',\n        [\"invalid-api-key\" /* AuthErrorCode.INVALID_API_KEY */]: 'Your API key is invalid, please check you have copied it correctly.',\n        [\"invalid-cert-hash\" /* AuthErrorCode.INVALID_CERT_HASH */]: 'The SHA-1 certificate hash provided is invalid.',\n        [\"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */]: 'The supplied auth credential is incorrect, malformed or has expired.',\n        [\"invalid-message-payload\" /* AuthErrorCode.INVALID_MESSAGE_PAYLOAD */]: 'The email template corresponding to this action contains invalid characters in its message. ' +\n            'Please fix by going to the Auth email templates section in the Firebase Console.',\n        [\"invalid-multi-factor-session\" /* AuthErrorCode.INVALID_MFA_SESSION */]: 'The request does not contain a valid proof of first factor successful sign-in.',\n        [\"invalid-oauth-provider\" /* AuthErrorCode.INVALID_OAUTH_PROVIDER */]: 'EmailAuthProvider is not supported for this operation. This operation ' +\n            'only supports OAuth providers.',\n        [\"invalid-oauth-client-id\" /* AuthErrorCode.INVALID_OAUTH_CLIENT_ID */]: 'The OAuth client ID provided is either invalid or does not match the ' +\n            'specified API key.',\n        [\"unauthorized-domain\" /* AuthErrorCode.INVALID_ORIGIN */]: 'This domain is not authorized for OAuth operations for your Firebase ' +\n            'project. Edit the list of authorized domains from the Firebase console.',\n        [\"invalid-action-code\" /* AuthErrorCode.INVALID_OOB_CODE */]: 'The action code is invalid. This can happen if the code is malformed, ' +\n            'expired, or has already been used.',\n        [\"wrong-password\" /* AuthErrorCode.INVALID_PASSWORD */]: 'The password is invalid or the user does not have a password.',\n        [\"invalid-persistence-type\" /* AuthErrorCode.INVALID_PERSISTENCE */]: 'The specified persistence type is invalid. It can only be local, session or none.',\n        [\"invalid-phone-number\" /* AuthErrorCode.INVALID_PHONE_NUMBER */]: 'The format of the phone number provided is incorrect. Please enter the ' +\n            'phone number in a format that can be parsed into E.164 format. E.164 ' +\n            'phone numbers are written in the format [+][country code][subscriber ' +\n            'number including area code].',\n        [\"invalid-provider-id\" /* AuthErrorCode.INVALID_PROVIDER_ID */]: 'The specified provider ID is invalid.',\n        [\"invalid-recipient-email\" /* AuthErrorCode.INVALID_RECIPIENT_EMAIL */]: 'The email corresponding to this action failed to send as the provided ' +\n            'recipient email address is invalid.',\n        [\"invalid-sender\" /* AuthErrorCode.INVALID_SENDER */]: 'The email template corresponding to this action contains an invalid sender email or name. ' +\n            'Please fix by going to the Auth email templates section in the Firebase Console.',\n        [\"invalid-verification-id\" /* AuthErrorCode.INVALID_SESSION_INFO */]: 'The verification ID used to create the phone auth credential is invalid.',\n        [\"invalid-tenant-id\" /* AuthErrorCode.INVALID_TENANT_ID */]: \"The Auth instance's tenant ID is invalid.\",\n        [\"login-blocked\" /* AuthErrorCode.LOGIN_BLOCKED */]: 'Login blocked by user-provided method: {$originalMessage}',\n        [\"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */]: 'An Android Package Name must be provided if the Android App is required to be installed.',\n        [\"auth-domain-config-required\" /* AuthErrorCode.MISSING_AUTH_DOMAIN */]: 'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n            'by following the instructions in the Firebase console.',\n        [\"missing-app-credential\" /* AuthErrorCode.MISSING_APP_CREDENTIAL */]: 'The phone verification request is missing an application verifier ' +\n            'assertion. A reCAPTCHA response token needs to be provided.',\n        [\"missing-verification-code\" /* AuthErrorCode.MISSING_CODE */]: 'The phone auth credential was created with an empty SMS verification code.',\n        [\"missing-continue-uri\" /* AuthErrorCode.MISSING_CONTINUE_URI */]: 'A continue URL must be provided in the request.',\n        [\"missing-iframe-start\" /* AuthErrorCode.MISSING_IFRAME_START */]: 'An internal AuthError has occurred.',\n        [\"missing-ios-bundle-id\" /* AuthErrorCode.MISSING_IOS_BUNDLE_ID */]: 'An iOS Bundle ID must be provided if an App Store ID is provided.',\n        [\"missing-or-invalid-nonce\" /* AuthErrorCode.MISSING_OR_INVALID_NONCE */]: 'The request does not contain a valid nonce. This can occur if the ' +\n            'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n            'in the ID token payload.',\n        [\"missing-password\" /* AuthErrorCode.MISSING_PASSWORD */]: 'A non-empty password must be provided',\n        [\"missing-multi-factor-info\" /* AuthErrorCode.MISSING_MFA_INFO */]: 'No second factor identifier is provided.',\n        [\"missing-multi-factor-session\" /* AuthErrorCode.MISSING_MFA_SESSION */]: 'The request is missing proof of first factor successful sign-in.',\n        [\"missing-phone-number\" /* AuthErrorCode.MISSING_PHONE_NUMBER */]: 'To send verification codes, provide a phone number for the recipient.',\n        [\"missing-verification-id\" /* AuthErrorCode.MISSING_SESSION_INFO */]: 'The phone auth credential was created with an empty verification ID.',\n        [\"app-deleted\" /* AuthErrorCode.MODULE_DESTROYED */]: 'This instance of FirebaseApp has been deleted.',\n        [\"multi-factor-info-not-found\" /* AuthErrorCode.MFA_INFO_NOT_FOUND */]: 'The user does not have a second factor matching the identifier provided.',\n        [\"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */]: 'Proof of ownership of a second factor is required to complete sign-in.',\n        [\"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */]: 'An account already exists with the same email address but different ' +\n            'sign-in credentials. Sign in using a provider associated with this ' +\n            'email address.',\n        [\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */]: 'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n        [\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */]: 'An internal AuthError has occurred.',\n        [\"no-such-provider\" /* AuthErrorCode.NO_SUCH_PROVIDER */]: 'User was not linked to an account with the given provider.',\n        [\"null-user\" /* AuthErrorCode.NULL_USER */]: 'A null user object was provided as the argument for an operation which ' +\n            'requires a non-null user object.',\n        [\"operation-not-allowed\" /* AuthErrorCode.OPERATION_NOT_ALLOWED */]: 'The given sign-in provider is disabled for this Firebase project. ' +\n            'Enable it in the Firebase console, under the sign-in method tab of the ' +\n            'Auth section.',\n        [\"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */]: 'This operation is not supported in the environment this application is ' +\n            'running on. \"location.protocol\" must be http, https or chrome-extension' +\n            ' and web storage must be enabled.',\n        [\"popup-blocked\" /* AuthErrorCode.POPUP_BLOCKED */]: 'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n        [\"popup-closed-by-user\" /* AuthErrorCode.POPUP_CLOSED_BY_USER */]: 'The popup has been closed by the user before finalizing the operation.',\n        [\"provider-already-linked\" /* AuthErrorCode.PROVIDER_ALREADY_LINKED */]: 'User can only be linked to one identity for the given provider.',\n        [\"quota-exceeded\" /* AuthErrorCode.QUOTA_EXCEEDED */]: \"The project's quota for this operation has been exceeded.\",\n        [\"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */]: 'The redirect operation has been cancelled by the user before finalizing.',\n        [\"redirect-operation-pending\" /* AuthErrorCode.REDIRECT_OPERATION_PENDING */]: 'A redirect sign-in operation is already pending.',\n        [\"rejected-credential\" /* AuthErrorCode.REJECTED_CREDENTIAL */]: 'The request contains malformed or mismatching credentials.',\n        [\"second-factor-already-in-use\" /* AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED */]: 'The second factor is already enrolled on this account.',\n        [\"maximum-second-factor-count-exceeded\" /* AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED */]: 'The maximum allowed number of second factors on a user has been exceeded.',\n        [\"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */]: \"The provided tenant ID does not match the Auth instance's tenant ID\",\n        [\"timeout\" /* AuthErrorCode.TIMEOUT */]: 'The operation has timed out.',\n        [\"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */]: \"The user's credential is no longer valid. The user must sign in again.\",\n        [\"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */]: 'We have blocked all requests from this device due to unusual activity. ' +\n            'Try again later.',\n        [\"unauthorized-continue-uri\" /* AuthErrorCode.UNAUTHORIZED_DOMAIN */]: 'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n            'the domain in the Firebase console.',\n        [\"unsupported-first-factor\" /* AuthErrorCode.UNSUPPORTED_FIRST_FACTOR */]: 'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n        [\"unsupported-persistence-type\" /* AuthErrorCode.UNSUPPORTED_PERSISTENCE */]: 'The current environment does not support the specified persistence type.',\n        [\"unsupported-tenant-operation\" /* AuthErrorCode.UNSUPPORTED_TENANT_OPERATION */]: 'This operation is not supported in a multi-tenant context.',\n        [\"unverified-email\" /* AuthErrorCode.UNVERIFIED_EMAIL */]: 'The operation requires a verified email.',\n        [\"user-cancelled\" /* AuthErrorCode.USER_CANCELLED */]: 'The user did not grant your application the permissions it requested.',\n        [\"user-not-found\" /* AuthErrorCode.USER_DELETED */]: 'There is no user record corresponding to this identifier. The user may ' +\n            'have been deleted.',\n        [\"user-disabled\" /* AuthErrorCode.USER_DISABLED */]: 'The user account has been disabled by an administrator.',\n        [\"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */]: 'The supplied credentials do not correspond to the previously signed in user.',\n        [\"user-signed-out\" /* AuthErrorCode.USER_SIGNED_OUT */]: '',\n        [\"weak-password\" /* AuthErrorCode.WEAK_PASSWORD */]: 'The password must be 6 characters long or more.',\n        [\"web-storage-unsupported\" /* AuthErrorCode.WEB_STORAGE_UNSUPPORTED */]: 'This browser is not supported or 3rd party cookies and data may be disabled.',\n        [\"already-initialized\" /* AuthErrorCode.ALREADY_INITIALIZED */]: 'initializeAuth() has already been called with ' +\n            'different options. To avoid this error, call initializeAuth() with the ' +\n            'same options as when it was originally called, or call getAuth() to return the' +\n            ' already initialized instance.',\n        [\"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */]: 'The reCAPTCHA token is missing when sending request to the backend.',\n        [\"invalid-recaptcha-token\" /* AuthErrorCode.INVALID_RECAPTCHA_TOKEN */]: 'The reCAPTCHA token is invalid when sending request to the backend.',\n        [\"invalid-recaptcha-action\" /* AuthErrorCode.INVALID_RECAPTCHA_ACTION */]: 'The reCAPTCHA action is invalid when sending request to the backend.',\n        [\"recaptcha-not-enabled\" /* AuthErrorCode.RECAPTCHA_NOT_ENABLED */]: 'reCAPTCHA Enterprise integration is not enabled for this project.',\n        [\"missing-client-type\" /* AuthErrorCode.MISSING_CLIENT_TYPE */]: 'The reCAPTCHA client type is missing when sending request to the backend.',\n        [\"missing-recaptcha-version\" /* AuthErrorCode.MISSING_RECAPTCHA_VERSION */]: 'The reCAPTCHA version is missing when sending request to the backend.',\n        [\"invalid-req-type\" /* AuthErrorCode.INVALID_REQ_TYPE */]: 'Invalid request parameters.',\n        [\"invalid-recaptcha-version\" /* AuthErrorCode.INVALID_RECAPTCHA_VERSION */]: 'The reCAPTCHA version is invalid when sending request to the backend.',\n        [\"unsupported-password-policy-schema-version\" /* AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION */]: 'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.',\n        [\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */]: 'The password does not meet the requirements.',\n        [\"invalid-hosting-link-domain\" /* AuthErrorCode.INVALID_HOSTING_LINK_DOMAIN */]: 'The provided Hosting link domain is not configured in Firebase Hosting or is not owned by ' +\n            'the current project. This cannot be a default Hosting domain (`web.app` or `firebaseapp.com`).'\n    };\n}\nfunction _prodErrorMap() {\n    // We will include this one message in the prod error map since by the very\n    // nature of this error, developers will never be able to see the message\n    // using the debugErrorMap (which is installed during auth initialization).\n    return {\n        [\"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */]: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n            'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n            'starting any other Firebase SDK.'\n    };\n}\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nconst debugErrorMap = _debugErrorMap;\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nconst prodErrorMap = _prodErrorMap;\nconst _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory('auth', 'Firebase', _prodErrorMap());\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nconst AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n    ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n    ARGUMENT_ERROR: 'auth/argument-error',\n    APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n    APP_NOT_INSTALLED: 'auth/app-not-installed',\n    CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n    CODE_EXPIRED: 'auth/code-expired',\n    CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n    CORS_UNSUPPORTED: 'auth/cors-unsupported',\n    CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n    CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n    CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n    DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n    DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n    EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n    EMAIL_EXISTS: 'auth/email-already-in-use',\n    EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n    EXPIRED_OOB_CODE: 'auth/expired-action-code',\n    EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n    INTERNAL_ERROR: 'auth/internal-error',\n    INVALID_API_KEY: 'auth/invalid-api-key',\n    INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n    INVALID_APP_ID: 'auth/invalid-app-id',\n    INVALID_AUTH: 'auth/invalid-user-token',\n    INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n    INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n    INVALID_CODE: 'auth/invalid-verification-code',\n    INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n    INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n    INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n    INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n    INVALID_EMAIL: 'auth/invalid-email',\n    INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n    INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n    INVALID_LOGIN_CREDENTIALS: 'auth/invalid-credential',\n    INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n    INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n    INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n    INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n    INVALID_OOB_CODE: 'auth/invalid-action-code',\n    INVALID_ORIGIN: 'auth/unauthorized-domain',\n    INVALID_PASSWORD: 'auth/wrong-password',\n    INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n    INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n    INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n    INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n    INVALID_SENDER: 'auth/invalid-sender',\n    INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n    INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n    MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n    MFA_REQUIRED: 'auth/multi-factor-auth-required',\n    MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n    MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n    MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n    MISSING_CODE: 'auth/missing-verification-code',\n    MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n    MISSING_IFRAME_START: 'auth/missing-iframe-start',\n    MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n    MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n    MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n    MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n    MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n    MISSING_SESSION_INFO: 'auth/missing-verification-id',\n    MODULE_DESTROYED: 'auth/app-deleted',\n    NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n    NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n    NULL_USER: 'auth/null-user',\n    NO_AUTH_EVENT: 'auth/no-auth-event',\n    NO_SUCH_PROVIDER: 'auth/no-such-provider',\n    OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n    OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n    POPUP_BLOCKED: 'auth/popup-blocked',\n    POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n    PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n    QUOTA_EXCEEDED: 'auth/quota-exceeded',\n    REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n    REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n    REJECTED_CREDENTIAL: 'auth/rejected-credential',\n    SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n    SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n    TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n    TIMEOUT: 'auth/timeout',\n    TOKEN_EXPIRED: 'auth/user-token-expired',\n    TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n    UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n    UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n    UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n    UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n    UNVERIFIED_EMAIL: 'auth/unverified-email',\n    USER_CANCELLED: 'auth/user-cancelled',\n    USER_DELETED: 'auth/user-not-found',\n    USER_DISABLED: 'auth/user-disabled',\n    USER_MISMATCH: 'auth/user-mismatch',\n    USER_SIGNED_OUT: 'auth/user-signed-out',\n    WEAK_PASSWORD: 'auth/weak-password',\n    WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n    ALREADY_INITIALIZED: 'auth/already-initialized',\n    RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\n    MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\n    INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\n    INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\n    MISSING_CLIENT_TYPE: 'auth/missing-client-type',\n    MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\n    INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\n    INVALID_REQ_TYPE: 'auth/invalid-req-type',\n    INVALID_HOSTING_LINK_DOMAIN: 'auth/invalid-hosting-link-domain'\n};\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logClient = new Logger('@firebase/auth');\nfunction _logWarn(msg, ...args) {\n    if (logClient.logLevel <= LogLevel.WARN) {\n        logClient.warn(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n    }\n}\nfunction _logError(msg, ...args) {\n    if (logClient.logLevel <= LogLevel.ERROR) {\n        logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction _fail(authOrCode, ...rest) {\n    throw createErrorInternal(authOrCode, ...rest);\n}\nfunction _createError(authOrCode, ...rest) {\n    return createErrorInternal(authOrCode, ...rest);\n}\nfunction _errorWithCustomMessage(auth, code, message) {\n    const errorMap = Object.assign(Object.assign({}, prodErrorMap()), { [code]: message });\n    const factory = new ErrorFactory('auth', 'Firebase', errorMap);\n    return factory.create(code, {\n        appName: auth.name\n    });\n}\nfunction _serverAppCurrentUserOperationNotSupportedError(auth) {\n    return _errorWithCustomMessage(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */, 'Operations that alter the current user are not supported in conjunction with FirebaseServerApp');\n}\nfunction createErrorInternal(authOrCode, ...rest) {\n    if (typeof authOrCode !== 'string') {\n        const code = rest[0];\n        const fullParams = [...rest.slice(1)];\n        if (fullParams[0]) {\n            fullParams[0].appName = authOrCode.name;\n        }\n        return authOrCode._errorFactory.create(code, ...fullParams);\n    }\n    return _DEFAULT_AUTH_ERROR_FACTORY.create(authOrCode, ...rest);\n}\nfunction _assert(assertion, authOrCode, ...rest) {\n    if (!assertion) {\n        throw createErrorInternal(authOrCode, ...rest);\n    }\n}\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nfunction debugFail(failure) {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const message = `INTERNAL ASSERTION FAILED: ` + failure;\n    _logError(message);\n    // NOTE: We don't use FirebaseError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw new Error(message);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nfunction debugAssert(assertion, message) {\n    if (!assertion) {\n        debugFail(message);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction _getCurrentUrl() {\n    var _a;\n    return (typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.href)) || '';\n}\nfunction _isHttpOrHttps() {\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\nfunction _getCurrentScheme() {\n    var _a;\n    return (typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.protocol)) || null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Determine whether the browser is working online\n */\nfunction _isOnline() {\n    if (typeof navigator !== 'undefined' &&\n        navigator &&\n        'onLine' in navigator &&\n        typeof navigator.onLine === 'boolean' &&\n        // Apply only for traditional web apps and Chrome extensions.\n        // This is especially true for Cordova apps which have unreliable\n        // navigator.onLine behavior unless cordova-plugin-network-information is\n        // installed which overwrites the native navigator.onLine value and\n        // defines navigator.connection.\n        (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)) {\n        return navigator.onLine;\n    }\n    // If we can't determine the state, assume it is online.\n    return true;\n}\nfunction _getUserLanguage() {\n    if (typeof navigator === 'undefined') {\n        return null;\n    }\n    const navigatorLanguage = navigator;\n    return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n        // Supported in most browsers, but returns the language of the browser\n        // UI, not the language set in browser settings.\n        navigatorLanguage.language ||\n        // Couldn't determine language.\n        null);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nclass Delay {\n    constructor(shortDelay, longDelay) {\n        this.shortDelay = shortDelay;\n        this.longDelay = longDelay;\n        // Internal error when improperly initialized.\n        debugAssert(longDelay > shortDelay, 'Short delay should be less than long delay!');\n        this.isMobile = isMobileCordova() || isReactNative();\n    }\n    get() {\n        if (!_isOnline()) {\n            // Pick the shorter timeout.\n            return Math.min(5000 /* DelayMin.OFFLINE */, this.shortDelay);\n        }\n        // If running in a mobile environment, return the long delay, otherwise\n        // return the short delay.\n        // This could be improved in the future to dynamically change based on other\n        // variables instead of just reading the current environment.\n        return this.isMobile ? this.longDelay : this.shortDelay;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction _emulatorUrl(config, path) {\n    debugAssert(config.emulator, 'Emulator should always be set here');\n    const { url } = config.emulator;\n    if (!path) {\n        return url;\n    }\n    return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass FetchProvider {\n    static initialize(fetchImpl, headersImpl, responseImpl) {\n        this.fetchImpl = fetchImpl;\n        if (headersImpl) {\n            this.headersImpl = headersImpl;\n        }\n        if (responseImpl) {\n            this.responseImpl = responseImpl;\n        }\n    }\n    static fetch() {\n        if (this.fetchImpl) {\n            return this.fetchImpl;\n        }\n        if (typeof self !== 'undefined' && 'fetch' in self) {\n            return self.fetch;\n        }\n        if (typeof globalThis !== 'undefined' && globalThis.fetch) {\n            return globalThis.fetch;\n        }\n        if (typeof fetch !== 'undefined') {\n            return fetch;\n        }\n        debugFail('Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    }\n    static headers() {\n        if (this.headersImpl) {\n            return this.headersImpl;\n        }\n        if (typeof self !== 'undefined' && 'Headers' in self) {\n            return self.Headers;\n        }\n        if (typeof globalThis !== 'undefined' && globalThis.Headers) {\n            return globalThis.Headers;\n        }\n        if (typeof Headers !== 'undefined') {\n            return Headers;\n        }\n        debugFail('Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    }\n    static response() {\n        if (this.responseImpl) {\n            return this.responseImpl;\n        }\n        if (typeof self !== 'undefined' && 'Response' in self) {\n            return self.Response;\n        }\n        if (typeof globalThis !== 'undefined' && globalThis.Response) {\n            return globalThis.Response;\n        }\n        if (typeof Response !== 'undefined') {\n            return Response;\n        }\n        debugFail('Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nconst SERVER_ERROR_MAP = {\n    // Custom token errors.\n    [\"CREDENTIAL_MISMATCH\" /* ServerError.CREDENTIAL_MISMATCH */]: \"custom-token-mismatch\" /* AuthErrorCode.CREDENTIAL_MISMATCH */,\n    // This can only happen if the SDK sends a bad request.\n    [\"MISSING_CUSTOM_TOKEN\" /* ServerError.MISSING_CUSTOM_TOKEN */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n    // Create Auth URI errors.\n    [\"INVALID_IDENTIFIER\" /* ServerError.INVALID_IDENTIFIER */]: \"invalid-email\" /* AuthErrorCode.INVALID_EMAIL */,\n    // This can only happen if the SDK sends a bad request.\n    [\"MISSING_CONTINUE_URI\" /* ServerError.MISSING_CONTINUE_URI */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n    // Sign in with email and password errors (some apply to sign up too).\n    [\"INVALID_PASSWORD\" /* ServerError.INVALID_PASSWORD */]: \"wrong-password\" /* AuthErrorCode.INVALID_PASSWORD */,\n    // This can only happen if the SDK sends a bad request.\n    [\"MISSING_PASSWORD\" /* ServerError.MISSING_PASSWORD */]: \"missing-password\" /* AuthErrorCode.MISSING_PASSWORD */,\n    // Thrown if Email Enumeration Protection is enabled in the project and the email or password is\n    // invalid.\n    [\"INVALID_LOGIN_CREDENTIALS\" /* ServerError.INVALID_LOGIN_CREDENTIALS */]: \"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */,\n    // Sign up with email and password errors.\n    [\"EMAIL_EXISTS\" /* ServerError.EMAIL_EXISTS */]: \"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */,\n    [\"PASSWORD_LOGIN_DISABLED\" /* ServerError.PASSWORD_LOGIN_DISABLED */]: \"operation-not-allowed\" /* AuthErrorCode.OPERATION_NOT_ALLOWED */,\n    // Verify assertion for sign in with credential errors:\n    [\"INVALID_IDP_RESPONSE\" /* ServerError.INVALID_IDP_RESPONSE */]: \"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */,\n    [\"INVALID_PENDING_TOKEN\" /* ServerError.INVALID_PENDING_TOKEN */]: \"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */,\n    [\"FEDERATED_USER_ID_ALREADY_LINKED\" /* ServerError.FEDERATED_USER_ID_ALREADY_LINKED */]: \"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */,\n    // This can only happen if the SDK sends a bad request.\n    [\"MISSING_REQ_TYPE\" /* ServerError.MISSING_REQ_TYPE */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n    // Send Password reset email errors:\n    [\"EMAIL_NOT_FOUND\" /* ServerError.EMAIL_NOT_FOUND */]: \"user-not-found\" /* AuthErrorCode.USER_DELETED */,\n    [\"RESET_PASSWORD_EXCEED_LIMIT\" /* ServerError.RESET_PASSWORD_EXCEED_LIMIT */]: \"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */,\n    [\"EXPIRED_OOB_CODE\" /* ServerError.EXPIRED_OOB_CODE */]: \"expired-action-code\" /* AuthErrorCode.EXPIRED_OOB_CODE */,\n    [\"INVALID_OOB_CODE\" /* ServerError.INVALID_OOB_CODE */]: \"invalid-action-code\" /* AuthErrorCode.INVALID_OOB_CODE */,\n    // This can only happen if the SDK sends a bad request.\n    [\"MISSING_OOB_CODE\" /* ServerError.MISSING_OOB_CODE */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n    // Operations that require ID token in request:\n    [\"CREDENTIAL_TOO_OLD_LOGIN_AGAIN\" /* ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */]: \"requires-recent-login\" /* AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */,\n    [\"INVALID_ID_TOKEN\" /* ServerError.INVALID_ID_TOKEN */]: \"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */,\n    [\"TOKEN_EXPIRED\" /* ServerError.TOKEN_EXPIRED */]: \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */,\n    [\"USER_NOT_FOUND\" /* ServerError.USER_NOT_FOUND */]: \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */,\n    // Other errors.\n    [\"TOO_MANY_ATTEMPTS_TRY_LATER\" /* ServerError.TOO_MANY_ATTEMPTS_TRY_LATER */]: \"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */,\n    [\"PASSWORD_DOES_NOT_MEET_REQUIREMENTS\" /* ServerError.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */]: \"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */,\n    // Phone Auth related errors.\n    [\"INVALID_CODE\" /* ServerError.INVALID_CODE */]: \"invalid-verification-code\" /* AuthErrorCode.INVALID_CODE */,\n    [\"INVALID_SESSION_INFO\" /* ServerError.INVALID_SESSION_INFO */]: \"invalid-verification-id\" /* AuthErrorCode.INVALID_SESSION_INFO */,\n    [\"INVALID_TEMPORARY_PROOF\" /* ServerError.INVALID_TEMPORARY_PROOF */]: \"invalid-credential\" /* AuthErrorCode.INVALID_CREDENTIAL */,\n    [\"MISSING_SESSION_INFO\" /* ServerError.MISSING_SESSION_INFO */]: \"missing-verification-id\" /* AuthErrorCode.MISSING_SESSION_INFO */,\n    [\"SESSION_EXPIRED\" /* ServerError.SESSION_EXPIRED */]: \"code-expired\" /* AuthErrorCode.CODE_EXPIRED */,\n    // Other action code errors when additional settings passed.\n    // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n    // This is OK as this error will be caught by client side validation.\n    [\"MISSING_ANDROID_PACKAGE_NAME\" /* ServerError.MISSING_ANDROID_PACKAGE_NAME */]: \"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */,\n    [\"UNAUTHORIZED_DOMAIN\" /* ServerError.UNAUTHORIZED_DOMAIN */]: \"unauthorized-continue-uri\" /* AuthErrorCode.UNAUTHORIZED_DOMAIN */,\n    // getProjectConfig errors when clientId is passed.\n    [\"INVALID_OAUTH_CLIENT_ID\" /* ServerError.INVALID_OAUTH_CLIENT_ID */]: \"invalid-oauth-client-id\" /* AuthErrorCode.INVALID_OAUTH_CLIENT_ID */,\n    // User actions (sign-up or deletion) disabled errors.\n    [\"ADMIN_ONLY_OPERATION\" /* ServerError.ADMIN_ONLY_OPERATION */]: \"admin-restricted-operation\" /* AuthErrorCode.ADMIN_ONLY_OPERATION */,\n    // Multi factor related errors.\n    [\"INVALID_MFA_PENDING_CREDENTIAL\" /* ServerError.INVALID_MFA_PENDING_CREDENTIAL */]: \"invalid-multi-factor-session\" /* AuthErrorCode.INVALID_MFA_SESSION */,\n    [\"MFA_ENROLLMENT_NOT_FOUND\" /* ServerError.MFA_ENROLLMENT_NOT_FOUND */]: \"multi-factor-info-not-found\" /* AuthErrorCode.MFA_INFO_NOT_FOUND */,\n    [\"MISSING_MFA_ENROLLMENT_ID\" /* ServerError.MISSING_MFA_ENROLLMENT_ID */]: \"missing-multi-factor-info\" /* AuthErrorCode.MISSING_MFA_INFO */,\n    [\"MISSING_MFA_PENDING_CREDENTIAL\" /* ServerError.MISSING_MFA_PENDING_CREDENTIAL */]: \"missing-multi-factor-session\" /* AuthErrorCode.MISSING_MFA_SESSION */,\n    [\"SECOND_FACTOR_EXISTS\" /* ServerError.SECOND_FACTOR_EXISTS */]: \"second-factor-already-in-use\" /* AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED */,\n    [\"SECOND_FACTOR_LIMIT_EXCEEDED\" /* ServerError.SECOND_FACTOR_LIMIT_EXCEEDED */]: \"maximum-second-factor-count-exceeded\" /* AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED */,\n    // Blocking functions related errors.\n    [\"BLOCKING_FUNCTION_ERROR_RESPONSE\" /* ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\n    // Recaptcha related errors.\n    [\"RECAPTCHA_NOT_ENABLED\" /* ServerError.RECAPTCHA_NOT_ENABLED */]: \"recaptcha-not-enabled\" /* AuthErrorCode.RECAPTCHA_NOT_ENABLED */,\n    [\"MISSING_RECAPTCHA_TOKEN\" /* ServerError.MISSING_RECAPTCHA_TOKEN */]: \"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */,\n    [\"INVALID_RECAPTCHA_TOKEN\" /* ServerError.INVALID_RECAPTCHA_TOKEN */]: \"invalid-recaptcha-token\" /* AuthErrorCode.INVALID_RECAPTCHA_TOKEN */,\n    [\"INVALID_RECAPTCHA_ACTION\" /* ServerError.INVALID_RECAPTCHA_ACTION */]: \"invalid-recaptcha-action\" /* AuthErrorCode.INVALID_RECAPTCHA_ACTION */,\n    [\"MISSING_CLIENT_TYPE\" /* ServerError.MISSING_CLIENT_TYPE */]: \"missing-client-type\" /* AuthErrorCode.MISSING_CLIENT_TYPE */,\n    [\"MISSING_RECAPTCHA_VERSION\" /* ServerError.MISSING_RECAPTCHA_VERSION */]: \"missing-recaptcha-version\" /* AuthErrorCode.MISSING_RECAPTCHA_VERSION */,\n    [\"INVALID_RECAPTCHA_VERSION\" /* ServerError.INVALID_RECAPTCHA_VERSION */]: \"invalid-recaptcha-version\" /* AuthErrorCode.INVALID_RECAPTCHA_VERSION */,\n    [\"INVALID_REQ_TYPE\" /* ServerError.INVALID_REQ_TYPE */]: \"invalid-req-type\" /* AuthErrorCode.INVALID_REQ_TYPE */\n};\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst CookieAuthProxiedEndpoints = [\n    \"/v1/accounts:signInWithCustomToken\" /* Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN */,\n    \"/v1/accounts:signInWithEmailLink\" /* Endpoint.SIGN_IN_WITH_EMAIL_LINK */,\n    \"/v1/accounts:signInWithIdp\" /* Endpoint.SIGN_IN_WITH_IDP */,\n    \"/v1/accounts:signInWithPassword\" /* Endpoint.SIGN_IN_WITH_PASSWORD */,\n    \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */,\n    \"/v1/token\" /* Endpoint.TOKEN */\n];\nconst DEFAULT_API_TIMEOUT_MS = new Delay(30000, 60000);\nfunction _addTidIfNecessary(auth, request) {\n    if (auth.tenantId && !request.tenantId) {\n        return Object.assign(Object.assign({}, request), { tenantId: auth.tenantId });\n    }\n    return request;\n}\nasync function _performApiRequest(auth, method, path, request, customErrorMap = {}) {\n    return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n        let body = {};\n        let params = {};\n        if (request) {\n            if (method === \"GET\" /* HttpMethod.GET */) {\n                params = request;\n            }\n            else {\n                body = {\n                    body: JSON.stringify(request)\n                };\n            }\n        }\n        const query = querystring(Object.assign({ key: auth.config.apiKey }, params)).slice(1);\n        const headers = await auth._getAdditionalHeaders();\n        headers[\"Content-Type\" /* HttpHeader.CONTENT_TYPE */] = 'application/json';\n        if (auth.languageCode) {\n            headers[\"X-Firebase-Locale\" /* HttpHeader.X_FIREBASE_LOCALE */] = auth.languageCode;\n        }\n        const fetchArgs = Object.assign({ method,\n            headers }, body);\n        /* Security-conscious server-side frameworks tend to have built in mitigations for referrer\n           problems\". See the Cloudflare GitHub issue #487: Error: The 'referrerPolicy' field on\n           'RequestInitializerDict' is not implemented.\"\n           https://github.com/cloudflare/next-on-pages/issues/487 */\n        if (!isCloudflareWorker()) {\n            fetchArgs.referrerPolicy = 'no-referrer';\n        }\n        if (auth.emulatorConfig && isCloudWorkstation(auth.emulatorConfig.host)) {\n            fetchArgs.credentials = 'include';\n        }\n        return FetchProvider.fetch()(await _getFinalTarget(auth, auth.config.apiHost, path, query), fetchArgs);\n    });\n}\nasync function _performFetchWithErrorHandling(auth, customErrorMap, fetchFn) {\n    auth._canInitEmulator = false;\n    const errorMap = Object.assign(Object.assign({}, SERVER_ERROR_MAP), customErrorMap);\n    try {\n        const networkTimeout = new NetworkTimeout(auth);\n        const response = await Promise.race([\n            fetchFn(),\n            networkTimeout.promise\n        ]);\n        // If we've reached this point, the fetch succeeded and the networkTimeout\n        // didn't throw; clear the network timeout delay so that Node won't hang\n        networkTimeout.clearNetworkTimeout();\n        const json = await response.json();\n        if ('needConfirmation' in json) {\n            throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */, json);\n        }\n        if (response.ok && !('errorMessage' in json)) {\n            return json;\n        }\n        else {\n            const errorMessage = response.ok ? json.errorMessage : json.error.message;\n            const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n            if (serverErrorCode === \"FEDERATED_USER_ID_ALREADY_LINKED\" /* ServerError.FEDERATED_USER_ID_ALREADY_LINKED */) {\n                throw _makeTaggedError(auth, \"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */, json);\n            }\n            else if (serverErrorCode === \"EMAIL_EXISTS\" /* ServerError.EMAIL_EXISTS */) {\n                throw _makeTaggedError(auth, \"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */, json);\n            }\n            else if (serverErrorCode === \"USER_DISABLED\" /* ServerError.USER_DISABLED */) {\n                throw _makeTaggedError(auth, \"user-disabled\" /* AuthErrorCode.USER_DISABLED */, json);\n            }\n            const authError = errorMap[serverErrorCode] ||\n                serverErrorCode\n                    .toLowerCase()\n                    .replace(/[_\\s]+/g, '-');\n            if (serverErrorMessage) {\n                throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n            }\n            else {\n                _fail(auth, authError);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof FirebaseError) {\n            throw e;\n        }\n        // Changing this to a different error code will log user out when there is a network error\n        // because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.\n        // https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316\n        _fail(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */, { 'message': String(e) });\n    }\n}\nasync function _performSignInRequest(auth, method, path, request, customErrorMap = {}) {\n    const serverResponse = await _performApiRequest(auth, method, path, request, customErrorMap);\n    if ('mfaPendingCredential' in serverResponse) {\n        _fail(auth, \"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */, {\n            _serverResponse: serverResponse\n        });\n    }\n    return serverResponse;\n}\nasync function _getFinalTarget(auth, host, path, query) {\n    const base = `${host}${path}?${query}`;\n    const authInternal = auth;\n    const finalTarget = authInternal.config.emulator\n        ? _emulatorUrl(auth.config, base)\n        : `${auth.config.apiScheme}://${base}`;\n    // Cookie auth works by MiTMing the signIn and token endpoints from the developer's backend,\n    // saving the idToken and refreshToken into cookies, and then redacting the refreshToken\n    // from the response\n    if (CookieAuthProxiedEndpoints.includes(path)) {\n        // Persistence manager is async, we need to await it. We can't just wait for auth initialized\n        // here since auth initialization calls this function.\n        await authInternal._persistenceManagerAvailable;\n        if (authInternal._getPersistenceType() === \"COOKIE\" /* PersistenceType.COOKIE */) {\n            const cookiePersistence = authInternal._getPersistence();\n            return cookiePersistence._getFinalTarget(finalTarget).toString();\n        }\n    }\n    return finalTarget;\n}\nfunction _parseEnforcementState(enforcementStateStr) {\n    switch (enforcementStateStr) {\n        case 'ENFORCE':\n            return \"ENFORCE\" /* EnforcementState.ENFORCE */;\n        case 'AUDIT':\n            return \"AUDIT\" /* EnforcementState.AUDIT */;\n        case 'OFF':\n            return \"OFF\" /* EnforcementState.OFF */;\n        default:\n            return \"ENFORCEMENT_STATE_UNSPECIFIED\" /* EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED */;\n    }\n}\nclass NetworkTimeout {\n    clearNetworkTimeout() {\n        clearTimeout(this.timer);\n    }\n    constructor(auth) {\n        this.auth = auth;\n        // Node timers and browser timers are fundamentally incompatible, but we\n        // don't care about the value here\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.timer = null;\n        this.promise = new Promise((_, reject) => {\n            this.timer = setTimeout(() => {\n                return reject(_createError(this.auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */));\n            }, DEFAULT_API_TIMEOUT_MS.get());\n        });\n    }\n}\nfunction _makeTaggedError(auth, code, response) {\n    const errorParams = {\n        appName: auth.name\n    };\n    if (response.email) {\n        errorParams.email = response.email;\n    }\n    if (response.phoneNumber) {\n        errorParams.phoneNumber = response.phoneNumber;\n    }\n    const error = _createError(auth, code, errorParams);\n    // We know customData is defined on error because errorParams is defined\n    error.customData._tokenResponse = response;\n    return error;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction isEnterprise(grecaptcha) {\n    return (grecaptcha !== undefined &&\n        grecaptcha.enterprise !== undefined);\n}\nclass RecaptchaConfig {\n    constructor(response) {\n        /**\n         * The reCAPTCHA site key.\n         */\n        this.siteKey = '';\n        /**\n         * The list of providers and their enablement status for reCAPTCHA Enterprise.\n         */\n        this.recaptchaEnforcementState = [];\n        if (response.recaptchaKey === undefined) {\n            throw new Error('recaptchaKey undefined');\n        }\n        // Example response.recaptchaKey: \"projects/proj123/keys/sitekey123\"\n        this.siteKey = response.recaptchaKey.split('/')[3];\n        this.recaptchaEnforcementState = response.recaptchaEnforcementState;\n    }\n    /**\n     * Returns the reCAPTCHA Enterprise enforcement state for the given provider.\n     *\n     * @param providerStr - The provider whose enforcement state is to be returned.\n     * @returns The reCAPTCHA Enterprise enforcement state for the given provider.\n     */\n    getProviderEnforcementState(providerStr) {\n        if (!this.recaptchaEnforcementState ||\n            this.recaptchaEnforcementState.length === 0) {\n            return null;\n        }\n        for (const recaptchaEnforcementState of this.recaptchaEnforcementState) {\n            if (recaptchaEnforcementState.provider &&\n                recaptchaEnforcementState.provider === providerStr) {\n                return _parseEnforcementState(recaptchaEnforcementState.enforcementState);\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.\n     *\n     * @param providerStr - The provider whose enablement state is to be returned.\n     * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.\n     */\n    isProviderEnabled(providerStr) {\n        return (this.getProviderEnforcementState(providerStr) ===\n            \"ENFORCE\" /* EnforcementState.ENFORCE */ ||\n            this.getProviderEnforcementState(providerStr) === \"AUDIT\" /* EnforcementState.AUDIT */);\n    }\n    /**\n     * Returns true if reCAPTCHA Enterprise protection is enabled in at least one provider, otherwise\n     * returns false.\n     *\n     * @returns Whether or not reCAPTCHA Enterprise protection is enabled for at least one provider.\n     */\n    isAnyProviderEnabled() {\n        return (this.isProviderEnabled(\"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaAuthProvider.EMAIL_PASSWORD_PROVIDER */) ||\n            this.isProviderEnabled(\"PHONE_PROVIDER\" /* RecaptchaAuthProvider.PHONE_PROVIDER */));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function getRecaptchaConfig(auth, request) {\n    return _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v2/recaptchaConfig\" /* Endpoint.GET_RECAPTCHA_CONFIG */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function deleteAccount(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:delete\" /* Endpoint.DELETE_ACCOUNT */, request);\n}\nasync function deleteLinkedAccounts(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request);\n}\nasync function getAccountInfo(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:lookup\" /* Endpoint.GET_ACCOUNT_INFO */, request);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction utcTimestampToDateString(utcTimestamp) {\n    if (!utcTimestamp) {\n        return undefined;\n    }\n    try {\n        // Convert to date object.\n        const date = new Date(Number(utcTimestamp));\n        // Test date is valid.\n        if (!isNaN(date.getTime())) {\n            // Convert to UTC date string.\n            return date.toUTCString();\n        }\n    }\n    catch (e) {\n        // Do nothing. undefined will be returned.\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nfunction getIdToken(user, forceRefresh = false) {\n    return getModularInstance(user).getIdToken(forceRefresh);\n}\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nasync function getIdTokenResult(user, forceRefresh = false) {\n    const userInternal = getModularInstance(user);\n    const token = await userInternal.getIdToken(forceRefresh);\n    const claims = _parseToken(token);\n    _assert(claims && claims.exp && claims.auth_time && claims.iat, userInternal.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    const firebase = typeof claims.firebase === 'object' ? claims.firebase : undefined;\n    const signInProvider = firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_provider'];\n    return {\n        claims,\n        token,\n        authTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.auth_time)),\n        issuedAtTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.iat)),\n        expirationTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.exp)),\n        signInProvider: signInProvider || null,\n        signInSecondFactor: (firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_second_factor']) || null\n    };\n}\nfunction secondsStringToMilliseconds(seconds) {\n    return Number(seconds) * 1000;\n}\nfunction _parseToken(token) {\n    const [algorithm, payload, signature] = token.split('.');\n    if (algorithm === undefined ||\n        payload === undefined ||\n        signature === undefined) {\n        _logError('JWT malformed, contained fewer than 3 sections');\n        return null;\n    }\n    try {\n        const decoded = base64Decode(payload);\n        if (!decoded) {\n            _logError('Failed to decode base64 JWT payload');\n            return null;\n        }\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        _logError('Caught error parsing JWT payload as JSON', e === null || e === void 0 ? void 0 : e.toString());\n        return null;\n    }\n}\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nfunction _tokenExpiresIn(token) {\n    const parsedToken = _parseToken(token);\n    _assert(parsedToken, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    _assert(typeof parsedToken.exp !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    _assert(typeof parsedToken.iat !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function _logoutIfInvalidated(user, promise, bypassAuthState = false) {\n    if (bypassAuthState) {\n        return promise;\n    }\n    try {\n        return await promise;\n    }\n    catch (e) {\n        if (e instanceof FirebaseError && isUserInvalidated(e)) {\n            if (user.auth.currentUser === user) {\n                await user.auth.signOut();\n            }\n        }\n        throw e;\n    }\n}\nfunction isUserInvalidated({ code }) {\n    return (code === `auth/${\"user-disabled\" /* AuthErrorCode.USER_DISABLED */}` ||\n        code === `auth/${\"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */}`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass ProactiveRefresh {\n    constructor(user) {\n        this.user = user;\n        this.isRunning = false;\n        // Node timers and browser timers return fundamentally different types.\n        // We don't actually care what the value is but TS won't accept unknown and\n        // we can't cast properly in both environments.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.timerId = null;\n        this.errorBackoff = 30000 /* Duration.RETRY_BACKOFF_MIN */;\n    }\n    _start() {\n        if (this.isRunning) {\n            return;\n        }\n        this.isRunning = true;\n        this.schedule();\n    }\n    _stop() {\n        if (!this.isRunning) {\n            return;\n        }\n        this.isRunning = false;\n        if (this.timerId !== null) {\n            clearTimeout(this.timerId);\n        }\n    }\n    getInterval(wasError) {\n        var _a;\n        if (wasError) {\n            const interval = this.errorBackoff;\n            this.errorBackoff = Math.min(this.errorBackoff * 2, 960000 /* Duration.RETRY_BACKOFF_MAX */);\n            return interval;\n        }\n        else {\n            // Reset the error backoff\n            this.errorBackoff = 30000 /* Duration.RETRY_BACKOFF_MIN */;\n            const expTime = (_a = this.user.stsTokenManager.expirationTime) !== null && _a !== void 0 ? _a : 0;\n            const interval = expTime - Date.now() - 300000 /* Duration.OFFSET */;\n            return Math.max(0, interval);\n        }\n    }\n    schedule(wasError = false) {\n        if (!this.isRunning) {\n            // Just in case...\n            return;\n        }\n        const interval = this.getInterval(wasError);\n        this.timerId = setTimeout(async () => {\n            await this.iteration();\n        }, interval);\n    }\n    async iteration() {\n        try {\n            await this.user.getIdToken(true);\n        }\n        catch (e) {\n            // Only retry on network errors\n            if ((e === null || e === void 0 ? void 0 : e.code) ===\n                `auth/${\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */}`) {\n                this.schedule(/* wasError */ true);\n            }\n            return;\n        }\n        this.schedule();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass UserMetadata {\n    constructor(createdAt, lastLoginAt) {\n        this.createdAt = createdAt;\n        this.lastLoginAt = lastLoginAt;\n        this._initializeTime();\n    }\n    _initializeTime() {\n        this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n        this.creationTime = utcTimestampToDateString(this.createdAt);\n    }\n    _copy(metadata) {\n        this.createdAt = metadata.createdAt;\n        this.lastLoginAt = metadata.lastLoginAt;\n        this._initializeTime();\n    }\n    toJSON() {\n        return {\n            createdAt: this.createdAt,\n            lastLoginAt: this.lastLoginAt\n        };\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function _reloadWithoutSaving(user) {\n    var _a;\n    const auth = user.auth;\n    const idToken = await user.getIdToken();\n    const response = await _logoutIfInvalidated(user, getAccountInfo(auth, { idToken }));\n    _assert(response === null || response === void 0 ? void 0 : response.users.length, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    const coreAccount = response.users[0];\n    user._notifyReloadListener(coreAccount);\n    const newProviderData = ((_a = coreAccount.providerUserInfo) === null || _a === void 0 ? void 0 : _a.length)\n        ? extractProviderData(coreAccount.providerUserInfo)\n        : [];\n    const providerData = mergeProviderData(user.providerData, newProviderData);\n    // Preserves the non-nonymous status of the stored user, even if no more\n    // credentials (federated or email/password) are linked to the user. If\n    // the user was previously anonymous, then use provider data to update.\n    // On the other hand, if it was not anonymous before, it should never be\n    // considered anonymous now.\n    const oldIsAnonymous = user.isAnonymous;\n    const newIsAnonymous = !(user.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);\n    const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n    const updates = {\n        uid: coreAccount.localId,\n        displayName: coreAccount.displayName || null,\n        photoURL: coreAccount.photoUrl || null,\n        email: coreAccount.email || null,\n        emailVerified: coreAccount.emailVerified || false,\n        phoneNumber: coreAccount.phoneNumber || null,\n        tenantId: coreAccount.tenantId || null,\n        providerData,\n        metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n        isAnonymous\n    };\n    Object.assign(user, updates);\n}\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nasync function reload(user) {\n    const userInternal = getModularInstance(user);\n    await _reloadWithoutSaving(userInternal);\n    // Even though the current user hasn't changed, update\n    // current user will trigger a persistence update w/ the\n    // new info.\n    await userInternal.auth._persistUserIfCurrent(userInternal);\n    userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\nfunction mergeProviderData(original, newData) {\n    const deduped = original.filter(o => !newData.some(n => n.providerId === o.providerId));\n    return [...deduped, ...newData];\n}\nfunction extractProviderData(providers) {\n    return providers.map((_a) => {\n        var { providerId } = _a, provider = __rest(_a, [\"providerId\"]);\n        return {\n            providerId,\n            uid: provider.rawId || '',\n            displayName: provider.displayName || null,\n            email: provider.email || null,\n            phoneNumber: provider.phoneNumber || null,\n            photoURL: provider.photoUrl || null\n        };\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function requestStsToken(auth, refreshToken) {\n    const response = await _performFetchWithErrorHandling(auth, {}, async () => {\n        const body = querystring({\n            'grant_type': 'refresh_token',\n            'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = await _getFinalTarget(auth, tokenApiHost, \"/v1/token\" /* Endpoint.TOKEN */, `key=${apiKey}`);\n        const headers = await auth._getAdditionalHeaders();\n        headers[\"Content-Type\" /* HttpHeader.CONTENT_TYPE */] = 'application/x-www-form-urlencoded';\n        const options = {\n            method: \"POST\" /* HttpMethod.POST */,\n            headers,\n            body\n        };\n        if (auth.emulatorConfig &&\n            isCloudWorkstation(auth.emulatorConfig.host)) {\n            options.credentials = 'include';\n        }\n        return FetchProvider.fetch()(url, options);\n    });\n    // The response comes back in snake_case. Convert to camel:\n    return {\n        accessToken: response.access_token,\n        expiresIn: response.expires_in,\n        refreshToken: response.refresh_token\n    };\n}\nasync function revokeToken(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts:revokeToken\" /* Endpoint.REVOKE_TOKEN */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nclass StsTokenManager {\n    constructor() {\n        this.refreshToken = null;\n        this.accessToken = null;\n        this.expirationTime = null;\n    }\n    get isExpired() {\n        return (!this.expirationTime ||\n            Date.now() > this.expirationTime - 30000 /* Buffer.TOKEN_REFRESH */);\n    }\n    updateFromServerResponse(response) {\n        _assert(response.idToken, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        _assert(typeof response.idToken !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        _assert(typeof response.refreshToken !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        const expiresIn = 'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n            ? Number(response.expiresIn)\n            : _tokenExpiresIn(response.idToken);\n        this.updateTokensAndExpiration(response.idToken, response.refreshToken, expiresIn);\n    }\n    updateFromIdToken(idToken) {\n        _assert(idToken.length !== 0, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        const expiresIn = _tokenExpiresIn(idToken);\n        this.updateTokensAndExpiration(idToken, null, expiresIn);\n    }\n    async getToken(auth, forceRefresh = false) {\n        if (!forceRefresh && this.accessToken && !this.isExpired) {\n            return this.accessToken;\n        }\n        _assert(this.refreshToken, auth, \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */);\n        if (this.refreshToken) {\n            await this.refresh(auth, this.refreshToken);\n            return this.accessToken;\n        }\n        return null;\n    }\n    clearRefreshToken() {\n        this.refreshToken = null;\n    }\n    async refresh(auth, oldToken) {\n        const { accessToken, refreshToken, expiresIn } = await requestStsToken(auth, oldToken);\n        this.updateTokensAndExpiration(accessToken, refreshToken, Number(expiresIn));\n    }\n    updateTokensAndExpiration(accessToken, refreshToken, expiresInSec) {\n        this.refreshToken = refreshToken || null;\n        this.accessToken = accessToken || null;\n        this.expirationTime = Date.now() + expiresInSec * 1000;\n    }\n    static fromJSON(appName, object) {\n        const { refreshToken, accessToken, expirationTime } = object;\n        const manager = new StsTokenManager();\n        if (refreshToken) {\n            _assert(typeof refreshToken === 'string', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\n                appName\n            });\n            manager.refreshToken = refreshToken;\n        }\n        if (accessToken) {\n            _assert(typeof accessToken === 'string', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\n                appName\n            });\n            manager.accessToken = accessToken;\n        }\n        if (expirationTime) {\n            _assert(typeof expirationTime === 'number', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\n                appName\n            });\n            manager.expirationTime = expirationTime;\n        }\n        return manager;\n    }\n    toJSON() {\n        return {\n            refreshToken: this.refreshToken,\n            accessToken: this.accessToken,\n            expirationTime: this.expirationTime\n        };\n    }\n    _assign(stsTokenManager) {\n        this.accessToken = stsTokenManager.accessToken;\n        this.refreshToken = stsTokenManager.refreshToken;\n        this.expirationTime = stsTokenManager.expirationTime;\n    }\n    _clone() {\n        return Object.assign(new StsTokenManager(), this.toJSON());\n    }\n    _performRefresh() {\n        return debugFail('not implemented');\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction assertStringOrUndefined(assertion, appName) {\n    _assert(typeof assertion === 'string' || typeof assertion === 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, { appName });\n}\nclass UserImpl {\n    constructor(_a) {\n        var { uid, auth, stsTokenManager } = _a, opt = __rest(_a, [\"uid\", \"auth\", \"stsTokenManager\"]);\n        // For the user object, provider is always Firebase.\n        this.providerId = \"firebase\" /* ProviderId.FIREBASE */;\n        this.proactiveRefresh = new ProactiveRefresh(this);\n        this.reloadUserInfo = null;\n        this.reloadListener = null;\n        this.uid = uid;\n        this.auth = auth;\n        this.stsTokenManager = stsTokenManager;\n        this.accessToken = stsTokenManager.accessToken;\n        this.displayName = opt.displayName || null;\n        this.email = opt.email || null;\n        this.emailVerified = opt.emailVerified || false;\n        this.phoneNumber = opt.phoneNumber || null;\n        this.photoURL = opt.photoURL || null;\n        this.isAnonymous = opt.isAnonymous || false;\n        this.tenantId = opt.tenantId || null;\n        this.providerData = opt.providerData ? [...opt.providerData] : [];\n        this.metadata = new UserMetadata(opt.createdAt || undefined, opt.lastLoginAt || undefined);\n    }\n    async getIdToken(forceRefresh) {\n        const accessToken = await _logoutIfInvalidated(this, this.stsTokenManager.getToken(this.auth, forceRefresh));\n        _assert(accessToken, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        if (this.accessToken !== accessToken) {\n            this.accessToken = accessToken;\n            await this.auth._persistUserIfCurrent(this);\n            this.auth._notifyListenersIfCurrent(this);\n        }\n        return accessToken;\n    }\n    getIdTokenResult(forceRefresh) {\n        return getIdTokenResult(this, forceRefresh);\n    }\n    reload() {\n        return reload(this);\n    }\n    _assign(user) {\n        if (this === user) {\n            return;\n        }\n        _assert(this.uid === user.uid, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        this.displayName = user.displayName;\n        this.photoURL = user.photoURL;\n        this.email = user.email;\n        this.emailVerified = user.emailVerified;\n        this.phoneNumber = user.phoneNumber;\n        this.isAnonymous = user.isAnonymous;\n        this.tenantId = user.tenantId;\n        this.providerData = user.providerData.map(userInfo => (Object.assign({}, userInfo)));\n        this.metadata._copy(user.metadata);\n        this.stsTokenManager._assign(user.stsTokenManager);\n    }\n    _clone(auth) {\n        const newUser = new UserImpl(Object.assign(Object.assign({}, this), { auth, stsTokenManager: this.stsTokenManager._clone() }));\n        newUser.metadata._copy(this.metadata);\n        return newUser;\n    }\n    _onReload(callback) {\n        // There should only ever be one listener, and that is a single instance of MultiFactorUser\n        _assert(!this.reloadListener, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        this.reloadListener = callback;\n        if (this.reloadUserInfo) {\n            this._notifyReloadListener(this.reloadUserInfo);\n            this.reloadUserInfo = null;\n        }\n    }\n    _notifyReloadListener(userInfo) {\n        if (this.reloadListener) {\n            this.reloadListener(userInfo);\n        }\n        else {\n            // If no listener is subscribed yet, save the result so it's available when they do subscribe\n            this.reloadUserInfo = userInfo;\n        }\n    }\n    _startProactiveRefresh() {\n        this.proactiveRefresh._start();\n    }\n    _stopProactiveRefresh() {\n        this.proactiveRefresh._stop();\n    }\n    async _updateTokensIfNecessary(response, reload = false) {\n        let tokensRefreshed = false;\n        if (response.idToken &&\n            response.idToken !== this.stsTokenManager.accessToken) {\n            this.stsTokenManager.updateFromServerResponse(response);\n            tokensRefreshed = true;\n        }\n        if (reload) {\n            await _reloadWithoutSaving(this);\n        }\n        await this.auth._persistUserIfCurrent(this);\n        if (tokensRefreshed) {\n            this.auth._notifyListenersIfCurrent(this);\n        }\n    }\n    async delete() {\n        if (_isFirebaseServerApp(this.auth.app)) {\n            return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this.auth));\n        }\n        const idToken = await this.getIdToken();\n        await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n        this.stsTokenManager.clearRefreshToken();\n        // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n        //       cancels pending actions...\n        return this.auth.signOut();\n    }\n    toJSON() {\n        return Object.assign(Object.assign({ uid: this.uid, email: this.email || undefined, emailVerified: this.emailVerified, displayName: this.displayName || undefined, isAnonymous: this.isAnonymous, photoURL: this.photoURL || undefined, phoneNumber: this.phoneNumber || undefined, tenantId: this.tenantId || undefined, providerData: this.providerData.map(userInfo => (Object.assign({}, userInfo))), stsTokenManager: this.stsTokenManager.toJSON(), \n            // Redirect event ID must be maintained in case there is a pending\n            // redirect event.\n            _redirectEventId: this._redirectEventId }, this.metadata.toJSON()), { \n            // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n            apiKey: this.auth.config.apiKey, appName: this.auth.name });\n    }\n    get refreshToken() {\n        return this.stsTokenManager.refreshToken || '';\n    }\n    static _fromJSON(auth, object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const displayName = (_a = object.displayName) !== null && _a !== void 0 ? _a : undefined;\n        const email = (_b = object.email) !== null && _b !== void 0 ? _b : undefined;\n        const phoneNumber = (_c = object.phoneNumber) !== null && _c !== void 0 ? _c : undefined;\n        const photoURL = (_d = object.photoURL) !== null && _d !== void 0 ? _d : undefined;\n        const tenantId = (_e = object.tenantId) !== null && _e !== void 0 ? _e : undefined;\n        const _redirectEventId = (_f = object._redirectEventId) !== null && _f !== void 0 ? _f : undefined;\n        const createdAt = (_g = object.createdAt) !== null && _g !== void 0 ? _g : undefined;\n        const lastLoginAt = (_h = object.lastLoginAt) !== null && _h !== void 0 ? _h : undefined;\n        const { uid, emailVerified, isAnonymous, providerData, stsTokenManager: plainObjectTokenManager } = object;\n        _assert(uid && plainObjectTokenManager, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        const stsTokenManager = StsTokenManager.fromJSON(this.name, plainObjectTokenManager);\n        _assert(typeof uid === 'string', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        assertStringOrUndefined(displayName, auth.name);\n        assertStringOrUndefined(email, auth.name);\n        _assert(typeof emailVerified === 'boolean', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        _assert(typeof isAnonymous === 'boolean', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        assertStringOrUndefined(phoneNumber, auth.name);\n        assertStringOrUndefined(photoURL, auth.name);\n        assertStringOrUndefined(tenantId, auth.name);\n        assertStringOrUndefined(_redirectEventId, auth.name);\n        assertStringOrUndefined(createdAt, auth.name);\n        assertStringOrUndefined(lastLoginAt, auth.name);\n        const user = new UserImpl({\n            uid,\n            auth,\n            email,\n            emailVerified,\n            displayName,\n            isAnonymous,\n            photoURL,\n            phoneNumber,\n            tenantId,\n            stsTokenManager,\n            createdAt,\n            lastLoginAt\n        });\n        if (providerData && Array.isArray(providerData)) {\n            user.providerData = providerData.map(userInfo => (Object.assign({}, userInfo)));\n        }\n        if (_redirectEventId) {\n            user._redirectEventId = _redirectEventId;\n        }\n        return user;\n    }\n    /**\n     * Initialize a User from an idToken server response\n     * @param auth\n     * @param idTokenResponse\n     */\n    static async _fromIdTokenResponse(auth, idTokenResponse, isAnonymous = false) {\n        const stsTokenManager = new StsTokenManager();\n        stsTokenManager.updateFromServerResponse(idTokenResponse);\n        // Initialize the Firebase Auth user.\n        const user = new UserImpl({\n            uid: idTokenResponse.localId,\n            auth,\n            stsTokenManager,\n            isAnonymous\n        });\n        // Updates the user info and data and resolves with a user instance.\n        await _reloadWithoutSaving(user);\n        return user;\n    }\n    /**\n     * Initialize a User from an idToken server response\n     * @param auth\n     * @param idTokenResponse\n     */\n    static async _fromGetAccountInfoResponse(auth, response, idToken) {\n        const coreAccount = response.users[0];\n        _assert(coreAccount.localId !== undefined, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        const providerData = coreAccount.providerUserInfo !== undefined\n            ? extractProviderData(coreAccount.providerUserInfo)\n            : [];\n        const isAnonymous = !(coreAccount.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);\n        const stsTokenManager = new StsTokenManager();\n        stsTokenManager.updateFromIdToken(idToken);\n        // Initialize the Firebase Auth user.\n        const user = new UserImpl({\n            uid: coreAccount.localId,\n            auth,\n            stsTokenManager,\n            isAnonymous\n        });\n        // update the user with data from the GetAccountInfo response.\n        const updates = {\n            uid: coreAccount.localId,\n            displayName: coreAccount.displayName || null,\n            photoURL: coreAccount.photoUrl || null,\n            email: coreAccount.email || null,\n            emailVerified: coreAccount.emailVerified || false,\n            phoneNumber: coreAccount.phoneNumber || null,\n            tenantId: coreAccount.tenantId || null,\n            providerData,\n            metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n            isAnonymous: !(coreAccount.email && coreAccount.passwordHash) &&\n                !(providerData === null || providerData === void 0 ? void 0 : providerData.length)\n        };\n        Object.assign(user, updates);\n        return user;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst instanceCache = new Map();\nfunction _getInstance(cls) {\n    debugAssert(cls instanceof Function, 'Expected a class definition');\n    let instance = instanceCache.get(cls);\n    if (instance) {\n        debugAssert(instance instanceof cls, 'Instance stored in cache mismatched with class');\n        return instance;\n    }\n    instance = new cls();\n    instanceCache.set(cls, instance);\n    return instance;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass InMemoryPersistence {\n    constructor() {\n        this.type = \"NONE\" /* PersistenceType.NONE */;\n        this.storage = {};\n    }\n    async _isAvailable() {\n        return true;\n    }\n    async _set(key, value) {\n        this.storage[key] = value;\n    }\n    async _get(key) {\n        const value = this.storage[key];\n        return value === undefined ? null : value;\n    }\n    async _remove(key) {\n        delete this.storage[key];\n    }\n    _addListener(_key, _listener) {\n        // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n        return;\n    }\n    _removeListener(_key, _listener) {\n        // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n        return;\n    }\n}\nInMemoryPersistence.type = 'NONE';\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nconst inMemoryPersistence = InMemoryPersistence;\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction _persistenceKeyName(key, apiKey, appName) {\n    return `${\"firebase\" /* Namespace.PERSISTENCE */}:${key}:${apiKey}:${appName}`;\n}\nclass PersistenceUserManager {\n    constructor(persistence, auth, userKey) {\n        this.persistence = persistence;\n        this.auth = auth;\n        this.userKey = userKey;\n        const { config, name } = this.auth;\n        this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n        this.fullPersistenceKey = _persistenceKeyName(\"persistence\" /* KeyName.PERSISTENCE_USER */, config.apiKey, name);\n        this.boundEventHandler = auth._onStorageEvent.bind(auth);\n        this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n    }\n    setCurrentUser(user) {\n        return this.persistence._set(this.fullUserKey, user.toJSON());\n    }\n    async getCurrentUser() {\n        const blob = await this.persistence._get(this.fullUserKey);\n        if (!blob) {\n            return null;\n        }\n        if (typeof blob === 'string') {\n            const response = await getAccountInfo(this.auth, { idToken: blob }).catch(() => undefined);\n            if (!response) {\n                return null;\n            }\n            return UserImpl._fromGetAccountInfoResponse(this.auth, response, blob);\n        }\n        return UserImpl._fromJSON(this.auth, blob);\n    }\n    removeCurrentUser() {\n        return this.persistence._remove(this.fullUserKey);\n    }\n    savePersistenceForRedirect() {\n        return this.persistence._set(this.fullPersistenceKey, this.persistence.type);\n    }\n    async setPersistence(newPersistence) {\n        if (this.persistence === newPersistence) {\n            return;\n        }\n        const currentUser = await this.getCurrentUser();\n        await this.removeCurrentUser();\n        this.persistence = newPersistence;\n        if (currentUser) {\n            return this.setCurrentUser(currentUser);\n        }\n    }\n    delete() {\n        this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n    }\n    static async create(auth, persistenceHierarchy, userKey = \"authUser\" /* KeyName.AUTH_USER */) {\n        if (!persistenceHierarchy.length) {\n            return new PersistenceUserManager(_getInstance(inMemoryPersistence), auth, userKey);\n        }\n        // Eliminate any persistences that are not available\n        const availablePersistences = (await Promise.all(persistenceHierarchy.map(async (persistence) => {\n            if (await persistence._isAvailable()) {\n                return persistence;\n            }\n            return undefined;\n        }))).filter(persistence => persistence);\n        // Fall back to the first persistence listed, or in memory if none available\n        let selectedPersistence = availablePersistences[0] ||\n            _getInstance(inMemoryPersistence);\n        const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n        // Pull out the existing user, setting the chosen persistence to that\n        // persistence if the user exists.\n        let userToMigrate = null;\n        // Note, here we check for a user in _all_ persistences, not just the\n        // ones deemed available. If we can migrate a user out of a broken\n        // persistence, we will (but only if that persistence supports migration).\n        for (const persistence of persistenceHierarchy) {\n            try {\n                const blob = await persistence._get(key);\n                if (blob) {\n                    let user;\n                    if (typeof blob === 'string') {\n                        const response = await getAccountInfo(auth, {\n                            idToken: blob\n                        }).catch(() => undefined);\n                        if (!response) {\n                            break;\n                        }\n                        user = await UserImpl._fromGetAccountInfoResponse(auth, response, blob);\n                    }\n                    else {\n                        user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n                    }\n                    if (persistence !== selectedPersistence) {\n                        userToMigrate = user;\n                    }\n                    selectedPersistence = persistence;\n                    break;\n                }\n            }\n            catch (_a) { }\n        }\n        // If we find the user in a persistence that does support migration, use\n        // that migration path (of only persistences that support migration)\n        const migrationHierarchy = availablePersistences.filter(p => p._shouldAllowMigration);\n        // If the persistence does _not_ allow migration, just finish off here\n        if (!selectedPersistence._shouldAllowMigration ||\n            !migrationHierarchy.length) {\n            return new PersistenceUserManager(selectedPersistence, auth, userKey);\n        }\n        selectedPersistence = migrationHierarchy[0];\n        if (userToMigrate) {\n            // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n            // we'll just let it bubble to surface the error.\n            await selectedPersistence._set(key, userToMigrate.toJSON());\n        }\n        // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n        // such as users getting stuck with a previous account after signing out and refreshing the tab.\n        await Promise.all(persistenceHierarchy.map(async (persistence) => {\n            if (persistence !== selectedPersistence) {\n                try {\n                    await persistence._remove(key);\n                }\n                catch (_a) { }\n            }\n        }));\n        return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nfunction _getBrowserName(userAgent) {\n    const ua = userAgent.toLowerCase();\n    if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n        return \"Opera\" /* BrowserName.OPERA */;\n    }\n    else if (_isIEMobile(ua)) {\n        // Windows phone IEMobile browser.\n        return \"IEMobile\" /* BrowserName.IEMOBILE */;\n    }\n    else if (ua.includes('msie') || ua.includes('trident/')) {\n        return \"IE\" /* BrowserName.IE */;\n    }\n    else if (ua.includes('edge/')) {\n        return \"Edge\" /* BrowserName.EDGE */;\n    }\n    else if (_isFirefox(ua)) {\n        return \"Firefox\" /* BrowserName.FIREFOX */;\n    }\n    else if (ua.includes('silk/')) {\n        return \"Silk\" /* BrowserName.SILK */;\n    }\n    else if (_isBlackBerry(ua)) {\n        // Blackberry browser.\n        return \"Blackberry\" /* BrowserName.BLACKBERRY */;\n    }\n    else if (_isWebOS(ua)) {\n        // WebOS default browser.\n        return \"Webos\" /* BrowserName.WEBOS */;\n    }\n    else if (_isSafari(ua)) {\n        return \"Safari\" /* BrowserName.SAFARI */;\n    }\n    else if ((ua.includes('chrome/') || _isChromeIOS(ua)) &&\n        !ua.includes('edge/')) {\n        return \"Chrome\" /* BrowserName.CHROME */;\n    }\n    else if (_isAndroid(ua)) {\n        // Android stock browser.\n        return \"Android\" /* BrowserName.ANDROID */;\n    }\n    else {\n        // Most modern browsers have name/version at end of user agent string.\n        const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n        const matches = userAgent.match(re);\n        if ((matches === null || matches === void 0 ? void 0 : matches.length) === 2) {\n            return matches[1];\n        }\n    }\n    return \"Other\" /* BrowserName.OTHER */;\n}\nfunction _isFirefox(ua = getUA()) {\n    return /firefox\\//i.test(ua);\n}\nfunction _isSafari(userAgent = getUA()) {\n    const ua = userAgent.toLowerCase();\n    return (ua.includes('safari/') &&\n        !ua.includes('chrome/') &&\n        !ua.includes('crios/') &&\n        !ua.includes('android'));\n}\nfunction _isChromeIOS(ua = getUA()) {\n    return /crios\\//i.test(ua);\n}\nfunction _isIEMobile(ua = getUA()) {\n    return /iemobile/i.test(ua);\n}\nfunction _isAndroid(ua = getUA()) {\n    return /android/i.test(ua);\n}\nfunction _isBlackBerry(ua = getUA()) {\n    return /blackberry/i.test(ua);\n}\nfunction _isWebOS(ua = getUA()) {\n    return /webos/i.test(ua);\n}\nfunction _isIOS(ua = getUA()) {\n    return (/iphone|ipad|ipod/i.test(ua) ||\n        (/macintosh/i.test(ua) && /mobile/i.test(ua)));\n}\nfunction _isIOS7Or8(ua = getUA()) {\n    return (/(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n        /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua));\n}\nfunction _isIE10() {\n    return isIE() && document.documentMode === 10;\n}\nfunction _isMobileBrowser(ua = getUA()) {\n    // TODO: implement getBrowserName equivalent for OS.\n    return (_isIOS(ua) ||\n        _isAndroid(ua) ||\n        _isWebOS(ua) ||\n        _isBlackBerry(ua) ||\n        /windows phone/i.test(ua) ||\n        _isIEMobile(ua));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * Determine the SDK version string\n */\nfunction _getClientVersion(clientPlatform, frameworks = []) {\n    let reportedPlatform;\n    switch (clientPlatform) {\n        case \"Browser\" /* ClientPlatform.BROWSER */:\n            // In a browser environment, report the browser name.\n            reportedPlatform = _getBrowserName(getUA());\n            break;\n        case \"Worker\" /* ClientPlatform.WORKER */:\n            // Technically a worker runs from a browser but we need to differentiate a\n            // worker from a browser.\n            // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n            reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n            break;\n        default:\n            reportedPlatform = clientPlatform;\n    }\n    const reportedFrameworks = frameworks.length\n        ? frameworks.join(',')\n        : 'FirebaseCore-web'; /* default value if no other framework is used */\n    return `${reportedPlatform}/${\"JsCore\" /* ClientImplementation.CORE */}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass AuthMiddlewareQueue {\n    constructor(auth) {\n        this.auth = auth;\n        this.queue = [];\n    }\n    pushCallback(callback, onAbort) {\n        // The callback could be sync or async. Wrap it into a\n        // function that is always async.\n        const wrappedCallback = (user) => new Promise((resolve, reject) => {\n            try {\n                const result = callback(user);\n                // Either resolve with existing promise or wrap a non-promise\n                // return value into a promise.\n                resolve(result);\n            }\n            catch (e) {\n                // Sync callback throws.\n                reject(e);\n            }\n        });\n        // Attach the onAbort if present\n        wrappedCallback.onAbort = onAbort;\n        this.queue.push(wrappedCallback);\n        const index = this.queue.length - 1;\n        return () => {\n            // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n            // indexing of other elements.\n            this.queue[index] = () => Promise.resolve();\n        };\n    }\n    async runMiddleware(nextUser) {\n        if (this.auth.currentUser === nextUser) {\n            return;\n        }\n        // While running the middleware, build a temporary stack of onAbort\n        // callbacks to call if one middleware callback rejects.\n        const onAbortStack = [];\n        try {\n            for (const beforeStateCallback of this.queue) {\n                await beforeStateCallback(nextUser);\n                // Only push the onAbort if the callback succeeds\n                if (beforeStateCallback.onAbort) {\n                    onAbortStack.push(beforeStateCallback.onAbort);\n                }\n            }\n        }\n        catch (e) {\n            // Run all onAbort, with separate try/catch to ignore any errors and\n            // continue\n            onAbortStack.reverse();\n            for (const onAbort of onAbortStack) {\n                try {\n                    onAbort();\n                }\n                catch (_) {\n                    /* swallow error */\n                }\n            }\n            throw this.auth._errorFactory.create(\"login-blocked\" /* AuthErrorCode.LOGIN_BLOCKED */, {\n                originalMessage: e === null || e === void 0 ? void 0 : e.message\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\n *\n * @param auth Auth object.\n * @param request Password policy request.\n * @returns Password policy response.\n */\nasync function _getPasswordPolicy(auth, request = {}) {\n    return _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v2/passwordPolicy\" /* Endpoint.GET_PASSWORD_POLICY */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Minimum min password length enforced by the backend, even if no minimum length is set.\nconst MINIMUM_MIN_PASSWORD_LENGTH = 6;\n/**\n * Stores password policy requirements and provides password validation against the policy.\n *\n * @internal\n */\nclass PasswordPolicyImpl {\n    constructor(response) {\n        var _a, _b, _c, _d;\n        // Only include custom strength options defined in the response.\n        const responseOptions = response.customStrengthOptions;\n        this.customStrengthOptions = {};\n        // TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.\n        this.customStrengthOptions.minPasswordLength =\n            (_a = responseOptions.minPasswordLength) !== null && _a !== void 0 ? _a : MINIMUM_MIN_PASSWORD_LENGTH;\n        if (responseOptions.maxPasswordLength) {\n            this.customStrengthOptions.maxPasswordLength =\n                responseOptions.maxPasswordLength;\n        }\n        if (responseOptions.containsLowercaseCharacter !== undefined) {\n            this.customStrengthOptions.containsLowercaseLetter =\n                responseOptions.containsLowercaseCharacter;\n        }\n        if (responseOptions.containsUppercaseCharacter !== undefined) {\n            this.customStrengthOptions.containsUppercaseLetter =\n                responseOptions.containsUppercaseCharacter;\n        }\n        if (responseOptions.containsNumericCharacter !== undefined) {\n            this.customStrengthOptions.containsNumericCharacter =\n                responseOptions.containsNumericCharacter;\n        }\n        if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\n            this.customStrengthOptions.containsNonAlphanumericCharacter =\n                responseOptions.containsNonAlphanumericCharacter;\n        }\n        this.enforcementState = response.enforcementState;\n        if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\n            this.enforcementState = 'OFF';\n        }\n        // Use an empty string if no non-alphanumeric characters are specified in the response.\n        this.allowedNonAlphanumericCharacters =\n            (_c = (_b = response.allowedNonAlphanumericCharacters) === null || _b === void 0 ? void 0 : _b.join('')) !== null && _c !== void 0 ? _c : '';\n        this.forceUpgradeOnSignin = (_d = response.forceUpgradeOnSignin) !== null && _d !== void 0 ? _d : false;\n        this.schemaVersion = response.schemaVersion;\n    }\n    validatePassword(password) {\n        var _a, _b, _c, _d, _e, _f;\n        const status = {\n            isValid: true,\n            passwordPolicy: this\n        };\n        // Check the password length and character options.\n        this.validatePasswordLengthOptions(password, status);\n        this.validatePasswordCharacterOptions(password, status);\n        // Combine the status into single isValid property.\n        status.isValid && (status.isValid = (_a = status.meetsMinPasswordLength) !== null && _a !== void 0 ? _a : true);\n        status.isValid && (status.isValid = (_b = status.meetsMaxPasswordLength) !== null && _b !== void 0 ? _b : true);\n        status.isValid && (status.isValid = (_c = status.containsLowercaseLetter) !== null && _c !== void 0 ? _c : true);\n        status.isValid && (status.isValid = (_d = status.containsUppercaseLetter) !== null && _d !== void 0 ? _d : true);\n        status.isValid && (status.isValid = (_e = status.containsNumericCharacter) !== null && _e !== void 0 ? _e : true);\n        status.isValid && (status.isValid = (_f = status.containsNonAlphanumericCharacter) !== null && _f !== void 0 ? _f : true);\n        return status;\n    }\n    /**\n     * Validates that the password meets the length options for the policy.\n     *\n     * @param password Password to validate.\n     * @param status Validation status.\n     */\n    validatePasswordLengthOptions(password, status) {\n        const minPasswordLength = this.customStrengthOptions.minPasswordLength;\n        const maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\n        if (minPasswordLength) {\n            status.meetsMinPasswordLength = password.length >= minPasswordLength;\n        }\n        if (maxPasswordLength) {\n            status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\n        }\n    }\n    /**\n     * Validates that the password meets the character options for the policy.\n     *\n     * @param password Password to validate.\n     * @param status Validation status.\n     */\n    validatePasswordCharacterOptions(password, status) {\n        // Assign statuses for requirements even if the password is an empty string.\n        this.updatePasswordCharacterOptionsStatuses(status, \n        /* containsLowercaseCharacter= */ false, \n        /* containsUppercaseCharacter= */ false, \n        /* containsNumericCharacter= */ false, \n        /* containsNonAlphanumericCharacter= */ false);\n        let passwordChar;\n        for (let i = 0; i < password.length; i++) {\n            passwordChar = password.charAt(i);\n            this.updatePasswordCharacterOptionsStatuses(status, \n            /* containsLowercaseCharacter= */ passwordChar >= 'a' &&\n                passwordChar <= 'z', \n            /* containsUppercaseCharacter= */ passwordChar >= 'A' &&\n                passwordChar <= 'Z', \n            /* containsNumericCharacter= */ passwordChar >= '0' &&\n                passwordChar <= '9', \n            /* containsNonAlphanumericCharacter= */ this.allowedNonAlphanumericCharacters.includes(passwordChar));\n        }\n    }\n    /**\n     * Updates the running validation status with the statuses for the character options.\n     * Expected to be called each time a character is processed to update each option status\n     * based on the current character.\n     *\n     * @param status Validation status.\n     * @param containsLowercaseCharacter Whether the character is a lowercase letter.\n     * @param containsUppercaseCharacter Whether the character is an uppercase letter.\n     * @param containsNumericCharacter Whether the character is a numeric character.\n     * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.\n     */\n    updatePasswordCharacterOptionsStatuses(status, containsLowercaseCharacter, containsUppercaseCharacter, containsNumericCharacter, containsNonAlphanumericCharacter) {\n        if (this.customStrengthOptions.containsLowercaseLetter) {\n            status.containsLowercaseLetter || (status.containsLowercaseLetter = containsLowercaseCharacter);\n        }\n        if (this.customStrengthOptions.containsUppercaseLetter) {\n            status.containsUppercaseLetter || (status.containsUppercaseLetter = containsUppercaseCharacter);\n        }\n        if (this.customStrengthOptions.containsNumericCharacter) {\n            status.containsNumericCharacter || (status.containsNumericCharacter = containsNumericCharacter);\n        }\n        if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\n            status.containsNonAlphanumericCharacter || (status.containsNonAlphanumericCharacter = containsNonAlphanumericCharacter);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass AuthImpl {\n    constructor(app, heartbeatServiceProvider, appCheckServiceProvider, config) {\n        this.app = app;\n        this.heartbeatServiceProvider = heartbeatServiceProvider;\n        this.appCheckServiceProvider = appCheckServiceProvider;\n        this.config = config;\n        this.currentUser = null;\n        this.emulatorConfig = null;\n        this.operations = Promise.resolve();\n        this.authStateSubscription = new Subscription(this);\n        this.idTokenSubscription = new Subscription(this);\n        this.beforeStateQueue = new AuthMiddlewareQueue(this);\n        this.redirectUser = null;\n        this.isProactiveRefreshEnabled = false;\n        this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION = 1;\n        // Any network calls will set this to true and prevent subsequent emulator\n        // initialization\n        this._canInitEmulator = true;\n        this._isInitialized = false;\n        this._deleted = false;\n        this._initializationPromise = null;\n        this._popupRedirectResolver = null;\n        this._errorFactory = _DEFAULT_AUTH_ERROR_FACTORY;\n        this._agentRecaptchaConfig = null;\n        this._tenantRecaptchaConfigs = {};\n        this._projectPasswordPolicy = null;\n        this._tenantPasswordPolicies = {};\n        this._resolvePersistenceManagerAvailable = undefined;\n        // Tracks the last notified UID for state change listeners to prevent\n        // repeated calls to the callbacks. Undefined means it's never been\n        // called, whereas null means it's been called with a signed out user\n        this.lastNotifiedUid = undefined;\n        this.languageCode = null;\n        this.tenantId = null;\n        this.settings = { appVerificationDisabledForTesting: false };\n        this.frameworks = [];\n        this.name = app.name;\n        this.clientVersion = config.sdkClientVersion;\n        // TODO(jamesdaniels) explore less hacky way to do this, cookie authentication needs\n        // persistenceMananger to be available. see _getFinalTarget for more context\n        this._persistenceManagerAvailable = new Promise(resolve => (this._resolvePersistenceManagerAvailable = resolve));\n    }\n    _initializeWithPersistence(persistenceHierarchy, popupRedirectResolver) {\n        if (popupRedirectResolver) {\n            this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n        }\n        // Have to check for app deletion throughout initialization (after each\n        // promise resolution)\n        this._initializationPromise = this.queue(async () => {\n            var _a, _b, _c;\n            if (this._deleted) {\n                return;\n            }\n            this.persistenceManager = await PersistenceUserManager.create(this, persistenceHierarchy);\n            (_a = this._resolvePersistenceManagerAvailable) === null || _a === void 0 ? void 0 : _a.call(this);\n            if (this._deleted) {\n                return;\n            }\n            // Initialize the resolver early if necessary (only applicable to web:\n            // this will cause the iframe to load immediately in certain cases)\n            if ((_b = this._popupRedirectResolver) === null || _b === void 0 ? void 0 : _b._shouldInitProactively) {\n                // If this fails, don't halt auth loading\n                try {\n                    await this._popupRedirectResolver._initialize(this);\n                }\n                catch (e) {\n                    /* Ignore the error */\n                }\n            }\n            await this.initializeCurrentUser(popupRedirectResolver);\n            this.lastNotifiedUid = ((_c = this.currentUser) === null || _c === void 0 ? void 0 : _c.uid) || null;\n            if (this._deleted) {\n                return;\n            }\n            this._isInitialized = true;\n        });\n        return this._initializationPromise;\n    }\n    /**\n     * If the persistence is changed in another window, the user manager will let us know\n     */\n    async _onStorageEvent() {\n        if (this._deleted) {\n            return;\n        }\n        const user = await this.assertedPersistence.getCurrentUser();\n        if (!this.currentUser && !user) {\n            // No change, do nothing (was signed out and remained signed out).\n            return;\n        }\n        // If the same user is to be synchronized.\n        if (this.currentUser && user && this.currentUser.uid === user.uid) {\n            // Data update, simply copy data changes.\n            this._currentUser._assign(user);\n            // If tokens changed from previous user tokens, this will trigger\n            // notifyAuthListeners_.\n            await this.currentUser.getIdToken();\n            return;\n        }\n        // Update current Auth state. Either a new login or logout.\n        // Skip blocking callbacks, they should not apply to a change in another tab.\n        await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n    }\n    async initializeCurrentUserFromIdToken(idToken) {\n        try {\n            const response = await getAccountInfo(this, { idToken });\n            const user = await UserImpl._fromGetAccountInfoResponse(this, response, idToken);\n            await this.directlySetCurrentUser(user);\n        }\n        catch (err) {\n            console.warn('FirebaseServerApp could not login user with provided authIdToken: ', err);\n            await this.directlySetCurrentUser(null);\n        }\n    }\n    async initializeCurrentUser(popupRedirectResolver) {\n        var _a;\n        if (_isFirebaseServerApp(this.app)) {\n            const idToken = this.app.settings.authIdToken;\n            if (idToken) {\n                // Start the auth operation in the next tick to allow a moment for the customer's app to\n                // attach an emulator, if desired.\n                return new Promise(resolve => {\n                    setTimeout(() => this.initializeCurrentUserFromIdToken(idToken).then(resolve, resolve));\n                });\n            }\n            else {\n                return this.directlySetCurrentUser(null);\n            }\n        }\n        // First check to see if we have a pending redirect event.\n        const previouslyStoredUser = (await this.assertedPersistence.getCurrentUser());\n        let futureCurrentUser = previouslyStoredUser;\n        let needsTocheckMiddleware = false;\n        if (popupRedirectResolver && this.config.authDomain) {\n            await this.getOrInitRedirectPersistenceManager();\n            const redirectUserEventId = (_a = this.redirectUser) === null || _a === void 0 ? void 0 : _a._redirectEventId;\n            const storedUserEventId = futureCurrentUser === null || futureCurrentUser === void 0 ? void 0 : futureCurrentUser._redirectEventId;\n            const result = await this.tryRedirectSignIn(popupRedirectResolver);\n            // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n            // matches the redirect user, then we want to initially sign in with the\n            // new user object from result.\n            // TODO(samgho): More thoroughly test all of this\n            if ((!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n                (result === null || result === void 0 ? void 0 : result.user)) {\n                futureCurrentUser = result.user;\n                needsTocheckMiddleware = true;\n            }\n        }\n        // If no user in persistence, there is no current user. Set to null.\n        if (!futureCurrentUser) {\n            return this.directlySetCurrentUser(null);\n        }\n        if (!futureCurrentUser._redirectEventId) {\n            // This isn't a redirect link operation, we can reload and bail.\n            // First though, ensure that we check the middleware is happy.\n            if (needsTocheckMiddleware) {\n                try {\n                    await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n                }\n                catch (e) {\n                    futureCurrentUser = previouslyStoredUser;\n                    // We know this is available since the bit is only set when the\n                    // resolver is available\n                    this._popupRedirectResolver._overrideRedirectResult(this, () => Promise.reject(e));\n                }\n            }\n            if (futureCurrentUser) {\n                return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n            }\n            else {\n                return this.directlySetCurrentUser(null);\n            }\n        }\n        _assert(this._popupRedirectResolver, this, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        await this.getOrInitRedirectPersistenceManager();\n        // If the redirect user's event ID matches the current user's event ID,\n        // DO NOT reload the current user, otherwise they'll be cleared from storage.\n        // This is important for the reauthenticateWithRedirect() flow.\n        if (this.redirectUser &&\n            this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId) {\n            return this.directlySetCurrentUser(futureCurrentUser);\n        }\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n    }\n    async tryRedirectSignIn(redirectResolver) {\n        // The redirect user needs to be checked (and signed in if available)\n        // during auth initialization. All of the normal sign in and link/reauth\n        // flows call back into auth and push things onto the promise queue. We\n        // need to await the result of the redirect sign in *inside the promise\n        // queue*. This presents a problem: we run into deadlock. See:\n        //    ┌> [Initialization] ─────┐\n        //    ┌> [<other queue tasks>] │\n        //    └─ [getRedirectResult] <─┘\n        //    where [] are tasks on the queue and arrows denote awaits\n        // Initialization will never complete because it's waiting on something\n        // that's waiting for initialization to complete!\n        //\n        // Instead, this method calls getRedirectResult() (stored in\n        // _completeRedirectFn) with an optional parameter that instructs all of\n        // the underlying auth operations to skip anything that mutates auth state.\n        let result = null;\n        try {\n            // We know this._popupRedirectResolver is set since redirectResolver\n            // is passed in. The _completeRedirectFn expects the unwrapped extern.\n            result = await this._popupRedirectResolver._completeRedirectFn(this, redirectResolver, true);\n        }\n        catch (e) {\n            // Swallow any errors here; the code can retrieve them in\n            // getRedirectResult().\n            await this._setRedirectUser(null);\n        }\n        return result;\n    }\n    async reloadAndSetCurrentUserOrClear(user) {\n        try {\n            await _reloadWithoutSaving(user);\n        }\n        catch (e) {\n            if ((e === null || e === void 0 ? void 0 : e.code) !==\n                `auth/${\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */}`) {\n                // Something's wrong with the user's token. Log them out and remove\n                // them from storage\n                return this.directlySetCurrentUser(null);\n            }\n        }\n        return this.directlySetCurrentUser(user);\n    }\n    useDeviceLanguage() {\n        this.languageCode = _getUserLanguage();\n    }\n    async _delete() {\n        this._deleted = true;\n    }\n    async updateCurrentUser(userExtern) {\n        if (_isFirebaseServerApp(this.app)) {\n            return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this));\n        }\n        // The public updateCurrentUser method needs to make a copy of the user,\n        // and also check that the project matches\n        const user = userExtern\n            ? getModularInstance(userExtern)\n            : null;\n        if (user) {\n            _assert(user.auth.config.apiKey === this.config.apiKey, this, \"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */);\n        }\n        return this._updateCurrentUser(user && user._clone(this));\n    }\n    async _updateCurrentUser(user, skipBeforeStateCallbacks = false) {\n        if (this._deleted) {\n            return;\n        }\n        if (user) {\n            _assert(this.tenantId === user.tenantId, this, \"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */);\n        }\n        if (!skipBeforeStateCallbacks) {\n            await this.beforeStateQueue.runMiddleware(user);\n        }\n        return this.queue(async () => {\n            await this.directlySetCurrentUser(user);\n            this.notifyAuthListeners();\n        });\n    }\n    async signOut() {\n        if (_isFirebaseServerApp(this.app)) {\n            return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this));\n        }\n        // Run first, to block _setRedirectUser() if any callbacks fail.\n        await this.beforeStateQueue.runMiddleware(null);\n        // Clear the redirect user when signOut is called\n        if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n            await this._setRedirectUser(null);\n        }\n        // Prevent callbacks from being called again in _updateCurrentUser, as\n        // they were already called in the first line.\n        return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n    }\n    setPersistence(persistence) {\n        if (_isFirebaseServerApp(this.app)) {\n            return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(this));\n        }\n        return this.queue(async () => {\n            await this.assertedPersistence.setPersistence(_getInstance(persistence));\n        });\n    }\n    _getRecaptchaConfig() {\n        if (this.tenantId == null) {\n            return this._agentRecaptchaConfig;\n        }\n        else {\n            return this._tenantRecaptchaConfigs[this.tenantId];\n        }\n    }\n    async validatePassword(password) {\n        if (!this._getPasswordPolicyInternal()) {\n            await this._updatePasswordPolicy();\n        }\n        // Password policy will be defined after fetching.\n        const passwordPolicy = this._getPasswordPolicyInternal();\n        // Check that the policy schema version is supported by the SDK.\n        // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\n        if (passwordPolicy.schemaVersion !==\n            this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION) {\n            return Promise.reject(this._errorFactory.create(\"unsupported-password-policy-schema-version\" /* AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION */, {}));\n        }\n        return passwordPolicy.validatePassword(password);\n    }\n    _getPasswordPolicyInternal() {\n        if (this.tenantId === null) {\n            return this._projectPasswordPolicy;\n        }\n        else {\n            return this._tenantPasswordPolicies[this.tenantId];\n        }\n    }\n    async _updatePasswordPolicy() {\n        const response = await _getPasswordPolicy(this);\n        const passwordPolicy = new PasswordPolicyImpl(response);\n        if (this.tenantId === null) {\n            this._projectPasswordPolicy = passwordPolicy;\n        }\n        else {\n            this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\n        }\n    }\n    _getPersistenceType() {\n        return this.assertedPersistence.persistence.type;\n    }\n    _getPersistence() {\n        return this.assertedPersistence.persistence;\n    }\n    _updateErrorMap(errorMap) {\n        this._errorFactory = new ErrorFactory('auth', 'Firebase', errorMap());\n    }\n    onAuthStateChanged(nextOrObserver, error, completed) {\n        return this.registerStateListener(this.authStateSubscription, nextOrObserver, error, completed);\n    }\n    beforeAuthStateChanged(callback, onAbort) {\n        return this.beforeStateQueue.pushCallback(callback, onAbort);\n    }\n    onIdTokenChanged(nextOrObserver, error, completed) {\n        return this.registerStateListener(this.idTokenSubscription, nextOrObserver, error, completed);\n    }\n    authStateReady() {\n        return new Promise((resolve, reject) => {\n            if (this.currentUser) {\n                resolve();\n            }\n            else {\n                const unsubscribe = this.onAuthStateChanged(() => {\n                    unsubscribe();\n                    resolve();\n                }, reject);\n            }\n        });\n    }\n    /**\n     * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n     */\n    async revokeAccessToken(token) {\n        if (this.currentUser) {\n            const idToken = await this.currentUser.getIdToken();\n            // Generalize this to accept other providers once supported.\n            const request = {\n                providerId: 'apple.com',\n                tokenType: \"ACCESS_TOKEN\" /* TokenType.ACCESS_TOKEN */,\n                token,\n                idToken\n            };\n            if (this.tenantId != null) {\n                request.tenantId = this.tenantId;\n            }\n            await revokeToken(this, request);\n        }\n    }\n    toJSON() {\n        var _a;\n        return {\n            apiKey: this.config.apiKey,\n            authDomain: this.config.authDomain,\n            appName: this.name,\n            currentUser: (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.toJSON()\n        };\n    }\n    async _setRedirectUser(user, popupRedirectResolver) {\n        const redirectManager = await this.getOrInitRedirectPersistenceManager(popupRedirectResolver);\n        return user === null\n            ? redirectManager.removeCurrentUser()\n            : redirectManager.setCurrentUser(user);\n    }\n    async getOrInitRedirectPersistenceManager(popupRedirectResolver) {\n        if (!this.redirectPersistenceManager) {\n            const resolver = (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n                this._popupRedirectResolver;\n            _assert(resolver, this, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n            this.redirectPersistenceManager = await PersistenceUserManager.create(this, [_getInstance(resolver._redirectPersistence)], \"redirectUser\" /* KeyName.REDIRECT_USER */);\n            this.redirectUser =\n                await this.redirectPersistenceManager.getCurrentUser();\n        }\n        return this.redirectPersistenceManager;\n    }\n    async _redirectUserForId(id) {\n        var _a, _b;\n        // Make sure we've cleared any pending persistence actions if we're not in\n        // the initializer\n        if (this._isInitialized) {\n            await this.queue(async () => { });\n        }\n        if (((_a = this._currentUser) === null || _a === void 0 ? void 0 : _a._redirectEventId) === id) {\n            return this._currentUser;\n        }\n        if (((_b = this.redirectUser) === null || _b === void 0 ? void 0 : _b._redirectEventId) === id) {\n            return this.redirectUser;\n        }\n        return null;\n    }\n    async _persistUserIfCurrent(user) {\n        if (user === this.currentUser) {\n            return this.queue(async () => this.directlySetCurrentUser(user));\n        }\n    }\n    /** Notifies listeners only if the user is current */\n    _notifyListenersIfCurrent(user) {\n        if (user === this.currentUser) {\n            this.notifyAuthListeners();\n        }\n    }\n    _key() {\n        return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n    }\n    _startProactiveRefresh() {\n        this.isProactiveRefreshEnabled = true;\n        if (this.currentUser) {\n            this._currentUser._startProactiveRefresh();\n        }\n    }\n    _stopProactiveRefresh() {\n        this.isProactiveRefreshEnabled = false;\n        if (this.currentUser) {\n            this._currentUser._stopProactiveRefresh();\n        }\n    }\n    /** Returns the current user cast as the internal type */\n    get _currentUser() {\n        return this.currentUser;\n    }\n    notifyAuthListeners() {\n        var _a, _b;\n        if (!this._isInitialized) {\n            return;\n        }\n        this.idTokenSubscription.next(this.currentUser);\n        const currentUid = (_b = (_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : null;\n        if (this.lastNotifiedUid !== currentUid) {\n            this.lastNotifiedUid = currentUid;\n            this.authStateSubscription.next(this.currentUser);\n        }\n    }\n    registerStateListener(subscription, nextOrObserver, error, completed) {\n        if (this._deleted) {\n            return () => { };\n        }\n        const cb = typeof nextOrObserver === 'function'\n            ? nextOrObserver\n            : nextOrObserver.next.bind(nextOrObserver);\n        let isUnsubscribed = false;\n        const promise = this._isInitialized\n            ? Promise.resolve()\n            : this._initializationPromise;\n        _assert(promise, this, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        // The callback needs to be called asynchronously per the spec.\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        promise.then(() => {\n            if (isUnsubscribed) {\n                return;\n            }\n            cb(this.currentUser);\n        });\n        if (typeof nextOrObserver === 'function') {\n            const unsubscribe = subscription.addObserver(nextOrObserver, error, completed);\n            return () => {\n                isUnsubscribed = true;\n                unsubscribe();\n            };\n        }\n        else {\n            const unsubscribe = subscription.addObserver(nextOrObserver);\n            return () => {\n                isUnsubscribed = true;\n                unsubscribe();\n            };\n        }\n    }\n    /**\n     * Unprotected (from race conditions) method to set the current user. This\n     * should only be called from within a queued callback. This is necessary\n     * because the queue shouldn't rely on another queued callback.\n     */\n    async directlySetCurrentUser(user) {\n        if (this.currentUser && this.currentUser !== user) {\n            this._currentUser._stopProactiveRefresh();\n        }\n        if (user && this.isProactiveRefreshEnabled) {\n            user._startProactiveRefresh();\n        }\n        this.currentUser = user;\n        if (user) {\n            await this.assertedPersistence.setCurrentUser(user);\n        }\n        else {\n            await this.assertedPersistence.removeCurrentUser();\n        }\n    }\n    queue(action) {\n        // In case something errors, the callback still should be called in order\n        // to keep the promise chain alive\n        this.operations = this.operations.then(action, action);\n        return this.operations;\n    }\n    get assertedPersistence() {\n        _assert(this.persistenceManager, this, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        return this.persistenceManager;\n    }\n    _logFramework(framework) {\n        if (!framework || this.frameworks.includes(framework)) {\n            return;\n        }\n        this.frameworks.push(framework);\n        // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n        // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n        this.frameworks.sort();\n        this.clientVersion = _getClientVersion(this.config.clientPlatform, this._getFrameworks());\n    }\n    _getFrameworks() {\n        return this.frameworks;\n    }\n    async _getAdditionalHeaders() {\n        var _a;\n        // Additional headers on every request\n        const headers = {\n            [\"X-Client-Version\" /* HttpHeader.X_CLIENT_VERSION */]: this.clientVersion\n        };\n        if (this.app.options.appId) {\n            headers[\"X-Firebase-gmpid\" /* HttpHeader.X_FIREBASE_GMPID */] = this.app.options.appId;\n        }\n        // If the heartbeat service exists, add the heartbeat string\n        const heartbeatsHeader = await ((_a = this.heartbeatServiceProvider\n            .getImmediate({\n            optional: true\n        })) === null || _a === void 0 ? void 0 : _a.getHeartbeatsHeader());\n        if (heartbeatsHeader) {\n            headers[\"X-Firebase-Client\" /* HttpHeader.X_FIREBASE_CLIENT */] = heartbeatsHeader;\n        }\n        // If the App Check service exists, add the App Check token in the headers\n        const appCheckToken = await this._getAppCheckToken();\n        if (appCheckToken) {\n            headers[\"X-Firebase-AppCheck\" /* HttpHeader.X_FIREBASE_APP_CHECK */] = appCheckToken;\n        }\n        return headers;\n    }\n    async _getAppCheckToken() {\n        var _a;\n        if (_isFirebaseServerApp(this.app) && this.app.settings.appCheckToken) {\n            return this.app.settings.appCheckToken;\n        }\n        const appCheckTokenResult = await ((_a = this.appCheckServiceProvider\n            .getImmediate({ optional: true })) === null || _a === void 0 ? void 0 : _a.getToken());\n        if (appCheckTokenResult === null || appCheckTokenResult === void 0 ? void 0 : appCheckTokenResult.error) {\n            // Context: appCheck.getToken() will never throw even if an error happened.\n            // In the error case, a dummy token will be returned along with an error field describing\n            // the error. In general, we shouldn't care about the error condition and just use\n            // the token (actual or dummy) to send requests.\n            _logWarn(`Error while retrieving App Check token: ${appCheckTokenResult.error}`);\n        }\n        return appCheckTokenResult === null || appCheckTokenResult === void 0 ? void 0 : appCheckTokenResult.token;\n    }\n}\n/**\n * Method to be used to cast down to our private implementation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nfunction _castAuth(auth) {\n    return getModularInstance(auth);\n}\n/** Helper class to wrap subscriber logic */\nclass Subscription {\n    constructor(auth) {\n        this.auth = auth;\n        this.observer = null;\n        this.addObserver = createSubscribe(observer => (this.observer = observer));\n    }\n    get next() {\n        _assert(this.observer, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        return this.observer.next.bind(this.observer);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet externalJSProvider = {\n    async loadJS() {\n        throw new Error('Unable to load external scripts');\n    },\n    recaptchaV2Script: '',\n    recaptchaEnterpriseScript: '',\n    gapiScript: ''\n};\nfunction _loadJS(url) {\n    return externalJSProvider.loadJS(url);\n}\nfunction _recaptchaEnterpriseScriptUrl() {\n    return externalJSProvider.recaptchaEnterpriseScript;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MockGreCAPTCHATopLevel {\n    constructor() {\n        this.enterprise = new MockGreCAPTCHA();\n    }\n    ready(callback) {\n        callback();\n    }\n    execute(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _siteKey, _options) {\n        return Promise.resolve('token');\n    }\n    render(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _container, _parameters) {\n        return '';\n    }\n}\nclass MockGreCAPTCHA {\n    ready(callback) {\n        callback();\n    }\n    execute(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _siteKey, _options) {\n        return Promise.resolve('token');\n    }\n    render(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _container, _parameters) {\n        return '';\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\nconst FAKE_TOKEN = 'NO_RECAPTCHA';\nclass RecaptchaEnterpriseVerifier {\n    /**\n     *\n     * @param authExtern - The corresponding Firebase {@link Auth} instance.\n     *\n     */\n    constructor(authExtern) {\n        /**\n         * Identifies the type of application verifier (e.g. \"recaptcha-enterprise\").\n         */\n        this.type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\n        this.auth = _castAuth(authExtern);\n    }\n    /**\n     * Executes the verification process.\n     *\n     * @returns A Promise for a token that can be used to assert the validity of a request.\n     */\n    async verify(action = 'verify', forceRefresh = false) {\n        async function retrieveSiteKey(auth) {\n            if (!forceRefresh) {\n                if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\n                    return auth._agentRecaptchaConfig.siteKey;\n                }\n                if (auth.tenantId != null &&\n                    auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined) {\n                    return auth._tenantRecaptchaConfigs[auth.tenantId].siteKey;\n                }\n            }\n            return new Promise(async (resolve, reject) => {\n                getRecaptchaConfig(auth, {\n                    clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */,\n                    version: \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\n                })\n                    .then(response => {\n                    if (response.recaptchaKey === undefined) {\n                        reject(new Error('recaptcha Enterprise site key undefined'));\n                    }\n                    else {\n                        const config = new RecaptchaConfig(response);\n                        if (auth.tenantId == null) {\n                            auth._agentRecaptchaConfig = config;\n                        }\n                        else {\n                            auth._tenantRecaptchaConfigs[auth.tenantId] = config;\n                        }\n                        return resolve(config.siteKey);\n                    }\n                })\n                    .catch(error => {\n                    reject(error);\n                });\n            });\n        }\n        function retrieveRecaptchaToken(siteKey, resolve, reject) {\n            const grecaptcha = window.grecaptcha;\n            if (isEnterprise(grecaptcha)) {\n                grecaptcha.enterprise.ready(() => {\n                    grecaptcha.enterprise\n                        .execute(siteKey, { action })\n                        .then(token => {\n                        resolve(token);\n                    })\n                        .catch(() => {\n                        resolve(FAKE_TOKEN);\n                    });\n                });\n            }\n            else {\n                reject(Error('No reCAPTCHA enterprise script loaded.'));\n            }\n        }\n        // Returns Promise for a mock token when appVerificationDisabledForTesting is true.\n        if (this.auth.settings.appVerificationDisabledForTesting) {\n            const mockRecaptcha = new MockGreCAPTCHATopLevel();\n            return mockRecaptcha.execute('siteKey', { action: 'verify' });\n        }\n        return new Promise((resolve, reject) => {\n            retrieveSiteKey(this.auth)\n                .then(siteKey => {\n                if (!forceRefresh && isEnterprise(window.grecaptcha)) {\n                    retrieveRecaptchaToken(siteKey, resolve, reject);\n                }\n                else {\n                    if (typeof window === 'undefined') {\n                        reject(new Error('RecaptchaVerifier is only supported in browser'));\n                        return;\n                    }\n                    let url = _recaptchaEnterpriseScriptUrl();\n                    if (url.length !== 0) {\n                        url += siteKey;\n                    }\n                    _loadJS(url)\n                        .then(() => {\n                        retrieveRecaptchaToken(siteKey, resolve, reject);\n                    })\n                        .catch(error => {\n                        reject(error);\n                    });\n                }\n            })\n                .catch(error => {\n                reject(error);\n            });\n        });\n    }\n}\nasync function injectRecaptchaFields(auth, request, action, isCaptchaResp = false, isFakeToken = false) {\n    const verifier = new RecaptchaEnterpriseVerifier(auth);\n    let captchaResponse;\n    if (isFakeToken) {\n        captchaResponse = FAKE_TOKEN;\n    }\n    else {\n        try {\n            captchaResponse = await verifier.verify(action);\n        }\n        catch (error) {\n            captchaResponse = await verifier.verify(action, true);\n        }\n    }\n    const newRequest = Object.assign({}, request);\n    if (action === \"mfaSmsEnrollment\" /* RecaptchaActionName.MFA_SMS_ENROLLMENT */ ||\n        action === \"mfaSmsSignIn\" /* RecaptchaActionName.MFA_SMS_SIGNIN */) {\n        if ('phoneEnrollmentInfo' in newRequest) {\n            const phoneNumber = newRequest.phoneEnrollmentInfo.phoneNumber;\n            const recaptchaToken = newRequest.phoneEnrollmentInfo.recaptchaToken;\n            Object.assign(newRequest, {\n                'phoneEnrollmentInfo': {\n                    phoneNumber,\n                    recaptchaToken,\n                    captchaResponse,\n                    'clientType': \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */,\n                    'recaptchaVersion': \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\n                }\n            });\n        }\n        else if ('phoneSignInInfo' in newRequest) {\n            const recaptchaToken = newRequest.phoneSignInInfo.recaptchaToken;\n            Object.assign(newRequest, {\n                'phoneSignInInfo': {\n                    recaptchaToken,\n                    captchaResponse,\n                    'clientType': \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */,\n                    'recaptchaVersion': \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\n                }\n            });\n        }\n        return newRequest;\n    }\n    if (!isCaptchaResp) {\n        Object.assign(newRequest, { captchaResponse });\n    }\n    else {\n        Object.assign(newRequest, { 'captchaResp': captchaResponse });\n    }\n    Object.assign(newRequest, { 'clientType': \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */ });\n    Object.assign(newRequest, {\n        'recaptchaVersion': \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\n    });\n    return newRequest;\n}\nasync function handleRecaptchaFlow(authInstance, request, actionName, actionMethod, recaptchaAuthProvider) {\n    var _a, _b;\n    if (recaptchaAuthProvider === \"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaAuthProvider.EMAIL_PASSWORD_PROVIDER */) {\n        if ((_a = authInstance\n            ._getRecaptchaConfig()) === null || _a === void 0 ? void 0 : _a.isProviderEnabled(\"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaAuthProvider.EMAIL_PASSWORD_PROVIDER */)) {\n            const requestWithRecaptcha = await injectRecaptchaFields(authInstance, request, actionName, actionName === \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */);\n            return actionMethod(authInstance, requestWithRecaptcha);\n        }\n        else {\n            return actionMethod(authInstance, request).catch(async (error) => {\n                if (error.code === `auth/${\"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */}`) {\n                    console.log(`${actionName} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`);\n                    const requestWithRecaptcha = await injectRecaptchaFields(authInstance, request, actionName, actionName === \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */);\n                    return actionMethod(authInstance, requestWithRecaptcha);\n                }\n                else {\n                    return Promise.reject(error);\n                }\n            });\n        }\n    }\n    else if (recaptchaAuthProvider === \"PHONE_PROVIDER\" /* RecaptchaAuthProvider.PHONE_PROVIDER */) {\n        if ((_b = authInstance\n            ._getRecaptchaConfig()) === null || _b === void 0 ? void 0 : _b.isProviderEnabled(\"PHONE_PROVIDER\" /* RecaptchaAuthProvider.PHONE_PROVIDER */)) {\n            const requestWithRecaptcha = await injectRecaptchaFields(authInstance, request, actionName);\n            return actionMethod(authInstance, requestWithRecaptcha).catch(async (error) => {\n                var _a;\n                if (((_a = authInstance\n                    ._getRecaptchaConfig()) === null || _a === void 0 ? void 0 : _a.getProviderEnforcementState(\"PHONE_PROVIDER\" /* RecaptchaAuthProvider.PHONE_PROVIDER */)) === \"AUDIT\" /* EnforcementState.AUDIT */) {\n                    // AUDIT mode\n                    if (error.code === `auth/${\"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */}` ||\n                        error.code === `auth/${\"invalid-app-credential\" /* AuthErrorCode.INVALID_APP_CREDENTIAL */}`) {\n                        console.log(`Failed to verify with reCAPTCHA Enterprise. Automatically triggering the reCAPTCHA v2 flow to complete the ${actionName} flow.`);\n                        // reCAPTCHA Enterprise token is missing or reCAPTCHA Enterprise token\n                        // check fails.\n                        // Fallback to reCAPTCHA v2 flow.\n                        const requestWithRecaptchaFields = await injectRecaptchaFields(authInstance, request, actionName, false, // isCaptchaResp\n                        true // isFakeToken\n                        );\n                        // This will call the PhoneApiCaller to fetch and inject reCAPTCHA v2 token.\n                        return actionMethod(authInstance, requestWithRecaptchaFields);\n                    }\n                }\n                // ENFORCE mode or AUDIT mode with any other error.\n                return Promise.reject(error);\n            });\n        }\n        else {\n            // Do reCAPTCHA v2 flow.\n            const requestWithRecaptchaFields = await injectRecaptchaFields(authInstance, request, actionName, false, // isCaptchaResp\n            true // isFakeToken\n            );\n            // This will call the PhoneApiCaller to fetch and inject v2 token.\n            return actionMethod(authInstance, requestWithRecaptchaFields);\n        }\n    }\n    else {\n        return Promise.reject(recaptchaAuthProvider + ' provider is not supported.');\n    }\n}\nasync function _initializeRecaptchaConfig(auth) {\n    const authInternal = _castAuth(auth);\n    const response = await getRecaptchaConfig(authInternal, {\n        clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */,\n        version: \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\n    });\n    const config = new RecaptchaConfig(response);\n    if (authInternal.tenantId == null) {\n        authInternal._agentRecaptchaConfig = config;\n    }\n    else {\n        authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\n    }\n    if (config.isAnyProviderEnabled()) {\n        const verifier = new RecaptchaEnterpriseVerifier(authInternal);\n        void verifier.verify();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nfunction initializeAuth(app, deps) {\n    const provider = _getProvider(app, 'auth');\n    if (provider.isInitialized()) {\n        const auth = provider.getImmediate();\n        const initialOptions = provider.getOptions();\n        if (deepEqual(initialOptions, deps !== null && deps !== void 0 ? deps : {})) {\n            return auth;\n        }\n        else {\n            _fail(auth, \"already-initialized\" /* AuthErrorCode.ALREADY_INITIALIZED */);\n        }\n    }\n    const auth = provider.initialize({ options: deps });\n    return auth;\n}\nfunction _initializeAuthInstance(auth, deps) {\n    const persistence = (deps === null || deps === void 0 ? void 0 : deps.persistence) || [];\n    const hierarchy = (Array.isArray(persistence) ? persistence : [persistence]).map(_getInstance);\n    if (deps === null || deps === void 0 ? void 0 : deps.errorMap) {\n        auth._updateErrorMap(deps.errorMap);\n    }\n    // This promise is intended to float; auth initialization happens in the\n    // background, meanwhile the auth object may be used by the app.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    auth._initializeWithPersistence(hierarchy, deps === null || deps === void 0 ? void 0 : deps.popupRedirectResolver);\n}\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nfunction connectAuthEmulator(auth, url, options) {\n    const authInternal = _castAuth(auth);\n    _assert(/^https?:\\/\\//.test(url), authInternal, \"invalid-emulator-scheme\" /* AuthErrorCode.INVALID_EMULATOR_SCHEME */);\n    const disableWarnings = !!(options === null || options === void 0 ? void 0 : options.disableWarnings);\n    const protocol = extractProtocol(url);\n    const { host, port } = extractHostAndPort(url);\n    const portStr = port === null ? '' : `:${port}`;\n    // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n    const emulator = { url: `${protocol}//${host}${portStr}/` };\n    const emulatorConfig = Object.freeze({\n        host,\n        port,\n        protocol: protocol.replace(':', ''),\n        options: Object.freeze({ disableWarnings })\n    });\n    // There are a few scenarios to guard against if the Auth instance has already started:\n    if (!authInternal._canInitEmulator) {\n        // Applications may not initialize the emulator for the first time if Auth has already started\n        // to make network requests.\n        _assert(authInternal.config.emulator && authInternal.emulatorConfig, authInternal, \"emulator-config-failed\" /* AuthErrorCode.EMULATOR_CONFIG_FAILED */);\n        // Applications may not alter the configuration of the emulator (aka pass a different config)\n        // once Auth has started to make network requests.\n        _assert(deepEqual(emulator, authInternal.config.emulator) &&\n            deepEqual(emulatorConfig, authInternal.emulatorConfig), authInternal, \"emulator-config-failed\" /* AuthErrorCode.EMULATOR_CONFIG_FAILED */);\n        // It's valid, however, to invoke connectAuthEmulator() after Auth has started making\n        // connections, so long as the config matches the existing config. This results in a no-op.\n        return;\n    }\n    authInternal.config.emulator = emulator;\n    authInternal.emulatorConfig = emulatorConfig;\n    authInternal.settings.appVerificationDisabledForTesting = true;\n    // Workaround to get cookies in Firebase Studio\n    if (isCloudWorkstation(host)) {\n        void pingServer(`${protocol}//${host}${portStr}`);\n        updateEmulatorBanner('Auth', true);\n    }\n    else if (!disableWarnings) {\n        emitEmulatorWarning();\n    }\n}\nfunction extractProtocol(url) {\n    const protocolEnd = url.indexOf(':');\n    return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\nfunction extractHostAndPort(url) {\n    const protocol = extractProtocol(url);\n    const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n    if (!authority) {\n        return { host: '', port: null };\n    }\n    const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n    const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n    if (bracketedIPv6) {\n        const host = bracketedIPv6[1];\n        return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n    }\n    else {\n        const [host, port] = hostAndPort.split(':');\n        return { host, port: parsePort(port) };\n    }\n}\nfunction parsePort(portStr) {\n    if (!portStr) {\n        return null;\n    }\n    const port = Number(portStr);\n    if (isNaN(port)) {\n        return null;\n    }\n    return port;\n}\nfunction emitEmulatorWarning() {\n    function attachBanner() {\n        const el = document.createElement('p');\n        const sty = el.style;\n        el.innerText =\n            'Running in emulator mode. Do not use with production credentials.';\n        sty.position = 'fixed';\n        sty.width = '100%';\n        sty.backgroundColor = '#ffffff';\n        sty.border = '.1em solid #000000';\n        sty.color = '#b50000';\n        sty.bottom = '0px';\n        sty.left = '0px';\n        sty.margin = '0px';\n        sty.zIndex = '10000';\n        sty.textAlign = 'center';\n        el.classList.add('firebase-emulator-warning');\n        document.body.appendChild(el);\n    }\n    if (typeof console !== 'undefined' && typeof console.info === 'function') {\n        console.info('WARNING: You are using the Auth Emulator,' +\n            ' which is intended for local testing only.  Do not use with' +\n            ' production credentials.');\n    }\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n        if (document.readyState === 'loading') {\n            window.addEventListener('DOMContentLoaded', attachBanner);\n        }\n        else {\n            attachBanner();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nclass AuthCredential {\n    /** @internal */\n    constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    providerId, \n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    signInMethod) {\n        this.providerId = providerId;\n        this.signInMethod = signInMethod;\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns a JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return debugFail('not implemented');\n    }\n    /** @internal */\n    _getIdTokenResponse(_auth) {\n        return debugFail('not implemented');\n    }\n    /** @internal */\n    _linkToIdToken(_auth, _idToken) {\n        return debugFail('not implemented');\n    }\n    /** @internal */\n    _getReauthenticationResolver(_auth) {\n        return debugFail('not implemented');\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function resetPassword(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:resetPassword\" /* Endpoint.RESET_PASSWORD */, _addTidIfNecessary(auth, request));\n}\nasync function updateEmailPassword(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request);\n}\n// Used for linking an email/password account to an existing idToken. Uses the same request/response\n// format as updateEmailPassword.\nasync function linkEmailPassword(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signUp\" /* Endpoint.SIGN_UP */, request);\n}\nasync function applyActionCode$1(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function signInWithPassword(auth, request) {\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPassword\" /* Endpoint.SIGN_IN_WITH_PASSWORD */, _addTidIfNecessary(auth, request));\n}\nasync function sendOobCode(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:sendOobCode\" /* Endpoint.SEND_OOB_CODE */, _addTidIfNecessary(auth, request));\n}\nasync function sendEmailVerification$1(auth, request) {\n    return sendOobCode(auth, request);\n}\nasync function sendPasswordResetEmail$1(auth, request) {\n    return sendOobCode(auth, request);\n}\nasync function sendSignInLinkToEmail$1(auth, request) {\n    return sendOobCode(auth, request);\n}\nasync function verifyAndChangeEmail(auth, request) {\n    return sendOobCode(auth, request);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function signInWithEmailLink$1(auth, request) {\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithEmailLink\" /* Endpoint.SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request));\n}\nasync function signInWithEmailLinkForLinking(auth, request) {\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithEmailLink\" /* Endpoint.SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nclass EmailAuthCredential extends AuthCredential {\n    /** @internal */\n    constructor(\n    /** @internal */\n    _email, \n    /** @internal */\n    _password, signInMethod, \n    /** @internal */\n    _tenantId = null) {\n        super(\"password\" /* ProviderId.PASSWORD */, signInMethod);\n        this._email = _email;\n        this._password = _password;\n        this._tenantId = _tenantId;\n    }\n    /** @internal */\n    static _fromEmailAndPassword(email, password) {\n        return new EmailAuthCredential(email, password, \"password\" /* SignInMethod.EMAIL_PASSWORD */);\n    }\n    /** @internal */\n    static _fromEmailAndCode(email, oobCode, tenantId = null) {\n        return new EmailAuthCredential(email, oobCode, \"emailLink\" /* SignInMethod.EMAIL_LINK */, tenantId);\n    }\n    /** {@inheritdoc AuthCredential.toJSON} */\n    toJSON() {\n        return {\n            email: this._email,\n            password: this._password,\n            signInMethod: this.signInMethod,\n            tenantId: this._tenantId\n        };\n    }\n    /**\n     * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n     *\n     * @param json - Either `object` or the stringified representation of the object. When string is\n     * provided, `JSON.parse` would be called first.\n     *\n     * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n     */\n    static fromJSON(json) {\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\n        if ((obj === null || obj === void 0 ? void 0 : obj.email) && (obj === null || obj === void 0 ? void 0 : obj.password)) {\n            if (obj.signInMethod === \"password\" /* SignInMethod.EMAIL_PASSWORD */) {\n                return this._fromEmailAndPassword(obj.email, obj.password);\n            }\n            else if (obj.signInMethod === \"emailLink\" /* SignInMethod.EMAIL_LINK */) {\n                return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n            }\n        }\n        return null;\n    }\n    /** @internal */\n    async _getIdTokenResponse(auth) {\n        switch (this.signInMethod) {\n            case \"password\" /* SignInMethod.EMAIL_PASSWORD */:\n                const request = {\n                    returnSecureToken: true,\n                    email: this._email,\n                    password: this._password,\n                    clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n                };\n                return handleRecaptchaFlow(auth, request, \"signInWithPassword\" /* RecaptchaActionName.SIGN_IN_WITH_PASSWORD */, signInWithPassword, \"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaAuthProvider.EMAIL_PASSWORD_PROVIDER */);\n            case \"emailLink\" /* SignInMethod.EMAIL_LINK */:\n                return signInWithEmailLink$1(auth, {\n                    email: this._email,\n                    oobCode: this._password\n                });\n            default:\n                _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        }\n    }\n    /** @internal */\n    async _linkToIdToken(auth, idToken) {\n        switch (this.signInMethod) {\n            case \"password\" /* SignInMethod.EMAIL_PASSWORD */:\n                const request = {\n                    idToken,\n                    returnSecureToken: true,\n                    email: this._email,\n                    password: this._password,\n                    clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n                };\n                return handleRecaptchaFlow(auth, request, \"signUpPassword\" /* RecaptchaActionName.SIGN_UP_PASSWORD */, linkEmailPassword, \"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaAuthProvider.EMAIL_PASSWORD_PROVIDER */);\n            case \"emailLink\" /* SignInMethod.EMAIL_LINK */:\n                return signInWithEmailLinkForLinking(auth, {\n                    idToken,\n                    email: this._email,\n                    oobCode: this._password\n                });\n            default:\n                _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        }\n    }\n    /** @internal */\n    _getReauthenticationResolver(auth) {\n        return this._getIdTokenResponse(auth);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function signInWithIdp(auth, request) {\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithIdp\" /* Endpoint.SIGN_IN_WITH_IDP */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst IDP_REQUEST_URI$1 = 'http://localhost';\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nclass OAuthCredential extends AuthCredential {\n    constructor() {\n        super(...arguments);\n        this.pendingToken = null;\n    }\n    /** @internal */\n    static _fromParams(params) {\n        const cred = new OAuthCredential(params.providerId, params.signInMethod);\n        if (params.idToken || params.accessToken) {\n            // OAuth 2 and either ID token or access token.\n            if (params.idToken) {\n                cred.idToken = params.idToken;\n            }\n            if (params.accessToken) {\n                cred.accessToken = params.accessToken;\n            }\n            // Add nonce if available and no pendingToken is present.\n            if (params.nonce && !params.pendingToken) {\n                cred.nonce = params.nonce;\n            }\n            if (params.pendingToken) {\n                cred.pendingToken = params.pendingToken;\n            }\n        }\n        else if (params.oauthToken && params.oauthTokenSecret) {\n            // OAuth 1 and OAuth token with token secret\n            cred.accessToken = params.oauthToken;\n            cred.secret = params.oauthTokenSecret;\n        }\n        else {\n            _fail(\"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        }\n        return cred;\n    }\n    /** {@inheritdoc AuthCredential.toJSON}  */\n    toJSON() {\n        return {\n            idToken: this.idToken,\n            accessToken: this.accessToken,\n            secret: this.secret,\n            nonce: this.nonce,\n            pendingToken: this.pendingToken,\n            providerId: this.providerId,\n            signInMethod: this.signInMethod\n        };\n    }\n    /**\n     * Static method to deserialize a JSON representation of an object into an\n     * {@link  AuthCredential}.\n     *\n     * @param json - Input can be either Object or the stringified representation of the object.\n     * When string is provided, JSON.parse would be called first.\n     *\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n     */\n    static fromJSON(json) {\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\n        const { providerId, signInMethod } = obj, rest = __rest(obj, [\"providerId\", \"signInMethod\"]);\n        if (!providerId || !signInMethod) {\n            return null;\n        }\n        const cred = new OAuthCredential(providerId, signInMethod);\n        cred.idToken = rest.idToken || undefined;\n        cred.accessToken = rest.accessToken || undefined;\n        cred.secret = rest.secret;\n        cred.nonce = rest.nonce;\n        cred.pendingToken = rest.pendingToken || null;\n        return cred;\n    }\n    /** @internal */\n    _getIdTokenResponse(auth) {\n        const request = this.buildRequest();\n        return signInWithIdp(auth, request);\n    }\n    /** @internal */\n    _linkToIdToken(auth, idToken) {\n        const request = this.buildRequest();\n        request.idToken = idToken;\n        return signInWithIdp(auth, request);\n    }\n    /** @internal */\n    _getReauthenticationResolver(auth) {\n        const request = this.buildRequest();\n        request.autoCreate = false;\n        return signInWithIdp(auth, request);\n    }\n    buildRequest() {\n        const request = {\n            requestUri: IDP_REQUEST_URI$1,\n            returnSecureToken: true\n        };\n        if (this.pendingToken) {\n            request.pendingToken = this.pendingToken;\n        }\n        else {\n            const postBody = {};\n            if (this.idToken) {\n                postBody['id_token'] = this.idToken;\n            }\n            if (this.accessToken) {\n                postBody['access_token'] = this.accessToken;\n            }\n            if (this.secret) {\n                postBody['oauth_token_secret'] = this.secret;\n            }\n            postBody['providerId'] = this.providerId;\n            if (this.nonce && !this.pendingToken) {\n                postBody['nonce'] = this.nonce;\n            }\n            request.postBody = querystring(postBody);\n        }\n        return request;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function signInWithPhoneNumber$1(auth, request) {\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request));\n}\nasync function linkWithPhoneNumber$1(auth, request) {\n    const response = await _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request));\n    if (response.temporaryProof) {\n        throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */, response);\n    }\n    return response;\n}\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_ = {\n    [\"USER_NOT_FOUND\" /* ServerError.USER_NOT_FOUND */]: \"user-not-found\" /* AuthErrorCode.USER_DELETED */\n};\nasync function verifyPhoneNumberForExisting(auth, request) {\n    const apiRequest = Object.assign(Object.assign({}, request), { operation: 'REAUTH' });\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, apiRequest), VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nclass PhoneAuthCredential extends AuthCredential {\n    constructor(params) {\n        super(\"phone\" /* ProviderId.PHONE */, \"phone\" /* SignInMethod.PHONE */);\n        this.params = params;\n    }\n    /** @internal */\n    static _fromVerification(verificationId, verificationCode) {\n        return new PhoneAuthCredential({ verificationId, verificationCode });\n    }\n    /** @internal */\n    static _fromTokenResponse(phoneNumber, temporaryProof) {\n        return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n    }\n    /** @internal */\n    _getIdTokenResponse(auth) {\n        return signInWithPhoneNumber$1(auth, this._makeVerificationRequest());\n    }\n    /** @internal */\n    _linkToIdToken(auth, idToken) {\n        return linkWithPhoneNumber$1(auth, Object.assign({ idToken }, this._makeVerificationRequest()));\n    }\n    /** @internal */\n    _getReauthenticationResolver(auth) {\n        return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n    }\n    /** @internal */\n    _makeVerificationRequest() {\n        const { temporaryProof, phoneNumber, verificationId, verificationCode } = this.params;\n        if (temporaryProof && phoneNumber) {\n            return { temporaryProof, phoneNumber };\n        }\n        return {\n            sessionInfo: verificationId,\n            code: verificationCode\n        };\n    }\n    /** {@inheritdoc AuthCredential.toJSON} */\n    toJSON() {\n        const obj = {\n            providerId: this.providerId\n        };\n        if (this.params.phoneNumber) {\n            obj.phoneNumber = this.params.phoneNumber;\n        }\n        if (this.params.temporaryProof) {\n            obj.temporaryProof = this.params.temporaryProof;\n        }\n        if (this.params.verificationCode) {\n            obj.verificationCode = this.params.verificationCode;\n        }\n        if (this.params.verificationId) {\n            obj.verificationId = this.params.verificationId;\n        }\n        return obj;\n    }\n    /** Generates a phone credential based on a plain object or a JSON string. */\n    static fromJSON(json) {\n        if (typeof json === 'string') {\n            json = JSON.parse(json);\n        }\n        const { verificationId, verificationCode, phoneNumber, temporaryProof } = json;\n        if (!verificationCode &&\n            !verificationId &&\n            !phoneNumber &&\n            !temporaryProof) {\n            return null;\n        }\n        return new PhoneAuthCredential({\n            verificationId,\n            verificationCode,\n            phoneNumber,\n            temporaryProof\n        });\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode) {\n    switch (mode) {\n        case 'recoverEmail':\n            return \"RECOVER_EMAIL\" /* ActionCodeOperation.RECOVER_EMAIL */;\n        case 'resetPassword':\n            return \"PASSWORD_RESET\" /* ActionCodeOperation.PASSWORD_RESET */;\n        case 'signIn':\n            return \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */;\n        case 'verifyEmail':\n            return \"VERIFY_EMAIL\" /* ActionCodeOperation.VERIFY_EMAIL */;\n        case 'verifyAndChangeEmail':\n            return \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */;\n        case 'revertSecondFactorAddition':\n            return \"REVERT_SECOND_FACTOR_ADDITION\" /* ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION */;\n        default:\n            return null;\n    }\n}\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url) {\n    const link = querystringDecode(extractQuerystring(url))['link'];\n    // Double link case (automatic redirect).\n    const doubleDeepLink = link\n        ? querystringDecode(extractQuerystring(link))['deep_link_id']\n        : null;\n    // iOS custom scheme links.\n    const iOSDeepLink = querystringDecode(extractQuerystring(url))['deep_link_id'];\n    const iOSDoubleDeepLink = iOSDeepLink\n        ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n        : null;\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nclass ActionCodeURL {\n    /**\n     * @param actionLink - The link from which to extract the URL.\n     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n     *\n     * @internal\n     */\n    constructor(actionLink) {\n        var _a, _b, _c, _d, _e, _f;\n        const searchParams = querystringDecode(extractQuerystring(actionLink));\n        const apiKey = (_a = searchParams[\"apiKey\" /* QueryField.API_KEY */]) !== null && _a !== void 0 ? _a : null;\n        const code = (_b = searchParams[\"oobCode\" /* QueryField.CODE */]) !== null && _b !== void 0 ? _b : null;\n        const operation = parseMode((_c = searchParams[\"mode\" /* QueryField.MODE */]) !== null && _c !== void 0 ? _c : null);\n        // Validate API key, code and mode.\n        _assert(apiKey && code && operation, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        this.apiKey = apiKey;\n        this.operation = operation;\n        this.code = code;\n        this.continueUrl = (_d = searchParams[\"continueUrl\" /* QueryField.CONTINUE_URL */]) !== null && _d !== void 0 ? _d : null;\n        this.languageCode = (_e = searchParams[\"lang\" /* QueryField.LANGUAGE_CODE */]) !== null && _e !== void 0 ? _e : null;\n        this.tenantId = (_f = searchParams[\"tenantId\" /* QueryField.TENANT_ID */]) !== null && _f !== void 0 ? _f : null;\n    }\n    /**\n     * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n     * otherwise returns null.\n     *\n     * @param link  - The email action link string.\n     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n     *\n     * @public\n     */\n    static parseLink(link) {\n        const actionLink = parseDeepLink(link);\n        try {\n            return new ActionCodeURL(actionLink);\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n}\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nfunction parseActionCodeURL(link) {\n    return ActionCodeURL.parseLink(link);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nclass EmailAuthProvider {\n    constructor() {\n        /**\n         * Always set to {@link ProviderId}.PASSWORD, even for email link.\n         */\n        this.providerId = EmailAuthProvider.PROVIDER_ID;\n    }\n    /**\n     * Initialize an {@link AuthCredential} using an email and password.\n     *\n     * @example\n     * ```javascript\n     * const authCredential = EmailAuthProvider.credential(email, password);\n     * const userCredential = await signInWithCredential(auth, authCredential);\n     * ```\n     *\n     * @example\n     * ```javascript\n     * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n     * ```\n     *\n     * @param email - Email address.\n     * @param password - User account password.\n     * @returns The auth provider credential.\n     */\n    static credential(email, password) {\n        return EmailAuthCredential._fromEmailAndPassword(email, password);\n    }\n    /**\n     * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n     * email link operation.\n     *\n     * @example\n     * ```javascript\n     * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n     * const userCredential = await signInWithCredential(auth, authCredential);\n     * ```\n     *\n     * @example\n     * ```javascript\n     * await sendSignInLinkToEmail(auth, email);\n     * // Obtain emailLink from user.\n     * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n     * ```\n     *\n     * @param auth - The {@link Auth} instance used to verify the link.\n     * @param email - Email address.\n     * @param emailLink - Sign-in email link.\n     * @returns - The auth provider credential.\n     */\n    static credentialWithLink(email, emailLink) {\n        const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n        _assert(actionCodeUrl, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        return EmailAuthCredential._fromEmailAndCode(email, actionCodeUrl.code, actionCodeUrl.tenantId);\n    }\n}\n/**\n * Always set to {@link ProviderId}.PASSWORD, even for email link.\n */\nEmailAuthProvider.PROVIDER_ID = \"password\" /* ProviderId.PASSWORD */;\n/**\n * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n */\nEmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD = \"password\" /* SignInMethod.EMAIL_PASSWORD */;\n/**\n * Always set to {@link SignInMethod}.EMAIL_LINK.\n */\nEmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD = \"emailLink\" /* SignInMethod.EMAIL_LINK */;\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nclass FederatedAuthProvider {\n    /**\n     * Constructor for generic OAuth providers.\n     *\n     * @param providerId - Provider for which credentials should be generated.\n     */\n    constructor(providerId) {\n        this.providerId = providerId;\n        /** @internal */\n        this.defaultLanguageCode = null;\n        /** @internal */\n        this.customParameters = {};\n    }\n    /**\n     * Set the language gode.\n     *\n     * @param languageCode - language code\n     */\n    setDefaultLanguage(languageCode) {\n        this.defaultLanguageCode = languageCode;\n    }\n    /**\n     * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n     * operations.\n     *\n     * @remarks\n     * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n     * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n     *\n     * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n     */\n    setCustomParameters(customOAuthParameters) {\n        this.customParameters = customOAuthParameters;\n        return this;\n    }\n    /**\n     * Retrieve the current list of {@link CustomParameters}.\n     */\n    getCustomParameters() {\n        return this.customParameters;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nclass BaseOAuthProvider extends FederatedAuthProvider {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.scopes = [];\n    }\n    /**\n     * Add an OAuth scope to the credential.\n     *\n     * @param scope - Provider OAuth scope to add.\n     */\n    addScope(scope) {\n        // If not already added, add scope to list.\n        if (!this.scopes.includes(scope)) {\n            this.scopes.push(scope);\n        }\n        return this;\n    }\n    /**\n     * Retrieve the current list of OAuth scopes.\n     */\n    getScopes() {\n        return [...this.scopes];\n    }\n}\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nclass OAuthProvider extends BaseOAuthProvider {\n    /**\n     * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n     * @param json - A plain object or a JSON string\n     */\n    static credentialFromJSON(json) {\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\n        _assert('providerId' in obj && 'signInMethod' in obj, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        return OAuthCredential._fromParams(obj);\n    }\n    /**\n     * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n     *\n     * @remarks\n     * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n     * the raw nonce must match the nonce field in the ID token.\n     *\n     * @example\n     * ```javascript\n     * // `googleUser` from the onsuccess Google Sign In callback.\n     * // Initialize a generate OAuth provider with a `google.com` providerId.\n     * const provider = new OAuthProvider('google.com');\n     * const credential = provider.credential({\n     *   idToken: googleUser.getAuthResponse().id_token,\n     * });\n     * const result = await signInWithCredential(credential);\n     * ```\n     *\n     * @param params - Either the options object containing the ID token, access token and raw nonce\n     * or the ID token string.\n     */\n    credential(params) {\n        return this._credential(Object.assign(Object.assign({}, params), { nonce: params.rawNonce }));\n    }\n    /** An internal credential method that accepts more permissive options */\n    _credential(params) {\n        _assert(params.idToken || params.accessToken, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        // For OAuthCredential, sign in method is same as providerId.\n        return OAuthCredential._fromParams(Object.assign(Object.assign({}, params), { providerId: this.providerId, signInMethod: this.providerId }));\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromResult(userCredential) {\n        return OAuthProvider.oauthCredentialFromTaggedObject(userCredential);\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n     * thrown during a sign-in, link, or reauthenticate operation.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromError(error) {\n        return OAuthProvider.oauthCredentialFromTaggedObject((error.customData || {}));\n    }\n    static oauthCredentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\n        if (!tokenResponse) {\n            return null;\n        }\n        const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce, providerId } = tokenResponse;\n        if (!oauthAccessToken &&\n            !oauthTokenSecret &&\n            !oauthIdToken &&\n            !pendingToken) {\n            return null;\n        }\n        if (!providerId) {\n            return null;\n        }\n        try {\n            return new OAuthProvider(providerId)._credential({\n                idToken: oauthIdToken,\n                accessToken: oauthAccessToken,\n                nonce,\n                pendingToken\n            });\n        }\n        catch (e) {\n            return null;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nclass FacebookAuthProvider extends BaseOAuthProvider {\n    constructor() {\n        super(\"facebook.com\" /* ProviderId.FACEBOOK */);\n    }\n    /**\n     * Creates a credential for Facebook.\n     *\n     * @example\n     * ```javascript\n     * // `event` from the Facebook auth.authResponseChange callback.\n     * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n     * const result = await signInWithCredential(credential);\n     * ```\n     *\n     * @param accessToken - Facebook access token.\n     */\n    static credential(accessToken) {\n        return OAuthCredential._fromParams({\n            providerId: FacebookAuthProvider.PROVIDER_ID,\n            signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n            accessToken\n        });\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromResult(userCredential) {\n        return FacebookAuthProvider.credentialFromTaggedObject(userCredential);\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n     * thrown during a sign-in, link, or reauthenticate operation.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromError(error) {\n        return FacebookAuthProvider.credentialFromTaggedObject((error.customData || {}));\n    }\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\n        if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n            return null;\n        }\n        if (!tokenResponse.oauthAccessToken) {\n            return null;\n        }\n        try {\n            return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n}\n/** Always set to {@link SignInMethod}.FACEBOOK. */\nFacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD = \"facebook.com\" /* SignInMethod.FACEBOOK */;\n/** Always set to {@link ProviderId}.FACEBOOK. */\nFacebookAuthProvider.PROVIDER_ID = \"facebook.com\" /* ProviderId.FACEBOOK */;\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nclass GoogleAuthProvider extends BaseOAuthProvider {\n    constructor() {\n        super(\"google.com\" /* ProviderId.GOOGLE */);\n        this.addScope('profile');\n    }\n    /**\n     * Creates a credential for Google. At least one of ID token and access token is required.\n     *\n     * @example\n     * ```javascript\n     * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n     * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n     * const result = await signInWithCredential(credential);\n     * ```\n     *\n     * @param idToken - Google ID token.\n     * @param accessToken - Google access token.\n     */\n    static credential(idToken, accessToken) {\n        return OAuthCredential._fromParams({\n            providerId: GoogleAuthProvider.PROVIDER_ID,\n            signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n            idToken,\n            accessToken\n        });\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromResult(userCredential) {\n        return GoogleAuthProvider.credentialFromTaggedObject(userCredential);\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n     * thrown during a sign-in, link, or reauthenticate operation.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromError(error) {\n        return GoogleAuthProvider.credentialFromTaggedObject((error.customData || {}));\n    }\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\n        if (!tokenResponse) {\n            return null;\n        }\n        const { oauthIdToken, oauthAccessToken } = tokenResponse;\n        if (!oauthIdToken && !oauthAccessToken) {\n            // This could be an oauth 1 credential or a phone credential\n            return null;\n        }\n        try {\n            return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n}\n/** Always set to {@link SignInMethod}.GOOGLE. */\nGoogleAuthProvider.GOOGLE_SIGN_IN_METHOD = \"google.com\" /* SignInMethod.GOOGLE */;\n/** Always set to {@link ProviderId}.GOOGLE. */\nGoogleAuthProvider.PROVIDER_ID = \"google.com\" /* ProviderId.GOOGLE */;\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a GitHub Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a GitHub Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nclass GithubAuthProvider extends BaseOAuthProvider {\n    constructor() {\n        super(\"github.com\" /* ProviderId.GITHUB */);\n    }\n    /**\n     * Creates a credential for GitHub.\n     *\n     * @param accessToken - GitHub access token.\n     */\n    static credential(accessToken) {\n        return OAuthCredential._fromParams({\n            providerId: GithubAuthProvider.PROVIDER_ID,\n            signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n            accessToken\n        });\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromResult(userCredential) {\n        return GithubAuthProvider.credentialFromTaggedObject(userCredential);\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n     * thrown during a sign-in, link, or reauthenticate operation.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromError(error) {\n        return GithubAuthProvider.credentialFromTaggedObject((error.customData || {}));\n    }\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\n        if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n            return null;\n        }\n        if (!tokenResponse.oauthAccessToken) {\n            return null;\n        }\n        try {\n            return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n}\n/** Always set to {@link SignInMethod}.GITHUB. */\nGithubAuthProvider.GITHUB_SIGN_IN_METHOD = \"github.com\" /* SignInMethod.GITHUB */;\n/** Always set to {@link ProviderId}.GITHUB. */\nGithubAuthProvider.PROVIDER_ID = \"github.com\" /* ProviderId.GITHUB */;\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst IDP_REQUEST_URI = 'http://localhost';\n/**\n * @public\n */\nclass SAMLAuthCredential extends AuthCredential {\n    /** @internal */\n    constructor(providerId, pendingToken) {\n        super(providerId, providerId);\n        this.pendingToken = pendingToken;\n    }\n    /** @internal */\n    _getIdTokenResponse(auth) {\n        const request = this.buildRequest();\n        return signInWithIdp(auth, request);\n    }\n    /** @internal */\n    _linkToIdToken(auth, idToken) {\n        const request = this.buildRequest();\n        request.idToken = idToken;\n        return signInWithIdp(auth, request);\n    }\n    /** @internal */\n    _getReauthenticationResolver(auth) {\n        const request = this.buildRequest();\n        request.autoCreate = false;\n        return signInWithIdp(auth, request);\n    }\n    /** {@inheritdoc AuthCredential.toJSON}  */\n    toJSON() {\n        return {\n            signInMethod: this.signInMethod,\n            providerId: this.providerId,\n            pendingToken: this.pendingToken\n        };\n    }\n    /**\n     * Static method to deserialize a JSON representation of an object into an\n     * {@link  AuthCredential}.\n     *\n     * @param json - Input can be either Object or the stringified representation of the object.\n     * When string is provided, JSON.parse would be called first.\n     *\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n     */\n    static fromJSON(json) {\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\n        const { providerId, signInMethod, pendingToken } = obj;\n        if (!providerId ||\n            !signInMethod ||\n            !pendingToken ||\n            providerId !== signInMethod) {\n            return null;\n        }\n        return new SAMLAuthCredential(providerId, pendingToken);\n    }\n    /**\n     * Helper static method to avoid exposing the constructor to end users.\n     *\n     * @internal\n     */\n    static _create(providerId, pendingToken) {\n        return new SAMLAuthCredential(providerId, pendingToken);\n    }\n    buildRequest() {\n        return {\n            requestUri: IDP_REQUEST_URI,\n            returnSecureToken: true,\n            pendingToken: this.pendingToken\n        };\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst SAML_PROVIDER_PREFIX = 'saml.';\n/**\n * An {@link AuthProvider} for SAML.\n *\n * @public\n */\nclass SAMLAuthProvider extends FederatedAuthProvider {\n    /**\n     * Constructor. The providerId must start with \"saml.\"\n     * @param providerId - SAML provider ID.\n     */\n    constructor(providerId) {\n        _assert(providerId.startsWith(SAML_PROVIDER_PREFIX), \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        super(providerId);\n    }\n    /**\n     * Generates an {@link AuthCredential} from a {@link UserCredential} after a\n     * successful SAML flow completes.\n     *\n     * @remarks\n     *\n     * For example, to get an {@link AuthCredential}, you could write the\n     * following code:\n     *\n     * ```js\n     * const userCredential = await signInWithPopup(auth, samlProvider);\n     * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\n     * ```\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromResult(userCredential) {\n        return SAMLAuthProvider.samlCredentialFromTaggedObject(userCredential);\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n     * thrown during a sign-in, link, or reauthenticate operation.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromError(error) {\n        return SAMLAuthProvider.samlCredentialFromTaggedObject((error.customData || {}));\n    }\n    /**\n     * Creates an {@link AuthCredential} from a JSON string or a plain object.\n     * @param json - A plain object or a JSON string\n     */\n    static credentialFromJSON(json) {\n        const credential = SAMLAuthCredential.fromJSON(json);\n        _assert(credential, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        return credential;\n    }\n    static samlCredentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\n        if (!tokenResponse) {\n            return null;\n        }\n        const { pendingToken, providerId } = tokenResponse;\n        if (!pendingToken || !providerId) {\n            return null;\n        }\n        try {\n            return SAMLAuthCredential._create(providerId, pendingToken);\n        }\n        catch (e) {\n            return null;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nclass TwitterAuthProvider extends BaseOAuthProvider {\n    constructor() {\n        super(\"twitter.com\" /* ProviderId.TWITTER */);\n    }\n    /**\n     * Creates a credential for Twitter.\n     *\n     * @param token - Twitter access token.\n     * @param secret - Twitter secret.\n     */\n    static credential(token, secret) {\n        return OAuthCredential._fromParams({\n            providerId: TwitterAuthProvider.PROVIDER_ID,\n            signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n            oauthToken: token,\n            oauthTokenSecret: secret\n        });\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromResult(userCredential) {\n        return TwitterAuthProvider.credentialFromTaggedObject(userCredential);\n    }\n    /**\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n     * thrown during a sign-in, link, or reauthenticate operation.\n     *\n     * @param userCredential - The user credential.\n     */\n    static credentialFromError(error) {\n        return TwitterAuthProvider.credentialFromTaggedObject((error.customData || {}));\n    }\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\n        if (!tokenResponse) {\n            return null;\n        }\n        const { oauthAccessToken, oauthTokenSecret } = tokenResponse;\n        if (!oauthAccessToken || !oauthTokenSecret) {\n            return null;\n        }\n        try {\n            return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n}\n/** Always set to {@link SignInMethod}.TWITTER. */\nTwitterAuthProvider.TWITTER_SIGN_IN_METHOD = \"twitter.com\" /* SignInMethod.TWITTER */;\n/** Always set to {@link ProviderId}.TWITTER. */\nTwitterAuthProvider.PROVIDER_ID = \"twitter.com\" /* ProviderId.TWITTER */;\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function signUp(auth, request) {\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signUp\" /* Endpoint.SIGN_UP */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass UserCredentialImpl {\n    constructor(params) {\n        this.user = params.user;\n        this.providerId = params.providerId;\n        this._tokenResponse = params._tokenResponse;\n        this.operationType = params.operationType;\n    }\n    static async _fromIdTokenResponse(auth, operationType, idTokenResponse, isAnonymous = false) {\n        const user = await UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous);\n        const providerId = providerIdForResponse(idTokenResponse);\n        const userCred = new UserCredentialImpl({\n            user,\n            providerId,\n            _tokenResponse: idTokenResponse,\n            operationType\n        });\n        return userCred;\n    }\n    static async _forOperation(user, operationType, response) {\n        await user._updateTokensIfNecessary(response, /* reload */ true);\n        const providerId = providerIdForResponse(response);\n        return new UserCredentialImpl({\n            user,\n            providerId,\n            _tokenResponse: response,\n            operationType\n        });\n    }\n}\nfunction providerIdForResponse(response) {\n    if (response.providerId) {\n        return response.providerId;\n    }\n    if ('phoneNumber' in response) {\n        return \"phone\" /* ProviderId.PHONE */;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nasync function signInAnonymously(auth) {\n    var _a;\n    if (_isFirebaseServerApp(auth.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    const authInternal = _castAuth(auth);\n    await authInternal._initializationPromise;\n    if ((_a = authInternal.currentUser) === null || _a === void 0 ? void 0 : _a.isAnonymous) {\n        // If an anonymous user is already signed in, no need to sign them in again.\n        return new UserCredentialImpl({\n            user: authInternal.currentUser,\n            providerId: null,\n            operationType: \"signIn\" /* OperationType.SIGN_IN */\n        });\n    }\n    const response = await signUp(authInternal, {\n        returnSecureToken: true\n    });\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response, true);\n    await authInternal._updateCurrentUser(userCredential.user);\n    return userCredential;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MultiFactorError extends FirebaseError {\n    constructor(auth, error, operationType, user) {\n        var _a;\n        super(error.code, error.message);\n        this.operationType = operationType;\n        this.user = user;\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, MultiFactorError.prototype);\n        this.customData = {\n            appName: auth.name,\n            tenantId: (_a = auth.tenantId) !== null && _a !== void 0 ? _a : undefined,\n            _serverResponse: error.customData._serverResponse,\n            operationType\n        };\n    }\n    static _fromErrorAndOperation(auth, error, operationType, user) {\n        return new MultiFactorError(auth, error, operationType, user);\n    }\n}\nfunction _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user) {\n    const idTokenProvider = operationType === \"reauthenticate\" /* OperationType.REAUTHENTICATE */\n        ? credential._getReauthenticationResolver(auth)\n        : credential._getIdTokenResponse(auth);\n    return idTokenProvider.catch(error => {\n        if (error.code === `auth/${\"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */}`) {\n            throw MultiFactorError._fromErrorAndOperation(auth, error, operationType, user);\n        }\n        throw error;\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Takes a set of UserInfo provider data and converts it to a set of names\n */\nfunction providerDataAsNames(providerData) {\n    return new Set(providerData\n        .map(({ providerId }) => providerId)\n        .filter(pid => !!pid));\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nasync function unlink(user, providerId) {\n    const userInternal = getModularInstance(user);\n    await _assertLinkedStatus(true, userInternal, providerId);\n    const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n        idToken: await userInternal.getIdToken(),\n        deleteProvider: [providerId]\n    });\n    const providersLeft = providerDataAsNames(providerUserInfo || []);\n    userInternal.providerData = userInternal.providerData.filter(pd => providersLeft.has(pd.providerId));\n    if (!providersLeft.has(\"phone\" /* ProviderId.PHONE */)) {\n        userInternal.phoneNumber = null;\n    }\n    await userInternal.auth._persistUserIfCurrent(userInternal);\n    return userInternal;\n}\nasync function _link(user, credential, bypassAuthState = false) {\n    const response = await _logoutIfInvalidated(user, credential._linkToIdToken(user.auth, await user.getIdToken()), bypassAuthState);\n    return UserCredentialImpl._forOperation(user, \"link\" /* OperationType.LINK */, response);\n}\nasync function _assertLinkedStatus(expected, user, provider) {\n    await _reloadWithoutSaving(user);\n    const providerIds = providerDataAsNames(user.providerData);\n    const code = expected === false\n        ? \"provider-already-linked\" /* AuthErrorCode.PROVIDER_ALREADY_LINKED */\n        : \"no-such-provider\" /* AuthErrorCode.NO_SUCH_PROVIDER */;\n    _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function _reauthenticate(user, credential, bypassAuthState = false) {\n    const { auth } = user;\n    if (_isFirebaseServerApp(auth.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    const operationType = \"reauthenticate\" /* OperationType.REAUTHENTICATE */;\n    try {\n        const response = await _logoutIfInvalidated(user, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user), bypassAuthState);\n        _assert(response.idToken, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        const parsed = _parseToken(response.idToken);\n        _assert(parsed, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        const { sub: localId } = parsed;\n        _assert(user.uid === localId, auth, \"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */);\n        return UserCredentialImpl._forOperation(user, operationType, response);\n    }\n    catch (e) {\n        // Convert user deleted error into user mismatch\n        if ((e === null || e === void 0 ? void 0 : e.code) === `auth/${\"user-not-found\" /* AuthErrorCode.USER_DELETED */}`) {\n            _fail(auth, \"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */);\n        }\n        throw e;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function _signInWithCredential(auth, credential, bypassAuthState = false) {\n    if (_isFirebaseServerApp(auth.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    const operationType = \"signIn\" /* OperationType.SIGN_IN */;\n    const response = await _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential);\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, operationType, response);\n    if (!bypassAuthState) {\n        await auth._updateCurrentUser(userCredential.user);\n    }\n    return userCredential;\n}\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nasync function signInWithCredential(auth, credential) {\n    return _signInWithCredential(_castAuth(auth), credential);\n}\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nasync function linkWithCredential(user, credential) {\n    const userInternal = getModularInstance(user);\n    await _assertLinkedStatus(false, userInternal, credential.providerId);\n    return _link(userInternal, credential);\n}\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\n * or a `TOKEN_EXPIRED` error.\n *\n * This method is not supported on any {@link User} signed in by {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nasync function reauthenticateWithCredential(user, credential) {\n    return _reauthenticate(getModularInstance(user), credential);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function signInWithCustomToken$1(auth, request) {\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithCustomToken\" /* Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Asynchronously signs in using a custom token.\n *\n * @remarks\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\n * be generated by an auth backend using the\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\n *\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param customToken - The custom token to sign in with.\n *\n * @public\n */\nasync function signInWithCustomToken(auth, customToken) {\n    if (_isFirebaseServerApp(auth.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    const authInternal = _castAuth(auth);\n    const response = await signInWithCustomToken$1(authInternal, {\n        token: customToken,\n        returnSecureToken: true\n    });\n    const cred = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response);\n    await authInternal._updateCurrentUser(cred.user);\n    return cred;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MultiFactorInfoImpl {\n    constructor(factorId, response) {\n        this.factorId = factorId;\n        this.uid = response.mfaEnrollmentId;\n        this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\n        this.displayName = response.displayName;\n    }\n    static _fromServerResponse(auth, enrollment) {\n        if ('phoneInfo' in enrollment) {\n            return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n        }\n        else if ('totpInfo' in enrollment) {\n            return TotpMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n        }\n        return _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    }\n}\nclass PhoneMultiFactorInfoImpl extends MultiFactorInfoImpl {\n    constructor(response) {\n        super(\"phone\" /* FactorId.PHONE */, response);\n        this.phoneNumber = response.phoneInfo;\n    }\n    static _fromServerResponse(_auth, enrollment) {\n        return new PhoneMultiFactorInfoImpl(enrollment);\n    }\n}\nclass TotpMultiFactorInfoImpl extends MultiFactorInfoImpl {\n    constructor(response) {\n        super(\"totp\" /* FactorId.TOTP */, response);\n    }\n    static _fromServerResponse(_auth, enrollment) {\n        return new TotpMultiFactorInfoImpl(enrollment);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction _setActionCodeSettingsOnRequest(auth, request, actionCodeSettings) {\n    var _a;\n    _assert(((_a = actionCodeSettings.url) === null || _a === void 0 ? void 0 : _a.length) > 0, auth, \"invalid-continue-uri\" /* AuthErrorCode.INVALID_CONTINUE_URI */);\n    _assert(typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\n        actionCodeSettings.dynamicLinkDomain.length > 0, auth, \"invalid-dynamic-link-domain\" /* AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN */);\n    _assert(typeof actionCodeSettings.linkDomain === 'undefined' ||\n        actionCodeSettings.linkDomain.length > 0, auth, \"invalid-hosting-link-domain\" /* AuthErrorCode.INVALID_HOSTING_LINK_DOMAIN */);\n    request.continueUrl = actionCodeSettings.url;\n    request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n    request.linkDomain = actionCodeSettings.linkDomain;\n    request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\n    if (actionCodeSettings.iOS) {\n        _assert(actionCodeSettings.iOS.bundleId.length > 0, auth, \"missing-ios-bundle-id\" /* AuthErrorCode.MISSING_IOS_BUNDLE_ID */);\n        request.iOSBundleId = actionCodeSettings.iOS.bundleId;\n    }\n    if (actionCodeSettings.android) {\n        _assert(actionCodeSettings.android.packageName.length > 0, auth, \"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */);\n        request.androidInstallApp = actionCodeSettings.android.installApp;\n        request.androidMinimumVersionCode =\n            actionCodeSettings.android.minimumVersion;\n        request.androidPackageName = actionCodeSettings.android.packageName;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Updates the password policy cached in the {@link Auth} instance if a policy is already\n * cached for the project or tenant.\n *\n * @remarks\n * We only fetch the password policy if the password did not meet policy requirements and\n * there is an existing policy cached. A developer must call validatePassword at least\n * once for the cache to be automatically updated.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @private\n */\nasync function recachePasswordPolicy(auth) {\n    const authInternal = _castAuth(auth);\n    if (authInternal._getPasswordPolicyInternal()) {\n        await authInternal._updatePasswordPolicy();\n    }\n}\n/**\n * Sends a password reset email to the given email address. This method does not throw an error when\n * there's no user account with the given email address and\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled.\n *\n * @remarks\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\n * the email sent to the user, along with the new password specified by the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain code from user.\n * await confirmPasswordReset('user@example.com', code);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nasync function sendPasswordResetEmail(auth, email, actionCodeSettings) {\n    const authInternal = _castAuth(auth);\n    const request = {\n        requestType: \"PASSWORD_RESET\" /* ActionCodeOperation.PASSWORD_RESET */,\n        email,\n        clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n    };\n    if (actionCodeSettings) {\n        _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n    }\n    await handleRecaptchaFlow(authInternal, request, \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */, sendPasswordResetEmail$1, \"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaAuthProvider.EMAIL_PASSWORD_PROVIDER */);\n}\n/**\n * Completes the password reset process, given a confirmation code and new password.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A confirmation code sent to the user.\n * @param newPassword - The new password.\n *\n * @public\n */\nasync function confirmPasswordReset(auth, oobCode, newPassword) {\n    await resetPassword(getModularInstance(auth), {\n        oobCode,\n        newPassword\n    })\n        .catch(async (error) => {\n        if (error.code ===\n            `auth/${\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */}`) {\n            void recachePasswordPolicy(auth);\n        }\n        throw error;\n    });\n    // Do not return the email.\n}\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nasync function applyActionCode(auth, oobCode) {\n    await applyActionCode$1(getModularInstance(auth), { oobCode });\n}\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @returns metadata about the code.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nasync function checkActionCode(auth, oobCode) {\n    const authModular = getModularInstance(auth);\n    const response = await resetPassword(authModular, { oobCode });\n    // Email could be empty only if the request type is EMAIL_SIGNIN or\n    // VERIFY_AND_CHANGE_EMAIL.\n    // New email should not be empty if the request type is\n    // VERIFY_AND_CHANGE_EMAIL.\n    // Multi-factor info could not be empty if the request type is\n    // REVERT_SECOND_FACTOR_ADDITION.\n    const operation = response.requestType;\n    _assert(operation, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    switch (operation) {\n        case \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */:\n            break;\n        case \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */:\n            _assert(response.newEmail, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            break;\n        case \"REVERT_SECOND_FACTOR_ADDITION\" /* ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION */:\n            _assert(response.mfaInfo, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        // fall through\n        default:\n            _assert(response.email, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n    }\n    // The multi-factor info for revert second factor addition\n    let multiFactorInfo = null;\n    if (response.mfaInfo) {\n        multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(_castAuth(authModular), response.mfaInfo);\n    }\n    return {\n        data: {\n            email: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */\n                ? response.newEmail\n                : response.email) || null,\n            previousEmail: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */\n                ? response.email\n                : response.newEmail) || null,\n            multiFactorInfo\n        },\n        operation\n    };\n}\n/**\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\n *\n * @returns the user's email address if valid.\n *\n * @param auth - The {@link Auth} instance.\n * @param code - A verification code sent to the user.\n *\n * @public\n */\nasync function verifyPasswordResetCode(auth, code) {\n    const { data } = await checkActionCode(getModularInstance(auth), code);\n    // Email should always be present since a code was sent to it\n    return data.email;\n}\n/**\n * Creates a new user account associated with the specified email address and password.\n *\n * @remarks\n * On successful creation of the user account, this user will also be signed in to your application.\n *\n * User account creation can fail if the account already exists or the password is invalid.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The email address acts as a unique identifier for the user and enables an email-based\n * password reset. This function will create a new user account and set the initial user password.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param password - The user's chosen password.\n *\n * @public\n */\nasync function createUserWithEmailAndPassword(auth, email, password) {\n    if (_isFirebaseServerApp(auth.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    const authInternal = _castAuth(auth);\n    const request = {\n        returnSecureToken: true,\n        email,\n        password,\n        clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n    };\n    const signUpResponse = handleRecaptchaFlow(authInternal, request, \"signUpPassword\" /* RecaptchaActionName.SIGN_UP_PASSWORD */, signUp, \"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaAuthProvider.EMAIL_PASSWORD_PROVIDER */);\n    const response = await signUpResponse.catch(error => {\n        if (error.code === `auth/${\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */}`) {\n            void recachePasswordPolicy(auth);\n        }\n        throw error;\n    });\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response);\n    await authInternal._updateCurrentUser(userCredential.user);\n    return userCredential;\n}\n/**\n * Asynchronously signs in using an email and password.\n *\n * @remarks\n * Fails with an error if the email address and password do not match. When\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled, this method fails with \"auth/invalid-credential\" in case of an invalid\n * email/password.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The user's password is NOT the password used to access the user's email account. The\n * email address serves as a unique identifier for the user, and the password is used to access\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\n *\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The users email address.\n * @param password - The users password.\n *\n * @public\n */\nfunction signInWithEmailAndPassword(auth, email, password) {\n    if (_isFirebaseServerApp(auth.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    return signInWithCredential(getModularInstance(auth), EmailAuthProvider.credential(email, password)).catch(async (error) => {\n        if (error.code === `auth/${\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */}`) {\n            void recachePasswordPolicy(auth);\n        }\n        throw error;\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sends a sign-in email link to the user with the specified email.\n *\n * @remarks\n * The sign-in operation has to always be completed in the app unlike other out of band email\n * actions (password reset and email verifications). This is because, at the end of the flow,\n * the user is expected to be signed in and their Auth state persisted within the app.\n *\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\n * address and the email link supplied in the email sent to the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param authInternal - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nasync function sendSignInLinkToEmail(auth, email, actionCodeSettings) {\n    const authInternal = _castAuth(auth);\n    const request = {\n        requestType: \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */,\n        email,\n        clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\n    };\n    function setActionCodeSettings(request, actionCodeSettings) {\n        _assert(actionCodeSettings.handleCodeInApp, authInternal, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        if (actionCodeSettings) {\n            _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n        }\n    }\n    setActionCodeSettings(request, actionCodeSettings);\n    await handleRecaptchaFlow(authInternal, request, \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */, sendSignInLinkToEmail$1, \"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaAuthProvider.EMAIL_PASSWORD_PROVIDER */);\n}\n/**\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\n *\n * @param auth - The {@link Auth} instance.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nfunction isSignInWithEmailLink(auth, emailLink) {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    return (actionCodeUrl === null || actionCodeUrl === void 0 ? void 0 : actionCodeUrl.operation) === \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */;\n}\n/**\n * Asynchronously signs in using an email and sign-in email link.\n *\n * @remarks\n * If no link is passed, the link is inferred from the current URL.\n *\n * Fails with an error if the email address is invalid or OTP in email link expires.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nasync function signInWithEmailLink(auth, email, emailLink) {\n    if (_isFirebaseServerApp(auth.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(auth));\n    }\n    const authModular = getModularInstance(auth);\n    const credential = EmailAuthProvider.credentialWithLink(email, emailLink || _getCurrentUrl());\n    // Check if the tenant ID in the email link matches the tenant ID on Auth\n    // instance.\n    _assert(credential._tenantId === (authModular.tenantId || null), authModular, \"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */);\n    return signInWithCredential(authModular, credential);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function createAuthUri(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:createAuthUri\" /* Endpoint.CREATE_AUTH_URI */, _addTidIfNecessary(auth, request));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Gets the list of possible sign in methods for the given email address. This method returns an\n * empty list when\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled, irrespective of the number of authentication methods available for the given email.\n *\n * @remarks\n * This is useful to differentiate methods of sign-in for the same provider, eg.\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\n * {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n *\n * Deprecated. Migrating off of this method is recommended as a security best-practice.\n * Learn more in the Identity Platform documentation for\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}.\n * @public\n */\nasync function fetchSignInMethodsForEmail(auth, email) {\n    // createAuthUri returns an error if continue URI is not http or https.\n    // For environments like Cordova, Chrome extensions, native frameworks, file\n    // systems, etc, use http://localhost as continue URL.\n    const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\n    const request = {\n        identifier: email,\n        continueUri\n    };\n    const { signinMethods } = await createAuthUri(getModularInstance(auth), request);\n    return signinMethods || [];\n}\n/**\n * Sends a verification email to a user.\n *\n * @remarks\n * The verification process is completed by calling {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendEmailVerification(user, actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nasync function sendEmailVerification(user, actionCodeSettings) {\n    const userInternal = getModularInstance(user);\n    const idToken = await user.getIdToken();\n    const request = {\n        requestType: \"VERIFY_EMAIL\" /* ActionCodeOperation.VERIFY_EMAIL */,\n        idToken\n    };\n    if (actionCodeSettings) {\n        _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\n    }\n    const { email } = await sendEmailVerification$1(userInternal.auth, request);\n    if (email !== user.email) {\n        await user.reload();\n    }\n}\n/**\n * Sends a verification email to a new email address.\n *\n * @remarks\n * The user's email will be updated to the new one after being verified.\n *\n * If you have a custom email action handler, you can complete the verification process by calling\n * {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param newEmail - The new email address to be verified before update.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nasync function verifyBeforeUpdateEmail(user, newEmail, actionCodeSettings) {\n    const userInternal = getModularInstance(user);\n    const idToken = await user.getIdToken();\n    const request = {\n        requestType: \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */,\n        idToken,\n        newEmail\n    };\n    if (actionCodeSettings) {\n        _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\n    }\n    const { email } = await verifyAndChangeEmail(userInternal.auth, request);\n    if (email !== user.email) {\n        // If the local copy of the email on user is outdated, reload the\n        // user.\n        await user.reload();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function updateProfile$1(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Updates a user's profile data.\n *\n * @param user - The user.\n * @param profile - The profile's `displayName` and `photoURL` to update.\n *\n * @public\n */\nasync function updateProfile(user, { displayName, photoURL: photoUrl }) {\n    if (displayName === undefined && photoUrl === undefined) {\n        return;\n    }\n    const userInternal = getModularInstance(user);\n    const idToken = await userInternal.getIdToken();\n    const profileRequest = {\n        idToken,\n        displayName,\n        photoUrl,\n        returnSecureToken: true\n    };\n    const response = await _logoutIfInvalidated(userInternal, updateProfile$1(userInternal.auth, profileRequest));\n    userInternal.displayName = response.displayName || null;\n    userInternal.photoURL = response.photoUrl || null;\n    // Update the password provider as well\n    const passwordProvider = userInternal.providerData.find(({ providerId }) => providerId === \"password\" /* ProviderId.PASSWORD */);\n    if (passwordProvider) {\n        passwordProvider.displayName = userInternal.displayName;\n        passwordProvider.photoURL = userInternal.photoURL;\n    }\n    await userInternal._updateTokensIfNecessary(response);\n}\n/**\n * Updates the user's email address.\n *\n * @remarks\n * An email will be sent to the original email address (if it was set) that allows to revoke the\n * email address change, in order to protect them from account hijacking.\n *\n * This method is not supported on any {@link User} signed in by {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newEmail - The new email address.\n *\n * Throws \"auth/operation-not-allowed\" error when\n * {@link https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection | Email Enumeration Protection}\n * is enabled.\n * Deprecated - Use {@link verifyBeforeUpdateEmail} instead.\n *\n * @public\n */\nfunction updateEmail(user, newEmail) {\n    const userInternal = getModularInstance(user);\n    if (_isFirebaseServerApp(userInternal.auth.app)) {\n        return Promise.reject(_serverAppCurrentUserOperationNotSupportedError(userInternal.auth));\n    }\n    return updateEmailOrPassword(userInternal, newEmail, null);\n}\n/**\n * Updates the user's password.\n *\n * @remarks\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newPassword - The new password.\n *\n * @public\n */\nfunction updatePassword(user, newPassword) {\n    return updateEmailOrPassword(getModularInstance(user), null, newPassword);\n}\nasync function updateEmailOrPassword(user, email, password) {\n    const { auth } = user;\n    const idToken = await user.getIdToken();\n    const request = {\n        idToken,\n        returnSecureToken: true\n    };\n    if (email) {\n        request.email = email;\n    }\n    if (password) {\n        request.password = password;\n    }\n    const response = await _logoutIfInvalidated(user, updateEmailPassword(auth, request));\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Parse the `AdditionalUserInfo` from the ID token response.\n *\n */\nfunction _fromIdTokenResponse(idTokenResponse) {\n    var _a, _b;\n    if (!idTokenResponse) {\n        return null;\n    }\n    const { providerId } = idTokenResponse;\n    const profile = idTokenResponse.rawUserInfo\n        ? JSON.parse(idTokenResponse.rawUserInfo)\n        : {};\n    const isNewUser = idTokenResponse.isNewUser ||\n        idTokenResponse.kind === \"identitytoolkit#SignupNewUserResponse\" /* IdTokenResponseKind.SignupNewUser */;\n    if (!providerId && (idTokenResponse === null || idTokenResponse === void 0 ? void 0 : idTokenResponse.idToken)) {\n        const signInProvider = (_b = (_a = _parseToken(idTokenResponse.idToken)) === null || _a === void 0 ? void 0 : _a.firebase) === null || _b === void 0 ? void 0 : _b['sign_in_provider'];\n        if (signInProvider) {\n            const filteredProviderId = signInProvider !== \"anonymous\" /* ProviderId.ANONYMOUS */ &&\n                signInProvider !== \"custom\" /* ProviderId.CUSTOM */\n                ? signInProvider\n                : null;\n            // Uses generic class in accordance with the legacy SDK.\n            return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\n        }\n    }\n    if (!providerId) {\n        return null;\n    }\n    switch (providerId) {\n        case \"facebook.com\" /* ProviderId.FACEBOOK */:\n            return new FacebookAdditionalUserInfo(isNewUser, profile);\n        case \"github.com\" /* ProviderId.GITHUB */:\n            return new GithubAdditionalUserInfo(isNewUser, profile);\n        case \"google.com\" /* ProviderId.GOOGLE */:\n            return new GoogleAdditionalUserInfo(isNewUser, profile);\n        case \"twitter.com\" /* ProviderId.TWITTER */:\n            return new TwitterAdditionalUserInfo(isNewUser, profile, idTokenResponse.screenName || null);\n        case \"custom\" /* ProviderId.CUSTOM */:\n        case \"anonymous\" /* ProviderId.ANONYMOUS */:\n            return new GenericAdditionalUserInfo(isNewUser, null);\n        default:\n            return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\n    }\n}\nclass GenericAdditionalUserInfo {\n    constructor(isNewUser, providerId, profile = {}) {\n        this.isNewUser = isNewUser;\n        this.providerId = providerId;\n        this.profile = profile;\n    }\n}\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\n    constructor(isNewUser, providerId, profile, username) {\n        super(isNewUser, providerId, profile);\n        this.username = username;\n    }\n}\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\n    constructor(isNewUser, profile) {\n        super(isNewUser, \"facebook.com\" /* ProviderId.FACEBOOK */, profile);\n    }\n}\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n    constructor(isNewUser, profile) {\n        super(isNewUser, \"github.com\" /* ProviderId.GITHUB */, profile, typeof (profile === null || profile === void 0 ? void 0 : profile.login) === 'string' ? profile === null || profile === void 0 ? void 0 : profile.login : null);\n    }\n}\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\n    constructor(isNewUser, profile) {\n        super(isNewUser, \"google.com\" /* ProviderId.GOOGLE */, profile);\n    }\n}\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n    constructor(isNewUser, profile, screenName) {\n        super(isNewUser, \"twitter.com\" /* ProviderId.TWITTER */, profile, screenName);\n    }\n}\n/**\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\n *\n * @param userCredential - The user credential.\n *\n * @public\n */\nfunction getAdditionalUserInfo(userCredential) {\n    const { user, _tokenResponse } = userCredential;\n    if (user.isAnonymous && !_tokenResponse) {\n        // Handle the special case where signInAnonymously() gets called twice.\n        // No network call is made so there's nothing to actually fill this in\n        return {\n            providerId: null,\n            isNewUser: false,\n            profile: null\n        };\n    }\n    return _fromIdTokenResponse(_tokenResponse);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nfunction setPersistence(auth, persistence) {\n    return getModularInstance(auth).setPersistence(persistence);\n}\n/**\n * Loads the reCAPTCHA configuration into the `Auth` instance.\n *\n * @remarks\n * This will load the reCAPTCHA config, which indicates whether the reCAPTCHA\n * verification flow should be triggered for each auth provider, into the\n * current Auth session.\n *\n * If initializeRecaptchaConfig() is not invoked, the auth flow will always start\n * without reCAPTCHA verification. If the provider is configured to require reCAPTCHA\n * verification, the SDK will transparently load the reCAPTCHA config and restart the\n * auth flows.\n *\n * Thus, by calling this optional method, you will reduce the latency of future auth flows.\n * Loading the reCAPTCHA config early will also enhance the signal collected by reCAPTCHA.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * initializeRecaptchaConfig(auth);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nfunction initializeRecaptchaConfig(auth) {\n    return _initializeRecaptchaConfig(auth);\n}\n/**\n * Validates the password against the password policy configured for the project or tenant.\n *\n * @remarks\n * If no tenant ID is set on the `Auth` instance, then this method will use the password\n * policy configured for the project. Otherwise, this method will use the policy configured\n * for the tenant. If a password policy has not been configured, then the default policy\n * configured for all projects will be used.\n *\n * If an auth flow fails because a submitted password does not meet the password policy\n * requirements and this method has previously been called, then this method will use the\n * most recent policy available when called again.\n *\n * @example\n * ```javascript\n * validatePassword(auth, 'some-password');\n * ```\n *\n * @param auth The {@link Auth} instance.\n * @param password The password to validate.\n *\n * @public\n */\nasync function validatePassword(auth, password) {\n    const authInternal = _castAuth(auth);\n    return authInternal.validatePassword(password);\n}\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n * This will not be triggered automatically upon ID token expiration. Use {@link User.getIdToken} to refresh the ID token.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nfunction onIdTokenChanged(auth, nextOrObserver, error, completed) {\n    return getModularInstance(auth).onIdTokenChanged(nextOrObserver, error, completed);\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nfunction beforeAuthStateChanged(auth, callback, onAbort) {\n    return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nfunction onAuthStateChanged(auth, nextOrObserver, error, completed) {\n    return getModularInstance(auth).onAuthStateChanged(nextOrObserver, error, completed);\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nfunction useDeviceLanguage(auth) {\n    getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nfunction updateCurrentUser(auth, user) {\n    return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @remarks\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nfunction signOut(auth) {\n    return getModularInstance(auth).signOut();\n}\n/**\n * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n *\n * @param auth - The {@link Auth} instance.\n * @param token - The Apple OAuth access token.\n *\n * @public\n */\nfunction revokeAccessToken(auth, token) {\n    const authInternal = _castAuth(auth);\n    return authInternal.revokeAccessToken(token);\n}\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nasync function deleteUser(user) {\n    return getModularInstance(user).delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MultiFactorSessionImpl {\n    constructor(type, credential, user) {\n        this.type = type;\n        this.credential = credential;\n        this.user = user;\n    }\n    static _fromIdtoken(idToken, user) {\n        return new MultiFactorSessionImpl(\"enroll\" /* MultiFactorSessionType.ENROLL */, idToken, user);\n    }\n    static _fromMfaPendingCredential(mfaPendingCredential) {\n        return new MultiFactorSessionImpl(\"signin\" /* MultiFactorSessionType.SIGN_IN */, mfaPendingCredential);\n    }\n    toJSON() {\n        const key = this.type === \"enroll\" /* MultiFactorSessionType.ENROLL */\n            ? 'idToken'\n            : 'pendingCredential';\n        return {\n            multiFactorSession: {\n                [key]: this.credential\n            }\n        };\n    }\n    static fromJSON(obj) {\n        var _a, _b;\n        if (obj === null || obj === void 0 ? void 0 : obj.multiFactorSession) {\n            if ((_a = obj.multiFactorSession) === null || _a === void 0 ? void 0 : _a.pendingCredential) {\n                return MultiFactorSessionImpl._fromMfaPendingCredential(obj.multiFactorSession.pendingCredential);\n            }\n            else if ((_b = obj.multiFactorSession) === null || _b === void 0 ? void 0 : _b.idToken) {\n                return MultiFactorSessionImpl._fromIdtoken(obj.multiFactorSession.idToken);\n            }\n        }\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MultiFactorResolverImpl {\n    constructor(session, hints, signInResolver) {\n        this.session = session;\n        this.hints = hints;\n        this.signInResolver = signInResolver;\n    }\n    /** @internal */\n    static _fromError(authExtern, error) {\n        const auth = _castAuth(authExtern);\n        const serverResponse = error.customData._serverResponse;\n        const hints = (serverResponse.mfaInfo || []).map(enrollment => MultiFactorInfoImpl._fromServerResponse(auth, enrollment));\n        _assert(serverResponse.mfaPendingCredential, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        const session = MultiFactorSessionImpl._fromMfaPendingCredential(serverResponse.mfaPendingCredential);\n        return new MultiFactorResolverImpl(session, hints, async (assertion) => {\n            const mfaResponse = await assertion._process(auth, session);\n            // Clear out the unneeded fields from the old login response\n            delete serverResponse.mfaInfo;\n            delete serverResponse.mfaPendingCredential;\n            // Use in the new token & refresh token in the old response\n            const idTokenResponse = Object.assign(Object.assign({}, serverResponse), { idToken: mfaResponse.idToken, refreshToken: mfaResponse.refreshToken });\n            // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\n            switch (error.operationType) {\n                case \"signIn\" /* OperationType.SIGN_IN */:\n                    const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, error.operationType, idTokenResponse);\n                    await auth._updateCurrentUser(userCredential.user);\n                    return userCredential;\n                case \"reauthenticate\" /* OperationType.REAUTHENTICATE */:\n                    _assert(error.user, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n                    return UserCredentialImpl._forOperation(error.user, error.operationType, idTokenResponse);\n                default:\n                    _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n            }\n        });\n    }\n    async resolveSignIn(assertionExtern) {\n        const assertion = assertionExtern;\n        return this.signInResolver(assertion);\n    }\n}\n/**\n * Provides a {@link MultiFactorResolver} suitable for completion of a\n * multi-factor flow.\n *\n * @param auth - The {@link Auth} instance.\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\n * reauthentication operation.\n *\n * @public\n */\nfunction getMultiFactorResolver(auth, error) {\n    var _a;\n    const authModular = getModularInstance(auth);\n    const errorInternal = error;\n    _assert(error.customData.operationType, authModular, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n    _assert((_a = errorInternal.customData._serverResponse) === null || _a === void 0 ? void 0 : _a.mfaPendingCredential, authModular, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n    return MultiFactorResolverImpl._fromError(authModular, errorInternal);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction startEnrollTotpMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:start\" /* Endpoint.START_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\n}\nfunction finalizeEnrollTotpMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:finalize\" /* Endpoint.FINALIZE_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\n}\nfunction withdrawMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:withdraw\" /* Endpoint.WITHDRAW_MFA */, _addTidIfNecessary(auth, request));\n}\n\nclass MultiFactorUserImpl {\n    constructor(user) {\n        this.user = user;\n        this.enrolledFactors = [];\n        user._onReload(userInfo => {\n            if (userInfo.mfaInfo) {\n                this.enrolledFactors = userInfo.mfaInfo.map(enrollment => MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment));\n            }\n        });\n    }\n    static _fromUser(user) {\n        return new MultiFactorUserImpl(user);\n    }\n    async getSession() {\n        return MultiFactorSessionImpl._fromIdtoken(await this.user.getIdToken(), this.user);\n    }\n    async enroll(assertionExtern, displayName) {\n        const assertion = assertionExtern;\n        const session = (await this.getSession());\n        const finalizeMfaResponse = await _logoutIfInvalidated(this.user, assertion._process(this.user.auth, session, displayName));\n        // New tokens will be issued after enrollment of the new second factors.\n        // They need to be updated on the user.\n        await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n        // The user needs to be reloaded to get the new multi-factor information\n        // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n        // will be updated.\n        return this.user.reload();\n    }\n    async unenroll(infoOrUid) {\n        const mfaEnrollmentId = typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n        const idToken = await this.user.getIdToken();\n        try {\n            const idTokenResponse = await _logoutIfInvalidated(this.user, withdrawMfa(this.user.auth, {\n                idToken,\n                mfaEnrollmentId\n            }));\n            // Remove the second factor from the user's list.\n            this.enrolledFactors = this.enrolledFactors.filter(({ uid }) => uid !== mfaEnrollmentId);\n            // Depending on whether the backend decided to revoke the user's session,\n            // the tokenResponse may be empty. If the tokens were not updated (and they\n            // are now invalid), reloading the user will discover this and invalidate\n            // the user's state accordingly.\n            await this.user._updateTokensIfNecessary(idTokenResponse);\n            await this.user.reload();\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n}\nconst multiFactorUserCache = new WeakMap();\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nfunction multiFactor(user) {\n    const userModular = getModularInstance(user);\n    if (!multiFactorUserCache.has(userModular)) {\n        multiFactorUserCache.set(userModular, MultiFactorUserImpl._fromUser(userModular));\n    }\n    return multiFactorUserCache.get(userModular);\n}\n\nvar name = \"@firebase/auth\";\nvar version = \"1.10.8\";\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass AuthInterop {\n    constructor(auth) {\n        this.auth = auth;\n        this.internalListeners = new Map();\n    }\n    getUid() {\n        var _a;\n        this.assertAuthConfigured();\n        return ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.uid) || null;\n    }\n    async getToken(forceRefresh) {\n        this.assertAuthConfigured();\n        await this.auth._initializationPromise;\n        if (!this.auth.currentUser) {\n            return null;\n        }\n        const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n        return { accessToken };\n    }\n    addAuthTokenListener(listener) {\n        this.assertAuthConfigured();\n        if (this.internalListeners.has(listener)) {\n            return;\n        }\n        const unsubscribe = this.auth.onIdTokenChanged(user => {\n            listener((user === null || user === void 0 ? void 0 : user.stsTokenManager.accessToken) || null);\n        });\n        this.internalListeners.set(listener, unsubscribe);\n        this.updateProactiveRefresh();\n    }\n    removeAuthTokenListener(listener) {\n        this.assertAuthConfigured();\n        const unsubscribe = this.internalListeners.get(listener);\n        if (!unsubscribe) {\n            return;\n        }\n        this.internalListeners.delete(listener);\n        unsubscribe();\n        this.updateProactiveRefresh();\n    }\n    assertAuthConfigured() {\n        _assert(this.auth._initializationPromise, \"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */);\n    }\n    updateProactiveRefresh() {\n        if (this.internalListeners.size > 0) {\n            this.auth._startProactiveRefresh();\n        }\n        else {\n            this.auth._stopProactiveRefresh();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getVersionForPlatform(clientPlatform) {\n    switch (clientPlatform) {\n        case \"Node\" /* ClientPlatform.NODE */:\n            return 'node';\n        case \"ReactNative\" /* ClientPlatform.REACT_NATIVE */:\n            return 'rn';\n        case \"Worker\" /* ClientPlatform.WORKER */:\n            return 'webworker';\n        case \"Cordova\" /* ClientPlatform.CORDOVA */:\n            return 'cordova';\n        case \"WebExtension\" /* ClientPlatform.WEB_EXTENSION */:\n            return 'web-extension';\n        default:\n            return undefined;\n    }\n}\n/** @internal */\nfunction registerAuth(clientPlatform) {\n    _registerComponent(new Component(\"auth\" /* _ComponentName.AUTH */, (container, { options: deps }) => {\n        const app = container.getProvider('app').getImmediate();\n        const heartbeatServiceProvider = container.getProvider('heartbeat');\n        const appCheckServiceProvider = container.getProvider('app-check-internal');\n        const { apiKey, authDomain } = app.options;\n        _assert(apiKey && !apiKey.includes(':'), \"invalid-api-key\" /* AuthErrorCode.INVALID_API_KEY */, { appName: app.name });\n        const config = {\n            apiKey,\n            authDomain,\n            clientPlatform,\n            apiHost: \"identitytoolkit.googleapis.com\" /* DefaultConfig.API_HOST */,\n            tokenApiHost: \"securetoken.googleapis.com\" /* DefaultConfig.TOKEN_API_HOST */,\n            apiScheme: \"https\" /* DefaultConfig.API_SCHEME */,\n            sdkClientVersion: _getClientVersion(clientPlatform)\n        };\n        const authInstance = new AuthImpl(app, heartbeatServiceProvider, appCheckServiceProvider, config);\n        _initializeAuthInstance(authInstance, deps);\n        return authInstance;\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\n        /**\n         * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n         * For why we do this, See go/firebase-next-auth-init\n         */\n        .setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */)\n        /**\n         * Because all firebase products that depend on auth depend on auth-internal directly,\n         * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n         */\n        .setInstanceCreatedCallback((container, _instanceIdentifier, _instance) => {\n        const authInternalProvider = container.getProvider(\"auth-internal\" /* _ComponentName.AUTH_INTERNAL */);\n        authInternalProvider.initialize();\n    }));\n    _registerComponent(new Component(\"auth-internal\" /* _ComponentName.AUTH_INTERNAL */, container => {\n        const auth = _castAuth(container.getProvider(\"auth\" /* _ComponentName.AUTH */).getImmediate());\n        return (auth => new AuthInterop(auth))(auth);\n    }, \"PRIVATE\" /* ComponentType.PRIVATE */).setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */));\n    registerVersion(name, version, getVersionForPlatform(clientPlatform));\n    // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n    registerVersion(name, version, 'esm2017');\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Initialize the fetch polyfill, the types are slightly off so just cast and hope for the best\nFetchProvider.initialize(fetch, Headers, Response);\n// First, we set up the various platform-specific features for Node (register\n// the version and declare the Node getAuth function)\nfunction getAuth(app = getApp()) {\n    const provider = _getProvider(app, 'auth');\n    if (provider.isInitialized()) {\n        return provider.getImmediate();\n    }\n    const auth = initializeAuth(app);\n    const authEmulatorHost = getDefaultEmulatorHost('auth');\n    if (authEmulatorHost) {\n        connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n    }\n    return auth;\n}\nregisterAuth(\"Node\" /* ClientPlatform.NODE */);\n// The rest of this file contains no-ops and errors for browser-specific\n// methods. We keep the browser and Node entry points the same, but features\n// that only work in browsers are set to either do nothing (setPersistence) or\n// to reject with an auth/operation-not-supported-in-this-environment error.\n// The below exports are pulled into the main entry point by a rollup alias\n// plugin (overwriting the default browser imports).\n/** auth/operation-not-supported-in-this-environment */\nconst NOT_AVAILABLE_ERROR = _createError(\"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n/** Reject with auth/operation-not-supported-in-this-environment */\nasync function fail() {\n    throw NOT_AVAILABLE_ERROR;\n}\n/**\n * A class which will throw with\n * auth/operation-not-supported-in-this-environment if instantiated\n */\nclass FailClass {\n    constructor() {\n        throw NOT_AVAILABLE_ERROR;\n    }\n}\nconst browserLocalPersistence = inMemoryPersistence;\nconst browserSessionPersistence = inMemoryPersistence;\nconst browserCookiePersistence = inMemoryPersistence;\nconst indexedDBLocalPersistence = inMemoryPersistence;\nconst browserPopupRedirectResolver = NOT_AVAILABLE_ERROR;\nconst PhoneAuthProvider = FailClass;\nconst signInWithPhoneNumber = fail;\nconst linkWithPhoneNumber = fail;\nconst reauthenticateWithPhoneNumber = fail;\nconst updatePhoneNumber = fail;\nconst signInWithPopup = fail;\nconst linkWithPopup = fail;\nconst reauthenticateWithPopup = fail;\nconst signInWithRedirect = fail;\nconst linkWithRedirect = fail;\nconst reauthenticateWithRedirect = fail;\nconst getRedirectResult = fail;\nconst RecaptchaVerifier = FailClass;\nclass PhoneMultiFactorGenerator {\n    static assertion() {\n        throw NOT_AVAILABLE_ERROR;\n    }\n}\n// Set persistence should no-op instead of fail. Changing the prototype will\n// make sure both setPersistence(auth, persistence) and\n// auth.setPersistence(persistence) are covered.\nAuthImpl.prototype.setPersistence = async () => { };\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction finalizeSignInTotpMfa(auth, request) {\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:finalize\" /* Endpoint.FINALIZE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\n}\n\nclass MultiFactorAssertionImpl {\n    constructor(factorId) {\n        this.factorId = factorId;\n    }\n    _process(auth, session, displayName) {\n        switch (session.type) {\n            case \"enroll\" /* MultiFactorSessionType.ENROLL */:\n                return this._finalizeEnroll(auth, session.credential, displayName);\n            case \"signin\" /* MultiFactorSessionType.SIGN_IN */:\n                return this._finalizeSignIn(auth, session.credential);\n            default:\n                return debugFail('unexpected MultiFactorSessionType');\n        }\n    }\n}\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * @public\n */\nclass TotpMultiFactorGenerator {\n    /**\n     * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of\n     * the TOTP (time-based one-time password) second factor.\n     * This assertion is used to complete enrollment in TOTP second factor.\n     *\n     * @param secret A {@link TotpSecret} containing the shared secret key and other TOTP parameters.\n     * @param oneTimePassword One-time password from TOTP App.\n     * @returns A {@link TotpMultiFactorAssertion} which can be used with\n     * {@link MultiFactorUser.enroll}.\n     */\n    static assertionForEnrollment(secret, oneTimePassword) {\n        return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\n    }\n    /**\n     * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of the TOTP second factor.\n     * This assertion is used to complete signIn with TOTP as the second factor.\n     *\n     * @param enrollmentId identifies the enrolled TOTP second factor.\n     * @param oneTimePassword One-time password from TOTP App.\n     * @returns A {@link TotpMultiFactorAssertion} which can be used with\n     * {@link MultiFactorResolver.resolveSignIn}.\n     */\n    static assertionForSignIn(enrollmentId, oneTimePassword) {\n        return TotpMultiFactorAssertionImpl._fromEnrollmentId(enrollmentId, oneTimePassword);\n    }\n    /**\n     * Returns a promise to {@link TotpSecret} which contains the TOTP shared secret key and other parameters.\n     * Creates a TOTP secret as part of enrolling a TOTP second factor.\n     * Used for generating a QR code URL or inputting into a TOTP app.\n     * This method uses the auth instance corresponding to the user in the multiFactorSession.\n     *\n     * @param session The {@link MultiFactorSession} that the user is part of.\n     * @returns A promise to {@link TotpSecret}.\n     */\n    static async generateSecret(session) {\n        var _a;\n        const mfaSession = session;\n        _assert(typeof ((_a = mfaSession.user) === null || _a === void 0 ? void 0 : _a.auth) !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\n        const response = await startEnrollTotpMfa(mfaSession.user.auth, {\n            idToken: mfaSession.credential,\n            totpEnrollmentInfo: {}\n        });\n        return TotpSecret._fromStartTotpMfaEnrollmentResponse(response, mfaSession.user.auth);\n    }\n}\n/**\n * The identifier of the TOTP second factor: `totp`.\n */\nTotpMultiFactorGenerator.FACTOR_ID = \"totp\" /* FactorId.TOTP */;\nclass TotpMultiFactorAssertionImpl extends MultiFactorAssertionImpl {\n    constructor(otp, enrollmentId, secret) {\n        super(\"totp\" /* FactorId.TOTP */);\n        this.otp = otp;\n        this.enrollmentId = enrollmentId;\n        this.secret = secret;\n    }\n    /** @internal */\n    static _fromSecret(secret, otp) {\n        return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\n    }\n    /** @internal */\n    static _fromEnrollmentId(enrollmentId, otp) {\n        return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\n    }\n    /** @internal */\n    async _finalizeEnroll(auth, idToken, displayName) {\n        _assert(typeof this.secret !== 'undefined', auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        return finalizeEnrollTotpMfa(auth, {\n            idToken,\n            displayName,\n            totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\n        });\n    }\n    /** @internal */\n    async _finalizeSignIn(auth, mfaPendingCredential) {\n        _assert(this.enrollmentId !== undefined && this.otp !== undefined, auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\n        const totpVerificationInfo = { verificationCode: this.otp };\n        return finalizeSignInTotpMfa(auth, {\n            mfaPendingCredential,\n            mfaEnrollmentId: this.enrollmentId,\n            totpVerificationInfo\n        });\n    }\n}\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * Stores the shared secret key and other parameters to generate time-based OTPs.\n * Implements methods to retrieve the shared secret key and generate a QR code URL.\n * @public\n */\nclass TotpSecret {\n    // The public members are declared outside the constructor so the docs can be generated.\n    constructor(secretKey, hashingAlgorithm, codeLength, codeIntervalSeconds, enrollmentCompletionDeadline, sessionInfo, auth) {\n        this.sessionInfo = sessionInfo;\n        this.auth = auth;\n        this.secretKey = secretKey;\n        this.hashingAlgorithm = hashingAlgorithm;\n        this.codeLength = codeLength;\n        this.codeIntervalSeconds = codeIntervalSeconds;\n        this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\n    }\n    /** @internal */\n    static _fromStartTotpMfaEnrollmentResponse(response, auth) {\n        return new TotpSecret(response.totpSessionInfo.sharedSecretKey, response.totpSessionInfo.hashingAlgorithm, response.totpSessionInfo.verificationCodeLength, response.totpSessionInfo.periodSec, new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(), response.totpSessionInfo.sessionInfo, auth);\n    }\n    /** @internal */\n    _makeTotpVerificationInfo(otp) {\n        return { sessionInfo: this.sessionInfo, verificationCode: otp };\n    }\n    /**\n     * Returns a QR code URL as described in\n     * https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n     * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.\n     * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.\n     *\n     * @param accountName the name of the account/app along with a user identifier.\n     * @param issuer issuer of the TOTP (likely the app name).\n     * @returns A QR code URL string.\n     */\n    generateQrCodeUrl(accountName, issuer) {\n        var _a;\n        let useDefaults = false;\n        if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\n            useDefaults = true;\n        }\n        if (useDefaults) {\n            if (_isEmptyString(accountName)) {\n                accountName = ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.email) || 'unknownuser';\n            }\n            if (_isEmptyString(issuer)) {\n                issuer = this.auth.name;\n            }\n        }\n        return `otpauth://totp/${issuer}:${accountName}?secret=${this.secretKey}&issuer=${issuer}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`;\n    }\n}\n/** @internal */\nfunction _isEmptyString(input) {\n    return typeof input === 'undefined' || (input === null || input === void 0 ? void 0 : input.length) === 0;\n}\n\nexport { SAMLAuthProvider as $, ActionCodeOperation as A, useDeviceLanguage as B, updateCurrentUser as C, signOut as D, revokeAccessToken as E, FactorId as F, deleteUser as G, debugErrorMap as H, prodErrorMap as I, AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as J, initializeAuth as K, connectAuthEmulator as L, AuthCredential as M, EmailAuthCredential as N, OperationType as O, PhoneAuthProvider as P, OAuthCredential as Q, RecaptchaVerifier as R, SignInMethod as S, TotpMultiFactorGenerator as T, PhoneAuthCredential as U, inMemoryPersistence as V, EmailAuthProvider as W, FacebookAuthProvider as X, GoogleAuthProvider as Y, GithubAuthProvider as Z, OAuthProvider as _, browserCookiePersistence as a, TwitterAuthProvider as a0, signInAnonymously as a1, signInWithCredential as a2, linkWithCredential as a3, reauthenticateWithCredential as a4, signInWithCustomToken as a5, sendPasswordResetEmail as a6, confirmPasswordReset as a7, applyActionCode as a8, checkActionCode as a9, signInWithIdp as aA, _fail as aB, debugAssert as aC, _persistenceKeyName as aD, _serverAppCurrentUserOperationNotSupportedError as aE, _castAuth as aF, FederatedAuthProvider as aG, BaseOAuthProvider as aH, _emulatorUrl as aI, _performApiRequest as aJ, _isIOS as aK, _isAndroid as aL, _isIOS7Or8 as aM, _createError as aN, _isMobileBrowser as aO, _isIE10 as aP, UserImpl as aQ, AuthImpl as aR, _getClientVersion as aS, FetchProvider as aT, SAMLAuthCredential as aU, verifyPasswordResetCode as aa, createUserWithEmailAndPassword as ab, signInWithEmailAndPassword as ac, sendSignInLinkToEmail as ad, isSignInWithEmailLink as ae, signInWithEmailLink as af, fetchSignInMethodsForEmail as ag, sendEmailVerification as ah, verifyBeforeUpdateEmail as ai, ActionCodeURL as aj, parseActionCodeURL as ak, updateProfile as al, updateEmail as am, updatePassword as an, getIdToken as ao, getIdTokenResult as ap, unlink as aq, getAdditionalUserInfo as ar, reload as as, getMultiFactorResolver as at, multiFactor as au, _getInstance as av, _assert as aw, _signInWithCredential as ax, _reauthenticate as ay, _link as az, browserLocalPersistence as b, browserSessionPersistence as c, signInWithPopup as d, linkWithPopup as e, reauthenticateWithPopup as f, signInWithRedirect as g, linkWithRedirect as h, indexedDBLocalPersistence as i, reauthenticateWithRedirect as j, getRedirectResult as k, linkWithPhoneNumber as l, browserPopupRedirectResolver as m, PhoneMultiFactorGenerator as n, TotpSecret as o, getAuth as p, ProviderId as q, reauthenticateWithPhoneNumber as r, signInWithPhoneNumber as s, setPersistence as t, updatePhoneNumber as u, initializeRecaptchaConfig as v, validatePassword as w, onIdTokenChanged as x, beforeAuthStateChanged as y, onAuthStateChanged as z };\n\n", "import { onAuthStateChanged, onIdTokenChanged, getIdToken } from 'firebase/auth';\nimport { Observable, from, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Create an observable of authentication state. The observer is only\n * triggered on sign-in or sign-out.\n * @param auth firebase.auth.Auth\n */\nfunction authState(auth) {\n    return new Observable(function (subscriber) {\n        var unsubscribe = onAuthStateChanged(auth, subscriber.next.bind(subscriber), subscriber.error.bind(subscriber), subscriber.complete.bind(subscriber));\n        return { unsubscribe: unsubscribe };\n    });\n}\n/**\n * Create an observable of user state. The observer is triggered for sign-in,\n * sign-out, and token refresh events\n * @param auth firebase.auth.Auth\n */\nfunction user(auth) {\n    return new Observable(function (subscriber) {\n        var unsubscribe = onIdTokenChanged(auth, subscriber.next.bind(subscriber), subscriber.error.bind(subscriber), subscriber.complete.bind(subscriber));\n        return { unsubscribe: unsubscribe };\n    });\n}\n/**\n * Create an observable of idToken state. The observer is triggered for sign-in,\n * sign-out, and token refresh events\n * @param auth firebase.auth.Auth\n */\nfunction idToken(auth) {\n    return user(auth).pipe(switchMap(function (user) { return (user ? from(getIdToken(user)) : of(null)); }));\n}\n\nexport { authState, idToken, user };\n\n", "import { _getProvider, getApp, _removeServiceInstance, _registerComponent, registerVersion, _isFirebaseServerApp, SDK_VERSION as SDK_VERSION$1 } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { TextEncoder, inspect, TextDecoder } from 'util';\nimport { FirebaseError, isCloudWorkstation, pingServer, updateEmulatorBanner, deepEqual, createMockUserToken, getModularInstance, getDefaultEmulatorHostnameAndPort, getGlobal, isIndexedDBAvailable, getUA, isSafari, isSafariOrWebkit } from '@firebase/util';\nimport { Integer, Md5 } from '@firebase/webchannel-wrapper/bloom-blob';\nimport { randomBytes as randomBytes$1 } from 'crypto';\nimport * as grpc from '@grpc/grpc-js';\nimport * as protoLoader from '@grpc/proto-loader';\n\nconst name$1 = \"@firebase/firestore\";\nconst version$1 = \"4.8.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass User {\n    constructor(uid) {\n        this.uid = uid;\n    }\n    isAuthenticated() {\n        return this.uid != null;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n    toKey() {\n        if (this.isAuthenticated()) {\n            return 'uid:' + this.uid;\n        }\n        else {\n            return 'anonymous-user';\n        }\n    }\n    isEqual(otherUser) {\n        return otherUser.uid === this.uid;\n    }\n}\n/** A user with a null UID. */\nUser.UNAUTHENTICATED = new User(null);\n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nUser.GOOGLE_CREDENTIALS = new User('google-credentials-uid');\nUser.FIRST_PARTY = new User('first-party-uid');\nUser.MOCK_USER = new User('mock-user');\n\nconst version = \"11.10.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet SDK_VERSION = version;\nfunction setSDKVersion(version) {\n    SDK_VERSION = version;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Formats an object as a JSON string, suitable for logging. */\nfunction formatJSON(value) {\n    // util.inspect() results in much more readable output than JSON.stringify()\n    return inspect(value, { depth: 100 });\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logClient = new Logger('@firebase/firestore');\n// Helper methods are needed because variables can't be exported as read/write\nfunction getLogLevel() {\n    return logClient.logLevel;\n}\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\nfunction setLogLevel(logLevel) {\n    logClient.setLogLevel(logLevel);\n}\nfunction logDebug(msg, ...obj) {\n    if (logClient.logLevel <= LogLevel.DEBUG) {\n        const args = obj.map(argToString);\n        logClient.debug(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n    }\n}\nfunction logError(msg, ...obj) {\n    if (logClient.logLevel <= LogLevel.ERROR) {\n        const args = obj.map(argToString);\n        logClient.error(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n    }\n}\n/**\n * @internal\n */\nfunction logWarn(msg, ...obj) {\n    if (logClient.logLevel <= LogLevel.WARN) {\n        const args = obj.map(argToString);\n        logClient.warn(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n    }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction argToString(obj) {\n    if (typeof obj === 'string') {\n        return obj;\n    }\n    else {\n        try {\n            return formatJSON(obj);\n        }\n        catch (e) {\n            // Converting to JSON failed, just log the object directly\n            return obj;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction fail(id, messageOrContext, context) {\n    let message = 'Unexpected state';\n    if (typeof messageOrContext === 'string') {\n        message = messageOrContext;\n    }\n    else {\n        context = messageOrContext;\n    }\n    _fail(id, message, context);\n}\nfunction _fail(id, failure, context) {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    let message = `FIRESTORE (${SDK_VERSION}) INTERNAL ASSERTION FAILED: ${failure} (ID: ${id.toString(16)})`;\n    if (context !== undefined) {\n        try {\n            const stringContext = JSON.stringify(context);\n            message += ' CONTEXT: ' + stringContext;\n        }\n        catch (e) {\n            message += ' CONTEXT: ' + context;\n        }\n    }\n    logError(message);\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw new Error(message);\n}\nfunction hardAssert(assertion, id, messageOrContext, context) {\n    let message = 'Unexpected state';\n    if (typeof messageOrContext === 'string') {\n        message = messageOrContext;\n    }\n    else {\n        context = messageOrContext;\n    }\n    if (!assertion) {\n        _fail(id, message, context);\n    }\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * The code of callsites invoking this function are stripped out in production\n * builds. Any side-effects of code within the debugAssert() invocation will not\n * happen in this case.\n *\n * @internal\n */\nfunction debugAssert(assertion, message) {\n    if (!assertion) {\n        fail(0xdeb6, message);\n    }\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\nfunction debugCast(obj, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconstructor) {\n    return obj;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Code = {\n    // Causes are copied from:\n    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n    /** Not an error; returned on success. */\n    OK: 'ok',\n    /** The operation was cancelled (typically by the caller). */\n    CANCELLED: 'cancelled',\n    /** Unknown error or an error from a different error domain. */\n    UNKNOWN: 'unknown',\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    INVALID_ARGUMENT: 'invalid-argument',\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\n    /** Some requested entity (e.g., file or directory) was not found. */\n    NOT_FOUND: 'not-found',\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    ALREADY_EXISTS: 'already-exists',\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller cannot be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    PERMISSION_DENIED: 'permission-denied',\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    UNAUTHENTICATED: 'unauthenticated',\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operation's execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    FAILED_PRECONDITION: 'failed-precondition',\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    ABORTED: 'aborted',\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    OUT_OF_RANGE: 'out-of-range',\n    /** Operation is not implemented or not supported/enabled in this service. */\n    UNIMPLEMENTED: 'unimplemented',\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    INTERNAL: 'internal',\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    UNAVAILABLE: 'unavailable',\n    /** Unrecoverable data loss or corruption. */\n    DATA_LOSS: 'data-loss'\n};\n/** An error returned by a Firestore operation. */\nclass FirestoreError extends FirebaseError {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    code, \n    /**\n     * A custom error description.\n     */\n    message) {\n        super(code, message);\n        this.code = code;\n        this.message = message;\n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass OAuthToken {\n    constructor(value, user) {\n        this.user = user;\n        this.type = 'OAuth';\n        this.headers = new Map();\n        this.headers.set('Authorization', `Bearer ${value}`);\n    }\n}\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\nclass EmptyAuthCredentialsProvider {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() { }\n    start(asyncQueue, changeListener) {\n        // Fire with initial user.\n        asyncQueue.enqueueRetryable(() => changeListener(User.UNAUTHENTICATED));\n    }\n    shutdown() { }\n}\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\nclass EmulatorAuthCredentialsProvider {\n    constructor(token) {\n        this.token = token;\n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() { }\n    start(asyncQueue, changeListener) {\n        this.changeListener = changeListener;\n        // Fire with initial user.\n        asyncQueue.enqueueRetryable(() => changeListener(this.token.user));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\nclass FirebaseAuthCredentialsProvider {\n    constructor(authProvider) {\n        this.authProvider = authProvider;\n        /** Tracks the current User. */\n        this.currentUser = User.UNAUTHENTICATED;\n        /**\n         * Counter used to detect if the token changed while a getToken request was\n         * outstanding.\n         */\n        this.tokenCounter = 0;\n        this.forceRefresh = false;\n        this.auth = null;\n    }\n    start(asyncQueue, changeListener) {\n        hardAssert(this.tokenListener === undefined, 0xa540);\n        let lastTokenId = this.tokenCounter;\n        // A change listener that prevents double-firing for the same token change.\n        const guardedChangeListener = user => {\n            if (this.tokenCounter !== lastTokenId) {\n                lastTokenId = this.tokenCounter;\n                return changeListener(user);\n            }\n            else {\n                return Promise.resolve();\n            }\n        };\n        // A promise that can be waited on to block on the next token change.\n        // This promise is re-created after each change.\n        let nextToken = new Deferred();\n        this.tokenListener = () => {\n            this.tokenCounter++;\n            this.currentUser = this.getUser();\n            nextToken.resolve();\n            nextToken = new Deferred();\n            asyncQueue.enqueueRetryable(() => guardedChangeListener(this.currentUser));\n        };\n        const awaitNextToken = () => {\n            const currentTokenAttempt = nextToken;\n            asyncQueue.enqueueRetryable(async () => {\n                await currentTokenAttempt.promise;\n                await guardedChangeListener(this.currentUser);\n            });\n        };\n        const registerAuth = (auth) => {\n            logDebug('FirebaseAuthCredentialsProvider', 'Auth detected');\n            this.auth = auth;\n            if (this.tokenListener) {\n                this.auth.addAuthTokenListener(this.tokenListener);\n                awaitNextToken();\n            }\n        };\n        this.authProvider.onInit(auth => registerAuth(auth));\n        // Our users can initialize Auth right after Firestore, so we give it\n        // a chance to register itself with the component framework before we\n        // determine whether to start up in unauthenticated mode.\n        setTimeout(() => {\n            if (!this.auth) {\n                const auth = this.authProvider.getImmediate({ optional: true });\n                if (auth) {\n                    registerAuth(auth);\n                }\n                else {\n                    // If auth is still not available, proceed with `null` user\n                    logDebug('FirebaseAuthCredentialsProvider', 'Auth not yet detected');\n                    nextToken.resolve();\n                    nextToken = new Deferred();\n                }\n            }\n        }, 0);\n        awaitNextToken();\n    }\n    getToken() {\n        // Take note of the current value of the tokenCounter so that this method\n        // can fail (with an ABORTED error) if there is a token change while the\n        // request is outstanding.\n        const initialTokenCounter = this.tokenCounter;\n        const forceRefresh = this.forceRefresh;\n        this.forceRefresh = false;\n        if (!this.auth) {\n            return Promise.resolve(null);\n        }\n        return this.auth.getToken(forceRefresh).then(tokenData => {\n            // Cancel the request since the token changed while the request was\n            // outstanding so the response is potentially for a previous user (which\n            // user, we can't be sure).\n            if (this.tokenCounter !== initialTokenCounter) {\n                logDebug('FirebaseAuthCredentialsProvider', 'getToken aborted due to token change.');\n                return this.getToken();\n            }\n            else {\n                if (tokenData) {\n                    hardAssert(typeof tokenData.accessToken === 'string', 0x7c5d, { tokenData });\n                    return new OAuthToken(tokenData.accessToken, this.currentUser);\n                }\n                else {\n                    return null;\n                }\n            }\n        });\n    }\n    invalidateToken() {\n        this.forceRefresh = true;\n    }\n    shutdown() {\n        if (this.auth && this.tokenListener) {\n            this.auth.removeAuthTokenListener(this.tokenListener);\n        }\n        this.tokenListener = undefined;\n    }\n    // Auth.getUid() can return null even with a user logged in. It is because\n    // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n    // This method should only be called in the AuthTokenListener callback\n    // to guarantee to get the actual user.\n    getUser() {\n        const currentUid = this.auth && this.auth.getUid();\n        hardAssert(currentUid === null || typeof currentUid === 'string', 0x0807, { currentUid });\n        return new User(currentUid);\n    }\n}\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\nclass FirstPartyToken {\n    constructor(sessionIndex, iamToken, authTokenFactory) {\n        this.sessionIndex = sessionIndex;\n        this.iamToken = iamToken;\n        this.authTokenFactory = authTokenFactory;\n        this.type = 'FirstParty';\n        this.user = User.FIRST_PARTY;\n        this._headers = new Map();\n    }\n    /**\n     * Gets an authorization token, using a provided factory function, or return\n     * null.\n     */\n    getAuthToken() {\n        if (this.authTokenFactory) {\n            return this.authTokenFactory();\n        }\n        else {\n            return null;\n        }\n    }\n    get headers() {\n        this._headers.set('X-Goog-AuthUser', this.sessionIndex);\n        // Use array notation to prevent minification\n        const authHeaderTokenValue = this.getAuthToken();\n        if (authHeaderTokenValue) {\n            this._headers.set('Authorization', authHeaderTokenValue);\n        }\n        if (this.iamToken) {\n            this._headers.set('X-Goog-Iam-Authorization-Token', this.iamToken);\n        }\n        return this._headers;\n    }\n}\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nclass FirstPartyAuthCredentialsProvider {\n    constructor(sessionIndex, iamToken, authTokenFactory) {\n        this.sessionIndex = sessionIndex;\n        this.iamToken = iamToken;\n        this.authTokenFactory = authTokenFactory;\n    }\n    getToken() {\n        return Promise.resolve(new FirstPartyToken(this.sessionIndex, this.iamToken, this.authTokenFactory));\n    }\n    start(asyncQueue, changeListener) {\n        // Fire with initial uid.\n        asyncQueue.enqueueRetryable(() => changeListener(User.FIRST_PARTY));\n    }\n    shutdown() { }\n    invalidateToken() { }\n}\nclass AppCheckToken {\n    constructor(value) {\n        this.value = value;\n        this.type = 'AppCheck';\n        this.headers = new Map();\n        if (value && value.length > 0) {\n            this.headers.set('x-firebase-appcheck', this.value);\n        }\n    }\n}\nclass FirebaseAppCheckTokenProvider {\n    constructor(app, appCheckProvider) {\n        this.appCheckProvider = appCheckProvider;\n        this.forceRefresh = false;\n        this.appCheck = null;\n        this.latestAppCheckToken = null;\n        this.serverAppAppCheckToken = null;\n        if (_isFirebaseServerApp(app) && app.settings.appCheckToken) {\n            this.serverAppAppCheckToken = app.settings.appCheckToken;\n        }\n    }\n    start(asyncQueue, changeListener) {\n        hardAssert(this.tokenListener === undefined, 0x0db8);\n        const onTokenChanged = tokenResult => {\n            if (tokenResult.error != null) {\n                logDebug('FirebaseAppCheckTokenProvider', `Error getting App Check token; using placeholder token instead. Error: ${tokenResult.error.message}`);\n            }\n            const tokenUpdated = tokenResult.token !== this.latestAppCheckToken;\n            this.latestAppCheckToken = tokenResult.token;\n            logDebug('FirebaseAppCheckTokenProvider', `Received ${tokenUpdated ? 'new' : 'existing'} token.`);\n            return tokenUpdated\n                ? changeListener(tokenResult.token)\n                : Promise.resolve();\n        };\n        this.tokenListener = (tokenResult) => {\n            asyncQueue.enqueueRetryable(() => onTokenChanged(tokenResult));\n        };\n        const registerAppCheck = (appCheck) => {\n            logDebug('FirebaseAppCheckTokenProvider', 'AppCheck detected');\n            this.appCheck = appCheck;\n            if (this.tokenListener) {\n                this.appCheck.addTokenListener(this.tokenListener);\n            }\n        };\n        this.appCheckProvider.onInit(appCheck => registerAppCheck(appCheck));\n        // Our users can initialize AppCheck after Firestore, so we give it\n        // a chance to register itself with the component framework.\n        setTimeout(() => {\n            if (!this.appCheck) {\n                const appCheck = this.appCheckProvider.getImmediate({ optional: true });\n                if (appCheck) {\n                    registerAppCheck(appCheck);\n                }\n                else {\n                    // If AppCheck is still not available, proceed without it.\n                    logDebug('FirebaseAppCheckTokenProvider', 'AppCheck not yet detected');\n                }\n            }\n        }, 0);\n    }\n    getToken() {\n        if (this.serverAppAppCheckToken) {\n            return Promise.resolve(new AppCheckToken(this.serverAppAppCheckToken));\n        }\n        const forceRefresh = this.forceRefresh;\n        this.forceRefresh = false;\n        if (!this.appCheck) {\n            return Promise.resolve(null);\n        }\n        return this.appCheck.getToken(forceRefresh).then(tokenResult => {\n            if (tokenResult) {\n                hardAssert(typeof tokenResult.token === 'string', 0xae0e, { tokenResult });\n                this.latestAppCheckToken = tokenResult.token;\n                return new AppCheckToken(tokenResult.token);\n            }\n            else {\n                return null;\n            }\n        });\n    }\n    invalidateToken() {\n        this.forceRefresh = true;\n    }\n    shutdown() {\n        if (this.appCheck && this.tokenListener) {\n            this.appCheck.removeTokenListener(this.tokenListener);\n        }\n        this.tokenListener = undefined;\n    }\n}\n/**\n * An AppCheck token provider that always yields an empty token.\n * @internal\n */\nclass EmptyAppCheckTokenProvider {\n    getToken() {\n        return Promise.resolve(new AppCheckToken(''));\n    }\n    invalidateToken() { }\n    start(asyncQueue, changeListener) { }\n    shutdown() { }\n}\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\nfunction makeAuthCredentialsProvider(credentials) {\n    if (!credentials) {\n        return new EmptyAuthCredentialsProvider();\n    }\n    switch (credentials['type']) {\n        case 'firstParty':\n            return new FirstPartyAuthCredentialsProvider(credentials['sessionIndex'] || '0', credentials['iamToken'] || null, credentials['authTokenFactory'] || null);\n        case 'provider':\n            return credentials['client'];\n        default:\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'makeAuthCredentialsProvider failed due to invalid credential type');\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction randomBytes(nBytes) {\n    return randomBytes$1(nBytes);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An instance of the Platform's 'TextEncoder' implementation.\n */\nfunction newTextEncoder() {\n    return new TextEncoder();\n}\n/**\n * An instance of the Platform's 'TextDecoder' implementation.\n */\nfunction newTextDecoder() {\n    return new TextDecoder('utf-8');\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A utility class for generating unique alphanumeric IDs of a specified length.\n *\n * @internal\n * Exported internally for testing purposes.\n */\nclass AutoId {\n    static newId() {\n        // Alphanumeric characters\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        // The largest byte value that is a multiple of `char.length`.\n        const maxMultiple = Math.floor(256 / chars.length) * chars.length;\n        let autoId = '';\n        const targetLength = 20;\n        while (autoId.length < targetLength) {\n            const bytes = randomBytes(40);\n            for (let i = 0; i < bytes.length; ++i) {\n                // Only accept values that are [0, maxMultiple), this ensures they can\n                // be evenly mapped to indices of `chars` via a modulo operation.\n                if (autoId.length < targetLength && bytes[i] < maxMultiple) {\n                    autoId += chars.charAt(bytes[i] % chars.length);\n                }\n            }\n        }\n        return autoId;\n    }\n}\nfunction primitiveComparator(left, right) {\n    if (left < right) {\n        return -1;\n    }\n    if (left > right) {\n        return 1;\n    }\n    return 0;\n}\n/** Compare strings in UTF-8 encoded byte order */\nfunction compareUtf8Strings(left, right) {\n    let i = 0;\n    while (i < left.length && i < right.length) {\n        const leftCodePoint = left.codePointAt(i);\n        const rightCodePoint = right.codePointAt(i);\n        if (leftCodePoint !== rightCodePoint) {\n            if (leftCodePoint < 128 && rightCodePoint < 128) {\n                // ASCII comparison\n                return primitiveComparator(leftCodePoint, rightCodePoint);\n            }\n            else {\n                // Lazy instantiate TextEncoder\n                const encoder = newTextEncoder();\n                // UTF-8 encode the character at index i for byte comparison.\n                const leftBytes = encoder.encode(getUtf8SafeSubstring(left, i));\n                const rightBytes = encoder.encode(getUtf8SafeSubstring(right, i));\n                const comp = compareByteArrays$1(leftBytes, rightBytes);\n                if (comp !== 0) {\n                    return comp;\n                }\n                else {\n                    // EXTREMELY RARE CASE: Code points differ, but their UTF-8 byte\n                    // representations are identical. This can happen with malformed input\n                    // (invalid surrogate pairs). The backend also actively prevents invalid\n                    // surrogates as INVALID_ARGUMENT errors, so we almost never receive\n                    // invalid strings from backend.\n                    // Fallback to code point comparison for graceful handling.\n                    return primitiveComparator(leftCodePoint, rightCodePoint);\n                }\n            }\n        }\n        // Increment by 2 for surrogate pairs, 1 otherwise\n        i += leftCodePoint > 0xffff ? 2 : 1;\n    }\n    // Compare lengths if all characters are equal\n    return primitiveComparator(left.length, right.length);\n}\nfunction getUtf8SafeSubstring(str, index) {\n    const firstCodePoint = str.codePointAt(index);\n    if (firstCodePoint > 0xffff) {\n        // It's a surrogate pair, return the whole pair\n        return str.substring(index, index + 2);\n    }\n    else {\n        // It's a single code point, return it\n        return str.substring(index, index + 1);\n    }\n}\nfunction compareByteArrays$1(left, right) {\n    for (let i = 0; i < left.length && i < right.length; ++i) {\n        if (left[i] !== right[i]) {\n            return primitiveComparator(left[i], right[i]);\n        }\n    }\n    return primitiveComparator(left.length, right.length);\n}\n/** Helper to compare arrays using isEqual(). */\nfunction arrayEquals(left, right, comparator) {\n    if (left.length !== right.length) {\n        return false;\n    }\n    return left.every((value, index) => comparator(value, right[index]));\n}\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */\nfunction immediateSuccessor(s) {\n    // Return the input string, with an additional NUL byte appended.\n    return s + '\\0';\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DOCUMENT_KEY_NAME = '__name__';\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass BasePath {\n    constructor(segments, offset, length) {\n        if (offset === undefined) {\n            offset = 0;\n        }\n        else if (offset > segments.length) {\n            fail(0x027d, {\n                offset,\n                range: segments.length\n            });\n        }\n        if (length === undefined) {\n            length = segments.length - offset;\n        }\n        else if (length > segments.length - offset) {\n            fail(0x06d2, {\n                length,\n                range: segments.length - offset\n            });\n        }\n        this.segments = segments;\n        this.offset = offset;\n        this.len = length;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(other) {\n        return BasePath.comparator(this, other) === 0;\n    }\n    child(nameOrPath) {\n        const segments = this.segments.slice(this.offset, this.limit());\n        if (nameOrPath instanceof BasePath) {\n            nameOrPath.forEach(segment => {\n                segments.push(segment);\n            });\n        }\n        else {\n            segments.push(nameOrPath);\n        }\n        return this.construct(segments);\n    }\n    /** The index of one past the last segment of the path. */\n    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(size) {\n        size = size === undefined ? 1 : size;\n        return this.construct(this.segments, this.offset + size, this.length - size);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(index) {\n        return this.segments[this.offset + index];\n    }\n    isEmpty() {\n        return this.length === 0;\n    }\n    isPrefixOf(other) {\n        if (other.length < this.length) {\n            return false;\n        }\n        for (let i = 0; i < this.length; i++) {\n            if (this.get(i) !== other.get(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    isImmediateParentOf(potentialChild) {\n        if (this.length + 1 !== potentialChild.length) {\n            return false;\n        }\n        for (let i = 0; i < this.length; i++) {\n            if (this.get(i) !== potentialChild.get(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    forEach(fn) {\n        for (let i = this.offset, end = this.limit(); i < end; i++) {\n            fn(this.segments[i]);\n        }\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    /**\n     * Compare 2 paths segment by segment, prioritizing numeric IDs\n     * (e.g., \"__id123__\") in numeric ascending order, followed by string\n     * segments in lexicographical order.\n     */\n    static comparator(p1, p2) {\n        const len = Math.min(p1.length, p2.length);\n        for (let i = 0; i < len; i++) {\n            const comparison = BasePath.compareSegments(p1.get(i), p2.get(i));\n            if (comparison !== 0) {\n                return comparison;\n            }\n        }\n        return primitiveComparator(p1.length, p2.length);\n    }\n    static compareSegments(lhs, rhs) {\n        const isLhsNumeric = BasePath.isNumericId(lhs);\n        const isRhsNumeric = BasePath.isNumericId(rhs);\n        if (isLhsNumeric && !isRhsNumeric) {\n            // Only lhs is numeric\n            return -1;\n        }\n        else if (!isLhsNumeric && isRhsNumeric) {\n            // Only rhs is numeric\n            return 1;\n        }\n        else if (isLhsNumeric && isRhsNumeric) {\n            // both numeric\n            return BasePath.extractNumericId(lhs).compare(BasePath.extractNumericId(rhs));\n        }\n        else {\n            // both non-numeric\n            return compareUtf8Strings(lhs, rhs);\n        }\n    }\n    // Checks if a segment is a numeric ID (starts with \"__id\" and ends with \"__\").\n    static isNumericId(segment) {\n        return segment.startsWith('__id') && segment.endsWith('__');\n    }\n    static extractNumericId(segment) {\n        return Integer.fromString(segment.substring(4, segment.length - 2));\n    }\n}\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\nclass ResourcePath extends BasePath {\n    construct(segments, offset, length) {\n        return new ResourcePath(segments, offset, length);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join('/');\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns a string representation of this path\n     * where each path segment has been encoded with\n     * `encodeURIComponent`.\n     */\n    toUriEncodedString() {\n        return this.toArray().map(encodeURIComponent).join('/');\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n    static fromString(...pathComponents) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const segments = [];\n        for (const path of pathComponents) {\n            if (path.indexOf('//') >= 0) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid segment (${path}). Paths must not contain // in them.`);\n            }\n            // Strip leading and trailing slashed.\n            segments.push(...path.split('/').filter(segment => segment.length > 0));\n        }\n        return new ResourcePath(segments);\n    }\n    static emptyPath() {\n        return new ResourcePath([]);\n    }\n}\nconst identifierRegExp = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\nclass FieldPath$1 extends BasePath {\n    construct(segments, offset, length) {\n        return new FieldPath$1(segments, offset, length);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n    static isValidIdentifier(segment) {\n        return identifierRegExp.test(segment);\n    }\n    canonicalString() {\n        return this.toArray()\n            .map(str => {\n            str = str.replace(/\\\\/g, '\\\\\\\\').replace(/`/g, '\\\\`');\n            if (!FieldPath$1.isValidIdentifier(str)) {\n                str = '`' + str + '`';\n            }\n            return str;\n        })\n            .join('.');\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */\n    isKeyField() {\n        return this.length === 1 && this.get(0) === DOCUMENT_KEY_NAME;\n    }\n    /**\n     * The field designating the key of a document.\n     */\n    static keyField() {\n        return new FieldPath$1([DOCUMENT_KEY_NAME]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n    static fromServerFormat(path) {\n        const segments = [];\n        let current = '';\n        let i = 0;\n        const addCurrentSegment = () => {\n            if (current.length === 0) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid field path (${path}). Paths must not be empty, begin ` +\n                    `with '.', end with '.', or contain '..'`);\n            }\n            segments.push(current);\n            current = '';\n        };\n        let inBackticks = false;\n        while (i < path.length) {\n            const c = path[i];\n            if (c === '\\\\') {\n                if (i + 1 === path.length) {\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Path has trailing escape character: ' + path);\n                }\n                const next = path[i + 1];\n                if (!(next === '\\\\' || next === '.' || next === '`')) {\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Path has invalid escape sequence: ' + path);\n                }\n                current += next;\n                i += 2;\n            }\n            else if (c === '`') {\n                inBackticks = !inBackticks;\n                i++;\n            }\n            else if (c === '.' && !inBackticks) {\n                addCurrentSegment();\n                i++;\n            }\n            else {\n                current += c;\n                i++;\n            }\n        }\n        addCurrentSegment();\n        if (inBackticks) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Unterminated ` in path: ' + path);\n        }\n        return new FieldPath$1(segments);\n    }\n    static emptyPath() {\n        return new FieldPath$1([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */\nclass DocumentKey {\n    constructor(path) {\n        this.path = path;\n    }\n    static fromPath(path) {\n        return new DocumentKey(ResourcePath.fromString(path));\n    }\n    static fromName(name) {\n        return new DocumentKey(ResourcePath.fromString(name).popFirst(5));\n    }\n    static empty() {\n        return new DocumentKey(ResourcePath.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */\n    hasCollectionId(collectionId) {\n        return (this.path.length >= 2 &&\n            this.path.get(this.path.length - 2) === collectionId);\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */\n    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(other) {\n        return (other !== null && ResourcePath.comparator(this.path, other.path) === 0);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(k1, k2) {\n        return ResourcePath.comparator(k1.path, k2.path);\n    }\n    static isDocumentKey(path) {\n        return path.length % 2 === 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n    static fromSegments(segments) {\n        return new DocumentKey(new ResourcePath(segments.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction validateNonEmptyArgument(functionName, argumentName, argument) {\n    if (!argument) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Function ${functionName}() cannot be called with an empty ${argumentName}.`);\n    }\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\nfunction validateIsNotUsedTogether(optionName1, argument1, optionName2, argument2) {\n    if (argument1 === true && argument2 === true) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `${optionName1} and ${optionName2} cannot be used together.`);\n    }\n}\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction validateDocumentPath(path) {\n    if (!DocumentKey.isDocumentKey(path)) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid document reference. Document references must have an even number of segments, but ${path} has ${path.length}.`);\n    }\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\nfunction validateCollectionPath(path) {\n    if (DocumentKey.isDocumentKey(path)) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid collection reference. Collection references must have an odd number of segments, but ${path} has ${path.length}.`);\n    }\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\nfunction isPlainObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        (Object.getPrototypeOf(input) === Object.prototype ||\n            Object.getPrototypeOf(input) === null));\n}\n/** Returns a string describing the type / value of the provided input. */\nfunction valueDescription(input) {\n    if (input === undefined) {\n        return 'undefined';\n    }\n    else if (input === null) {\n        return 'null';\n    }\n    else if (typeof input === 'string') {\n        if (input.length > 20) {\n            input = `${input.substring(0, 20)}...`;\n        }\n        return JSON.stringify(input);\n    }\n    else if (typeof input === 'number' || typeof input === 'boolean') {\n        return '' + input;\n    }\n    else if (typeof input === 'object') {\n        if (input instanceof Array) {\n            return 'an array';\n        }\n        else {\n            const customObjectName = tryGetCustomObjectType(input);\n            if (customObjectName) {\n                return `a custom ${customObjectName} object`;\n            }\n            else {\n                return 'an object';\n            }\n        }\n    }\n    else if (typeof input === 'function') {\n        return 'a function';\n    }\n    else {\n        return fail(0x3029, { type: typeof input });\n    }\n}\n/** try to get the constructor name for an object. */\nfunction tryGetCustomObjectType(input) {\n    if (input.constructor) {\n        return input.constructor.name;\n    }\n    return null;\n}\n/**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */\nfunction cast(obj, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconstructor) {\n    if ('_delegate' in obj) {\n        // Unwrap Compat types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        obj = obj._delegate;\n    }\n    if (!(obj instanceof constructor)) {\n        if (constructor.name === obj.constructor.name) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Type does not match the expected instance. Did you pass a ' +\n                `reference from a different Firestore SDK?`);\n        }\n        else {\n            const description = valueDescription(obj);\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `Expected type '${constructor.name}', but it was: ${description}`);\n        }\n    }\n    return obj;\n}\nfunction validatePositiveNumber(functionName, n) {\n    if (n <= 0) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Function ${functionName}() requires a positive number, but it was: ${n}.`);\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Helper function to define a JSON schema {@link Property}.\n * @private\n * @internal\n */\nfunction property(typeString, optionalValue) {\n    const result = {\n        typeString\n    };\n    if (optionalValue) {\n        result.value = optionalValue;\n    }\n    return result;\n}\n/**\n * Validates the JSON object based on the provided schema, and narrows the type to the provided\n * JSON schema.\n * @private\n * @internal\n *\n * @param json A JSON object to validate.\n * @param scheme a {@link JsonSchema} that defines the properties to validate.\n * @returns true if the JSON schema exists within the object. Throws a FirestoreError otherwise.\n */\nfunction validateJSON(json, schema) {\n    if (!isPlainObject(json)) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'JSON must be an object');\n    }\n    let error = undefined;\n    for (const key in schema) {\n        if (schema[key]) {\n            const typeString = schema[key].typeString;\n            const value = 'value' in schema[key] ? { value: schema[key].value } : undefined;\n            if (!(key in json)) {\n                error = `JSON missing required field: '${key}'`;\n                break;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fieldValue = json[key];\n            if (typeString && typeof fieldValue !== typeString) {\n                error = `JSON field '${key}' must be a ${typeString}.`;\n                break;\n            }\n            else if (value !== undefined && fieldValue !== value.value) {\n                error = `Expected '${key}' field to equal '${value.value}'`;\n                break;\n            }\n        }\n    }\n    if (error) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, error);\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\nconst MIN_SECONDS = -62135596800;\n// Number of nanoseconds in a millisecond.\nconst MS_TO_NANOS = 1e6;\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Timestamp {\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */\n    static now() {\n        return Timestamp.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n    static fromDate(date) {\n        return Timestamp.fromMillis(date.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n    static fromMillis(milliseconds) {\n        const seconds = Math.floor(milliseconds / 1000);\n        const nanos = Math.floor((milliseconds - seconds * 1000) * MS_TO_NANOS);\n        return new Timestamp(seconds, nanos);\n    }\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    seconds, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    nanoseconds) {\n        this.seconds = seconds;\n        this.nanoseconds = nanoseconds;\n        if (nanoseconds < 0) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + nanoseconds);\n        }\n        if (nanoseconds >= 1e9) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + nanoseconds);\n        }\n        if (seconds < MIN_SECONDS) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + seconds);\n        }\n        // This will break in the year 10,000.\n        if (seconds >= 253402300800) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + seconds);\n        }\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    toMillis() {\n        return this.seconds * 1000 + this.nanoseconds / MS_TO_NANOS;\n    }\n    _compareTo(other) {\n        if (this.seconds === other.seconds) {\n            return primitiveComparator(this.nanoseconds, other.nanoseconds);\n        }\n        return primitiveComparator(this.seconds, other.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n    isEqual(other) {\n        return (other.seconds === this.seconds && other.nanoseconds === this.nanoseconds);\n    }\n    /** Returns a textual representation of this `Timestamp`. */\n    toString() {\n        return ('Timestamp(seconds=' +\n            this.seconds +\n            ', nanoseconds=' +\n            this.nanoseconds +\n            ')');\n    }\n    /**\n     * Returns a JSON-serializable representation of this `Timestamp`.\n     */\n    toJSON() {\n        return {\n            type: Timestamp._jsonSchemaVersion,\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Builds a `Timestamp` instance from a JSON object created by {@link Timestamp.toJSON}.\n     */\n    static fromJSON(json) {\n        if (validateJSON(json, Timestamp._jsonSchema)) {\n            return new Timestamp(json.seconds, json.nanoseconds);\n        }\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */\n    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexicographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexicographical ordering.\n        const adjustedSeconds = this.seconds - MIN_SECONDS;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n        const formattedSeconds = String(adjustedSeconds).padStart(12, '0');\n        const formattedNanoseconds = String(this.nanoseconds).padStart(9, '0');\n        return formattedSeconds + '.' + formattedNanoseconds;\n    }\n}\nTimestamp._jsonSchemaVersion = 'firestore/timestamp/1.0';\nTimestamp._jsonSchema = {\n    type: property('string', Timestamp._jsonSchemaVersion),\n    seconds: property('number'),\n    nanoseconds: property('number')\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nclass SnapshotVersion {\n    static fromTimestamp(value) {\n        return new SnapshotVersion(value);\n    }\n    static min() {\n        return new SnapshotVersion(new Timestamp(0, 0));\n    }\n    static max() {\n        return new SnapshotVersion(new Timestamp(253402300799, 1e9 - 1));\n    }\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n    }\n    compareTo(other) {\n        return this.timestamp._compareTo(other.timestamp);\n    }\n    isEqual(other) {\n        return this.timestamp.isEqual(other.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */\n    toMicroseconds() {\n        // Convert to microseconds.\n        return this.timestamp.seconds * 1e6 + this.timestamp.nanoseconds / 1000;\n    }\n    toString() {\n        return 'SnapshotVersion(' + this.timestamp.toString() + ')';\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The initial mutation batch id for each index. Gets updated during index\n * backfill.\n */\nconst INITIAL_LARGEST_BATCH_ID = -1;\n/**\n * The initial sequence number for each index. Gets updated during index\n * backfill.\n */\nconst INITIAL_SEQUENCE_NUMBER = 0;\n/**\n * An index definition for field indexes in Firestore.\n *\n * Every index is associated with a collection. The definition contains a list\n * of fields and their index kind (which can be `ASCENDING`, `DESCENDING` or\n * `CONTAINS` for ArrayContains/ArrayContainsAny queries).\n *\n * Unlike the backend, the SDK does not differentiate between collection or\n * collection group-scoped indices. Every index can be used for both single\n * collection and collection group queries.\n */\nclass FieldIndex {\n    constructor(\n    /**\n     * The index ID. Returns -1 if the index ID is not available (e.g. the index\n     * has not yet been persisted).\n     */\n    indexId, \n    /** The collection ID this index applies to. */\n    collectionGroup, \n    /** The field segments for this index. */\n    fields, \n    /** Shows how up-to-date the index is for the current user. */\n    indexState) {\n        this.indexId = indexId;\n        this.collectionGroup = collectionGroup;\n        this.fields = fields;\n        this.indexState = indexState;\n    }\n}\n/** An ID for an index that has not yet been added to persistence.  */\nFieldIndex.UNKNOWN_ID = -1;\n/** Returns the ArrayContains/ArrayContainsAny segment for this index. */\nfunction fieldIndexGetArraySegment(fieldIndex) {\n    return fieldIndex.fields.find(s => s.kind === 2 /* IndexKind.CONTAINS */);\n}\n/** Returns all directional (ascending/descending) segments for this index. */\nfunction fieldIndexGetDirectionalSegments(fieldIndex) {\n    return fieldIndex.fields.filter(s => s.kind !== 2 /* IndexKind.CONTAINS */);\n}\n/**\n * Returns the order of the document key component for the given index.\n *\n * PORTING NOTE: This is only used in the Web IndexedDb implementation.\n */\nfunction fieldIndexGetKeyOrder(fieldIndex) {\n    const directionalSegments = fieldIndexGetDirectionalSegments(fieldIndex);\n    return directionalSegments.length === 0\n        ? 0 /* IndexKind.ASCENDING */\n        : directionalSegments[directionalSegments.length - 1].kind;\n}\n/**\n * Compares indexes by collection group and segments. Ignores update time and\n * index ID.\n */\nfunction fieldIndexSemanticComparator(left, right) {\n    let cmp = primitiveComparator(left.collectionGroup, right.collectionGroup);\n    if (cmp !== 0) {\n        return cmp;\n    }\n    for (let i = 0; i < Math.min(left.fields.length, right.fields.length); ++i) {\n        cmp = indexSegmentComparator(left.fields[i], right.fields[i]);\n        if (cmp !== 0) {\n            return cmp;\n        }\n    }\n    return primitiveComparator(left.fields.length, right.fields.length);\n}\n/** Returns a debug representation of the field index */\nfunction fieldIndexToString(fieldIndex) {\n    return `id=${fieldIndex.indexId}|cg=${fieldIndex.collectionGroup}|f=${fieldIndex.fields.map(f => `${f.fieldPath}:${f.kind}`).join(',')}`;\n}\n/** An index component consisting of field path and index type.  */\nclass IndexSegment {\n    constructor(\n    /** The field path of the component. */\n    fieldPath, \n    /** The fields sorting order. */\n    kind) {\n        this.fieldPath = fieldPath;\n        this.kind = kind;\n    }\n}\nfunction indexSegmentComparator(left, right) {\n    const cmp = FieldPath$1.comparator(left.fieldPath, right.fieldPath);\n    if (cmp !== 0) {\n        return cmp;\n    }\n    return primitiveComparator(left.kind, right.kind);\n}\n/**\n * Stores the \"high water mark\" that indicates how updated the Index is for the\n * current user.\n */\nclass IndexState {\n    constructor(\n    /**\n     * Indicates when the index was last updated (relative to other indexes).\n     */\n    sequenceNumber, \n    /** The the latest indexed read time, document and batch id. */\n    offset) {\n        this.sequenceNumber = sequenceNumber;\n        this.offset = offset;\n    }\n    /** The state of an index that has not yet been backfilled. */\n    static empty() {\n        return new IndexState(INITIAL_SEQUENCE_NUMBER, IndexOffset.min());\n    }\n}\n/**\n * Creates an offset that matches all documents with a read time higher than\n * `readTime`.\n */\nfunction newIndexOffsetSuccessorFromReadTime(readTime, largestBatchId) {\n    // We want to create an offset that matches all documents with a read time\n    // greater than the provided read time. To do so, we technically need to\n    // create an offset for `(readTime, MAX_DOCUMENT_KEY)`. While we could use\n    // Unicode codepoints to generate MAX_DOCUMENT_KEY, it is much easier to use\n    // `(readTime + 1, DocumentKey.empty())` since `> DocumentKey.empty()` matches\n    // all valid document IDs.\n    const successorSeconds = readTime.toTimestamp().seconds;\n    const successorNanos = readTime.toTimestamp().nanoseconds + 1;\n    const successor = SnapshotVersion.fromTimestamp(successorNanos === 1e9\n        ? new Timestamp(successorSeconds + 1, 0)\n        : new Timestamp(successorSeconds, successorNanos));\n    return new IndexOffset(successor, DocumentKey.empty(), largestBatchId);\n}\n/** Creates a new offset based on the provided document. */\nfunction newIndexOffsetFromDocument(document) {\n    return new IndexOffset(document.readTime, document.key, INITIAL_LARGEST_BATCH_ID);\n}\n/**\n * Stores the latest read time, document and batch ID that were processed for an\n * index.\n */\nclass IndexOffset {\n    constructor(\n    /**\n     * The latest read time version that has been indexed by Firestore for this\n     * field index.\n     */\n    readTime, \n    /**\n     * The key of the last document that was indexed for this query. Use\n     * `DocumentKey.empty()` if no document has been indexed.\n     */\n    documentKey, \n    /*\n     * The largest mutation batch id that's been processed by Firestore.\n     */\n    largestBatchId) {\n        this.readTime = readTime;\n        this.documentKey = documentKey;\n        this.largestBatchId = largestBatchId;\n    }\n    /** Returns an offset that sorts before all regular offsets. */\n    static min() {\n        return new IndexOffset(SnapshotVersion.min(), DocumentKey.empty(), INITIAL_LARGEST_BATCH_ID);\n    }\n    /** Returns an offset that sorts after all regular offsets. */\n    static max() {\n        return new IndexOffset(SnapshotVersion.max(), DocumentKey.empty(), INITIAL_LARGEST_BATCH_ID);\n    }\n}\nfunction indexOffsetComparator(left, right) {\n    let cmp = left.readTime.compareTo(right.readTime);\n    if (cmp !== 0) {\n        return cmp;\n    }\n    cmp = DocumentKey.comparator(left.documentKey, right.documentKey);\n    if (cmp !== 0) {\n        return cmp;\n    }\n    return primitiveComparator(left.largestBatchId, right.largestBatchId);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst PRIMARY_LEASE_LOST_ERROR_MSG = 'The current tab is not in the required state to perform this operation. ' +\n    'It might be necessary to refresh the browser tab.';\n/**\n * A base class representing a persistence transaction, encapsulating both the\n * transaction's sequence numbers as well as a list of onCommitted listeners.\n *\n * When you call Persistence.runTransaction(), it will create a transaction and\n * pass it to your callback. You then pass it to any method that operates\n * on persistence.\n */\nclass PersistenceTransaction {\n    constructor() {\n        this.onCommittedListeners = [];\n    }\n    addOnCommittedListener(listener) {\n        this.onCommittedListeners.push(listener);\n    }\n    raiseOnCommittedEvent() {\n        this.onCommittedListeners.forEach(listener => listener());\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\n * operation fails because the primary lease has been taken by another client,\n * we ignore the error (the persistence layer will immediately call\n * `applyPrimaryLease` to propagate the primary state change). All other errors\n * are re-thrown.\n *\n * @param err - An error returned by a LocalStore operation.\n * @returns A Promise that resolves after we recovered, or the original error.\n */\nasync function ignoreIfPrimaryLeaseLoss(err) {\n    if (err.code === Code.FAILED_PRECONDITION &&\n        err.message === PRIMARY_LEASE_LOST_ERROR_MSG) {\n        logDebug('LocalStore', 'Unexpectedly lost primary lease');\n    }\n    else {\n        throw err;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * PersistencePromise is essentially a re-implementation of Promise except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */\nclass PersistencePromise {\n    constructor(callback) {\n        // NOTE: next/catchCallback will always point to our own wrapper functions,\n        // not the user's raw next() or catch() callbacks.\n        this.nextCallback = null;\n        this.catchCallback = null;\n        // When the operation resolves, we'll set result or error and mark isDone.\n        this.result = undefined;\n        this.error = undefined;\n        this.isDone = false;\n        // Set to true when .then() or .catch() are called and prevents additional\n        // chaining.\n        this.callbackAttached = false;\n        callback(value => {\n            this.isDone = true;\n            this.result = value;\n            if (this.nextCallback) {\n                // value should be defined unless T is Void, but we can't express\n                // that in the type system.\n                this.nextCallback(value);\n            }\n        }, error => {\n            this.isDone = true;\n            this.error = error;\n            if (this.catchCallback) {\n                this.catchCallback(error);\n            }\n        });\n    }\n    catch(fn) {\n        return this.next(undefined, fn);\n    }\n    next(nextFn, catchFn) {\n        if (this.callbackAttached) {\n            fail(0xe830);\n        }\n        this.callbackAttached = true;\n        if (this.isDone) {\n            if (!this.error) {\n                return this.wrapSuccess(nextFn, this.result);\n            }\n            else {\n                return this.wrapFailure(catchFn, this.error);\n            }\n        }\n        else {\n            return new PersistencePromise((resolve, reject) => {\n                this.nextCallback = (value) => {\n                    this.wrapSuccess(nextFn, value).next(resolve, reject);\n                };\n                this.catchCallback = (error) => {\n                    this.wrapFailure(catchFn, error).next(resolve, reject);\n                };\n            });\n        }\n    }\n    toPromise() {\n        return new Promise((resolve, reject) => {\n            this.next(resolve, reject);\n        });\n    }\n    wrapUserFunction(fn) {\n        try {\n            const result = fn();\n            if (result instanceof PersistencePromise) {\n                return result;\n            }\n            else {\n                return PersistencePromise.resolve(result);\n            }\n        }\n        catch (e) {\n            return PersistencePromise.reject(e);\n        }\n    }\n    wrapSuccess(nextFn, value) {\n        if (nextFn) {\n            return this.wrapUserFunction(() => nextFn(value));\n        }\n        else {\n            // If there's no nextFn, then R must be the same as T\n            return PersistencePromise.resolve(value);\n        }\n    }\n    wrapFailure(catchFn, error) {\n        if (catchFn) {\n            return this.wrapUserFunction(() => catchFn(error));\n        }\n        else {\n            return PersistencePromise.reject(error);\n        }\n    }\n    static resolve(result) {\n        return new PersistencePromise((resolve, reject) => {\n            resolve(result);\n        });\n    }\n    static reject(error) {\n        return new PersistencePromise((resolve, reject) => {\n            reject(error);\n        });\n    }\n    static waitFor(\n    // Accept all Promise types in waitFor().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    all) {\n        return new PersistencePromise((resolve, reject) => {\n            let expectedCount = 0;\n            let resolvedCount = 0;\n            let done = false;\n            all.forEach(element => {\n                ++expectedCount;\n                element.next(() => {\n                    ++resolvedCount;\n                    if (done && resolvedCount === expectedCount) {\n                        resolve();\n                    }\n                }, err => reject(err));\n            });\n            done = true;\n            if (resolvedCount === expectedCount) {\n                resolve();\n            }\n        });\n    }\n    /**\n     * Given an array of predicate functions that asynchronously evaluate to a\n     * boolean, implements a short-circuiting `or` between the results. Predicates\n     * will be evaluated until one of them returns `true`, then stop. The final\n     * result will be whether any of them returned `true`.\n     */\n    static or(predicates) {\n        let p = PersistencePromise.resolve(false);\n        for (const predicate of predicates) {\n            p = p.next(isTrue => {\n                if (isTrue) {\n                    return PersistencePromise.resolve(isTrue);\n                }\n                else {\n                    return predicate();\n                }\n            });\n        }\n        return p;\n    }\n    static forEach(collection, f) {\n        const promises = [];\n        collection.forEach((r, s) => {\n            promises.push(f.call(this, r, s));\n        });\n        return this.waitFor(promises);\n    }\n    /**\n     * Concurrently map all array elements through asynchronous function.\n     */\n    static mapArray(array, f) {\n        return new PersistencePromise((resolve, reject) => {\n            const expectedCount = array.length;\n            const results = new Array(expectedCount);\n            let resolvedCount = 0;\n            for (let i = 0; i < expectedCount; i++) {\n                const current = i;\n                f(array[current]).next(result => {\n                    results[current] = result;\n                    ++resolvedCount;\n                    if (resolvedCount === expectedCount) {\n                        resolve(results);\n                    }\n                }, err => reject(err));\n            }\n        });\n    }\n    /**\n     * An alternative to recursive PersistencePromise calls, that avoids\n     * potential memory problems from unbounded chains of promises.\n     *\n     * The `action` will be called repeatedly while `condition` is true.\n     */\n    static doWhile(condition, action) {\n        return new PersistencePromise((resolve, reject) => {\n            const process = () => {\n                if (condition() === true) {\n                    action().next(() => {\n                        process();\n                    }, reject);\n                }\n                else {\n                    resolve();\n                }\n            };\n            process();\n        });\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `indexedDB` are guarded by SimpleDb.isAvailable() and getGlobal()\n/* eslint-disable no-restricted-globals */\nconst LOG_TAG$i = 'SimpleDb';\n/**\n * The maximum number of retry attempts for an IndexedDb transaction that fails\n * with a DOMException.\n */\nconst TRANSACTION_RETRY_COUNT = 3;\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nclass SimpleDbTransaction {\n    static open(db, action, mode, objectStoreNames) {\n        try {\n            return new SimpleDbTransaction(action, db.transaction(objectStoreNames, mode));\n        }\n        catch (e) {\n            throw new IndexedDbTransactionError(action, e);\n        }\n    }\n    constructor(action, transaction) {\n        this.action = action;\n        this.transaction = transaction;\n        this.aborted = false;\n        /**\n         * A `Promise` that resolves with the result of the IndexedDb transaction.\n         */\n        this.completionDeferred = new Deferred();\n        this.transaction.oncomplete = () => {\n            this.completionDeferred.resolve();\n        };\n        this.transaction.onabort = () => {\n            if (transaction.error) {\n                this.completionDeferred.reject(new IndexedDbTransactionError(action, transaction.error));\n            }\n            else {\n                this.completionDeferred.resolve();\n            }\n        };\n        this.transaction.onerror = (event) => {\n            const error = checkForAndReportiOSError(event.target.error);\n            this.completionDeferred.reject(new IndexedDbTransactionError(action, error));\n        };\n    }\n    get completionPromise() {\n        return this.completionDeferred.promise;\n    }\n    abort(error) {\n        if (error) {\n            this.completionDeferred.reject(error);\n        }\n        if (!this.aborted) {\n            logDebug(LOG_TAG$i, 'Aborting transaction:', error ? error.message : 'Client-initiated abort');\n            this.aborted = true;\n            this.transaction.abort();\n        }\n    }\n    maybeCommit() {\n        // If the browser supports V3 IndexedDB, we invoke commit() explicitly to\n        // speed up index DB processing if the event loop remains blocks.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const maybeV3IndexedDb = this.transaction;\n        if (!this.aborted && typeof maybeV3IndexedDb.commit === 'function') {\n            maybeV3IndexedDb.commit();\n        }\n    }\n    /**\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n     * operations performed on the SimpleDbStore happen within the context of this\n     * transaction and it cannot be used anymore once the transaction is\n     * completed.\n     *\n     * Note that we can't actually enforce that the KeyType and ValueType are\n     * correct, but they allow type safety through the rest of the consuming code.\n     */\n    store(storeName) {\n        const store = this.transaction.objectStore(storeName);\n        return new SimpleDbStore(store);\n    }\n}\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */\nclass SimpleDb {\n    /** Deletes the specified database. */\n    static delete(name) {\n        logDebug(LOG_TAG$i, 'Removing database:', name);\n        const globals = getGlobal();\n        return wrapRequest(globals.indexedDB.deleteDatabase(name)).toPromise();\n    }\n    /** Returns true if IndexedDB is available in the current environment. */\n    static isAvailable() {\n        if (!isIndexedDBAvailable()) {\n            return false;\n        }\n        if (SimpleDb.isMockPersistence()) {\n            return true;\n        }\n        // We extensively use indexed array values and compound keys,\n        // which IE and Edge do not support. However, they still have indexedDB\n        // defined on the window, so we need to check for them here and make sure\n        // to return that persistence is not enabled for those browsers.\n        // For tracking support of this feature, see here:\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n        // Check the UA string to find out the browser.\n        const ua = getUA();\n        // IE 10\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n        // IE 11\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n        // Edge\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n        // iOS Safari: Disable for users running iOS version < 10.\n        const iOSVersion = SimpleDb.getIOSVersion(ua);\n        const isUnsupportedIOS = 0 < iOSVersion && iOSVersion < 10;\n        // Android browser: Disable for users running version < 4.5.\n        const androidVersion = getAndroidVersion(ua);\n        const isUnsupportedAndroid = 0 < androidVersion && androidVersion < 4.5;\n        if (ua.indexOf('MSIE ') > 0 ||\n            ua.indexOf('Trident/') > 0 ||\n            ua.indexOf('Edge/') > 0 ||\n            isUnsupportedIOS ||\n            isUnsupportedAndroid) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n     * (see https://github.com/axemclion/IndexedDBShim).\n     */\n    static isMockPersistence() {\n        var _a;\n        return (typeof process !== 'undefined' &&\n            ((_a = process.env) === null || _a === void 0 ? void 0 : _a.USE_MOCK_PERSISTENCE) === 'YES');\n    }\n    /** Helper to get a typed SimpleDbStore from a transaction. */\n    static getStore(txn, store) {\n        return txn.store(store);\n    }\n    // visible for testing\n    /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n    static getIOSVersion(ua) {\n        const iOSVersionRegex = ua.match(/i(?:phone|pad|pod) os ([\\d_]+)/i);\n        const version = iOSVersionRegex\n            ? iOSVersionRegex[1].split('_').slice(0, 2).join('.')\n            : '-1';\n        return Number(version);\n    }\n    /*\n     * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n     *\n     * Note that `version` must not be a downgrade. IndexedDB does not support\n     * downgrading the schema version. We currently do not support any way to do\n     * versioning outside of IndexedDB's versioning mechanism, as only\n     * version-upgrade transactions are allowed to do things like create\n     * objectstores.\n     */\n    constructor(name, version, schemaConverter) {\n        this.name = name;\n        this.version = version;\n        this.schemaConverter = schemaConverter;\n        this.lastClosedDbVersion = null;\n        const iOSVersion = SimpleDb.getIOSVersion(getUA());\n        // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n        // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n        // whatever reason it's much harder to hit after 12.2 so we only proactively\n        // log on 12.2.\n        if (iOSVersion === 12.2) {\n            logError('Firestore persistence suffers from a bug in iOS 12.2 ' +\n                'Safari that may cause your app to stop working. See ' +\n                'https://stackoverflow.com/q/56496296/110915 for details ' +\n                'and a potential workaround.');\n        }\n    }\n    /**\n     * Opens the specified database, creating or upgrading it if necessary.\n     */\n    async ensureDb(action) {\n        if (!this.db) {\n            logDebug(LOG_TAG$i, 'Opening database:', this.name);\n            this.db = await new Promise((resolve, reject) => {\n                // TODO(mikelehen): Investigate browser compatibility.\n                // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n                // suggests IE9 and older WebKit browsers handle upgrade\n                // differently. They expect setVersion, as described here:\n                // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n                const request = indexedDB.open(this.name, this.version);\n                request.onsuccess = (event) => {\n                    const db = event.target.result;\n                    resolve(db);\n                };\n                request.onblocked = () => {\n                    reject(new IndexedDbTransactionError(action, 'Cannot upgrade IndexedDB schema while another tab is open. ' +\n                        'Close all tabs that access Firestore and reload this page to proceed.'));\n                };\n                request.onerror = (event) => {\n                    const error = event.target.error;\n                    if (error.name === 'VersionError') {\n                        reject(new FirestoreError(Code.FAILED_PRECONDITION, 'A newer version of the Firestore SDK was previously used and so the persisted ' +\n                            'data is not compatible with the version of the SDK you are now using. The SDK ' +\n                            'will operate with persistence disabled. If you need persistence, please ' +\n                            're-upgrade to a newer version of the SDK or else clear the persisted IndexedDB ' +\n                            'data for your app to start fresh.'));\n                    }\n                    else if (error.name === 'InvalidStateError') {\n                        reject(new FirestoreError(Code.FAILED_PRECONDITION, 'Unable to open an IndexedDB connection. This could be due to running in a ' +\n                            'private browsing session on a browser whose private browsing sessions do not ' +\n                            'support IndexedDB: ' +\n                            error));\n                    }\n                    else {\n                        reject(new IndexedDbTransactionError(action, error));\n                    }\n                };\n                request.onupgradeneeded = (event) => {\n                    logDebug(LOG_TAG$i, 'Database \"' + this.name + '\" requires upgrade from version:', event.oldVersion);\n                    const db = event.target.result;\n                    if (this.lastClosedDbVersion !== null &&\n                        this.lastClosedDbVersion !== event.oldVersion) {\n                        // This thrown error will get passed to the `onerror` callback\n                        // registered above, and will then be propagated correctly.\n                        throw new Error(`refusing to open IndexedDB database due to potential ` +\n                            `corruption of the IndexedDB database data; this corruption ` +\n                            `could be caused by clicking the \"clear site data\" button in ` +\n                            `a web browser; try reloading the web page to re-initialize ` +\n                            `the IndexedDB database: ` +\n                            `lastClosedDbVersion=${this.lastClosedDbVersion}, ` +\n                            `event.oldVersion=${event.oldVersion}, ` +\n                            `event.newVersion=${event.newVersion}, ` +\n                            `db.version=${db.version}`);\n                    }\n                    this.schemaConverter\n                        .createOrUpgrade(db, request.transaction, event.oldVersion, this.version)\n                        .next(() => {\n                        logDebug(LOG_TAG$i, 'Database upgrade to version ' + this.version + ' complete');\n                    });\n                };\n            });\n            this.db.addEventListener('close', event => {\n                const db = event.target;\n                this.lastClosedDbVersion = db.version;\n            }, { passive: true });\n        }\n        this.db.addEventListener('versionchange', event => {\n            var _a;\n            // Notify the listener if another tab attempted to delete the IndexedDb\n            // database, such as by calling clearIndexedDbPersistence().\n            if (event.newVersion === null) {\n                logWarn(`Received \"versionchange\" event with newVersion===null; ` +\n                    'notifying the registered DatabaseDeletedListener, if any');\n                (_a = this.databaseDeletedListener) === null || _a === void 0 ? void 0 : _a.call(this);\n            }\n        }, { passive: true });\n        return this.db;\n    }\n    setDatabaseDeletedListener(databaseDeletedListener) {\n        if (this.databaseDeletedListener) {\n            throw new Error('setDatabaseDeletedListener() may only be called once, ' +\n                'and it has already been called');\n        }\n        this.databaseDeletedListener = databaseDeletedListener;\n    }\n    async runTransaction(action, mode, objectStores, transactionFn) {\n        const readonly = mode === 'readonly';\n        let attemptNumber = 0;\n        while (true) {\n            ++attemptNumber;\n            try {\n                this.db = await this.ensureDb(action);\n                const transaction = SimpleDbTransaction.open(this.db, action, readonly ? 'readonly' : 'readwrite', objectStores);\n                const transactionFnResult = transactionFn(transaction)\n                    .next(result => {\n                    transaction.maybeCommit();\n                    return result;\n                })\n                    .catch(error => {\n                    // Abort the transaction if there was an error.\n                    transaction.abort(error);\n                    // We cannot actually recover, and calling `abort()` will cause the transaction's\n                    // completion promise to be rejected. This in turn means that we won't use\n                    // `transactionFnResult` below. We return a rejection here so that we don't add the\n                    // possibility of returning `void` to the type of `transactionFnResult`.\n                    return PersistencePromise.reject(error);\n                })\n                    .toPromise();\n                // As noted above, errors are propagated by aborting the transaction. So\n                // we swallow any error here to avoid the browser logging it as unhandled.\n                transactionFnResult.catch(() => { });\n                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n                // fire), but still return the original transactionFnResult back to the\n                // caller.\n                await transaction.completionPromise;\n                return transactionFnResult;\n            }\n            catch (e) {\n                const error = e;\n                // TODO(schmidt-sebastian): We could probably be smarter about this and\n                // not retry exceptions that are likely unrecoverable (such as quota\n                // exceeded errors).\n                // Note: We cannot use an instanceof check for FirestoreException, since the\n                // exception is wrapped in a generic error by our async/await handling.\n                const retryable = error.name !== 'FirebaseError' &&\n                    attemptNumber < TRANSACTION_RETRY_COUNT;\n                logDebug(LOG_TAG$i, 'Transaction failed with error:', error.message, 'Retrying:', retryable);\n                this.close();\n                if (!retryable) {\n                    return Promise.reject(error);\n                }\n            }\n        }\n    }\n    close() {\n        if (this.db) {\n            this.db.close();\n        }\n        this.db = undefined;\n    }\n}\n/** Parse User Agent to determine Android version. Returns -1 if not found. */\nfunction getAndroidVersion(ua) {\n    const androidVersionRegex = ua.match(/Android ([\\d.]+)/i);\n    const version = androidVersionRegex\n        ? androidVersionRegex[1].split('.').slice(0, 2).join('.')\n        : '-1';\n    return Number(version);\n}\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */\nclass IterationController {\n    constructor(dbCursor) {\n        this.dbCursor = dbCursor;\n        this.shouldStop = false;\n        this.nextKey = null;\n    }\n    get isDone() {\n        return this.shouldStop;\n    }\n    get skipToKey() {\n        return this.nextKey;\n    }\n    set cursor(value) {\n        this.dbCursor = value;\n    }\n    /**\n     * This function can be called to stop iteration at any point.\n     */\n    done() {\n        this.shouldStop = true;\n    }\n    /**\n     * This function can be called to skip to that next key, which could be\n     * an index or a primary key.\n     */\n    skip(key) {\n        this.nextKey = key;\n    }\n    /**\n     * Delete the current cursor value from the object store.\n     *\n     * NOTE: You CANNOT do this with a keysOnly query.\n     */\n    delete() {\n        return wrapRequest(this.dbCursor.delete());\n    }\n}\n/** An error that wraps exceptions that thrown during IndexedDB execution. */\nclass IndexedDbTransactionError extends FirestoreError {\n    constructor(actionName, cause) {\n        super(Code.UNAVAILABLE, `IndexedDB transaction '${actionName}' failed: ${cause}`);\n        this.name = 'IndexedDbTransactionError';\n    }\n}\n/** Verifies whether `e` is an IndexedDbTransactionError. */\nfunction isIndexedDbTransactionError(e) {\n    // Use name equality, as instanceof checks on errors don't work with errors\n    // that wrap other errors.\n    return e.name === 'IndexedDbTransactionError';\n}\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */\nclass SimpleDbStore {\n    constructor(store) {\n        this.store = store;\n    }\n    put(keyOrValue, value) {\n        let request;\n        if (value !== undefined) {\n            logDebug(LOG_TAG$i, 'PUT', this.store.name, keyOrValue, value);\n            request = this.store.put(value, keyOrValue);\n        }\n        else {\n            logDebug(LOG_TAG$i, 'PUT', this.store.name, '<auto-key>', keyOrValue);\n            request = this.store.put(keyOrValue);\n        }\n        return wrapRequest(request);\n    }\n    /**\n     * Adds a new value into an Object Store and returns the new key. Similar to\n     * IndexedDb's `add()`, this method will fail on primary key collisions.\n     *\n     * @param value - The object to write.\n     * @returns The key of the value to add.\n     */\n    add(value) {\n        logDebug(LOG_TAG$i, 'ADD', this.store.name, value, value);\n        const request = this.store.add(value);\n        return wrapRequest(request);\n    }\n    /**\n     * Gets the object with the specified key from the specified store, or null\n     * if no object exists with the specified key.\n     *\n     * @key The key of the object to get.\n     * @returns The object with the specified key or null if no object exists.\n     */\n    get(key) {\n        const request = this.store.get(key);\n        // We're doing an unsafe cast to ValueType.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return wrapRequest(request).next(result => {\n            // Normalize nonexistence to null.\n            if (result === undefined) {\n                result = null;\n            }\n            logDebug(LOG_TAG$i, 'GET', this.store.name, key, result);\n            return result;\n        });\n    }\n    delete(key) {\n        logDebug(LOG_TAG$i, 'DELETE', this.store.name, key);\n        const request = this.store.delete(key);\n        return wrapRequest(request);\n    }\n    /**\n     * If we ever need more of the count variants, we can add overloads. For now,\n     * all we need is to count everything in a store.\n     *\n     * Returns the number of rows in the store.\n     */\n    count() {\n        logDebug(LOG_TAG$i, 'COUNT', this.store.name);\n        const request = this.store.count();\n        return wrapRequest(request);\n    }\n    loadAll(indexOrRange, range) {\n        const iterateOptions = this.options(indexOrRange, range);\n        // Use `getAll()` if the browser supports IndexedDB v3, as it is roughly\n        // 20% faster.\n        const store = iterateOptions.index\n            ? this.store.index(iterateOptions.index)\n            : this.store;\n        if (typeof store.getAll === 'function') {\n            const request = store.getAll(iterateOptions.range);\n            return new PersistencePromise((resolve, reject) => {\n                request.onerror = (event) => {\n                    reject(event.target.error);\n                };\n                request.onsuccess = (event) => {\n                    resolve(event.target.result);\n                };\n            });\n        }\n        else {\n            const cursor = this.cursor(iterateOptions);\n            const results = [];\n            return this.iterateCursor(cursor, (key, value) => {\n                results.push(value);\n            }).next(() => {\n                return results;\n            });\n        }\n    }\n    /**\n     * Loads the first `count` elements from the provided index range. Loads all\n     * elements if no limit is provided.\n     */\n    loadFirst(range, count) {\n        const request = this.store.getAll(range, count === null ? undefined : count);\n        return new PersistencePromise((resolve, reject) => {\n            request.onerror = (event) => {\n                reject(event.target.error);\n            };\n            request.onsuccess = (event) => {\n                resolve(event.target.result);\n            };\n        });\n    }\n    deleteAll(indexOrRange, range) {\n        logDebug(LOG_TAG$i, 'DELETE ALL', this.store.name);\n        const options = this.options(indexOrRange, range);\n        options.keysOnly = false;\n        const cursor = this.cursor(options);\n        return this.iterateCursor(cursor, (key, value, control) => {\n            // NOTE: Calling delete() on a cursor is documented as more efficient than\n            // calling delete() on an object store with a single key\n            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),\n            // however, this requires us *not* to use a keysOnly cursor\n            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We\n            // may want to compare the performance of each method.\n            return control.delete();\n        });\n    }\n    iterate(optionsOrCallback, callback) {\n        let options;\n        if (!callback) {\n            options = {};\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        const cursor = this.cursor(options);\n        return this.iterateCursor(cursor, callback);\n    }\n    /**\n     * Iterates over a store, but waits for the given callback to complete for\n     * each entry before iterating the next entry. This allows the callback to do\n     * asynchronous work to determine if this iteration should continue.\n     *\n     * The provided callback should return `true` to continue iteration, and\n     * `false` otherwise.\n     */\n    iterateSerial(callback) {\n        const cursorRequest = this.cursor({});\n        return new PersistencePromise((resolve, reject) => {\n            cursorRequest.onerror = (event) => {\n                const error = checkForAndReportiOSError(event.target.error);\n                reject(error);\n            };\n            cursorRequest.onsuccess = (event) => {\n                const cursor = event.target.result;\n                if (!cursor) {\n                    resolve();\n                    return;\n                }\n                callback(cursor.primaryKey, cursor.value).next(shouldContinue => {\n                    if (shouldContinue) {\n                        cursor.continue();\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            };\n        });\n    }\n    iterateCursor(cursorRequest, fn) {\n        const results = [];\n        return new PersistencePromise((resolve, reject) => {\n            cursorRequest.onerror = (event) => {\n                reject(event.target.error);\n            };\n            cursorRequest.onsuccess = (event) => {\n                const cursor = event.target.result;\n                if (!cursor) {\n                    resolve();\n                    return;\n                }\n                const controller = new IterationController(cursor);\n                const userResult = fn(cursor.primaryKey, cursor.value, controller);\n                if (userResult instanceof PersistencePromise) {\n                    const userPromise = userResult.catch(err => {\n                        controller.done();\n                        return PersistencePromise.reject(err);\n                    });\n                    results.push(userPromise);\n                }\n                if (controller.isDone) {\n                    resolve();\n                }\n                else if (controller.skipToKey === null) {\n                    cursor.continue();\n                }\n                else {\n                    cursor.continue(controller.skipToKey);\n                }\n            };\n        }).next(() => PersistencePromise.waitFor(results));\n    }\n    options(indexOrRange, range) {\n        let indexName = undefined;\n        if (indexOrRange !== undefined) {\n            if (typeof indexOrRange === 'string') {\n                indexName = indexOrRange;\n            }\n            else {\n                range = indexOrRange;\n            }\n        }\n        return { index: indexName, range };\n    }\n    cursor(options) {\n        let direction = 'next';\n        if (options.reverse) {\n            direction = 'prev';\n        }\n        if (options.index) {\n            const index = this.store.index(options.index);\n            if (options.keysOnly) {\n                return index.openKeyCursor(options.range, direction);\n            }\n            else {\n                return index.openCursor(options.range, direction);\n            }\n        }\n        else {\n            return this.store.openCursor(options.range, direction);\n        }\n    }\n}\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */\nfunction wrapRequest(request) {\n    return new PersistencePromise((resolve, reject) => {\n        request.onsuccess = (event) => {\n            const result = event.target.result;\n            resolve(result);\n        };\n        request.onerror = (event) => {\n            const error = checkForAndReportiOSError(event.target.error);\n            reject(error);\n        };\n    });\n}\n// Guard so we only report the error once.\nlet reportedIOSError = false;\nfunction checkForAndReportiOSError(error) {\n    const iOSVersion = SimpleDb.getIOSVersion(getUA());\n    if (iOSVersion >= 12.2 && iOSVersion < 13) {\n        const IOS_ERROR = 'An internal error was encountered in the Indexed Database server';\n        if (error.message.indexOf(IOS_ERROR) >= 0) {\n            // Wrap error in a more descriptive one.\n            const newError = new FirestoreError('internal', `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${IOS_ERROR}'. This is likely ` +\n                `due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 ` +\n                `for details and a potential workaround.`);\n            if (!reportedIOSError) {\n                reportedIOSError = true;\n                // Throw a global exception outside of this promise chain, for the user to\n                // potentially catch.\n                setTimeout(() => {\n                    throw newError;\n                }, 0);\n            }\n            return newError;\n        }\n    }\n    return error;\n}\n\nconst LOG_TAG$h = 'IndexBackfiller';\n/** How long we wait to try running index backfill after SDK initialization. */\nconst INITIAL_BACKFILL_DELAY_MS = 15 * 1000;\n/** Minimum amount of time between backfill checks, after the first one. */\nconst REGULAR_BACKFILL_DELAY_MS = 60 * 1000;\n/** The maximum number of documents to process each time backfill() is called. */\nconst MAX_DOCUMENTS_TO_PROCESS = 50;\n/** This class is responsible for the scheduling of Index Backfiller. */\nclass IndexBackfillerScheduler {\n    constructor(asyncQueue, backfiller) {\n        this.asyncQueue = asyncQueue;\n        this.backfiller = backfiller;\n        this.task = null;\n    }\n    start() {\n        this.schedule(INITIAL_BACKFILL_DELAY_MS);\n    }\n    stop() {\n        if (this.task) {\n            this.task.cancel();\n            this.task = null;\n        }\n    }\n    get started() {\n        return this.task !== null;\n    }\n    schedule(delay) {\n        logDebug(LOG_TAG$h, `Scheduled in ${delay}ms`);\n        this.task = this.asyncQueue.enqueueAfterDelay(\"index_backfill\" /* TimerId.IndexBackfill */, delay, async () => {\n            this.task = null;\n            try {\n                const documentsProcessed = await this.backfiller.backfill();\n                logDebug(LOG_TAG$h, `Documents written: ${documentsProcessed}`);\n            }\n            catch (e) {\n                if (isIndexedDbTransactionError(e)) {\n                    logDebug(LOG_TAG$h, 'Ignoring IndexedDB error during index backfill: ', e);\n                }\n                else {\n                    await ignoreIfPrimaryLeaseLoss(e);\n                }\n            }\n            await this.schedule(REGULAR_BACKFILL_DELAY_MS);\n        });\n    }\n}\n/** Implements the steps for backfilling indexes. */\nclass IndexBackfiller {\n    constructor(\n    /**\n     * LocalStore provides access to IndexManager and LocalDocumentView.\n     * These properties will update when the user changes. Consequently,\n     * making a local copy of IndexManager and LocalDocumentView will require\n     * updates over time. The simpler solution is to rely on LocalStore to have\n     * an up-to-date references to IndexManager and LocalDocumentStore.\n     */\n    localStore, persistence) {\n        this.localStore = localStore;\n        this.persistence = persistence;\n    }\n    async backfill(maxDocumentsToProcess = MAX_DOCUMENTS_TO_PROCESS) {\n        return this.persistence.runTransaction('Backfill Indexes', 'readwrite-primary', txn => this.writeIndexEntries(txn, maxDocumentsToProcess));\n    }\n    /** Writes index entries until the cap is reached. Returns the number of documents processed. */\n    writeIndexEntries(transaction, maxDocumentsToProcess) {\n        const processedCollectionGroups = new Set();\n        let documentsRemaining = maxDocumentsToProcess;\n        let continueLoop = true;\n        return PersistencePromise.doWhile(() => continueLoop === true && documentsRemaining > 0, () => {\n            return this.localStore.indexManager\n                .getNextCollectionGroupToUpdate(transaction)\n                .next((collectionGroup) => {\n                if (collectionGroup === null ||\n                    processedCollectionGroups.has(collectionGroup)) {\n                    continueLoop = false;\n                }\n                else {\n                    logDebug(LOG_TAG$h, `Processing collection: ${collectionGroup}`);\n                    return this.writeEntriesForCollectionGroup(transaction, collectionGroup, documentsRemaining).next(documentsProcessed => {\n                        documentsRemaining -= documentsProcessed;\n                        processedCollectionGroups.add(collectionGroup);\n                    });\n                }\n            });\n        }).next(() => maxDocumentsToProcess - documentsRemaining);\n    }\n    /**\n     * Writes entries for the provided collection group. Returns the number of documents processed.\n     */\n    writeEntriesForCollectionGroup(transaction, collectionGroup, documentsRemainingUnderCap) {\n        // Use the earliest offset of all field indexes to query the local cache.\n        return this.localStore.indexManager\n            .getMinOffsetFromCollectionGroup(transaction, collectionGroup)\n            .next(existingOffset => this.localStore.localDocuments\n            .getNextDocuments(transaction, collectionGroup, existingOffset, documentsRemainingUnderCap)\n            .next(nextBatch => {\n            const docs = nextBatch.changes;\n            return this.localStore.indexManager\n                .updateIndexEntries(transaction, docs)\n                .next(() => this.getNewOffset(existingOffset, nextBatch))\n                .next(newOffset => {\n                logDebug(LOG_TAG$h, `Updating offset: ${newOffset}`);\n                return this.localStore.indexManager.updateCollectionGroup(transaction, collectionGroup, newOffset);\n            })\n                .next(() => docs.size);\n        }));\n    }\n    /** Returns the next offset based on the provided documents. */\n    getNewOffset(existingOffset, lookupResult) {\n        let maxOffset = existingOffset;\n        lookupResult.changes.forEach((key, document) => {\n            const newOffset = newIndexOffsetFromDocument(document);\n            if (indexOffsetComparator(newOffset, maxOffset) > 0) {\n                maxOffset = newOffset;\n            }\n        });\n        return new IndexOffset(maxOffset.readTime, maxOffset.documentKey, Math.max(lookupResult.batchId, existingOffset.largestBatchId));\n    }\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\n * exceed. All subsequent calls to next will return increasing values. If provided with a\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\n * well as write out sequence numbers that it produces via `next()`.\n */\nclass ListenSequence {\n    constructor(previousValue, sequenceNumberSyncer) {\n        this.previousValue = previousValue;\n        if (sequenceNumberSyncer) {\n            sequenceNumberSyncer.sequenceNumberHandler = sequenceNumber => this.setPreviousValue(sequenceNumber);\n            this.writeNewSequenceNumber = sequenceNumber => sequenceNumberSyncer.writeSequenceNumber(sequenceNumber);\n        }\n    }\n    setPreviousValue(externalPreviousValue) {\n        this.previousValue = Math.max(externalPreviousValue, this.previousValue);\n        return this.previousValue;\n    }\n    next() {\n        const nextValue = ++this.previousValue;\n        if (this.writeNewSequenceNumber) {\n            this.writeNewSequenceNumber(nextValue);\n        }\n        return nextValue;\n    }\n}\nListenSequence.INVALID = -1;\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst escapeChar = '\\u0001';\nconst encodedSeparatorChar = '\\u0001';\nconst encodedNul = '\\u0010';\nconst encodedEscape = '\\u0011';\n/**\n * Encodes a resource path into a IndexedDb-compatible string form.\n */\nfunction encodeResourcePath(path) {\n    let result = '';\n    for (let i = 0; i < path.length; i++) {\n        if (result.length > 0) {\n            result = encodeSeparator(result);\n        }\n        result = encodeSegment(path.get(i), result);\n    }\n    return encodeSeparator(result);\n}\n/** Encodes a single segment of a resource path into the given result */\nfunction encodeSegment(segment, resultBuf) {\n    let result = resultBuf;\n    const length = segment.length;\n    for (let i = 0; i < length; i++) {\n        const c = segment.charAt(i);\n        switch (c) {\n            case '\\0':\n                result += escapeChar + encodedNul;\n                break;\n            case escapeChar:\n                result += escapeChar + encodedEscape;\n                break;\n            default:\n                result += c;\n        }\n    }\n    return result;\n}\n/** Encodes a path separator into the given result */\nfunction encodeSeparator(result) {\n    return result + escapeChar + encodedSeparatorChar;\n}\n/**\n * Decodes the given IndexedDb-compatible string form of a resource path into\n * a ResourcePath instance. Note that this method is not suitable for use with\n * decoding resource names from the server; those are One Platform format\n * strings.\n */\nfunction decodeResourcePath(path) {\n    // Event the empty path must encode as a path of at least length 2. A path\n    // with exactly 2 must be the empty path.\n    const length = path.length;\n    hardAssert(length >= 2, 0xfb98, { path });\n    if (length === 2) {\n        hardAssert(path.charAt(0) === escapeChar && path.charAt(1) === encodedSeparatorChar, 0xdb51, { path });\n        return ResourcePath.emptyPath();\n    }\n    // Escape characters cannot exist past the second-to-last position in the\n    // source value.\n    const lastReasonableEscapeIndex = length - 2;\n    const segments = [];\n    let segmentBuilder = '';\n    for (let start = 0; start < length;) {\n        // The last two characters of a valid encoded path must be a separator, so\n        // there must be an end to this segment.\n        const end = path.indexOf(escapeChar, start);\n        if (end < 0 || end > lastReasonableEscapeIndex) {\n            fail(0xc553, { path });\n        }\n        const next = path.charAt(end + 1);\n        switch (next) {\n            case encodedSeparatorChar:\n                const currentPiece = path.substring(start, end);\n                let segment;\n                if (segmentBuilder.length === 0) {\n                    // Avoid copying for the common case of a segment that excludes \\0\n                    // and \\001\n                    segment = currentPiece;\n                }\n                else {\n                    segmentBuilder += currentPiece;\n                    segment = segmentBuilder;\n                    segmentBuilder = '';\n                }\n                segments.push(segment);\n                break;\n            case encodedNul:\n                segmentBuilder += path.substring(start, end);\n                segmentBuilder += '\\0';\n                break;\n            case encodedEscape:\n                // The escape character can be used in the output to encode itself.\n                segmentBuilder += path.substring(start, end + 1);\n                break;\n            default:\n                fail(0xeeef, { path });\n        }\n        start = end + 2;\n    }\n    return new ResourcePath(segments);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DbRemoteDocumentStore$1 = 'remoteDocuments';\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */\nconst DbPrimaryClientStore = 'owner';\n/**\n * The key string used for the single object that exists in the\n * DbPrimaryClient store.\n */\nconst DbPrimaryClientKey = 'owner';\n/** Name of the IndexedDb object store.  */\nconst DbMutationQueueStore = 'mutationQueues';\n/** Keys are automatically assigned via the userId property. */\nconst DbMutationQueueKeyPath = 'userId';\n/** Name of the IndexedDb object store.  */\nconst DbMutationBatchStore = 'mutations';\n/** Keys are automatically assigned via the userId, batchId properties. */\nconst DbMutationBatchKeyPath = 'batchId';\n/** The index name for lookup of mutations by user. */\nconst DbMutationBatchUserMutationsIndex = 'userMutationsIndex';\n/** The user mutations index is keyed by [userId, batchId] pairs. */\nconst DbMutationBatchUserMutationsKeyPath = ['userId', 'batchId'];\n/**\n * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n * over all of a user's document mutations.\n */\nfunction newDbDocumentMutationPrefixForUser(userId) {\n    return [userId];\n}\n/**\n * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n * index to iterate over all at document mutations for a given path or lower.\n */\nfunction newDbDocumentMutationPrefixForPath(userId, path) {\n    return [userId, encodeResourcePath(path)];\n}\n/**\n * Creates a full index key of [userId, encodedPath, batchId] for inserting\n * and deleting into the DbDocumentMutations index.\n */\nfunction newDbDocumentMutationKey(userId, path, batchId) {\n    return [userId, encodeResourcePath(path), batchId];\n}\n/**\n * Because we store all the useful information for this store in the key,\n * there is no useful information to store as the value. The raw (unencoded)\n * path cannot be stored because IndexedDb doesn't store prototype\n * information.\n */\nconst DbDocumentMutationPlaceholder = {};\nconst DbDocumentMutationStore = 'documentMutations';\nconst DbRemoteDocumentStore = 'remoteDocumentsV14';\n/**\n * The primary key of the remote documents store, which allows for efficient\n * access by collection path and read time.\n */\nconst DbRemoteDocumentKeyPath = [\n    'prefixPath',\n    'collectionGroup',\n    'readTime',\n    'documentId'\n];\n/** An index that provides access to documents by key. */\nconst DbRemoteDocumentDocumentKeyIndex = 'documentKeyIndex';\nconst DbRemoteDocumentDocumentKeyIndexPath = [\n    'prefixPath',\n    'collectionGroup',\n    'documentId'\n];\n/**\n * An index that provides access to documents by collection group and read\n * time.\n *\n * This index is used by the index backfiller.\n */\nconst DbRemoteDocumentCollectionGroupIndex = 'collectionGroupIndex';\nconst DbRemoteDocumentCollectionGroupIndexPath = [\n    'collectionGroup',\n    'readTime',\n    'prefixPath',\n    'documentId'\n];\nconst DbRemoteDocumentGlobalStore = 'remoteDocumentGlobal';\nconst DbRemoteDocumentGlobalKey = 'remoteDocumentGlobalKey';\nconst DbTargetStore = 'targets';\n/** Keys are automatically assigned via the targetId property. */\nconst DbTargetKeyPath = 'targetId';\n/** The name of the queryTargets index. */\nconst DbTargetQueryTargetsIndexName = 'queryTargetsIndex';\n/**\n * The index of all canonicalIds to the targets that they match. This is not\n * a unique mapping because canonicalId does not promise a unique name for all\n * possible queries, so we append the targetId to make the mapping unique.\n */\nconst DbTargetQueryTargetsKeyPath = ['canonicalId', 'targetId'];\n/** Name of the IndexedDb object store.  */\nconst DbTargetDocumentStore = 'targetDocuments';\n/** Keys are automatically assigned via the targetId, path properties. */\nconst DbTargetDocumentKeyPath = ['targetId', 'path'];\n/** The index name for the reverse index. */\nconst DbTargetDocumentDocumentTargetsIndex = 'documentTargetsIndex';\n/** We also need to create the reverse index for these properties. */\nconst DbTargetDocumentDocumentTargetsKeyPath = ['path', 'targetId'];\n/**\n * The key string used for the single object that exists in the\n * DbTargetGlobal store.\n */\nconst DbTargetGlobalKey = 'targetGlobalKey';\nconst DbTargetGlobalStore = 'targetGlobal';\n/** Name of the IndexedDb object store. */\nconst DbCollectionParentStore = 'collectionParents';\n/** Keys are automatically assigned via the collectionId, parent properties. */\nconst DbCollectionParentKeyPath = ['collectionId', 'parent'];\n/** Name of the IndexedDb object store. */\nconst DbClientMetadataStore = 'clientMetadata';\n/** Keys are automatically assigned via the clientId properties. */\nconst DbClientMetadataKeyPath = 'clientId';\n/** Name of the IndexedDb object store. */\nconst DbBundleStore = 'bundles';\nconst DbBundleKeyPath = 'bundleId';\n/** Name of the IndexedDb object store. */\nconst DbNamedQueryStore = 'namedQueries';\nconst DbNamedQueryKeyPath = 'name';\n/** Name of the IndexedDb object store. */\nconst DbIndexConfigurationStore = 'indexConfiguration';\nconst DbIndexConfigurationKeyPath = 'indexId';\n/**\n * An index that provides access to the index configurations by collection\n * group.\n *\n * PORTING NOTE: iOS and Android maintain this index in-memory, but this is\n * not possible here as the Web client supports concurrent access to\n * persistence via multi-tab.\n */\nconst DbIndexConfigurationCollectionGroupIndex = 'collectionGroupIndex';\nconst DbIndexConfigurationCollectionGroupIndexPath = 'collectionGroup';\n/** Name of the IndexedDb object store. */\nconst DbIndexStateStore = 'indexState';\nconst DbIndexStateKeyPath = ['indexId', 'uid'];\n/**\n * An index that provides access to documents in a collection sorted by last\n * update time. Used by the backfiller.\n *\n * PORTING NOTE: iOS and Android maintain this index in-memory, but this is\n * not possible here as the Web client supports concurrent access to\n * persistence via multi-tab.\n */\nconst DbIndexStateSequenceNumberIndex = 'sequenceNumberIndex';\nconst DbIndexStateSequenceNumberIndexPath = ['uid', 'sequenceNumber'];\n/** Name of the IndexedDb object store. */\nconst DbIndexEntryStore = 'indexEntries';\nconst DbIndexEntryKeyPath = [\n    'indexId',\n    'uid',\n    'arrayValue',\n    'directionalValue',\n    'orderedDocumentKey',\n    'documentKey'\n];\nconst DbIndexEntryDocumentKeyIndex = 'documentKeyIndex';\nconst DbIndexEntryDocumentKeyIndexPath = [\n    'indexId',\n    'uid',\n    'orderedDocumentKey'\n];\n/** Name of the IndexedDb object store. */\nconst DbDocumentOverlayStore = 'documentOverlays';\nconst DbDocumentOverlayKeyPath = [\n    'userId',\n    'collectionPath',\n    'documentId'\n];\nconst DbDocumentOverlayCollectionPathOverlayIndex = 'collectionPathOverlayIndex';\nconst DbDocumentOverlayCollectionPathOverlayIndexPath = [\n    'userId',\n    'collectionPath',\n    'largestBatchId'\n];\nconst DbDocumentOverlayCollectionGroupOverlayIndex = 'collectionGroupOverlayIndex';\nconst DbDocumentOverlayCollectionGroupOverlayIndexPath = [\n    'userId',\n    'collectionGroup',\n    'largestBatchId'\n];\n/** Name of the IndexedDb object store. */\nconst DbGlobalsStore = 'globals';\nconst DbGlobalsKeyPath = 'name';\n// Visible for testing\nconst V1_STORES = [\n    DbMutationQueueStore,\n    DbMutationBatchStore,\n    DbDocumentMutationStore,\n    DbRemoteDocumentStore$1,\n    DbTargetStore,\n    DbPrimaryClientStore,\n    DbTargetGlobalStore,\n    DbTargetDocumentStore\n];\n// Visible for testing\nconst V3_STORES = V1_STORES;\n// Note: DbRemoteDocumentChanges is no longer used and dropped with v9.\nconst V4_STORES = [...V3_STORES, DbClientMetadataStore];\nconst V6_STORES = [...V4_STORES, DbRemoteDocumentGlobalStore];\nconst V8_STORES = [...V6_STORES, DbCollectionParentStore];\nconst V11_STORES = [...V8_STORES, DbBundleStore, DbNamedQueryStore];\nconst V12_STORES = [...V11_STORES, DbDocumentOverlayStore];\nconst V13_STORES = [\n    DbMutationQueueStore,\n    DbMutationBatchStore,\n    DbDocumentMutationStore,\n    DbRemoteDocumentStore,\n    DbTargetStore,\n    DbPrimaryClientStore,\n    DbTargetGlobalStore,\n    DbTargetDocumentStore,\n    DbClientMetadataStore,\n    DbRemoteDocumentGlobalStore,\n    DbCollectionParentStore,\n    DbBundleStore,\n    DbNamedQueryStore,\n    DbDocumentOverlayStore\n];\nconst V14_STORES = V13_STORES;\nconst V15_STORES = [\n    ...V14_STORES,\n    DbIndexConfigurationStore,\n    DbIndexStateStore,\n    DbIndexEntryStore\n];\nconst V16_STORES = V15_STORES;\nconst V17_STORES = [...V15_STORES, DbGlobalsStore];\nconst V18_STORES = V17_STORES;\n/** Returns the object stores for the provided schema. */\nfunction getObjectStores(schemaVersion) {\n    if (schemaVersion === 18) {\n        return V18_STORES;\n    }\n    else if (schemaVersion === 17) {\n        return V17_STORES;\n    }\n    else if (schemaVersion === 16) {\n        return V16_STORES;\n    }\n    else if (schemaVersion === 15) {\n        return V15_STORES;\n    }\n    else if (schemaVersion === 14) {\n        return V14_STORES;\n    }\n    else if (schemaVersion === 13) {\n        return V13_STORES;\n    }\n    else if (schemaVersion === 12) {\n        return V12_STORES;\n    }\n    else if (schemaVersion === 11) {\n        return V11_STORES;\n    }\n    else {\n        fail(0xeb55);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass IndexedDbTransaction extends PersistenceTransaction {\n    constructor(simpleDbTransaction, currentSequenceNumber) {\n        super();\n        this.simpleDbTransaction = simpleDbTransaction;\n        this.currentSequenceNumber = currentSequenceNumber;\n    }\n}\nfunction getStore(txn, store) {\n    const indexedDbTransaction = debugCast(txn);\n    return SimpleDb.getStore(indexedDbTransaction.simpleDbTransaction, store);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction objectSize(obj) {\n    let count = 0;\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction forEach(obj, fn) {\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n}\nfunction mapToArray(obj, fn) {\n    const result = [];\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            result.push(fn(obj[key], key, obj));\n        }\n    }\n    return result;\n}\nfunction isEmpty(obj) {\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass SortedMap {\n    constructor(comparator, root) {\n        this.comparator = comparator;\n        this.root = root ? root : LLRBNode.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(key, value) {\n        return new SortedMap(this.comparator, this.root\n            .insert(key, value, this.comparator)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(key) {\n        return new SortedMap(this.comparator, this.root\n            .remove(key, this.comparator)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(key) {\n        let node = this.root;\n        while (!node.isEmpty()) {\n            const cmp = this.comparator(key, node.key);\n            if (cmp === 0) {\n                return node.value;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                node = node.right;\n            }\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(key) {\n        // Number of nodes that were pruned when descending right\n        let prunedNodes = 0;\n        let node = this.root;\n        while (!node.isEmpty()) {\n            const cmp = this.comparator(key, node.key);\n            if (cmp === 0) {\n                return prunedNodes + node.left.size;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else {\n                // Count all nodes left of the node plus the node itself\n                prunedNodes += node.left.size + 1;\n                node = node.right;\n            }\n        }\n        // Node not found\n        return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(action) {\n        return this.root.inorderTraversal(action);\n    }\n    forEach(fn) {\n        this.inorderTraversal((k, v) => {\n            fn(k, v);\n            return false;\n        });\n    }\n    toString() {\n        const descriptions = [];\n        this.inorderTraversal((k, v) => {\n            descriptions.push(`${k}:${v}`);\n            return false;\n        });\n        return `{${descriptions.join(', ')}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(action) {\n        return this.root.reverseTraversal(action);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new SortedMapIterator(this.root, null, this.comparator, false);\n    }\n    getIteratorFrom(key) {\n        return new SortedMapIterator(this.root, key, this.comparator, false);\n    }\n    getReverseIterator() {\n        return new SortedMapIterator(this.root, null, this.comparator, true);\n    }\n    getReverseIteratorFrom(key) {\n        return new SortedMapIterator(this.root, key, this.comparator, true);\n    }\n} // end SortedMap\n// An iterator over an LLRBNode.\nclass SortedMapIterator {\n    constructor(node, startKey, comparator, isReverse) {\n        this.isReverse = isReverse;\n        this.nodeStack = [];\n        let cmp = 1;\n        while (!node.isEmpty()) {\n            cmp = startKey ? comparator(node.key, startKey) : 1;\n            // flip the comparison if we're going in reverse\n            if (startKey && isReverse) {\n                cmp *= -1;\n            }\n            if (cmp < 0) {\n                // This node is less than our start key. ignore it\n                if (this.isReverse) {\n                    node = node.left;\n                }\n                else {\n                    node = node.right;\n                }\n            }\n            else if (cmp === 0) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(node);\n                break;\n            }\n            else {\n                // This node is greater than our start key, add it to the stack and move\n                // to the next one\n                this.nodeStack.push(node);\n                if (this.isReverse) {\n                    node = node.right;\n                }\n                else {\n                    node = node.left;\n                }\n            }\n        }\n    }\n    getNext() {\n        let node = this.nodeStack.pop();\n        const result = { key: node.key, value: node.value };\n        if (this.isReverse) {\n            node = node.left;\n            while (!node.isEmpty()) {\n                this.nodeStack.push(node);\n                node = node.right;\n            }\n        }\n        else {\n            node = node.right;\n            while (!node.isEmpty()) {\n                this.nodeStack.push(node);\n                node = node.left;\n            }\n        }\n        return result;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (this.nodeStack.length === 0) {\n            return null;\n        }\n        const node = this.nodeStack[this.nodeStack.length - 1];\n        return { key: node.key, value: node.value };\n    }\n} // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass LLRBNode {\n    constructor(key, value, color, left, right) {\n        this.key = key;\n        this.value = value;\n        this.color = color != null ? color : LLRBNode.RED;\n        this.left = left != null ? left : LLRBNode.EMPTY;\n        this.right = right != null ? right : LLRBNode.EMPTY;\n        this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(key, value, color, left, right) {\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n    }\n    isEmpty() {\n        return false;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(action) {\n        return (this.left.inorderTraversal(action) ||\n            action(this.key, this.value) ||\n            this.right.inorderTraversal(action));\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(action) {\n        return (this.right.reverseTraversal(action) ||\n            action(this.key, this.value) ||\n            this.left.reverseTraversal(action));\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        if (this.left.isEmpty()) {\n            return this;\n        }\n        else {\n            return this.left.min();\n        }\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        if (this.right.isEmpty()) {\n            return this.key;\n        }\n        else {\n            return this.right.maxKey();\n        }\n    }\n    // Returns new tree, with the key/value added.\n    insert(key, value, comparator) {\n        let n = this;\n        const cmp = comparator(key, n.key);\n        if (cmp < 0) {\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n        }\n        else if (cmp === 0) {\n            n = n.copy(null, value, null, null, null);\n        }\n        else {\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n        }\n        return n.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) {\n            return LLRBNode.EMPTY;\n        }\n        let n = this;\n        if (!n.left.isRed() && !n.left.left.isRed()) {\n            n = n.moveRedLeft();\n        }\n        n = n.copy(null, null, null, n.left.removeMin(), null);\n        return n.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(key, comparator) {\n        let smallest;\n        let n = this;\n        if (comparator(key, n.key) < 0) {\n            if (!n.left.isEmpty() && !n.left.isRed() && !n.left.left.isRed()) {\n                n = n.moveRedLeft();\n            }\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n        }\n        else {\n            if (n.left.isRed()) {\n                n = n.rotateRight();\n            }\n            if (!n.right.isEmpty() && !n.right.isRed() && !n.right.left.isRed()) {\n                n = n.moveRedRight();\n            }\n            if (comparator(key, n.key) === 0) {\n                if (n.right.isEmpty()) {\n                    return LLRBNode.EMPTY;\n                }\n                else {\n                    smallest = n.right.min();\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin());\n                }\n            }\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n        }\n        return n.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let n = this;\n        if (n.right.isRed() && !n.left.isRed()) {\n            n = n.rotateLeft();\n        }\n        if (n.left.isRed() && n.left.left.isRed()) {\n            n = n.rotateRight();\n        }\n        if (n.left.isRed() && n.right.isRed()) {\n            n = n.colorFlip();\n        }\n        return n;\n    }\n    moveRedLeft() {\n        let n = this.colorFlip();\n        if (n.right.left.isRed()) {\n            n = n.copy(null, null, null, null, n.right.rotateRight());\n            n = n.rotateLeft();\n            n = n.colorFlip();\n        }\n        return n;\n    }\n    moveRedRight() {\n        let n = this.colorFlip();\n        if (n.left.left.isRed()) {\n            n = n.rotateRight();\n            n = n.colorFlip();\n        }\n        return n;\n    }\n    rotateLeft() {\n        const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, nl, null);\n    }\n    rotateRight() {\n        const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, nr);\n    }\n    colorFlip() {\n        const left = this.left.copy(null, null, !this.left.color, null, null);\n        const right = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, left, right);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const blackDepth = this.check();\n        if (Math.pow(2.0, blackDepth) <= this.size + 1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) {\n            throw fail(0xaad2, {\n                key: this.key,\n                value: this.value\n            });\n        }\n        if (this.right.isRed()) {\n            throw fail(0x3721, {\n                key: this.key,\n                value: this.value\n            });\n        }\n        const blackDepth = this.left.check();\n        if (blackDepth !== this.right.check()) {\n            throw fail(0x6d2d);\n        }\n        else {\n            return blackDepth + (this.isRed() ? 0 : 1);\n        }\n    }\n} // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nLLRBNode.EMPTY = null;\nLLRBNode.RED = true;\nLLRBNode.BLACK = false;\n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass LLRBEmptyNode {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw fail(0xe1a6);\n    }\n    get value() {\n        throw fail(0x3f0d);\n    }\n    get color() {\n        throw fail(0x4157);\n    }\n    get left() {\n        throw fail(0x741e);\n    }\n    get right() {\n        throw fail(0x901e);\n    }\n    // Returns a copy of the current node.\n    copy(key, value, color, left, right) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(key, value, comparator) {\n        return new LLRBNode(key, value);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(key, comparator) {\n        return this;\n    }\n    isEmpty() {\n        return true;\n    }\n    inorderTraversal(action) {\n        return false;\n    }\n    reverseTraversal(action) {\n        return false;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return false;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return true;\n    }\n    check() {\n        return 0;\n    }\n} // end LLRBEmptyNode\nLLRBNode.EMPTY = new LLRBEmptyNode();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass SortedSet {\n    constructor(comparator) {\n        this.comparator = comparator;\n        this.data = new SortedMap(this.comparator);\n    }\n    has(elem) {\n        return this.data.get(elem) !== null;\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(elem) {\n        return this.data.indexOf(elem);\n    }\n    /** Iterates elements in order defined by \"comparator\" */\n    forEach(cb) {\n        this.data.inorderTraversal((k, v) => {\n            cb(k);\n            return false;\n        });\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n    forEachInRange(range, cb) {\n        const iter = this.data.getIteratorFrom(range[0]);\n        while (iter.hasNext()) {\n            const elem = iter.getNext();\n            if (this.comparator(elem.key, range[1]) >= 0) {\n                return;\n            }\n            cb(elem.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */\n    forEachWhile(cb, start) {\n        let iter;\n        if (start !== undefined) {\n            iter = this.data.getIteratorFrom(start);\n        }\n        else {\n            iter = this.data.getIterator();\n        }\n        while (iter.hasNext()) {\n            const elem = iter.getNext();\n            const result = cb(elem.key);\n            if (!result) {\n                return;\n            }\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */\n    firstAfterOrEqual(elem) {\n        const iter = this.data.getIteratorFrom(elem);\n        return iter.hasNext() ? iter.getNext().key : null;\n    }\n    getIterator() {\n        return new SortedSetIterator(this.data.getIterator());\n    }\n    getIteratorFrom(key) {\n        return new SortedSetIterator(this.data.getIteratorFrom(key));\n    }\n    /** Inserts or updates an element */\n    add(elem) {\n        return this.copy(this.data.remove(elem).insert(elem, true));\n    }\n    /** Deletes an element */\n    delete(elem) {\n        if (!this.has(elem)) {\n            return this;\n        }\n        return this.copy(this.data.remove(elem));\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(other) {\n        let result = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n        if (result.size < other.size) {\n            result = other;\n            other = this;\n        }\n        other.forEach(elem => {\n            result = result.add(elem);\n        });\n        return result;\n    }\n    isEqual(other) {\n        if (!(other instanceof SortedSet)) {\n            return false;\n        }\n        if (this.size !== other.size) {\n            return false;\n        }\n        const thisIt = this.data.getIterator();\n        const otherIt = other.data.getIterator();\n        while (thisIt.hasNext()) {\n            const thisElem = thisIt.getNext().key;\n            const otherElem = otherIt.getNext().key;\n            if (this.comparator(thisElem, otherElem) !== 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    toArray() {\n        const res = [];\n        this.forEach(targetId => {\n            res.push(targetId);\n        });\n        return res;\n    }\n    toString() {\n        const result = [];\n        this.forEach(elem => result.push(elem));\n        return 'SortedSet(' + result.toString() + ')';\n    }\n    copy(data) {\n        const result = new SortedSet(this.comparator);\n        result.data = data;\n        return result;\n    }\n}\nclass SortedSetIterator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n/**\n * Compares two sorted sets for equality using their natural ordering. The\n * method computes the intersection and invokes `onAdd` for every element that\n * is in `after` but not `before`. `onRemove` is invoked for every element in\n * `before` but missing from `after`.\n *\n * The method creates a copy of both `before` and `after` and runs in O(n log\n * n), where n is the size of the two lists.\n *\n * @param before - The elements that exist in the original set.\n * @param after - The elements to diff against the original set.\n * @param comparator - The comparator for the elements in before and after.\n * @param onAdd - A function to invoke for every element that is part of `\n * after` but not `before`.\n * @param onRemove - A function to invoke for every element that is part of\n * `before` but not `after`.\n */\nfunction diffSortedSets(before, after, comparator, onAdd, onRemove) {\n    const beforeIt = before.getIterator();\n    const afterIt = after.getIterator();\n    let beforeValue = advanceIterator(beforeIt);\n    let afterValue = advanceIterator(afterIt);\n    // Walk through the two sets at the same time, using the ordering defined by\n    // `comparator`.\n    while (beforeValue || afterValue) {\n        let added = false;\n        let removed = false;\n        if (beforeValue && afterValue) {\n            const cmp = comparator(beforeValue, afterValue);\n            if (cmp < 0) {\n                // The element was removed if the next element in our ordered\n                // walkthrough is only in `before`.\n                removed = true;\n            }\n            else if (cmp > 0) {\n                // The element was added if the next element in our ordered walkthrough\n                // is only in `after`.\n                added = true;\n            }\n        }\n        else if (beforeValue != null) {\n            removed = true;\n        }\n        else {\n            added = true;\n        }\n        if (added) {\n            onAdd(afterValue);\n            afterValue = advanceIterator(afterIt);\n        }\n        else if (removed) {\n            onRemove(beforeValue);\n            beforeValue = advanceIterator(beforeIt);\n        }\n        else {\n            beforeValue = advanceIterator(beforeIt);\n            afterValue = advanceIterator(afterIt);\n        }\n    }\n}\n/**\n * Returns the next element from the iterator or `undefined` if none available.\n */\nfunction advanceIterator(it) {\n    return it.hasNext() ? it.getNext() : undefined;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass FieldMask {\n    constructor(fields) {\n        this.fields = fields;\n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        fields.sort(FieldPath$1.comparator);\n    }\n    static empty() {\n        return new FieldMask([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */\n    unionWith(extraFields) {\n        let mergedMaskSet = new SortedSet(FieldPath$1.comparator);\n        for (const fieldPath of this.fields) {\n            mergedMaskSet = mergedMaskSet.add(fieldPath);\n        }\n        for (const fieldPath of extraFields) {\n            mergedMaskSet = mergedMaskSet.add(fieldPath);\n        }\n        return new FieldMask(mergedMaskSet.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */\n    covers(fieldPath) {\n        for (const fieldMaskPath of this.fields) {\n            if (fieldMaskPath.isPrefixOf(fieldPath)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isEqual(other) {\n        return arrayEquals(this.fields, other.fields, (l, r) => l.isEqual(r));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\nfunction decodeBase64(encoded) {\n    // Note: We used to validate the base64 string here via a regular expression.\n    // This was removed to improve the performance of indexing.\n    return Buffer.from(encoded, 'base64').toString('binary');\n}\n/** Converts a binary string to a Base64 encoded string. */\nfunction encodeBase64(raw) {\n    return Buffer.from(raw, 'binary').toString('base64');\n}\n/** True if and only if the Base64 conversion functions are available. */\nfunction isBase64Available() {\n    return true;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass ByteString {\n    constructor(binaryString) {\n        this.binaryString = binaryString;\n    }\n    static fromBase64String(base64) {\n        const binaryString = decodeBase64(base64);\n        return new ByteString(binaryString);\n    }\n    static fromUint8Array(array) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const binaryString = binaryStringFromUint8Array(array);\n        return new ByteString(binaryString);\n    }\n    [Symbol.iterator]() {\n        let i = 0;\n        return {\n            next: () => {\n                if (i < this.binaryString.length) {\n                    return { value: this.binaryString.charCodeAt(i++), done: false };\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n    }\n    toBase64() {\n        return encodeBase64(this.binaryString);\n    }\n    toUint8Array() {\n        return uint8ArrayFromBinaryString(this.binaryString);\n    }\n    approximateByteSize() {\n        return this.binaryString.length * 2;\n    }\n    compareTo(other) {\n        return primitiveComparator(this.binaryString, other.binaryString);\n    }\n    isEqual(other) {\n        return this.binaryString === other.binaryString;\n    }\n}\nByteString.EMPTY_BYTE_STRING = new ByteString('');\n/**\n * Helper function to convert an Uint8array to a binary string.\n */\nfunction binaryStringFromUint8Array(array) {\n    let binaryString = '';\n    for (let i = 0; i < array.length; ++i) {\n        binaryString += String.fromCharCode(array[i]);\n    }\n    return binaryString;\n}\n/**\n * Helper function to convert a binary string to an Uint8Array.\n */\nfunction uint8ArrayFromBinaryString(binaryString) {\n    const buffer = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n        buffer[i] = binaryString.charCodeAt(i);\n    }\n    return buffer;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// A RegExp matching ISO 8601 UTC timestamps with optional fraction.\nconst ISO_TIMESTAMP_REG_EXP = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nfunction normalizeTimestamp(date) {\n    hardAssert(!!date, 0x986a);\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (typeof date === 'string') {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let nanos = 0;\n        const fraction = ISO_TIMESTAMP_REG_EXP.exec(date);\n        hardAssert(!!fraction, 0xb5de, {\n            timestamp: date\n        });\n        if (fraction[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let nanoStr = fraction[1];\n            nanoStr = (nanoStr + '000000000').substr(0, 9);\n            nanos = Number(nanoStr);\n        }\n        // Parse the date to get the seconds.\n        const parsedDate = new Date(date);\n        const seconds = Math.floor(parsedDate.getTime() / 1000);\n        return { seconds, nanos };\n    }\n    else {\n        // TODO(b/37282237): Use strings for Proto3 timestamps\n        // assert(!this.options.useProto3Json,\n        //   'The timestamp instance format requires Proto JS.');\n        const seconds = normalizeNumber(date.seconds);\n        const nanos = normalizeNumber(date.nanos);\n        return { seconds, nanos };\n    }\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\nfunction normalizeNumber(value) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    if (typeof value === 'number') {\n        return value;\n    }\n    else if (typeof value === 'string') {\n        return Number(value);\n    }\n    else {\n        return 0;\n    }\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\nfunction normalizeByteString(blob) {\n    if (typeof blob === 'string') {\n        return ByteString.fromBase64String(blob);\n    }\n    else {\n        return ByteString.fromUint8Array(blob);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\nconst SERVER_TIMESTAMP_SENTINEL = 'server_timestamp';\nconst TYPE_KEY$1 = '__type__';\nconst PREVIOUS_VALUE_KEY = '__previous_value__';\nconst LOCAL_WRITE_TIME_KEY = '__local_write_time__';\nfunction isServerTimestamp(value) {\n    var _a, _b;\n    const type = (_b = (((_a = value === null || value === void 0 ? void 0 : value.mapValue) === null || _a === void 0 ? void 0 : _a.fields) || {})[TYPE_KEY$1]) === null || _b === void 0 ? void 0 : _b.stringValue;\n    return type === SERVER_TIMESTAMP_SENTINEL;\n}\n/**\n * Creates a new ServerTimestamp proto value (using the internal format).\n */\nfunction serverTimestamp$1(localWriteTime, previousValue) {\n    const mapValue = {\n        fields: {\n            [TYPE_KEY$1]: {\n                stringValue: SERVER_TIMESTAMP_SENTINEL\n            },\n            [LOCAL_WRITE_TIME_KEY]: {\n                timestampValue: {\n                    seconds: localWriteTime.seconds,\n                    nanos: localWriteTime.nanoseconds\n                }\n            }\n        }\n    };\n    // We should avoid storing deeply nested server timestamp map values\n    // because we never use the intermediate \"previous values\".\n    // For example:\n    // previous: 42L, add: t1, result: t1 -> 42L\n    // previous: t1,  add: t2, result: t2 -> 42L (NOT t2 -> t1 -> 42L)\n    // previous: t2,  add: t3, result: t3 -> 42L (NOT t3 -> t2 -> t1 -> 42L)\n    // `getPreviousValue` recursively traverses server timestamps to find the\n    // least recent Value.\n    if (previousValue && isServerTimestamp(previousValue)) {\n        previousValue = getPreviousValue(previousValue);\n    }\n    if (previousValue) {\n        mapValue.fields[PREVIOUS_VALUE_KEY] = previousValue;\n    }\n    return { mapValue };\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nfunction getPreviousValue(value) {\n    const previousValue = value.mapValue.fields[PREVIOUS_VALUE_KEY];\n    if (isServerTimestamp(previousValue)) {\n        return getPreviousValue(previousValue);\n    }\n    return previousValue;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\nfunction getLocalWriteTime(value) {\n    const localWriteTime = normalizeTimestamp(value.mapValue.fields[LOCAL_WRITE_TIME_KEY].timestampValue);\n    return new Timestamp(localWriteTime.seconds, localWriteTime.nanos);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass DatabaseInfo {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param longPollingOptions Options that configure long-polling.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(databaseId, appId, persistenceKey, host, ssl, forceLongPolling, autoDetectLongPolling, longPollingOptions, useFetchStreams, isUsingEmulator) {\n        this.databaseId = databaseId;\n        this.appId = appId;\n        this.persistenceKey = persistenceKey;\n        this.host = host;\n        this.ssl = ssl;\n        this.forceLongPolling = forceLongPolling;\n        this.autoDetectLongPolling = autoDetectLongPolling;\n        this.longPollingOptions = longPollingOptions;\n        this.useFetchStreams = useFetchStreams;\n        this.isUsingEmulator = isUsingEmulator;\n    }\n}\n/** The default database name for a project. */\nconst DEFAULT_DATABASE_NAME = '(default)';\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass DatabaseId {\n    constructor(projectId, database) {\n        this.projectId = projectId;\n        this.database = database ? database : DEFAULT_DATABASE_NAME;\n    }\n    static empty() {\n        return new DatabaseId('', '');\n    }\n    get isDefaultDatabase() {\n        return this.database === DEFAULT_DATABASE_NAME;\n    }\n    isEqual(other) {\n        return (other instanceof DatabaseId &&\n            other.projectId === this.projectId &&\n            other.database === this.database);\n    }\n}\nfunction databaseIdFromApp(app, database) {\n    if (!Object.prototype.hasOwnProperty.apply(app.options, ['projectId'])) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n    }\n    return new DatabaseId(app.options.projectId, database);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Sentinel value that sorts before any Mutation Batch ID. */\nconst BATCHID_UNKNOWN = -1;\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\n/** Returns whether the value represents -0. */\nfunction isNegativeZero(value) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return value === 0 && 1 / value === 1 / -0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\nfunction isSafeInteger(value) {\n    return (typeof value === 'number' &&\n        Number.isInteger(value) &&\n        !isNegativeZero(value) &&\n        value <= Number.MAX_SAFE_INTEGER &&\n        value >= Number.MIN_SAFE_INTEGER);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst TYPE_KEY = '__type__';\nconst MAX_VALUE_TYPE = '__max__';\nconst MAX_VALUE = {\n    mapValue: {\n        fields: {\n            '__type__': { stringValue: MAX_VALUE_TYPE }\n        }\n    }\n};\nconst VECTOR_VALUE_SENTINEL = '__vector__';\nconst VECTOR_MAP_VECTORS_KEY = 'value';\nconst MIN_VALUE = {\n    nullValue: 'NULL_VALUE'\n};\n/** Extracts the backend's type order for the provided value. */\nfunction typeOrder(value) {\n    if ('nullValue' in value) {\n        return 0 /* TypeOrder.NullValue */;\n    }\n    else if ('booleanValue' in value) {\n        return 1 /* TypeOrder.BooleanValue */;\n    }\n    else if ('integerValue' in value || 'doubleValue' in value) {\n        return 2 /* TypeOrder.NumberValue */;\n    }\n    else if ('timestampValue' in value) {\n        return 3 /* TypeOrder.TimestampValue */;\n    }\n    else if ('stringValue' in value) {\n        return 5 /* TypeOrder.StringValue */;\n    }\n    else if ('bytesValue' in value) {\n        return 6 /* TypeOrder.BlobValue */;\n    }\n    else if ('referenceValue' in value) {\n        return 7 /* TypeOrder.RefValue */;\n    }\n    else if ('geoPointValue' in value) {\n        return 8 /* TypeOrder.GeoPointValue */;\n    }\n    else if ('arrayValue' in value) {\n        return 9 /* TypeOrder.ArrayValue */;\n    }\n    else if ('mapValue' in value) {\n        if (isServerTimestamp(value)) {\n            return 4 /* TypeOrder.ServerTimestampValue */;\n        }\n        else if (isMaxValue(value)) {\n            return 9007199254740991 /* TypeOrder.MaxValue */;\n        }\n        else if (isVectorValue(value)) {\n            return 10 /* TypeOrder.VectorValue */;\n        }\n        return 11 /* TypeOrder.ObjectValue */;\n    }\n    else {\n        return fail(0x6e87, { value });\n    }\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\nfunction valueEquals(left, right) {\n    if (left === right) {\n        return true;\n    }\n    const leftType = typeOrder(left);\n    const rightType = typeOrder(right);\n    if (leftType !== rightType) {\n        return false;\n    }\n    switch (leftType) {\n        case 0 /* TypeOrder.NullValue */:\n            return true;\n        case 1 /* TypeOrder.BooleanValue */:\n            return left.booleanValue === right.booleanValue;\n        case 4 /* TypeOrder.ServerTimestampValue */:\n            return getLocalWriteTime(left).isEqual(getLocalWriteTime(right));\n        case 3 /* TypeOrder.TimestampValue */:\n            return timestampEquals(left, right);\n        case 5 /* TypeOrder.StringValue */:\n            return left.stringValue === right.stringValue;\n        case 6 /* TypeOrder.BlobValue */:\n            return blobEquals(left, right);\n        case 7 /* TypeOrder.RefValue */:\n            return left.referenceValue === right.referenceValue;\n        case 8 /* TypeOrder.GeoPointValue */:\n            return geoPointEquals(left, right);\n        case 2 /* TypeOrder.NumberValue */:\n            return numberEquals(left, right);\n        case 9 /* TypeOrder.ArrayValue */:\n            return arrayEquals(left.arrayValue.values || [], right.arrayValue.values || [], valueEquals);\n        case 10 /* TypeOrder.VectorValue */:\n        case 11 /* TypeOrder.ObjectValue */:\n            return objectEquals(left, right);\n        case 9007199254740991 /* TypeOrder.MaxValue */:\n            return true;\n        default:\n            return fail(0xcbf8, { left });\n    }\n}\nfunction timestampEquals(left, right) {\n    if (typeof left.timestampValue === 'string' &&\n        typeof right.timestampValue === 'string' &&\n        left.timestampValue.length === right.timestampValue.length) {\n        // Use string equality for ISO 8601 timestamps\n        return left.timestampValue === right.timestampValue;\n    }\n    const leftTimestamp = normalizeTimestamp(left.timestampValue);\n    const rightTimestamp = normalizeTimestamp(right.timestampValue);\n    return (leftTimestamp.seconds === rightTimestamp.seconds &&\n        leftTimestamp.nanos === rightTimestamp.nanos);\n}\nfunction geoPointEquals(left, right) {\n    return (normalizeNumber(left.geoPointValue.latitude) ===\n        normalizeNumber(right.geoPointValue.latitude) &&\n        normalizeNumber(left.geoPointValue.longitude) ===\n            normalizeNumber(right.geoPointValue.longitude));\n}\nfunction blobEquals(left, right) {\n    return normalizeByteString(left.bytesValue).isEqual(normalizeByteString(right.bytesValue));\n}\nfunction numberEquals(left, right) {\n    if ('integerValue' in left && 'integerValue' in right) {\n        return (normalizeNumber(left.integerValue) === normalizeNumber(right.integerValue));\n    }\n    else if ('doubleValue' in left && 'doubleValue' in right) {\n        const n1 = normalizeNumber(left.doubleValue);\n        const n2 = normalizeNumber(right.doubleValue);\n        if (n1 === n2) {\n            return isNegativeZero(n1) === isNegativeZero(n2);\n        }\n        else {\n            return isNaN(n1) && isNaN(n2);\n        }\n    }\n    return false;\n}\nfunction objectEquals(left, right) {\n    const leftMap = left.mapValue.fields || {};\n    const rightMap = right.mapValue.fields || {};\n    if (objectSize(leftMap) !== objectSize(rightMap)) {\n        return false;\n    }\n    for (const key in leftMap) {\n        if (leftMap.hasOwnProperty(key)) {\n            if (rightMap[key] === undefined ||\n                !valueEquals(leftMap[key], rightMap[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/** Returns true if the ArrayValue contains the specified element. */\nfunction arrayValueContains(haystack, needle) {\n    return ((haystack.values || []).find(v => valueEquals(v, needle)) !== undefined);\n}\nfunction valueCompare(left, right) {\n    if (left === right) {\n        return 0;\n    }\n    const leftType = typeOrder(left);\n    const rightType = typeOrder(right);\n    if (leftType !== rightType) {\n        return primitiveComparator(leftType, rightType);\n    }\n    switch (leftType) {\n        case 0 /* TypeOrder.NullValue */:\n        case 9007199254740991 /* TypeOrder.MaxValue */:\n            return 0;\n        case 1 /* TypeOrder.BooleanValue */:\n            return primitiveComparator(left.booleanValue, right.booleanValue);\n        case 2 /* TypeOrder.NumberValue */:\n            return compareNumbers(left, right);\n        case 3 /* TypeOrder.TimestampValue */:\n            return compareTimestamps(left.timestampValue, right.timestampValue);\n        case 4 /* TypeOrder.ServerTimestampValue */:\n            return compareTimestamps(getLocalWriteTime(left), getLocalWriteTime(right));\n        case 5 /* TypeOrder.StringValue */:\n            return compareUtf8Strings(left.stringValue, right.stringValue);\n        case 6 /* TypeOrder.BlobValue */:\n            return compareBlobs(left.bytesValue, right.bytesValue);\n        case 7 /* TypeOrder.RefValue */:\n            return compareReferences(left.referenceValue, right.referenceValue);\n        case 8 /* TypeOrder.GeoPointValue */:\n            return compareGeoPoints(left.geoPointValue, right.geoPointValue);\n        case 9 /* TypeOrder.ArrayValue */:\n            return compareArrays(left.arrayValue, right.arrayValue);\n        case 10 /* TypeOrder.VectorValue */:\n            return compareVectors(left.mapValue, right.mapValue);\n        case 11 /* TypeOrder.ObjectValue */:\n            return compareMaps(left.mapValue, right.mapValue);\n        default:\n            throw fail(0x5ae0, { leftType });\n    }\n}\nfunction compareNumbers(left, right) {\n    const leftNumber = normalizeNumber(left.integerValue || left.doubleValue);\n    const rightNumber = normalizeNumber(right.integerValue || right.doubleValue);\n    if (leftNumber < rightNumber) {\n        return -1;\n    }\n    else if (leftNumber > rightNumber) {\n        return 1;\n    }\n    else if (leftNumber === rightNumber) {\n        return 0;\n    }\n    else {\n        // one or both are NaN.\n        if (isNaN(leftNumber)) {\n            return isNaN(rightNumber) ? 0 : -1;\n        }\n        else {\n            return 1;\n        }\n    }\n}\nfunction compareTimestamps(left, right) {\n    if (typeof left === 'string' &&\n        typeof right === 'string' &&\n        left.length === right.length) {\n        return primitiveComparator(left, right);\n    }\n    const leftTimestamp = normalizeTimestamp(left);\n    const rightTimestamp = normalizeTimestamp(right);\n    const comparison = primitiveComparator(leftTimestamp.seconds, rightTimestamp.seconds);\n    if (comparison !== 0) {\n        return comparison;\n    }\n    return primitiveComparator(leftTimestamp.nanos, rightTimestamp.nanos);\n}\nfunction compareReferences(leftPath, rightPath) {\n    const leftSegments = leftPath.split('/');\n    const rightSegments = rightPath.split('/');\n    for (let i = 0; i < leftSegments.length && i < rightSegments.length; i++) {\n        const comparison = primitiveComparator(leftSegments[i], rightSegments[i]);\n        if (comparison !== 0) {\n            return comparison;\n        }\n    }\n    return primitiveComparator(leftSegments.length, rightSegments.length);\n}\nfunction compareGeoPoints(left, right) {\n    const comparison = primitiveComparator(normalizeNumber(left.latitude), normalizeNumber(right.latitude));\n    if (comparison !== 0) {\n        return comparison;\n    }\n    return primitiveComparator(normalizeNumber(left.longitude), normalizeNumber(right.longitude));\n}\nfunction compareBlobs(left, right) {\n    const leftBytes = normalizeByteString(left);\n    const rightBytes = normalizeByteString(right);\n    return leftBytes.compareTo(rightBytes);\n}\nfunction compareArrays(left, right) {\n    const leftArray = left.values || [];\n    const rightArray = right.values || [];\n    for (let i = 0; i < leftArray.length && i < rightArray.length; ++i) {\n        const compare = valueCompare(leftArray[i], rightArray[i]);\n        if (compare) {\n            return compare;\n        }\n    }\n    return primitiveComparator(leftArray.length, rightArray.length);\n}\nfunction compareVectors(left, right) {\n    var _a, _b, _c, _d;\n    const leftMap = left.fields || {};\n    const rightMap = right.fields || {};\n    // The vector is a map, but only vector value is compared.\n    const leftArrayValue = (_a = leftMap[VECTOR_MAP_VECTORS_KEY]) === null || _a === void 0 ? void 0 : _a.arrayValue;\n    const rightArrayValue = (_b = rightMap[VECTOR_MAP_VECTORS_KEY]) === null || _b === void 0 ? void 0 : _b.arrayValue;\n    const lengthCompare = primitiveComparator(((_c = leftArrayValue === null || leftArrayValue === void 0 ? void 0 : leftArrayValue.values) === null || _c === void 0 ? void 0 : _c.length) || 0, ((_d = rightArrayValue === null || rightArrayValue === void 0 ? void 0 : rightArrayValue.values) === null || _d === void 0 ? void 0 : _d.length) || 0);\n    if (lengthCompare !== 0) {\n        return lengthCompare;\n    }\n    return compareArrays(leftArrayValue, rightArrayValue);\n}\nfunction compareMaps(left, right) {\n    if (left === MAX_VALUE.mapValue && right === MAX_VALUE.mapValue) {\n        return 0;\n    }\n    else if (left === MAX_VALUE.mapValue) {\n        return 1;\n    }\n    else if (right === MAX_VALUE.mapValue) {\n        return -1;\n    }\n    const leftMap = left.fields || {};\n    const leftKeys = Object.keys(leftMap);\n    const rightMap = right.fields || {};\n    const rightKeys = Object.keys(rightMap);\n    // Even though MapValues are likely sorted correctly based on their insertion\n    // order (e.g. when received from the backend), local modifications can bring\n    // elements out of order. We need to re-sort the elements to ensure that\n    // canonical IDs are independent of insertion order.\n    leftKeys.sort();\n    rightKeys.sort();\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; ++i) {\n        const keyCompare = compareUtf8Strings(leftKeys[i], rightKeys[i]);\n        if (keyCompare !== 0) {\n            return keyCompare;\n        }\n        const compare = valueCompare(leftMap[leftKeys[i]], rightMap[rightKeys[i]]);\n        if (compare !== 0) {\n            return compare;\n        }\n    }\n    return primitiveComparator(leftKeys.length, rightKeys.length);\n}\n/**\n * Generates the canonical ID for the provided field value (as used in Target\n * serialization).\n */\nfunction canonicalId(value) {\n    return canonifyValue(value);\n}\nfunction canonifyValue(value) {\n    if ('nullValue' in value) {\n        return 'null';\n    }\n    else if ('booleanValue' in value) {\n        return '' + value.booleanValue;\n    }\n    else if ('integerValue' in value) {\n        return '' + value.integerValue;\n    }\n    else if ('doubleValue' in value) {\n        return '' + value.doubleValue;\n    }\n    else if ('timestampValue' in value) {\n        return canonifyTimestamp(value.timestampValue);\n    }\n    else if ('stringValue' in value) {\n        return value.stringValue;\n    }\n    else if ('bytesValue' in value) {\n        return canonifyByteString(value.bytesValue);\n    }\n    else if ('referenceValue' in value) {\n        return canonifyReference(value.referenceValue);\n    }\n    else if ('geoPointValue' in value) {\n        return canonifyGeoPoint(value.geoPointValue);\n    }\n    else if ('arrayValue' in value) {\n        return canonifyArray(value.arrayValue);\n    }\n    else if ('mapValue' in value) {\n        return canonifyMap(value.mapValue);\n    }\n    else {\n        return fail(0xee4d, { value });\n    }\n}\nfunction canonifyByteString(byteString) {\n    return normalizeByteString(byteString).toBase64();\n}\nfunction canonifyTimestamp(timestamp) {\n    const normalizedTimestamp = normalizeTimestamp(timestamp);\n    return `time(${normalizedTimestamp.seconds},${normalizedTimestamp.nanos})`;\n}\nfunction canonifyGeoPoint(geoPoint) {\n    return `geo(${geoPoint.latitude},${geoPoint.longitude})`;\n}\nfunction canonifyReference(referenceValue) {\n    return DocumentKey.fromName(referenceValue).toString();\n}\nfunction canonifyMap(mapValue) {\n    // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n    // matching canonical IDs for identical maps, we need to sort the keys.\n    const sortedKeys = Object.keys(mapValue.fields || {}).sort();\n    let result = '{';\n    let first = true;\n    for (const key of sortedKeys) {\n        if (!first) {\n            result += ',';\n        }\n        else {\n            first = false;\n        }\n        result += `${key}:${canonifyValue(mapValue.fields[key])}`;\n    }\n    return result + '}';\n}\nfunction canonifyArray(arrayValue) {\n    let result = '[';\n    let first = true;\n    for (const value of arrayValue.values || []) {\n        if (!first) {\n            result += ',';\n        }\n        else {\n            first = false;\n        }\n        result += canonifyValue(value);\n    }\n    return result + ']';\n}\n/**\n * Returns an approximate (and wildly inaccurate) in-memory size for the field\n * value.\n *\n * The memory size takes into account only the actual user data as it resides\n * in memory and ignores object overhead.\n */\nfunction estimateByteSize(value) {\n    switch (typeOrder(value)) {\n        case 0 /* TypeOrder.NullValue */:\n            return 4;\n        case 1 /* TypeOrder.BooleanValue */:\n            return 4;\n        case 2 /* TypeOrder.NumberValue */:\n            return 8;\n        case 3 /* TypeOrder.TimestampValue */:\n            // Timestamps are made up of two distinct numbers (seconds + nanoseconds)\n            return 16;\n        case 4 /* TypeOrder.ServerTimestampValue */:\n            const previousValue = getPreviousValue(value);\n            return previousValue ? 16 + estimateByteSize(previousValue) : 16;\n        case 5 /* TypeOrder.StringValue */:\n            // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures:\n            // \"JavaScript's String type is [...] a set of elements of 16-bit unsigned\n            // integer values\"\n            return value.stringValue.length * 2;\n        case 6 /* TypeOrder.BlobValue */:\n            return normalizeByteString(value.bytesValue).approximateByteSize();\n        case 7 /* TypeOrder.RefValue */:\n            return value.referenceValue.length;\n        case 8 /* TypeOrder.GeoPointValue */:\n            // GeoPoints are made up of two distinct numbers (latitude + longitude)\n            return 16;\n        case 9 /* TypeOrder.ArrayValue */:\n            return estimateArrayByteSize(value.arrayValue);\n        case 10 /* TypeOrder.VectorValue */:\n        case 11 /* TypeOrder.ObjectValue */:\n            return estimateMapByteSize(value.mapValue);\n        default:\n            throw fail(0x34ae, { value });\n    }\n}\nfunction estimateMapByteSize(mapValue) {\n    let size = 0;\n    forEach(mapValue.fields, (key, val) => {\n        size += key.length + estimateByteSize(val);\n    });\n    return size;\n}\nfunction estimateArrayByteSize(arrayValue) {\n    return (arrayValue.values || []).reduce((previousSize, value) => previousSize + estimateByteSize(value), 0);\n}\n/** Returns a reference value for the provided database and key. */\nfunction refValue(databaseId, key) {\n    return {\n        referenceValue: `projects/${databaseId.projectId}/databases/${databaseId.database}/documents/${key.path.canonicalString()}`\n    };\n}\n/** Returns true if `value` is an IntegerValue . */\nfunction isInteger(value) {\n    return !!value && 'integerValue' in value;\n}\n/** Returns true if `value` is a DoubleValue. */\nfunction isDouble(value) {\n    return !!value && 'doubleValue' in value;\n}\n/** Returns true if `value` is either an IntegerValue or a DoubleValue. */\nfunction isNumber(value) {\n    return isInteger(value) || isDouble(value);\n}\n/** Returns true if `value` is an ArrayValue. */\nfunction isArray(value) {\n    return !!value && 'arrayValue' in value;\n}\n/** Returns true if `value` is a NullValue. */\nfunction isNullValue(value) {\n    return !!value && 'nullValue' in value;\n}\n/** Returns true if `value` is NaN. */\nfunction isNanValue(value) {\n    return !!value && 'doubleValue' in value && isNaN(Number(value.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\nfunction isMapValue(value) {\n    return !!value && 'mapValue' in value;\n}\n/** Returns true if `value` is a VetorValue. */\nfunction isVectorValue(value) {\n    var _a, _b;\n    const type = (_b = (((_a = value === null || value === void 0 ? void 0 : value.mapValue) === null || _a === void 0 ? void 0 : _a.fields) || {})[TYPE_KEY]) === null || _b === void 0 ? void 0 : _b.stringValue;\n    return type === VECTOR_VALUE_SENTINEL;\n}\n/** Creates a deep copy of `source`. */\nfunction deepClone(source) {\n    if (source.geoPointValue) {\n        return { geoPointValue: Object.assign({}, source.geoPointValue) };\n    }\n    else if (source.timestampValue &&\n        typeof source.timestampValue === 'object') {\n        return { timestampValue: Object.assign({}, source.timestampValue) };\n    }\n    else if (source.mapValue) {\n        const target = { mapValue: { fields: {} } };\n        forEach(source.mapValue.fields, (key, val) => (target.mapValue.fields[key] = deepClone(val)));\n        return target;\n    }\n    else if (source.arrayValue) {\n        const target = { arrayValue: { values: [] } };\n        for (let i = 0; i < (source.arrayValue.values || []).length; ++i) {\n            target.arrayValue.values[i] = deepClone(source.arrayValue.values[i]);\n        }\n        return target;\n    }\n    else {\n        return Object.assign({}, source);\n    }\n}\n/** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\nfunction isMaxValue(value) {\n    return ((((value.mapValue || {}).fields || {})['__type__'] || {}).stringValue ===\n        MAX_VALUE_TYPE);\n}\nconst MIN_VECTOR_VALUE = {\n    mapValue: {\n        fields: {\n            [TYPE_KEY]: { stringValue: VECTOR_VALUE_SENTINEL },\n            [VECTOR_MAP_VECTORS_KEY]: {\n                arrayValue: {}\n            }\n        }\n    }\n};\n/** Returns the lowest value for the given value type (inclusive). */\nfunction valuesGetLowerBound(value) {\n    if ('nullValue' in value) {\n        return MIN_VALUE;\n    }\n    else if ('booleanValue' in value) {\n        return { booleanValue: false };\n    }\n    else if ('integerValue' in value || 'doubleValue' in value) {\n        return { doubleValue: NaN };\n    }\n    else if ('timestampValue' in value) {\n        return { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } };\n    }\n    else if ('stringValue' in value) {\n        return { stringValue: '' };\n    }\n    else if ('bytesValue' in value) {\n        return { bytesValue: '' };\n    }\n    else if ('referenceValue' in value) {\n        return refValue(DatabaseId.empty(), DocumentKey.empty());\n    }\n    else if ('geoPointValue' in value) {\n        return { geoPointValue: { latitude: -90, longitude: -180 } };\n    }\n    else if ('arrayValue' in value) {\n        return { arrayValue: {} };\n    }\n    else if ('mapValue' in value) {\n        if (isVectorValue(value)) {\n            return MIN_VECTOR_VALUE;\n        }\n        return { mapValue: {} };\n    }\n    else {\n        return fail(0x8c66, { value });\n    }\n}\n/** Returns the largest value for the given value type (exclusive). */\nfunction valuesGetUpperBound(value) {\n    if ('nullValue' in value) {\n        return { booleanValue: false };\n    }\n    else if ('booleanValue' in value) {\n        return { doubleValue: NaN };\n    }\n    else if ('integerValue' in value || 'doubleValue' in value) {\n        return { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } };\n    }\n    else if ('timestampValue' in value) {\n        return { stringValue: '' };\n    }\n    else if ('stringValue' in value) {\n        return { bytesValue: '' };\n    }\n    else if ('bytesValue' in value) {\n        return refValue(DatabaseId.empty(), DocumentKey.empty());\n    }\n    else if ('referenceValue' in value) {\n        return { geoPointValue: { latitude: -90, longitude: -180 } };\n    }\n    else if ('geoPointValue' in value) {\n        return { arrayValue: {} };\n    }\n    else if ('arrayValue' in value) {\n        return MIN_VECTOR_VALUE;\n    }\n    else if ('mapValue' in value) {\n        if (isVectorValue(value)) {\n            return { mapValue: {} };\n        }\n        return MAX_VALUE;\n    }\n    else {\n        return fail(0xf207, { value });\n    }\n}\nfunction lowerBoundCompare(left, right) {\n    const cmp = valueCompare(left.value, right.value);\n    if (cmp !== 0) {\n        return cmp;\n    }\n    if (left.inclusive && !right.inclusive) {\n        return -1;\n    }\n    else if (!left.inclusive && right.inclusive) {\n        return 1;\n    }\n    return 0;\n}\nfunction upperBoundCompare(left, right) {\n    const cmp = valueCompare(left.value, right.value);\n    if (cmp !== 0) {\n        return cmp;\n    }\n    if (left.inclusive && !right.inclusive) {\n        return 1;\n    }\n    else if (!left.inclusive && right.inclusive) {\n        return -1;\n    }\n    return 0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\nclass ObjectValue {\n    constructor(value) {\n        this.value = value;\n    }\n    static empty() {\n        return new ObjectValue({ mapValue: {} });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */\n    field(path) {\n        if (path.isEmpty()) {\n            return this.value;\n        }\n        else {\n            let currentLevel = this.value;\n            for (let i = 0; i < path.length - 1; ++i) {\n                currentLevel = (currentLevel.mapValue.fields || {})[path.get(i)];\n                if (!isMapValue(currentLevel)) {\n                    return null;\n                }\n            }\n            currentLevel = (currentLevel.mapValue.fields || {})[path.lastSegment()];\n            return currentLevel || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */\n    set(path, value) {\n        const fieldsMap = this.getFieldsMap(path.popLast());\n        fieldsMap[path.lastSegment()] = deepClone(value);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */\n    setAll(data) {\n        let parent = FieldPath$1.emptyPath();\n        let upserts = {};\n        let deletes = [];\n        data.forEach((value, path) => {\n            if (!parent.isImmediateParentOf(path)) {\n                // Insert the accumulated changes at this parent location\n                const fieldsMap = this.getFieldsMap(parent);\n                this.applyChanges(fieldsMap, upserts, deletes);\n                upserts = {};\n                deletes = [];\n                parent = path.popLast();\n            }\n            if (value) {\n                upserts[path.lastSegment()] = deepClone(value);\n            }\n            else {\n                deletes.push(path.lastSegment());\n            }\n        });\n        const fieldsMap = this.getFieldsMap(parent);\n        this.applyChanges(fieldsMap, upserts, deletes);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */\n    delete(path) {\n        const nestedValue = this.field(path.popLast());\n        if (isMapValue(nestedValue) && nestedValue.mapValue.fields) {\n            delete nestedValue.mapValue.fields[path.lastSegment()];\n        }\n    }\n    isEqual(other) {\n        return valueEquals(this.value, other.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */\n    getFieldsMap(path) {\n        let current = this.value;\n        if (!current.mapValue.fields) {\n            current.mapValue = { fields: {} };\n        }\n        for (let i = 0; i < path.length; ++i) {\n            let next = current.mapValue.fields[path.get(i)];\n            if (!isMapValue(next) || !next.mapValue.fields) {\n                next = { mapValue: { fields: {} } };\n                current.mapValue.fields[path.get(i)] = next;\n            }\n            current = next;\n        }\n        return current.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */\n    applyChanges(fieldsMap, inserts, deletes) {\n        forEach(inserts, (key, val) => (fieldsMap[key] = val));\n        for (const field of deletes) {\n            delete fieldsMap[field];\n        }\n    }\n    clone() {\n        return new ObjectValue(deepClone(this.value));\n    }\n}\n/**\n * Returns a FieldMask built from all fields in a MapValue.\n */\nfunction extractFieldMask(value) {\n    const fields = [];\n    forEach(value.fields, (key, value) => {\n        const currentPath = new FieldPath$1([key]);\n        if (isMapValue(value)) {\n            const nestedMask = extractFieldMask(value.mapValue);\n            const nestedFields = nestedMask.fields;\n            if (nestedFields.length === 0) {\n                // Preserve the empty map by adding it to the FieldMask.\n                fields.push(currentPath);\n            }\n            else {\n                // For nested and non-empty ObjectValues, add the FieldPath of the\n                // leaf nodes.\n                for (const nestedPath of nestedFields) {\n                    fields.push(currentPath.child(nestedPath));\n                }\n            }\n        }\n        else {\n            // For nested and non-empty ObjectValues, add the FieldPath of the leaf\n            // nodes.\n            fields.push(currentPath);\n        }\n    });\n    return new FieldMask(fields);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\nclass MutableDocument {\n    constructor(key, documentType, version, readTime, createTime, data, documentState) {\n        this.key = key;\n        this.documentType = documentType;\n        this.version = version;\n        this.readTime = readTime;\n        this.createTime = createTime;\n        this.data = data;\n        this.documentState = documentState;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */\n    static newInvalidDocument(documentKey) {\n        return new MutableDocument(documentKey, 0 /* DocumentType.INVALID */, \n        /* version */ SnapshotVersion.min(), \n        /* readTime */ SnapshotVersion.min(), \n        /* createTime */ SnapshotVersion.min(), ObjectValue.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */\n    static newFoundDocument(documentKey, version, createTime, value) {\n        return new MutableDocument(documentKey, 1 /* DocumentType.FOUND_DOCUMENT */, \n        /* version */ version, \n        /* readTime */ SnapshotVersion.min(), \n        /* createTime */ createTime, value, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */\n    static newNoDocument(documentKey, version) {\n        return new MutableDocument(documentKey, 2 /* DocumentType.NO_DOCUMENT */, \n        /* version */ version, \n        /* readTime */ SnapshotVersion.min(), \n        /* createTime */ SnapshotVersion.min(), ObjectValue.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n    static newUnknownDocument(documentKey, version) {\n        return new MutableDocument(documentKey, 3 /* DocumentType.UNKNOWN_DOCUMENT */, \n        /* version */ version, \n        /* readTime */ SnapshotVersion.min(), \n        /* createTime */ SnapshotVersion.min(), ObjectValue.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */\n    convertToFoundDocument(version, value) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        if (this.createTime.isEqual(SnapshotVersion.min()) &&\n            (this.documentType === 2 /* DocumentType.NO_DOCUMENT */ ||\n                this.documentType === 0 /* DocumentType.INVALID */)) {\n            this.createTime = version;\n        }\n        this.version = version;\n        this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */;\n        this.data = value;\n        this.documentState = 0 /* DocumentState.SYNCED */;\n        return this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */\n    convertToNoDocument(version) {\n        this.version = version;\n        this.documentType = 2 /* DocumentType.NO_DOCUMENT */;\n        this.data = ObjectValue.empty();\n        this.documentState = 0 /* DocumentState.SYNCED */;\n        return this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n    convertToUnknownDocument(version) {\n        this.version = version;\n        this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */;\n        this.data = ObjectValue.empty();\n        this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */;\n        return this;\n    }\n    setHasCommittedMutations() {\n        this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */;\n        return this;\n    }\n    setHasLocalMutations() {\n        this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */;\n        this.version = SnapshotVersion.min();\n        return this;\n    }\n    setReadTime(readTime) {\n        this.readTime = readTime;\n        return this;\n    }\n    get hasLocalMutations() {\n        return this.documentState === 1 /* DocumentState.HAS_LOCAL_MUTATIONS */;\n    }\n    get hasCommittedMutations() {\n        return this.documentState === 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return this.documentType !== 0 /* DocumentType.INVALID */;\n    }\n    isFoundDocument() {\n        return this.documentType === 1 /* DocumentType.FOUND_DOCUMENT */;\n    }\n    isNoDocument() {\n        return this.documentType === 2 /* DocumentType.NO_DOCUMENT */;\n    }\n    isUnknownDocument() {\n        return this.documentType === 3 /* DocumentType.UNKNOWN_DOCUMENT */;\n    }\n    isEqual(other) {\n        return (other instanceof MutableDocument &&\n            this.key.isEqual(other.key) &&\n            this.version.isEqual(other.version) &&\n            this.documentType === other.documentType &&\n            this.documentState === other.documentState &&\n            this.data.isEqual(other.data));\n    }\n    mutableCopy() {\n        return new MutableDocument(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return (`Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, ` +\n            `{createTime: ${this.createTime}}), ` +\n            `{documentType: ${this.documentType}}), ` +\n            `{documentState: ${this.documentState}})`);\n    }\n}\n/**\n * Compares the value for field `field` in the provided documents. Throws if\n * the field does not exist in both documents.\n */\nfunction compareDocumentsByField(field, d1, d2) {\n    const v1 = d1.data.field(field);\n    const v2 = d2.data.field(field);\n    if (v1 !== null && v2 !== null) {\n        return valueCompare(v1, v2);\n    }\n    else {\n        return fail(0xa786);\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\nclass Bound {\n    constructor(position, inclusive) {\n        this.position = position;\n        this.inclusive = inclusive;\n    }\n}\nfunction boundCompareToDocument(bound, orderBy, doc) {\n    let comparison = 0;\n    for (let i = 0; i < bound.position.length; i++) {\n        const orderByComponent = orderBy[i];\n        const component = bound.position[i];\n        if (orderByComponent.field.isKeyField()) {\n            comparison = DocumentKey.comparator(DocumentKey.fromName(component.referenceValue), doc.key);\n        }\n        else {\n            const docValue = doc.data.field(orderByComponent.field);\n            comparison = valueCompare(component, docValue);\n        }\n        if (orderByComponent.dir === \"desc\" /* Direction.DESCENDING */) {\n            comparison = comparison * -1;\n        }\n        if (comparison !== 0) {\n            break;\n        }\n    }\n    return comparison;\n}\n/**\n * Returns true if a document sorts after a bound using the provided sort\n * order.\n */\nfunction boundSortsAfterDocument(bound, orderBy, doc) {\n    const comparison = boundCompareToDocument(bound, orderBy, doc);\n    return bound.inclusive ? comparison >= 0 : comparison > 0;\n}\n/**\n * Returns true if a document sorts before a bound using the provided sort\n * order.\n */\nfunction boundSortsBeforeDocument(bound, orderBy, doc) {\n    const comparison = boundCompareToDocument(bound, orderBy, doc);\n    return bound.inclusive ? comparison <= 0 : comparison < 0;\n}\nfunction boundEquals(left, right) {\n    if (left === null) {\n        return right === null;\n    }\n    else if (right === null) {\n        return false;\n    }\n    if (left.inclusive !== right.inclusive ||\n        left.position.length !== right.position.length) {\n        return false;\n    }\n    for (let i = 0; i < left.position.length; i++) {\n        const leftPosition = left.position[i];\n        const rightPosition = right.position[i];\n        if (!valueEquals(leftPosition, rightPosition)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nclass OrderBy {\n    constructor(field, dir = \"asc\" /* Direction.ASCENDING */) {\n        this.field = field;\n        this.dir = dir;\n    }\n}\nfunction canonifyOrderBy(orderBy) {\n    // TODO(b/29183165): Make this collision robust.\n    return orderBy.field.canonicalString() + orderBy.dir;\n}\nfunction stringifyOrderBy(orderBy) {\n    return `${orderBy.field.canonicalString()} (${orderBy.dir})`;\n}\nfunction orderByEquals(left, right) {\n    return left.dir === right.dir && left.field.isEqual(right.field);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Filter {\n}\nclass FieldFilter extends Filter {\n    constructor(field, op, value) {\n        super();\n        this.field = field;\n        this.op = op;\n        this.value = value;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */\n    static create(field, op, value) {\n        if (field.isKeyField()) {\n            if (op === \"in\" /* Operator.IN */ || op === \"not-in\" /* Operator.NOT_IN */) {\n                return this.createKeyFieldInFilter(field, op, value);\n            }\n            else {\n                return new KeyFieldFilter(field, op, value);\n            }\n        }\n        else if (op === \"array-contains\" /* Operator.ARRAY_CONTAINS */) {\n            return new ArrayContainsFilter(field, value);\n        }\n        else if (op === \"in\" /* Operator.IN */) {\n            return new InFilter(field, value);\n        }\n        else if (op === \"not-in\" /* Operator.NOT_IN */) {\n            return new NotInFilter(field, value);\n        }\n        else if (op === \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */) {\n            return new ArrayContainsAnyFilter(field, value);\n        }\n        else {\n            return new FieldFilter(field, op, value);\n        }\n    }\n    static createKeyFieldInFilter(field, op, value) {\n        return op === \"in\" /* Operator.IN */\n            ? new KeyFieldInFilter(field, value)\n            : new KeyFieldNotInFilter(field, value);\n    }\n    matches(doc) {\n        const other = doc.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n        if (this.op === \"!=\" /* Operator.NOT_EQUAL */) {\n            return (other !== null &&\n                other.nullValue === undefined &&\n                this.matchesComparison(valueCompare(other, this.value)));\n        }\n        // Only compare types with matching backend order (such as double and int).\n        return (other !== null &&\n            typeOrder(this.value) === typeOrder(other) &&\n            this.matchesComparison(valueCompare(other, this.value)));\n    }\n    matchesComparison(comparison) {\n        switch (this.op) {\n            case \"<\" /* Operator.LESS_THAN */:\n                return comparison < 0;\n            case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */:\n                return comparison <= 0;\n            case \"==\" /* Operator.EQUAL */:\n                return comparison === 0;\n            case \"!=\" /* Operator.NOT_EQUAL */:\n                return comparison !== 0;\n            case \">\" /* Operator.GREATER_THAN */:\n                return comparison > 0;\n            case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */:\n                return comparison >= 0;\n            default:\n                return fail(0xb8a2, {\n                    operator: this.op\n                });\n        }\n    }\n    isInequality() {\n        return ([\n            \"<\" /* Operator.LESS_THAN */,\n            \"<=\" /* Operator.LESS_THAN_OR_EQUAL */,\n            \">\" /* Operator.GREATER_THAN */,\n            \">=\" /* Operator.GREATER_THAN_OR_EQUAL */,\n            \"!=\" /* Operator.NOT_EQUAL */,\n            \"not-in\" /* Operator.NOT_IN */\n        ].indexOf(this.op) >= 0);\n    }\n    getFlattenedFilters() {\n        return [this];\n    }\n    getFilters() {\n        return [this];\n    }\n}\nclass CompositeFilter extends Filter {\n    constructor(filters, op) {\n        super();\n        this.filters = filters;\n        this.op = op;\n        this.memoizedFlattenedFilters = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */\n    static create(filters, op) {\n        return new CompositeFilter(filters, op);\n    }\n    matches(doc) {\n        if (compositeFilterIsConjunction(this)) {\n            // For conjunctions, all filters must match, so return false if any filter doesn't match.\n            return this.filters.find(filter => !filter.matches(doc)) === undefined;\n        }\n        else {\n            // For disjunctions, at least one filter should match.\n            return this.filters.find(filter => filter.matches(doc)) !== undefined;\n        }\n    }\n    getFlattenedFilters() {\n        if (this.memoizedFlattenedFilters !== null) {\n            return this.memoizedFlattenedFilters;\n        }\n        this.memoizedFlattenedFilters = this.filters.reduce((result, subfilter) => {\n            return result.concat(subfilter.getFlattenedFilters());\n        }, []);\n        return this.memoizedFlattenedFilters;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n}\nfunction compositeFilterIsConjunction(compositeFilter) {\n    return compositeFilter.op === \"and\" /* CompositeOperator.AND */;\n}\nfunction compositeFilterIsDisjunction(compositeFilter) {\n    return compositeFilter.op === \"or\" /* CompositeOperator.OR */;\n}\n/**\n * Returns true if this filter is a conjunction of field filters only. Returns false otherwise.\n */\nfunction compositeFilterIsFlatConjunction(compositeFilter) {\n    return (compositeFilterIsFlat(compositeFilter) &&\n        compositeFilterIsConjunction(compositeFilter));\n}\n/**\n * Returns true if this filter does not contain any composite filters. Returns false otherwise.\n */\nfunction compositeFilterIsFlat(compositeFilter) {\n    for (const filter of compositeFilter.filters) {\n        if (filter instanceof CompositeFilter) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canonifyFilter(filter) {\n    if (filter instanceof FieldFilter) {\n        // TODO(b/29183165): Technically, this won't be unique if two values have\n        // the same description, such as the int 3 and the string \"3\". So we should\n        // add the types in here somehow, too.\n        return (filter.field.canonicalString() +\n            filter.op.toString() +\n            canonicalId(filter.value));\n    }\n    else if (compositeFilterIsFlatConjunction(filter)) {\n        // Older SDK versions use an implicit AND operation between their filters.\n        // In the new SDK versions, the developer may use an explicit AND filter.\n        // To stay consistent with the old usages, we add a special case to ensure\n        // the canonical ID for these two are the same. For example:\n        // `col.whereEquals(\"a\", 1).whereEquals(\"b\", 2)` should have the same\n        // canonical ID as `col.where(and(equals(\"a\",1), equals(\"b\",2)))`.\n        return filter.filters.map(filter => canonifyFilter(filter)).join(',');\n    }\n    else {\n        // filter instanceof CompositeFilter\n        const canonicalIdsString = filter.filters\n            .map(filter => canonifyFilter(filter))\n            .join(',');\n        return `${filter.op}(${canonicalIdsString})`;\n    }\n}\nfunction filterEquals(f1, f2) {\n    if (f1 instanceof FieldFilter) {\n        return fieldFilterEquals(f1, f2);\n    }\n    else if (f1 instanceof CompositeFilter) {\n        return compositeFilterEquals(f1, f2);\n    }\n    else {\n        fail(0x4bef);\n    }\n}\nfunction fieldFilterEquals(f1, f2) {\n    return (f2 instanceof FieldFilter &&\n        f1.op === f2.op &&\n        f1.field.isEqual(f2.field) &&\n        valueEquals(f1.value, f2.value));\n}\nfunction compositeFilterEquals(f1, f2) {\n    if (f2 instanceof CompositeFilter &&\n        f1.op === f2.op &&\n        f1.filters.length === f2.filters.length) {\n        const subFiltersMatch = f1.filters.reduce((result, f1Filter, index) => result && filterEquals(f1Filter, f2.filters[index]), true);\n        return subFiltersMatch;\n    }\n    return false;\n}\n/**\n * Returns a new composite filter that contains all filter from\n * `compositeFilter` plus all the given filters in `otherFilters`.\n */\nfunction compositeFilterWithAddedFilters(compositeFilter, otherFilters) {\n    const mergedFilters = compositeFilter.filters.concat(otherFilters);\n    return CompositeFilter.create(mergedFilters, compositeFilter.op);\n}\n/** Returns a debug description for `filter`. */\nfunction stringifyFilter(filter) {\n    if (filter instanceof FieldFilter) {\n        return stringifyFieldFilter(filter);\n    }\n    else if (filter instanceof CompositeFilter) {\n        return stringifyCompositeFilter(filter);\n    }\n    else {\n        return 'Filter';\n    }\n}\nfunction stringifyCompositeFilter(filter) {\n    return (filter.op.toString() +\n        ` {` +\n        filter.getFilters().map(stringifyFilter).join(' ,') +\n        '}');\n}\nfunction stringifyFieldFilter(filter) {\n    return `${filter.field.canonicalString()} ${filter.op} ${canonicalId(filter.value)}`;\n}\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass KeyFieldFilter extends FieldFilter {\n    constructor(field, op, value) {\n        super(field, op, value);\n        this.key = DocumentKey.fromName(value.referenceValue);\n    }\n    matches(doc) {\n        const comparison = DocumentKey.comparator(doc.key, this.key);\n        return this.matchesComparison(comparison);\n    }\n}\n/** Filter that matches on key fields within an array. */\nclass KeyFieldInFilter extends FieldFilter {\n    constructor(field, value) {\n        super(field, \"in\" /* Operator.IN */, value);\n        this.keys = extractDocumentKeysFromArrayValue(\"in\" /* Operator.IN */, value);\n    }\n    matches(doc) {\n        return this.keys.some(key => key.isEqual(doc.key));\n    }\n}\n/** Filter that matches on key fields not present within an array. */\nclass KeyFieldNotInFilter extends FieldFilter {\n    constructor(field, value) {\n        super(field, \"not-in\" /* Operator.NOT_IN */, value);\n        this.keys = extractDocumentKeysFromArrayValue(\"not-in\" /* Operator.NOT_IN */, value);\n    }\n    matches(doc) {\n        return !this.keys.some(key => key.isEqual(doc.key));\n    }\n}\nfunction extractDocumentKeysFromArrayValue(op, value) {\n    var _a;\n    return (((_a = value.arrayValue) === null || _a === void 0 ? void 0 : _a.values) || []).map(v => {\n        return DocumentKey.fromName(v.referenceValue);\n    });\n}\n/** A Filter that implements the array-contains operator. */\nclass ArrayContainsFilter extends FieldFilter {\n    constructor(field, value) {\n        super(field, \"array-contains\" /* Operator.ARRAY_CONTAINS */, value);\n    }\n    matches(doc) {\n        const other = doc.data.field(this.field);\n        return isArray(other) && arrayValueContains(other.arrayValue, this.value);\n    }\n}\n/** A Filter that implements the IN operator. */\nclass InFilter extends FieldFilter {\n    constructor(field, value) {\n        super(field, \"in\" /* Operator.IN */, value);\n    }\n    matches(doc) {\n        const other = doc.data.field(this.field);\n        return other !== null && arrayValueContains(this.value.arrayValue, other);\n    }\n}\n/** A Filter that implements the not-in operator. */\nclass NotInFilter extends FieldFilter {\n    constructor(field, value) {\n        super(field, \"not-in\" /* Operator.NOT_IN */, value);\n    }\n    matches(doc) {\n        if (arrayValueContains(this.value.arrayValue, { nullValue: 'NULL_VALUE' })) {\n            return false;\n        }\n        const other = doc.data.field(this.field);\n        return (other !== null &&\n            other.nullValue === undefined &&\n            !arrayValueContains(this.value.arrayValue, other));\n    }\n}\n/** A Filter that implements the array-contains-any operator. */\nclass ArrayContainsAnyFilter extends FieldFilter {\n    constructor(field, value) {\n        super(field, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */, value);\n    }\n    matches(doc) {\n        const other = doc.data.field(this.field);\n        if (!isArray(other) || !other.arrayValue.values) {\n            return false;\n        }\n        return other.arrayValue.values.some(val => arrayValueContains(this.value.arrayValue, val));\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass TargetImpl {\n    constructor(path, collectionGroup = null, orderBy = [], filters = [], limit = null, startAt = null, endAt = null) {\n        this.path = path;\n        this.collectionGroup = collectionGroup;\n        this.orderBy = orderBy;\n        this.filters = filters;\n        this.limit = limit;\n        this.startAt = startAt;\n        this.endAt = endAt;\n        this.memoizedCanonicalId = null;\n    }\n}\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\nfunction newTarget(path, collectionGroup = null, orderBy = [], filters = [], limit = null, startAt = null, endAt = null) {\n    return new TargetImpl(path, collectionGroup, orderBy, filters, limit, startAt, endAt);\n}\nfunction canonifyTarget(target) {\n    const targetImpl = debugCast(target);\n    if (targetImpl.memoizedCanonicalId === null) {\n        let str = targetImpl.path.canonicalString();\n        if (targetImpl.collectionGroup !== null) {\n            str += '|cg:' + targetImpl.collectionGroup;\n        }\n        str += '|f:';\n        str += targetImpl.filters.map(f => canonifyFilter(f)).join(',');\n        str += '|ob:';\n        str += targetImpl.orderBy.map(o => canonifyOrderBy(o)).join(',');\n        if (!isNullOrUndefined(targetImpl.limit)) {\n            str += '|l:';\n            str += targetImpl.limit;\n        }\n        if (targetImpl.startAt) {\n            str += '|lb:';\n            str += targetImpl.startAt.inclusive ? 'b:' : 'a:';\n            str += targetImpl.startAt.position.map(p => canonicalId(p)).join(',');\n        }\n        if (targetImpl.endAt) {\n            str += '|ub:';\n            str += targetImpl.endAt.inclusive ? 'a:' : 'b:';\n            str += targetImpl.endAt.position.map(p => canonicalId(p)).join(',');\n        }\n        targetImpl.memoizedCanonicalId = str;\n    }\n    return targetImpl.memoizedCanonicalId;\n}\nfunction stringifyTarget(target) {\n    let str = target.path.canonicalString();\n    if (target.collectionGroup !== null) {\n        str += ' collectionGroup=' + target.collectionGroup;\n    }\n    if (target.filters.length > 0) {\n        str += `, filters: [${target.filters\n            .map(f => stringifyFilter(f))\n            .join(', ')}]`;\n    }\n    if (!isNullOrUndefined(target.limit)) {\n        str += ', limit: ' + target.limit;\n    }\n    if (target.orderBy.length > 0) {\n        str += `, orderBy: [${target.orderBy\n            .map(o => stringifyOrderBy(o))\n            .join(', ')}]`;\n    }\n    if (target.startAt) {\n        str += ', startAt: ';\n        str += target.startAt.inclusive ? 'b:' : 'a:';\n        str += target.startAt.position.map(p => canonicalId(p)).join(',');\n    }\n    if (target.endAt) {\n        str += ', endAt: ';\n        str += target.endAt.inclusive ? 'a:' : 'b:';\n        str += target.endAt.position.map(p => canonicalId(p)).join(',');\n    }\n    return `Target(${str})`;\n}\nfunction targetEquals(left, right) {\n    if (left.limit !== right.limit) {\n        return false;\n    }\n    if (left.orderBy.length !== right.orderBy.length) {\n        return false;\n    }\n    for (let i = 0; i < left.orderBy.length; i++) {\n        if (!orderByEquals(left.orderBy[i], right.orderBy[i])) {\n            return false;\n        }\n    }\n    if (left.filters.length !== right.filters.length) {\n        return false;\n    }\n    for (let i = 0; i < left.filters.length; i++) {\n        if (!filterEquals(left.filters[i], right.filters[i])) {\n            return false;\n        }\n    }\n    if (left.collectionGroup !== right.collectionGroup) {\n        return false;\n    }\n    if (!left.path.isEqual(right.path)) {\n        return false;\n    }\n    if (!boundEquals(left.startAt, right.startAt)) {\n        return false;\n    }\n    return boundEquals(left.endAt, right.endAt);\n}\nfunction targetIsDocumentTarget(target) {\n    return (DocumentKey.isDocumentKey(target.path) &&\n        target.collectionGroup === null &&\n        target.filters.length === 0);\n}\n/** Returns the field filters that target the given field path. */\nfunction targetGetFieldFiltersForPath(target, path) {\n    return target.filters.filter(f => f instanceof FieldFilter && f.field.isEqual(path));\n}\n/**\n * Returns the values that are used in ARRAY_CONTAINS or ARRAY_CONTAINS_ANY\n * filters. Returns `null` if there are no such filters.\n */\nfunction targetGetArrayValues(target, fieldIndex) {\n    const segment = fieldIndexGetArraySegment(fieldIndex);\n    if (segment === undefined) {\n        return null;\n    }\n    for (const fieldFilter of targetGetFieldFiltersForPath(target, segment.fieldPath)) {\n        switch (fieldFilter.op) {\n            case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */:\n                return fieldFilter.value.arrayValue.values || [];\n            case \"array-contains\" /* Operator.ARRAY_CONTAINS */:\n                return [fieldFilter.value];\n            // Remaining filters are not array filters.\n        }\n    }\n    return null;\n}\n/**\n * Returns the list of values that are used in != or NOT_IN filters. Returns\n * `null` if there are no such filters.\n */\nfunction targetGetNotInValues(target, fieldIndex) {\n    const values = new Map();\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n        for (const fieldFilter of targetGetFieldFiltersForPath(target, segment.fieldPath)) {\n            switch (fieldFilter.op) {\n                case \"==\" /* Operator.EQUAL */:\n                case \"in\" /* Operator.IN */:\n                    // Encode equality prefix, which is encoded in the index value before\n                    // the inequality (e.g. `a == 'a' && b != 'b'` is encoded to\n                    // `value != 'ab'`).\n                    values.set(segment.fieldPath.canonicalString(), fieldFilter.value);\n                    break;\n                case \"not-in\" /* Operator.NOT_IN */:\n                case \"!=\" /* Operator.NOT_EQUAL */:\n                    // NotIn/NotEqual is always a suffix. There cannot be any remaining\n                    // segments and hence we can return early here.\n                    values.set(segment.fieldPath.canonicalString(), fieldFilter.value);\n                    return Array.from(values.values());\n                // Remaining filters cannot be used as notIn bounds.\n            }\n        }\n    }\n    return null;\n}\n/**\n * Returns a lower bound of field values that can be used as a starting point to\n * scan the index defined by `fieldIndex`. Returns `MIN_VALUE` if no lower bound\n * exists.\n */\nfunction targetGetLowerBound(target, fieldIndex) {\n    const values = [];\n    let inclusive = true;\n    // For each segment, retrieve a lower bound if there is a suitable filter or\n    // startAt.\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n        const segmentBound = segment.kind === 0 /* IndexKind.ASCENDING */\n            ? targetGetAscendingBound(target, segment.fieldPath, target.startAt)\n            : targetGetDescendingBound(target, segment.fieldPath, target.startAt);\n        values.push(segmentBound.value);\n        inclusive && (inclusive = segmentBound.inclusive);\n    }\n    return new Bound(values, inclusive);\n}\n/**\n * Returns an upper bound of field values that can be used as an ending point\n * when scanning the index defined by `fieldIndex`. Returns `MAX_VALUE` if no\n * upper bound exists.\n */\nfunction targetGetUpperBound(target, fieldIndex) {\n    const values = [];\n    let inclusive = true;\n    // For each segment, retrieve an upper bound if there is a suitable filter or\n    // endAt.\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n        const segmentBound = segment.kind === 0 /* IndexKind.ASCENDING */\n            ? targetGetDescendingBound(target, segment.fieldPath, target.endAt)\n            : targetGetAscendingBound(target, segment.fieldPath, target.endAt);\n        values.push(segmentBound.value);\n        inclusive && (inclusive = segmentBound.inclusive);\n    }\n    return new Bound(values, inclusive);\n}\n/**\n * Returns the value to use as the lower bound for ascending index segment at\n * the provided `fieldPath` (or the upper bound for an descending segment).\n */\nfunction targetGetAscendingBound(target, fieldPath, bound) {\n    let value = MIN_VALUE;\n    let inclusive = true;\n    // Process all filters to find a value for the current field segment\n    for (const fieldFilter of targetGetFieldFiltersForPath(target, fieldPath)) {\n        let filterValue = MIN_VALUE;\n        let filterInclusive = true;\n        switch (fieldFilter.op) {\n            case \"<\" /* Operator.LESS_THAN */:\n            case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */:\n                filterValue = valuesGetLowerBound(fieldFilter.value);\n                break;\n            case \"==\" /* Operator.EQUAL */:\n            case \"in\" /* Operator.IN */:\n            case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */:\n                filterValue = fieldFilter.value;\n                break;\n            case \">\" /* Operator.GREATER_THAN */:\n                filterValue = fieldFilter.value;\n                filterInclusive = false;\n                break;\n            case \"!=\" /* Operator.NOT_EQUAL */:\n            case \"not-in\" /* Operator.NOT_IN */:\n                filterValue = MIN_VALUE;\n                break;\n            // Remaining filters cannot be used as lower bounds.\n        }\n        if (lowerBoundCompare({ value, inclusive }, { value: filterValue, inclusive: filterInclusive }) < 0) {\n            value = filterValue;\n            inclusive = filterInclusive;\n        }\n    }\n    // If there is an additional bound, compare the values against the existing\n    // range to see if we can narrow the scope.\n    if (bound !== null) {\n        for (let i = 0; i < target.orderBy.length; ++i) {\n            const orderBy = target.orderBy[i];\n            if (orderBy.field.isEqual(fieldPath)) {\n                const cursorValue = bound.position[i];\n                if (lowerBoundCompare({ value, inclusive }, { value: cursorValue, inclusive: bound.inclusive }) < 0) {\n                    value = cursorValue;\n                    inclusive = bound.inclusive;\n                }\n                break;\n            }\n        }\n    }\n    return { value, inclusive };\n}\n/**\n * Returns the value to use as the upper bound for ascending index segment at\n * the provided `fieldPath` (or the lower bound for a descending segment).\n */\nfunction targetGetDescendingBound(target, fieldPath, bound) {\n    let value = MAX_VALUE;\n    let inclusive = true;\n    // Process all filters to find a value for the current field segment\n    for (const fieldFilter of targetGetFieldFiltersForPath(target, fieldPath)) {\n        let filterValue = MAX_VALUE;\n        let filterInclusive = true;\n        switch (fieldFilter.op) {\n            case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */:\n            case \">\" /* Operator.GREATER_THAN */:\n                filterValue = valuesGetUpperBound(fieldFilter.value);\n                filterInclusive = false;\n                break;\n            case \"==\" /* Operator.EQUAL */:\n            case \"in\" /* Operator.IN */:\n            case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */:\n                filterValue = fieldFilter.value;\n                break;\n            case \"<\" /* Operator.LESS_THAN */:\n                filterValue = fieldFilter.value;\n                filterInclusive = false;\n                break;\n            case \"!=\" /* Operator.NOT_EQUAL */:\n            case \"not-in\" /* Operator.NOT_IN */:\n                filterValue = MAX_VALUE;\n                break;\n            // Remaining filters cannot be used as upper bounds.\n        }\n        if (upperBoundCompare({ value, inclusive }, { value: filterValue, inclusive: filterInclusive }) > 0) {\n            value = filterValue;\n            inclusive = filterInclusive;\n        }\n    }\n    // If there is an additional bound, compare the values against the existing\n    // range to see if we can narrow the scope.\n    if (bound !== null) {\n        for (let i = 0; i < target.orderBy.length; ++i) {\n            const orderBy = target.orderBy[i];\n            if (orderBy.field.isEqual(fieldPath)) {\n                const cursorValue = bound.position[i];\n                if (upperBoundCompare({ value, inclusive }, { value: cursorValue, inclusive: bound.inclusive }) > 0) {\n                    value = cursorValue;\n                    inclusive = bound.inclusive;\n                }\n                break;\n            }\n        }\n    }\n    return { value, inclusive };\n}\n/** Returns the number of segments of a perfect index for this target. */\nfunction targetGetSegmentCount(target) {\n    let fields = new SortedSet(FieldPath$1.comparator);\n    let hasArraySegment = false;\n    for (const filter of target.filters) {\n        for (const subFilter of filter.getFlattenedFilters()) {\n            // __name__ is not an explicit segment of any index, so we don't need to\n            // count it.\n            if (subFilter.field.isKeyField()) {\n                continue;\n            }\n            // ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filters must be counted separately.\n            // For instance, it is possible to have an index for \"a ARRAY a ASC\". Even\n            // though these are on the same field, they should be counted as two\n            // separate segments in an index.\n            if (subFilter.op === \"array-contains\" /* Operator.ARRAY_CONTAINS */ ||\n                subFilter.op === \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */) {\n                hasArraySegment = true;\n            }\n            else {\n                fields = fields.add(subFilter.field);\n            }\n        }\n    }\n    for (const orderBy of target.orderBy) {\n        // __name__ is not an explicit segment of any index, so we don't need to\n        // count it.\n        if (!orderBy.field.isKeyField()) {\n            fields = fields.add(orderBy.field);\n        }\n    }\n    return fields.size + (hasArraySegment ? 1 : 0);\n}\nfunction targetHasLimit(target) {\n    return target.limit !== null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass QueryImpl {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(path, collectionGroup = null, explicitOrderBy = [], filters = [], limit = null, limitType = \"F\" /* LimitType.First */, startAt = null, endAt = null) {\n        this.path = path;\n        this.collectionGroup = collectionGroup;\n        this.explicitOrderBy = explicitOrderBy;\n        this.filters = filters;\n        this.limit = limit;\n        this.limitType = limitType;\n        this.startAt = startAt;\n        this.endAt = endAt;\n        this.memoizedNormalizedOrderBy = null;\n        // The corresponding `Target` of this `Query` instance, for use with\n        // non-aggregate queries.\n        this.memoizedTarget = null;\n        // The corresponding `Target` of this `Query` instance, for use with\n        // aggregate queries. Unlike targets for non-aggregate queries,\n        // aggregate query targets do not contain normalized order-bys, they only\n        // contain explicit order-bys.\n        this.memoizedAggregateTarget = null;\n        if (this.startAt) ;\n        if (this.endAt) ;\n    }\n}\n/** Creates a new Query instance with the options provided. */\nfunction newQuery(path, collectionGroup, explicitOrderBy, filters, limit, limitType, startAt, endAt) {\n    return new QueryImpl(path, collectionGroup, explicitOrderBy, filters, limit, limitType, startAt, endAt);\n}\n/** Creates a new Query for a query that matches all documents at `path` */\nfunction newQueryForPath(path) {\n    return new QueryImpl(path);\n}\n/**\n * Helper to convert a collection group query into a collection query at a\n * specific path. This is used when executing collection group queries, since\n * we have to split the query into a set of collection queries at multiple\n * paths.\n */\nfunction asCollectionQueryAtPath(query, path) {\n    return new QueryImpl(path, \n    /*collectionGroup=*/ null, query.explicitOrderBy.slice(), query.filters.slice(), query.limit, query.limitType, query.startAt, query.endAt);\n}\n/**\n * Returns true if this query does not specify any query constraints that\n * could remove results.\n */\nfunction queryMatchesAllDocuments(query) {\n    return (query.filters.length === 0 &&\n        query.limit === null &&\n        query.startAt == null &&\n        query.endAt == null &&\n        (query.explicitOrderBy.length === 0 ||\n            (query.explicitOrderBy.length === 1 &&\n                query.explicitOrderBy[0].field.isKeyField())));\n}\n// Returns the sorted set of inequality filter fields used in this query.\nfunction getInequalityFilterFields(query) {\n    let result = new SortedSet(FieldPath$1.comparator);\n    query.filters.forEach((filter) => {\n        const subFilters = filter.getFlattenedFilters();\n        subFilters.forEach((filter) => {\n            if (filter.isInequality()) {\n                result = result.add(filter.field);\n            }\n        });\n    });\n    return result;\n}\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\nfunction newQueryForCollectionGroup(collectionId) {\n    return new QueryImpl(ResourcePath.emptyPath(), collectionId);\n}\n/**\n * Returns whether the query matches a single document by path (rather than a\n * collection).\n */\nfunction isDocumentQuery$1(query) {\n    return (DocumentKey.isDocumentKey(query.path) &&\n        query.collectionGroup === null &&\n        query.filters.length === 0);\n}\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction isCollectionGroupQuery(query) {\n    return query.collectionGroup !== null;\n}\n/**\n * Returns the normalized order-by constraint that is used to execute the Query,\n * which can be different from the order-by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`). The normalized order-by\n * includes implicit order-bys in addition to the explicit user provided\n * order-bys.\n */\nfunction queryNormalizedOrderBy(query) {\n    const queryImpl = debugCast(query);\n    if (queryImpl.memoizedNormalizedOrderBy === null) {\n        queryImpl.memoizedNormalizedOrderBy = [];\n        const fieldsNormalized = new Set();\n        // Any explicit order by fields should be added as is.\n        for (const orderBy of queryImpl.explicitOrderBy) {\n            queryImpl.memoizedNormalizedOrderBy.push(orderBy);\n            fieldsNormalized.add(orderBy.field.canonicalString());\n        }\n        // The order of the implicit ordering always matches the last explicit order by.\n        const lastDirection = queryImpl.explicitOrderBy.length > 0\n            ? queryImpl.explicitOrderBy[queryImpl.explicitOrderBy.length - 1].dir\n            : \"asc\" /* Direction.ASCENDING */;\n        // Any inequality fields not explicitly ordered should be implicitly ordered in a lexicographical\n        // order. When there are multiple inequality filters on the same field, the field should be added\n        // only once.\n        // Note: `SortedSet<FieldPath>` sorts the key field before other fields. However, we want the key\n        // field to be sorted last.\n        const inequalityFields = getInequalityFilterFields(queryImpl);\n        inequalityFields.forEach(field => {\n            if (!fieldsNormalized.has(field.canonicalString()) &&\n                !field.isKeyField()) {\n                queryImpl.memoizedNormalizedOrderBy.push(new OrderBy(field, lastDirection));\n            }\n        });\n        // Add the document key field to the last if it is not explicitly ordered.\n        if (!fieldsNormalized.has(FieldPath$1.keyField().canonicalString())) {\n            queryImpl.memoizedNormalizedOrderBy.push(new OrderBy(FieldPath$1.keyField(), lastDirection));\n        }\n    }\n    return queryImpl.memoizedNormalizedOrderBy;\n}\n/**\n * Converts this `Query` instance to its corresponding `Target` representation.\n */\nfunction queryToTarget(query) {\n    const queryImpl = debugCast(query);\n    if (!queryImpl.memoizedTarget) {\n        queryImpl.memoizedTarget = _queryToTarget(queryImpl, queryNormalizedOrderBy(query));\n    }\n    return queryImpl.memoizedTarget;\n}\n/**\n * Converts this `Query` instance to its corresponding `Target` representation,\n * for use within an aggregate query. Unlike targets for non-aggregate queries,\n * aggregate query targets do not contain normalized order-bys, they only\n * contain explicit order-bys.\n */\nfunction queryToAggregateTarget(query) {\n    const queryImpl = debugCast(query);\n    if (!queryImpl.memoizedAggregateTarget) {\n        // Do not include implicit order-bys for aggregate queries.\n        queryImpl.memoizedAggregateTarget = _queryToTarget(queryImpl, query.explicitOrderBy);\n    }\n    return queryImpl.memoizedAggregateTarget;\n}\nfunction _queryToTarget(queryImpl, orderBys) {\n    if (queryImpl.limitType === \"F\" /* LimitType.First */) {\n        return newTarget(queryImpl.path, queryImpl.collectionGroup, orderBys, queryImpl.filters, queryImpl.limit, queryImpl.startAt, queryImpl.endAt);\n    }\n    else {\n        // Flip the orderBy directions since we want the last results\n        orderBys = orderBys.map(orderBy => {\n            const dir = orderBy.dir === \"desc\" /* Direction.DESCENDING */\n                ? \"asc\" /* Direction.ASCENDING */\n                : \"desc\" /* Direction.DESCENDING */;\n            return new OrderBy(orderBy.field, dir);\n        });\n        // We need to swap the cursors to match the now-flipped query ordering.\n        const startAt = queryImpl.endAt\n            ? new Bound(queryImpl.endAt.position, queryImpl.endAt.inclusive)\n            : null;\n        const endAt = queryImpl.startAt\n            ? new Bound(queryImpl.startAt.position, queryImpl.startAt.inclusive)\n            : null;\n        // Now return as a LimitType.First query.\n        return newTarget(queryImpl.path, queryImpl.collectionGroup, orderBys, queryImpl.filters, queryImpl.limit, startAt, endAt);\n    }\n}\nfunction queryWithAddedFilter(query, filter) {\n    const newFilters = query.filters.concat([filter]);\n    return new QueryImpl(query.path, query.collectionGroup, query.explicitOrderBy.slice(), newFilters, query.limit, query.limitType, query.startAt, query.endAt);\n}\nfunction queryWithAddedOrderBy(query, orderBy) {\n    // TODO(dimond): validate that orderBy does not list the same key twice.\n    const newOrderBy = query.explicitOrderBy.concat([orderBy]);\n    return new QueryImpl(query.path, query.collectionGroup, newOrderBy, query.filters.slice(), query.limit, query.limitType, query.startAt, query.endAt);\n}\nfunction queryWithLimit(query, limit, limitType) {\n    return new QueryImpl(query.path, query.collectionGroup, query.explicitOrderBy.slice(), query.filters.slice(), limit, limitType, query.startAt, query.endAt);\n}\nfunction queryWithStartAt(query, bound) {\n    return new QueryImpl(query.path, query.collectionGroup, query.explicitOrderBy.slice(), query.filters.slice(), query.limit, query.limitType, bound, query.endAt);\n}\nfunction queryWithEndAt(query, bound) {\n    return new QueryImpl(query.path, query.collectionGroup, query.explicitOrderBy.slice(), query.filters.slice(), query.limit, query.limitType, query.startAt, bound);\n}\nfunction queryEquals(left, right) {\n    return (targetEquals(queryToTarget(left), queryToTarget(right)) &&\n        left.limitType === right.limitType);\n}\n// TODO(b/29183165): This is used to get a unique string from a query to, for\n// example, use as a dictionary key, but the implementation is subject to\n// collisions. Make it collision-free.\nfunction canonifyQuery(query) {\n    return `${canonifyTarget(queryToTarget(query))}|lt:${query.limitType}`;\n}\nfunction stringifyQuery(query) {\n    return `Query(target=${stringifyTarget(queryToTarget(query))}; limitType=${query.limitType})`;\n}\n/** Returns whether `doc` matches the constraints of `query`. */\nfunction queryMatches(query, doc) {\n    return (doc.isFoundDocument() &&\n        queryMatchesPathAndCollectionGroup(query, doc) &&\n        queryMatchesOrderBy(query, doc) &&\n        queryMatchesFilters(query, doc) &&\n        queryMatchesBounds(query, doc));\n}\nfunction queryMatchesPathAndCollectionGroup(query, doc) {\n    const docPath = doc.key.path;\n    if (query.collectionGroup !== null) {\n        // NOTE: this.path is currently always empty since we don't expose Collection\n        // Group queries rooted at a document path yet.\n        return (doc.key.hasCollectionId(query.collectionGroup) &&\n            query.path.isPrefixOf(docPath));\n    }\n    else if (DocumentKey.isDocumentKey(query.path)) {\n        // exact match for document queries\n        return query.path.isEqual(docPath);\n    }\n    else {\n        // shallow ancestor queries by default\n        return query.path.isImmediateParentOf(docPath);\n    }\n}\n/**\n * A document must have a value for every ordering clause in order to show up\n * in the results.\n */\nfunction queryMatchesOrderBy(query, doc) {\n    // We must use `queryNormalizedOrderBy()` to get the list of all orderBys (both implicit and explicit).\n    // Note that for OR queries, orderBy applies to all disjunction terms and implicit orderBys must\n    // be taken into account. For example, the query \"a > 1 || b==1\" has an implicit \"orderBy a\" due\n    // to the inequality, and is evaluated as \"a > 1 orderBy a || b==1 orderBy a\".\n    // A document with content of {b:1} matches the filters, but does not match the orderBy because\n    // it's missing the field 'a'.\n    for (const orderBy of queryNormalizedOrderBy(query)) {\n        // order-by key always matches\n        if (!orderBy.field.isKeyField() && doc.data.field(orderBy.field) === null) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction queryMatchesFilters(query, doc) {\n    for (const filter of query.filters) {\n        if (!filter.matches(doc)) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Makes sure a document is within the bounds, if provided. */\nfunction queryMatchesBounds(query, doc) {\n    if (query.startAt &&\n        !boundSortsBeforeDocument(query.startAt, queryNormalizedOrderBy(query), doc)) {\n        return false;\n    }\n    if (query.endAt &&\n        !boundSortsAfterDocument(query.endAt, queryNormalizedOrderBy(query), doc)) {\n        return false;\n    }\n    return true;\n}\n/**\n * Returns the collection group that this query targets.\n *\n * PORTING NOTE: This is only used in the Web SDK to facilitate multi-tab\n * synchronization for query results.\n */\nfunction queryCollectionGroup(query) {\n    return (query.collectionGroup ||\n        (query.path.length % 2 === 1\n            ? query.path.lastSegment()\n            : query.path.get(query.path.length - 2)));\n}\n/**\n * Returns a new comparator function that can be used to compare two documents\n * based on the Query's ordering constraint.\n */\nfunction newQueryComparator(query) {\n    return (d1, d2) => {\n        let comparedOnKeyField = false;\n        for (const orderBy of queryNormalizedOrderBy(query)) {\n            const comp = compareDocs(orderBy, d1, d2);\n            if (comp !== 0) {\n                return comp;\n            }\n            comparedOnKeyField = comparedOnKeyField || orderBy.field.isKeyField();\n        }\n        return 0;\n    };\n}\nfunction compareDocs(orderBy, d1, d2) {\n    const comparison = orderBy.field.isKeyField()\n        ? DocumentKey.comparator(d1.key, d2.key)\n        : compareDocumentsByField(orderBy.field, d1, d2);\n    switch (orderBy.dir) {\n        case \"asc\" /* Direction.ASCENDING */:\n            return comparison;\n        case \"desc\" /* Direction.DESCENDING */:\n            return -1 * comparison;\n        default:\n            return fail(0x4d4e, { direction: orderBy.dir });\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A map implementation that uses objects as keys. Objects must have an\n * associated equals function and must be immutable. Entries in the map are\n * stored together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */\nclass ObjectMap {\n    constructor(mapKeyFn, equalsFn) {\n        this.mapKeyFn = mapKeyFn;\n        this.equalsFn = equalsFn;\n        /**\n         * The inner map for a key/value pair. Due to the possibility of collisions we\n         * keep a list of entries that we do a linear search through to find an actual\n         * match. Note that collisions should be rare, so we still expect near\n         * constant time lookups in practice.\n         */\n        this.inner = {};\n        /** The number of entries stored in the map */\n        this.innerSize = 0;\n    }\n    /** Get a value for this key, or undefined if it does not exist. */\n    get(key) {\n        const id = this.mapKeyFn(key);\n        const matches = this.inner[id];\n        if (matches === undefined) {\n            return undefined;\n        }\n        for (const [otherKey, value] of matches) {\n            if (this.equalsFn(otherKey, key)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    has(key) {\n        return this.get(key) !== undefined;\n    }\n    /** Put this key and value in the map. */\n    set(key, value) {\n        const id = this.mapKeyFn(key);\n        const matches = this.inner[id];\n        if (matches === undefined) {\n            this.inner[id] = [[key, value]];\n            this.innerSize++;\n            return;\n        }\n        for (let i = 0; i < matches.length; i++) {\n            if (this.equalsFn(matches[i][0], key)) {\n                // This is updating an existing entry and does not increase `innerSize`.\n                matches[i] = [key, value];\n                return;\n            }\n        }\n        matches.push([key, value]);\n        this.innerSize++;\n    }\n    /**\n     * Remove this key from the map. Returns a boolean if anything was deleted.\n     */\n    delete(key) {\n        const id = this.mapKeyFn(key);\n        const matches = this.inner[id];\n        if (matches === undefined) {\n            return false;\n        }\n        for (let i = 0; i < matches.length; i++) {\n            if (this.equalsFn(matches[i][0], key)) {\n                if (matches.length === 1) {\n                    delete this.inner[id];\n                }\n                else {\n                    matches.splice(i, 1);\n                }\n                this.innerSize--;\n                return true;\n            }\n        }\n        return false;\n    }\n    forEach(fn) {\n        forEach(this.inner, (_, entries) => {\n            for (const [k, v] of entries) {\n                fn(k, v);\n            }\n        });\n    }\n    isEmpty() {\n        return isEmpty(this.inner);\n    }\n    size() {\n        return this.innerSize;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst EMPTY_MUTABLE_DOCUMENT_MAP = new SortedMap(DocumentKey.comparator);\nfunction mutableDocumentMap() {\n    return EMPTY_MUTABLE_DOCUMENT_MAP;\n}\nconst EMPTY_DOCUMENT_MAP = new SortedMap(DocumentKey.comparator);\nfunction documentMap(...docs) {\n    let map = EMPTY_DOCUMENT_MAP;\n    for (const doc of docs) {\n        map = map.insert(doc.key, doc);\n    }\n    return map;\n}\nfunction newOverlayedDocumentMap() {\n    return newDocumentKeyMap();\n}\nfunction convertOverlayedDocumentMapToDocumentMap(collection) {\n    let documents = EMPTY_DOCUMENT_MAP;\n    collection.forEach((k, v) => (documents = documents.insert(k, v.overlayedDocument)));\n    return documents;\n}\nfunction newOverlayMap() {\n    return newDocumentKeyMap();\n}\nfunction newMutationMap() {\n    return newDocumentKeyMap();\n}\nfunction newDocumentKeyMap() {\n    return new ObjectMap(key => key.toString(), (l, r) => l.isEqual(r));\n}\nconst EMPTY_DOCUMENT_VERSION_MAP = new SortedMap(DocumentKey.comparator);\nfunction documentVersionMap() {\n    return EMPTY_DOCUMENT_VERSION_MAP;\n}\nconst EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\nfunction documentKeySet(...keys) {\n    let set = EMPTY_DOCUMENT_KEY_SET;\n    for (const key of keys) {\n        set = set.add(key);\n    }\n    return set;\n}\nconst EMPTY_TARGET_ID_SET = new SortedSet(primitiveComparator);\nfunction targetIdSet() {\n    return EMPTY_TARGET_ID_SET;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\nfunction toDouble(serializer, value) {\n    if (serializer.useProto3Json) {\n        if (isNaN(value)) {\n            return { doubleValue: 'NaN' };\n        }\n        else if (value === Infinity) {\n            return { doubleValue: 'Infinity' };\n        }\n        else if (value === -Infinity) {\n            return { doubleValue: '-Infinity' };\n        }\n    }\n    return { doubleValue: isNegativeZero(value) ? '-0' : value };\n}\n/**\n * Returns an IntegerValue for `value`.\n */\nfunction toInteger(value) {\n    return { integerValue: '' + value };\n}\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction toNumber(serializer, value) {\n    return isSafeInteger(value) ? toInteger(value) : toDouble(serializer, value);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */\nclass TransformOperation {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = undefined;\n    }\n}\n/**\n * Computes the local transform result against the provided `previousValue`,\n * optionally using the provided localWriteTime.\n */\nfunction applyTransformOperationToLocalView(transform, previousValue, localWriteTime) {\n    if (transform instanceof ServerTimestampTransform) {\n        return serverTimestamp$1(localWriteTime, previousValue);\n    }\n    else if (transform instanceof ArrayUnionTransformOperation) {\n        return applyArrayUnionTransformOperation(transform, previousValue);\n    }\n    else if (transform instanceof ArrayRemoveTransformOperation) {\n        return applyArrayRemoveTransformOperation(transform, previousValue);\n    }\n    else {\n        return applyNumericIncrementTransformOperationToLocalView(transform, previousValue);\n    }\n}\n/**\n * Computes a final transform result after the transform has been acknowledged\n * by the server, potentially using the server-provided transformResult.\n */\nfunction applyTransformOperationToRemoteDocument(transform, previousValue, transformResult) {\n    // The server just sends null as the transform result for array operations,\n    // so we have to calculate a result the same as we do for local\n    // applications.\n    if (transform instanceof ArrayUnionTransformOperation) {\n        return applyArrayUnionTransformOperation(transform, previousValue);\n    }\n    else if (transform instanceof ArrayRemoveTransformOperation) {\n        return applyArrayRemoveTransformOperation(transform, previousValue);\n    }\n    return transformResult;\n}\n/**\n * If this transform operation is not idempotent, returns the base value to\n * persist for this transform. If a base value is returned, the transform\n * operation is always applied to this base value, even if document has\n * already been updated.\n *\n * Base values provide consistent behavior for non-idempotent transforms and\n * allow us to return the same latency-compensated value even if the backend\n * has already applied the transform operation. The base value is null for\n * idempotent transforms, as they can be re-played even if the backend has\n * already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent transforms.\n */\nfunction computeTransformOperationBaseValue(transform, previousValue) {\n    if (transform instanceof NumericIncrementTransformOperation) {\n        return isNumber(previousValue) ? previousValue : { integerValue: 0 };\n    }\n    return null;\n}\nfunction transformOperationEquals(left, right) {\n    if (left instanceof ArrayUnionTransformOperation &&\n        right instanceof ArrayUnionTransformOperation) {\n        return arrayEquals(left.elements, right.elements, valueEquals);\n    }\n    else if (left instanceof ArrayRemoveTransformOperation &&\n        right instanceof ArrayRemoveTransformOperation) {\n        return arrayEquals(left.elements, right.elements, valueEquals);\n    }\n    else if (left instanceof NumericIncrementTransformOperation &&\n        right instanceof NumericIncrementTransformOperation) {\n        return valueEquals(left.operand, right.operand);\n    }\n    return (left instanceof ServerTimestampTransform &&\n        right instanceof ServerTimestampTransform);\n}\n/** Transforms a value into a server-generated timestamp. */\nclass ServerTimestampTransform extends TransformOperation {\n}\n/** Transforms an array value via a union operation. */\nclass ArrayUnionTransformOperation extends TransformOperation {\n    constructor(elements) {\n        super();\n        this.elements = elements;\n    }\n}\nfunction applyArrayUnionTransformOperation(transform, previousValue) {\n    const values = coercedFieldValuesArray(previousValue);\n    for (const toUnion of transform.elements) {\n        if (!values.some(element => valueEquals(element, toUnion))) {\n            values.push(toUnion);\n        }\n    }\n    return { arrayValue: { values } };\n}\n/** Transforms an array value via a remove operation. */\nclass ArrayRemoveTransformOperation extends TransformOperation {\n    constructor(elements) {\n        super();\n        this.elements = elements;\n    }\n}\nfunction applyArrayRemoveTransformOperation(transform, previousValue) {\n    let values = coercedFieldValuesArray(previousValue);\n    for (const toRemove of transform.elements) {\n        values = values.filter(element => !valueEquals(element, toRemove));\n    }\n    return { arrayValue: { values } };\n}\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\nclass NumericIncrementTransformOperation extends TransformOperation {\n    constructor(serializer, operand) {\n        super();\n        this.serializer = serializer;\n        this.operand = operand;\n    }\n}\nfunction applyNumericIncrementTransformOperationToLocalView(transform, previousValue) {\n    // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n    // precision and resolves overflows by reducing precision, we do not\n    // manually cap overflows at 2^63.\n    const baseValue = computeTransformOperationBaseValue(transform, previousValue);\n    const sum = asNumber(baseValue) + asNumber(transform.operand);\n    if (isInteger(baseValue) && isInteger(transform.operand)) {\n        return toInteger(sum);\n    }\n    else {\n        return toDouble(transform.serializer, sum);\n    }\n}\nfunction asNumber(value) {\n    return normalizeNumber(value.integerValue || value.doubleValue);\n}\nfunction coercedFieldValuesArray(value) {\n    return isArray(value) && value.arrayValue.values\n        ? value.arrayValue.values.slice()\n        : [];\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */\nclass FieldTransform {\n    constructor(field, transform) {\n        this.field = field;\n        this.transform = transform;\n    }\n}\nfunction fieldTransformEquals(left, right) {\n    return (left.field.isEqual(right.field) &&\n        transformOperationEquals(left.transform, right.transform));\n}\nfunction fieldTransformsAreEqual(left, right) {\n    if (left === undefined && right === undefined) {\n        return true;\n    }\n    if (left && right) {\n        return arrayEquals(left, right, (l, r) => fieldTransformEquals(l, r));\n    }\n    return false;\n}\n/** The result of successfully applying a mutation to the backend. */\nclass MutationResult {\n    constructor(\n    /**\n     * The version at which the mutation was committed:\n     *\n     * - For most operations, this is the updateTime in the WriteResult.\n     * - For deletes, the commitTime of the WriteResponse (because deletes are\n     *   not stored and have no updateTime).\n     *\n     * Note that these versions can be different: No-op writes will not change\n     * the updateTime even though the commitTime advances.\n     */\n    version, \n    /**\n     * The resulting fields returned from the backend after a mutation\n     * containing field transforms has been committed. Contains one FieldValue\n     * for each FieldTransform that was in the mutation.\n     *\n     * Will be empty if the mutation did not contain any field transforms.\n     */\n    transformResults) {\n        this.version = version;\n        this.transformResults = transformResults;\n    }\n}\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nclass Precondition {\n    constructor(updateTime, exists) {\n        this.updateTime = updateTime;\n        this.exists = exists;\n    }\n    /** Creates a new empty Precondition. */\n    static none() {\n        return new Precondition();\n    }\n    /** Creates a new Precondition with an exists flag. */\n    static exists(exists) {\n        return new Precondition(undefined, exists);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */\n    static updateTime(version) {\n        return new Precondition(version);\n    }\n    /** Returns whether this Precondition is empty. */\n    get isNone() {\n        return this.updateTime === undefined && this.exists === undefined;\n    }\n    isEqual(other) {\n        return (this.exists === other.exists &&\n            (this.updateTime\n                ? !!other.updateTime && this.updateTime.isEqual(other.updateTime)\n                : !other.updateTime));\n    }\n}\n/** Returns true if the preconditions is valid for the given document. */\nfunction preconditionIsValidForDocument(precondition, document) {\n    if (precondition.updateTime !== undefined) {\n        return (document.isFoundDocument() &&\n            document.version.isEqual(precondition.updateTime));\n    }\n    else if (precondition.exists !== undefined) {\n        return precondition.exists === document.isFoundDocument();\n    }\n    else {\n        return true;\n    }\n}\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\nclass Mutation {\n}\n/**\n * A utility method to calculate a `Mutation` representing the overlay from the\n * final state of the document, and a `FieldMask` representing the fields that\n * are mutated by the local mutations.\n */\nfunction calculateOverlayMutation(doc, mask) {\n    if (!doc.hasLocalMutations || (mask && mask.fields.length === 0)) {\n        return null;\n    }\n    // mask is null when sets or deletes are applied to the current document.\n    if (mask === null) {\n        if (doc.isNoDocument()) {\n            return new DeleteMutation(doc.key, Precondition.none());\n        }\n        else {\n            return new SetMutation(doc.key, doc.data, Precondition.none());\n        }\n    }\n    else {\n        const docValue = doc.data;\n        const patchValue = ObjectValue.empty();\n        let maskSet = new SortedSet(FieldPath$1.comparator);\n        for (let path of mask.fields) {\n            if (!maskSet.has(path)) {\n                let value = docValue.field(path);\n                // If we are deleting a nested field, we take the immediate parent as\n                // the mask used to construct the resulting mutation.\n                // Justification: Nested fields can create parent fields implicitly. If\n                // only a leaf entry is deleted in later mutations, the parent field\n                // should still remain, but we may have lost this information.\n                // Consider mutation (foo.bar 1), then mutation (foo.bar delete()).\n                // This leaves the final result (foo, {}). Despite the fact that `doc`\n                // has the correct result, `foo` is not in `mask`, and the resulting\n                // mutation would miss `foo`.\n                if (value === null && path.length > 1) {\n                    path = path.popLast();\n                    value = docValue.field(path);\n                }\n                if (value === null) {\n                    patchValue.delete(path);\n                }\n                else {\n                    patchValue.set(path, value);\n                }\n                maskSet = maskSet.add(path);\n            }\n        }\n        return new PatchMutation(doc.key, patchValue, new FieldMask(maskSet.toArray()), Precondition.none());\n    }\n}\n/**\n * Applies this mutation to the given document for the purposes of computing a\n * new remote document. If the input document doesn't match the expected state\n * (e.g. it is invalid or outdated), the document type may transition to\n * unknown.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param mutationResult - The result of applying the mutation from the backend.\n */\nfunction mutationApplyToRemoteDocument(mutation, document, mutationResult) {\n    if (mutation instanceof SetMutation) {\n        setMutationApplyToRemoteDocument(mutation, document, mutationResult);\n    }\n    else if (mutation instanceof PatchMutation) {\n        patchMutationApplyToRemoteDocument(mutation, document, mutationResult);\n    }\n    else {\n        deleteMutationApplyToRemoteDocument(mutation, document, mutationResult);\n    }\n}\n/**\n * Applies this mutation to the given document for the purposes of computing\n * the new local view of a document. If the input document doesn't match the\n * expected state, the document is not modified.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param previousMask - The fields that have been updated before applying this mutation.\n * @param localWriteTime - A timestamp indicating the local write time of the\n *     batch this mutation is a part of.\n * @returns A `FieldMask` representing the fields that are changed by applying this mutation.\n */\nfunction mutationApplyToLocalView(mutation, document, previousMask, localWriteTime) {\n    if (mutation instanceof SetMutation) {\n        return setMutationApplyToLocalView(mutation, document, previousMask, localWriteTime);\n    }\n    else if (mutation instanceof PatchMutation) {\n        return patchMutationApplyToLocalView(mutation, document, previousMask, localWriteTime);\n    }\n    else {\n        return deleteMutationApplyToLocalView(mutation, document, previousMask);\n    }\n}\n/**\n * If this mutation is not idempotent, returns the base value to persist with\n * this mutation. If a base value is returned, the mutation is always applied\n * to this base value, even if document has already been updated.\n *\n * The base value is a sparse object that consists of only the document\n * fields for which this mutation contains a non-idempotent transformation\n * (e.g. a numeric increment). The provided value guarantees consistent\n * behavior for non-idempotent transforms and allow us to return the same\n * latency-compensated value even if the backend has already applied the\n * mutation. The base value is null for idempotent mutations, as they can be\n * re-played even if the backend has already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent mutations.\n */\nfunction mutationExtractBaseValue(mutation, document) {\n    let baseObject = null;\n    for (const fieldTransform of mutation.fieldTransforms) {\n        const existingValue = document.data.field(fieldTransform.field);\n        const coercedValue = computeTransformOperationBaseValue(fieldTransform.transform, existingValue || null);\n        if (coercedValue != null) {\n            if (baseObject === null) {\n                baseObject = ObjectValue.empty();\n            }\n            baseObject.set(fieldTransform.field, coercedValue);\n        }\n    }\n    return baseObject ? baseObject : null;\n}\nfunction mutationEquals(left, right) {\n    if (left.type !== right.type) {\n        return false;\n    }\n    if (!left.key.isEqual(right.key)) {\n        return false;\n    }\n    if (!left.precondition.isEqual(right.precondition)) {\n        return false;\n    }\n    if (!fieldTransformsAreEqual(left.fieldTransforms, right.fieldTransforms)) {\n        return false;\n    }\n    if (left.type === 0 /* MutationType.Set */) {\n        return left.value.isEqual(right.value);\n    }\n    if (left.type === 1 /* MutationType.Patch */) {\n        return (left.data.isEqual(right.data) &&\n            left.fieldMask.isEqual(right.fieldMask));\n    }\n    return true;\n}\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nclass SetMutation extends Mutation {\n    constructor(key, value, precondition, fieldTransforms = []) {\n        super();\n        this.key = key;\n        this.value = value;\n        this.precondition = precondition;\n        this.fieldTransforms = fieldTransforms;\n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\nfunction setMutationApplyToRemoteDocument(mutation, document, mutationResult) {\n    // Unlike setMutationApplyToLocalView, if we're applying a mutation to a\n    // remote document the server has accepted the mutation so the precondition\n    // must have held.\n    const newData = mutation.value.clone();\n    const transformResults = serverTransformResults(mutation.fieldTransforms, document, mutationResult.transformResults);\n    newData.setAll(transformResults);\n    document\n        .convertToFoundDocument(mutationResult.version, newData)\n        .setHasCommittedMutations();\n}\nfunction setMutationApplyToLocalView(mutation, document, previousMask, localWriteTime) {\n    if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n        // The mutation failed to apply (e.g. a document ID created with add()\n        // caused a name collision).\n        return previousMask;\n    }\n    const newData = mutation.value.clone();\n    const transformResults = localTransformResults(mutation.fieldTransforms, localWriteTime, document);\n    newData.setAll(transformResults);\n    document\n        .convertToFoundDocument(document.version, newData)\n        .setHasLocalMutations();\n    return null; // SetMutation overwrites all fields.\n}\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nclass PatchMutation extends Mutation {\n    constructor(key, data, fieldMask, precondition, fieldTransforms = []) {\n        super();\n        this.key = key;\n        this.data = data;\n        this.fieldMask = fieldMask;\n        this.precondition = precondition;\n        this.fieldTransforms = fieldTransforms;\n        this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\nfunction patchMutationApplyToRemoteDocument(mutation, document, mutationResult) {\n    if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n        // Since the mutation was not rejected, we know that the precondition\n        // matched on the backend. We therefore must not have the expected version\n        // of the document in our cache and convert to an UnknownDocument with a\n        // known updateTime.\n        document.convertToUnknownDocument(mutationResult.version);\n        return;\n    }\n    const transformResults = serverTransformResults(mutation.fieldTransforms, document, mutationResult.transformResults);\n    const newData = document.data;\n    newData.setAll(getPatch(mutation));\n    newData.setAll(transformResults);\n    document\n        .convertToFoundDocument(mutationResult.version, newData)\n        .setHasCommittedMutations();\n}\nfunction patchMutationApplyToLocalView(mutation, document, previousMask, localWriteTime) {\n    if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n        return previousMask;\n    }\n    const transformResults = localTransformResults(mutation.fieldTransforms, localWriteTime, document);\n    const newData = document.data;\n    newData.setAll(getPatch(mutation));\n    newData.setAll(transformResults);\n    document\n        .convertToFoundDocument(document.version, newData)\n        .setHasLocalMutations();\n    if (previousMask === null) {\n        return null;\n    }\n    return previousMask\n        .unionWith(mutation.fieldMask.fields)\n        .unionWith(mutation.fieldTransforms.map(transform => transform.field));\n}\n/**\n * Returns a FieldPath/Value map with the content of the PatchMutation.\n */\nfunction getPatch(mutation) {\n    const result = new Map();\n    mutation.fieldMask.fields.forEach(fieldPath => {\n        if (!fieldPath.isEmpty()) {\n            const newValue = mutation.data.field(fieldPath);\n            result.set(fieldPath, newValue);\n        }\n    });\n    return result;\n}\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use after a mutation\n * containing transforms has been acknowledged by the server.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param mutableDocument - The current state of the document after applying all\n * previous mutations.\n * @param serverTransformResults - The transform results received by the server.\n * @returns The transform results list.\n */\nfunction serverTransformResults(fieldTransforms, mutableDocument, serverTransformResults) {\n    const transformResults = new Map();\n    hardAssert(fieldTransforms.length === serverTransformResults.length, 0x7f90, {\n        serverTransformResultCount: serverTransformResults.length,\n        fieldTransformCount: fieldTransforms.length\n    });\n    for (let i = 0; i < serverTransformResults.length; i++) {\n        const fieldTransform = fieldTransforms[i];\n        const transform = fieldTransform.transform;\n        const previousValue = mutableDocument.data.field(fieldTransform.field);\n        transformResults.set(fieldTransform.field, applyTransformOperationToRemoteDocument(transform, previousValue, serverTransformResults[i]));\n    }\n    return transformResults;\n}\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use when applying a\n * transform locally.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param localWriteTime - The local time of the mutation (used to\n *     generate ServerTimestampValues).\n * @param mutableDocument - The document to apply transforms on.\n * @returns The transform results list.\n */\nfunction localTransformResults(fieldTransforms, localWriteTime, mutableDocument) {\n    const transformResults = new Map();\n    for (const fieldTransform of fieldTransforms) {\n        const transform = fieldTransform.transform;\n        const previousValue = mutableDocument.data.field(fieldTransform.field);\n        transformResults.set(fieldTransform.field, applyTransformOperationToLocalView(transform, previousValue, localWriteTime));\n    }\n    return transformResults;\n}\n/** A mutation that deletes the document at the given key. */\nclass DeleteMutation extends Mutation {\n    constructor(key, precondition) {\n        super();\n        this.key = key;\n        this.precondition = precondition;\n        this.type = 2 /* MutationType.Delete */;\n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\nfunction deleteMutationApplyToRemoteDocument(mutation, document, mutationResult) {\n    // Unlike applyToLocalView, if we're applying a mutation to a remote\n    // document the server has accepted the mutation so the precondition must\n    // have held.\n    document\n        .convertToNoDocument(mutationResult.version)\n        .setHasCommittedMutations();\n}\nfunction deleteMutationApplyToLocalView(mutation, document, previousMask) {\n    if (preconditionIsValidForDocument(mutation.precondition, document)) {\n        document.convertToNoDocument(document.version).setHasLocalMutations();\n        return null;\n    }\n    return previousMask;\n}\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\nclass VerifyMutation extends Mutation {\n    constructor(key, precondition) {\n        super();\n        this.key = key;\n        this.precondition = precondition;\n        this.type = 3 /* MutationType.Verify */;\n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */\nclass MutationBatch {\n    /**\n     * @param batchId - The unique ID of this mutation batch.\n     * @param localWriteTime - The original write time of this mutation.\n     * @param baseMutations - Mutations that are used to populate the base\n     * values when this mutation is applied locally. This can be used to locally\n     * overwrite values that are persisted in the remote document cache. Base\n     * mutations are never sent to the backend.\n     * @param mutations - The user-provided mutations in this mutation batch.\n     * User-provided mutations are applied both locally and remotely on the\n     * backend.\n     */\n    constructor(batchId, localWriteTime, baseMutations, mutations) {\n        this.batchId = batchId;\n        this.localWriteTime = localWriteTime;\n        this.baseMutations = baseMutations;\n        this.mutations = mutations;\n    }\n    /**\n     * Applies all the mutations in this MutationBatch to the specified document\n     * to compute the state of the remote document\n     *\n     * @param document - The document to apply mutations to.\n     * @param batchResult - The result of applying the MutationBatch to the\n     * backend.\n     */\n    applyToRemoteDocument(document, batchResult) {\n        const mutationResults = batchResult.mutationResults;\n        for (let i = 0; i < this.mutations.length; i++) {\n            const mutation = this.mutations[i];\n            if (mutation.key.isEqual(document.key)) {\n                const mutationResult = mutationResults[i];\n                mutationApplyToRemoteDocument(mutation, document, mutationResult);\n            }\n        }\n    }\n    /**\n     * Computes the local view of a document given all the mutations in this\n     * batch.\n     *\n     * @param document - The document to apply mutations to.\n     * @param mutatedFields - Fields that have been updated before applying this mutation batch.\n     * @returns A `FieldMask` representing all the fields that are mutated.\n     */\n    applyToLocalView(document, mutatedFields) {\n        // First, apply the base state. This allows us to apply non-idempotent\n        // transform against a consistent set of values.\n        for (const mutation of this.baseMutations) {\n            if (mutation.key.isEqual(document.key)) {\n                mutatedFields = mutationApplyToLocalView(mutation, document, mutatedFields, this.localWriteTime);\n            }\n        }\n        // Second, apply all user-provided mutations.\n        for (const mutation of this.mutations) {\n            if (mutation.key.isEqual(document.key)) {\n                mutatedFields = mutationApplyToLocalView(mutation, document, mutatedFields, this.localWriteTime);\n            }\n        }\n        return mutatedFields;\n    }\n    /**\n     * Computes the local view for all provided documents given the mutations in\n     * this batch. Returns a `DocumentKey` to `Mutation` map which can be used to\n     * replace all the mutation applications.\n     */\n    applyToLocalDocumentSet(documentMap, documentsWithoutRemoteVersion) {\n        // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n        // directly (as done in `applyToLocalView()`), we can reduce the complexity\n        // to O(n).\n        const overlays = newMutationMap();\n        this.mutations.forEach(m => {\n            const overlayedDocument = documentMap.get(m.key);\n            // TODO(mutabledocuments): This method should take a MutableDocumentMap\n            // and we should remove this cast.\n            const mutableDocument = overlayedDocument.overlayedDocument;\n            let mutatedFields = this.applyToLocalView(mutableDocument, overlayedDocument.mutatedFields);\n            // Set mutatedFields to null if the document is only from local mutations.\n            // This creates a Set or Delete mutation, instead of trying to create a\n            // patch mutation as the overlay.\n            mutatedFields = documentsWithoutRemoteVersion.has(m.key)\n                ? null\n                : mutatedFields;\n            const overlay = calculateOverlayMutation(mutableDocument, mutatedFields);\n            if (overlay !== null) {\n                overlays.set(m.key, overlay);\n            }\n            if (!mutableDocument.isValidDocument()) {\n                mutableDocument.convertToNoDocument(SnapshotVersion.min());\n            }\n        });\n        return overlays;\n    }\n    keys() {\n        return this.mutations.reduce((keys, m) => keys.add(m.key), documentKeySet());\n    }\n    isEqual(other) {\n        return (this.batchId === other.batchId &&\n            arrayEquals(this.mutations, other.mutations, (l, r) => mutationEquals(l, r)) &&\n            arrayEquals(this.baseMutations, other.baseMutations, (l, r) => mutationEquals(l, r)));\n    }\n}\n/** The result of applying a mutation batch to the backend. */\nclass MutationBatchResult {\n    constructor(batch, commitVersion, mutationResults, \n    /**\n     * A pre-computed mapping from each mutated document to the resulting\n     * version.\n     */\n    docVersions) {\n        this.batch = batch;\n        this.commitVersion = commitVersion;\n        this.mutationResults = mutationResults;\n        this.docVersions = docVersions;\n    }\n    /**\n     * Creates a new MutationBatchResult for the given batch and results. There\n     * must be one result for each mutation in the batch. This static factory\n     * caches a document=&gt;version mapping (docVersions).\n     */\n    static from(batch, commitVersion, results) {\n        hardAssert(batch.mutations.length === results.length, 0xe5da, {\n            mutationsSent: batch.mutations.length,\n            resultsReceived: results.length\n        });\n        let versionMap = documentVersionMap();\n        const mutations = batch.mutations;\n        for (let i = 0; i < mutations.length; i++) {\n            versionMap = versionMap.insert(mutations[i].key, results[i].version);\n        }\n        return new MutationBatchResult(batch, commitVersion, results, versionMap);\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Representation of an overlay computed by Firestore.\n *\n * Holds information about a mutation and the largest batch id in Firestore when\n * the mutation was created.\n */\nclass Overlay {\n    constructor(largestBatchId, mutation) {\n        this.largestBatchId = largestBatchId;\n        this.mutation = mutation;\n    }\n    getKey() {\n        return this.mutation.key;\n    }\n    isEqual(other) {\n        return other !== null && this.mutation === other.mutation;\n    }\n    toString() {\n        return `Overlay{\n      largestBatchId: ${this.largestBatchId},\n      mutation: ${this.mutation.toString()}\n    }`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass ExistenceFilter {\n    constructor(count, unchangedNames) {\n        this.count = count;\n        this.unchangedNames = unchangedNames;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar RpcCode;\n(function (RpcCode) {\n    RpcCode[RpcCode[\"OK\"] = 0] = \"OK\";\n    RpcCode[RpcCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    RpcCode[RpcCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    RpcCode[RpcCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    RpcCode[RpcCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    RpcCode[RpcCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    RpcCode[RpcCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    RpcCode[RpcCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    RpcCode[RpcCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n    RpcCode[RpcCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    RpcCode[RpcCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    RpcCode[RpcCode[\"ABORTED\"] = 10] = \"ABORTED\";\n    RpcCode[RpcCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    RpcCode[RpcCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    RpcCode[RpcCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    RpcCode[RpcCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    RpcCode[RpcCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n})(RpcCode || (RpcCode = {}));\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\nfunction isPermanentError(code) {\n    switch (code) {\n        case Code.OK:\n            return fail(0xfdaa);\n        case Code.CANCELLED:\n        case Code.UNKNOWN:\n        case Code.DEADLINE_EXCEEDED:\n        case Code.RESOURCE_EXHAUSTED:\n        case Code.INTERNAL:\n        case Code.UNAVAILABLE:\n        // Unauthenticated means something went wrong with our token and we need\n        // to retry with new credentials which will happen automatically.\n        case Code.UNAUTHENTICATED:\n            return false;\n        case Code.INVALID_ARGUMENT:\n        case Code.NOT_FOUND:\n        case Code.ALREADY_EXISTS:\n        case Code.PERMISSION_DENIED:\n        case Code.FAILED_PRECONDITION:\n        // Aborted might be retried in some scenarios, but that is dependent on\n        // the context and should handled individually by the calling code.\n        // See https://cloud.google.com/apis/design/errors.\n        case Code.ABORTED:\n        case Code.OUT_OF_RANGE:\n        case Code.UNIMPLEMENTED:\n        case Code.DATA_LOSS:\n            return true;\n        default:\n            return fail(0x3c6b, { code });\n    }\n}\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\nfunction isPermanentWriteError(code) {\n    return isPermanentError(code) && code !== Code.ABORTED;\n}\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nfunction mapCodeFromRpcCode(code) {\n    if (code === undefined) {\n        // This shouldn't normally happen, but in certain error cases (like trying\n        // to send invalid proto messages) we may get an error with no GRPC code.\n        logError('GRPC error has no .code');\n        return Code.UNKNOWN;\n    }\n    switch (code) {\n        case RpcCode.OK:\n            return Code.OK;\n        case RpcCode.CANCELLED:\n            return Code.CANCELLED;\n        case RpcCode.UNKNOWN:\n            return Code.UNKNOWN;\n        case RpcCode.DEADLINE_EXCEEDED:\n            return Code.DEADLINE_EXCEEDED;\n        case RpcCode.RESOURCE_EXHAUSTED:\n            return Code.RESOURCE_EXHAUSTED;\n        case RpcCode.INTERNAL:\n            return Code.INTERNAL;\n        case RpcCode.UNAVAILABLE:\n            return Code.UNAVAILABLE;\n        case RpcCode.UNAUTHENTICATED:\n            return Code.UNAUTHENTICATED;\n        case RpcCode.INVALID_ARGUMENT:\n            return Code.INVALID_ARGUMENT;\n        case RpcCode.NOT_FOUND:\n            return Code.NOT_FOUND;\n        case RpcCode.ALREADY_EXISTS:\n            return Code.ALREADY_EXISTS;\n        case RpcCode.PERMISSION_DENIED:\n            return Code.PERMISSION_DENIED;\n        case RpcCode.FAILED_PRECONDITION:\n            return Code.FAILED_PRECONDITION;\n        case RpcCode.ABORTED:\n            return Code.ABORTED;\n        case RpcCode.OUT_OF_RANGE:\n            return Code.OUT_OF_RANGE;\n        case RpcCode.UNIMPLEMENTED:\n            return Code.UNIMPLEMENTED;\n        case RpcCode.DATA_LOSS:\n            return Code.DATA_LOSS;\n        default:\n            return fail(0x999b, { code });\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Base64DecodeError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = 'Base64DecodeError';\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The global, singleton instance of TestingHooksSpi.\n *\n * This variable will be `null` in all cases _except_ when running from\n * integration tests that have registered callbacks to be notified of events\n * that happen during the test execution.\n */\nlet testingHooksSpi = null;\n/**\n * Sets the value of the `testingHooksSpi` object.\n * @param instance the instance to set.\n */\nfunction setTestingHooksSpi(instance) {\n    if (testingHooksSpi) {\n        throw new Error('a TestingHooksSpi instance is already set');\n    }\n    testingHooksSpi = instance;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst MAX_64_BIT_UNSIGNED_INTEGER = new Integer([0xffffffff, 0xffffffff], 0);\n// Hash a string using md5 hashing algorithm.\nfunction getMd5HashValue(value) {\n    const encodedValue = newTextEncoder().encode(value);\n    const md5 = new Md5();\n    md5.update(encodedValue);\n    return new Uint8Array(md5.digest());\n}\n// Interpret the 16 bytes array as two 64-bit unsigned integers, encoded using\n// 2’s complement using little endian.\nfunction get64BitUints(Bytes) {\n    const dataView = new DataView(Bytes.buffer);\n    const chunk1 = dataView.getUint32(0, /* littleEndian= */ true);\n    const chunk2 = dataView.getUint32(4, /* littleEndian= */ true);\n    const chunk3 = dataView.getUint32(8, /* littleEndian= */ true);\n    const chunk4 = dataView.getUint32(12, /* littleEndian= */ true);\n    const integer1 = new Integer([chunk1, chunk2], 0);\n    const integer2 = new Integer([chunk3, chunk4], 0);\n    return [integer1, integer2];\n}\nclass BloomFilter {\n    constructor(bitmap, padding, hashCount) {\n        this.bitmap = bitmap;\n        this.padding = padding;\n        this.hashCount = hashCount;\n        if (padding < 0 || padding >= 8) {\n            throw new BloomFilterError(`Invalid padding: ${padding}`);\n        }\n        if (hashCount < 0) {\n            throw new BloomFilterError(`Invalid hash count: ${hashCount}`);\n        }\n        if (bitmap.length > 0 && this.hashCount === 0) {\n            // Only empty bloom filter can have 0 hash count.\n            throw new BloomFilterError(`Invalid hash count: ${hashCount}`);\n        }\n        if (bitmap.length === 0 && padding !== 0) {\n            // Empty bloom filter should have 0 padding.\n            throw new BloomFilterError(`Invalid padding when bitmap length is 0: ${padding}`);\n        }\n        this.bitCount = bitmap.length * 8 - padding;\n        // Set the bit count in Integer to avoid repetition in mightContain().\n        this.bitCountInInteger = Integer.fromNumber(this.bitCount);\n    }\n    // Calculate the ith hash value based on the hashed 64bit integers,\n    // and calculate its corresponding bit index in the bitmap to be checked.\n    getBitIndex(num1, num2, hashIndex) {\n        // Calculate hashed value h(i) = h1 + (i * h2).\n        let hashValue = num1.add(num2.multiply(Integer.fromNumber(hashIndex)));\n        // Wrap if hash value overflow 64bit.\n        if (hashValue.compare(MAX_64_BIT_UNSIGNED_INTEGER) === 1) {\n            hashValue = new Integer([hashValue.getBits(0), hashValue.getBits(1)], 0);\n        }\n        return hashValue.modulo(this.bitCountInInteger).toNumber();\n    }\n    // Return whether the bit on the given index in the bitmap is set to 1.\n    isBitSet(index) {\n        // To retrieve bit n, calculate: (bitmap[n / 8] & (0x01 << (n % 8))).\n        const byte = this.bitmap[Math.floor(index / 8)];\n        const offset = index % 8;\n        return (byte & (0x01 << offset)) !== 0;\n    }\n    mightContain(value) {\n        // Empty bitmap should always return false on membership check.\n        if (this.bitCount === 0) {\n            return false;\n        }\n        const md5HashedValue = getMd5HashValue(value);\n        const [hash1, hash2] = get64BitUints(md5HashedValue);\n        for (let i = 0; i < this.hashCount; i++) {\n            const index = this.getBitIndex(hash1, hash2, i);\n            if (!this.isBitSet(index)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** Create bloom filter for testing purposes only. */\n    static create(bitCount, hashCount, contains) {\n        const padding = bitCount % 8 === 0 ? 0 : 8 - (bitCount % 8);\n        const bitmap = new Uint8Array(Math.ceil(bitCount / 8));\n        const bloomFilter = new BloomFilter(bitmap, padding, hashCount);\n        contains.forEach(item => bloomFilter.insert(item));\n        return bloomFilter;\n    }\n    insert(value) {\n        if (this.bitCount === 0) {\n            return;\n        }\n        const md5HashedValue = getMd5HashValue(value);\n        const [hash1, hash2] = get64BitUints(md5HashedValue);\n        for (let i = 0; i < this.hashCount; i++) {\n            const index = this.getBitIndex(hash1, hash2, i);\n            this.setBit(index);\n        }\n    }\n    setBit(index) {\n        const indexOfByte = Math.floor(index / 8);\n        const offset = index % 8;\n        this.bitmap[indexOfByte] |= 0x01 << offset;\n    }\n}\nclass BloomFilterError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = 'BloomFilterError';\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */\nclass RemoteEvent {\n    constructor(\n    /**\n     * The snapshot version this event brings us up to, or MIN if not set.\n     */\n    snapshotVersion, \n    /**\n     * A map from target to changes to the target. See TargetChange.\n     */\n    targetChanges, \n    /**\n     * A map of targets that is known to be inconsistent, and the purpose for\n     * re-listening. Listens for these targets should be re-established without\n     * resume tokens.\n     */\n    targetMismatches, \n    /**\n     * A set of which documents have changed or been deleted, along with the\n     * doc's new values (if not deleted).\n     */\n    documentUpdates, \n    /**\n     * A set of which document updates are due only to limbo resolution targets.\n     */\n    resolvedLimboDocuments) {\n        this.snapshotVersion = snapshotVersion;\n        this.targetChanges = targetChanges;\n        this.targetMismatches = targetMismatches;\n        this.documentUpdates = documentUpdates;\n        this.resolvedLimboDocuments = resolvedLimboDocuments;\n    }\n    /**\n     * HACK: Views require RemoteEvents in order to determine whether the view is\n     * CURRENT, but secondary tabs don't receive remote events. So this method is\n     * used to create a synthesized RemoteEvent that can be used to apply a\n     * CURRENT status change to a View, for queries executed in a different tab.\n     */\n    // PORTING NOTE: Multi-tab only\n    static createSynthesizedRemoteEventForCurrentChange(targetId, current, resumeToken) {\n        const targetChanges = new Map();\n        targetChanges.set(targetId, TargetChange.createSynthesizedTargetChangeForCurrentChange(targetId, current, resumeToken));\n        return new RemoteEvent(SnapshotVersion.min(), targetChanges, new SortedMap(primitiveComparator), mutableDocumentMap(), documentKeySet());\n    }\n}\n/**\n * A TargetChange specifies the set of changes for a specific target as part of\n * a RemoteEvent. These changes track which documents are added, modified or\n * removed, as well as the target's resume token and whether the target is\n * marked CURRENT.\n * The actual changes *to* documents are not part of the TargetChange since\n * documents may be part of multiple targets.\n */\nclass TargetChange {\n    constructor(\n    /**\n     * An opaque, server-assigned token that allows watching a query to be resumed\n     * after disconnecting without retransmitting all the data that matches the\n     * query. The resume token essentially identifies a point in time from which\n     * the server should resume sending results.\n     */\n    resumeToken, \n    /**\n     * The \"current\" (synced) status of this target. Note that \"current\"\n     * has special meaning in the RPC protocol that implies that a target is\n     * both up-to-date and consistent with the rest of the watch stream.\n     */\n    current, \n    /**\n     * The set of documents that were newly assigned to this target as part of\n     * this remote event.\n     */\n    addedDocuments, \n    /**\n     * The set of documents that were already assigned to this target but received\n     * an update during this remote event.\n     */\n    modifiedDocuments, \n    /**\n     * The set of documents that were removed from this target as part of this\n     * remote event.\n     */\n    removedDocuments) {\n        this.resumeToken = resumeToken;\n        this.current = current;\n        this.addedDocuments = addedDocuments;\n        this.modifiedDocuments = modifiedDocuments;\n        this.removedDocuments = removedDocuments;\n    }\n    /**\n     * This method is used to create a synthesized TargetChanges that can be used to\n     * apply a CURRENT status change to a View (for queries executed in a different\n     * tab) or for new queries (to raise snapshots with correct CURRENT status).\n     */\n    static createSynthesizedTargetChangeForCurrentChange(targetId, current, resumeToken) {\n        return new TargetChange(resumeToken, current, documentKeySet(), documentKeySet(), documentKeySet());\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */\nclass DocumentWatchChange {\n    constructor(\n    /** The new document applies to all of these targets. */\n    updatedTargetIds, \n    /** The new document is removed from all of these targets. */\n    removedTargetIds, \n    /** The key of the document for this change. */\n    key, \n    /**\n     * The new document or NoDocument if it was deleted. Is null if the\n     * document went out of view without the server sending a new document.\n     */\n    newDoc) {\n        this.updatedTargetIds = updatedTargetIds;\n        this.removedTargetIds = removedTargetIds;\n        this.key = key;\n        this.newDoc = newDoc;\n    }\n}\nclass ExistenceFilterChange {\n    constructor(targetId, existenceFilter) {\n        this.targetId = targetId;\n        this.existenceFilter = existenceFilter;\n    }\n}\nclass WatchTargetChange {\n    constructor(\n    /** What kind of change occurred to the watch target. */\n    state, \n    /** The target IDs that were added/removed/set. */\n    targetIds, \n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    resumeToken = ByteString.EMPTY_BYTE_STRING, \n    /** An RPC error indicating why the watch failed. */\n    cause = null) {\n        this.state = state;\n        this.targetIds = targetIds;\n        this.resumeToken = resumeToken;\n        this.cause = cause;\n    }\n}\n/** Tracks the internal state of a Watch target. */\nclass TargetState {\n    constructor() {\n        /**\n         * The number of pending responses (adds or removes) that we are waiting on.\n         * We only consider targets active that have no pending responses.\n         */\n        this.pendingResponses = 0;\n        /**\n         * Keeps track of the document changes since the last raised snapshot.\n         *\n         * These changes are continuously updated as we receive document updates and\n         * always reflect the current set of changes against the last issued snapshot.\n         */\n        this.documentChanges = snapshotChangesMap();\n        /** See public getters for explanations of these fields. */\n        this._resumeToken = ByteString.EMPTY_BYTE_STRING;\n        this._current = false;\n        /**\n         * Whether this target state should be included in the next snapshot. We\n         * initialize to true so that newly-added targets are included in the next\n         * RemoteEvent.\n         */\n        this._hasPendingChanges = true;\n    }\n    /**\n     * Whether this target has been marked 'current'.\n     *\n     * 'Current' has special meaning in the RPC protocol: It implies that the\n     * Watch backend has sent us all changes up to the point at which the target\n     * was added and that the target is consistent with the rest of the watch\n     * stream.\n     */\n    get current() {\n        return this._current;\n    }\n    /** The last resume token sent to us for this target. */\n    get resumeToken() {\n        return this._resumeToken;\n    }\n    /** Whether this target has pending target adds or target removes. */\n    get isPending() {\n        return this.pendingResponses !== 0;\n    }\n    /** Whether we have modified any state that should trigger a snapshot. */\n    get hasPendingChanges() {\n        return this._hasPendingChanges;\n    }\n    /**\n     * Applies the resume token to the TargetChange, but only when it has a new\n     * value. Empty resumeTokens are discarded.\n     */\n    updateResumeToken(resumeToken) {\n        if (resumeToken.approximateByteSize() > 0) {\n            this._hasPendingChanges = true;\n            this._resumeToken = resumeToken;\n        }\n    }\n    /**\n     * Creates a target change from the current set of changes.\n     *\n     * To reset the document changes after raising this snapshot, call\n     * `clearPendingChanges()`.\n     */\n    toTargetChange() {\n        let addedDocuments = documentKeySet();\n        let modifiedDocuments = documentKeySet();\n        let removedDocuments = documentKeySet();\n        this.documentChanges.forEach((key, changeType) => {\n            switch (changeType) {\n                case 0 /* ChangeType.Added */:\n                    addedDocuments = addedDocuments.add(key);\n                    break;\n                case 2 /* ChangeType.Modified */:\n                    modifiedDocuments = modifiedDocuments.add(key);\n                    break;\n                case 1 /* ChangeType.Removed */:\n                    removedDocuments = removedDocuments.add(key);\n                    break;\n                default:\n                    fail(0x9481, { changeType });\n            }\n        });\n        return new TargetChange(this._resumeToken, this._current, addedDocuments, modifiedDocuments, removedDocuments);\n    }\n    /**\n     * Resets the document changes and sets `hasPendingChanges` to false.\n     */\n    clearPendingChanges() {\n        this._hasPendingChanges = false;\n        this.documentChanges = snapshotChangesMap();\n    }\n    addDocumentChange(key, changeType) {\n        this._hasPendingChanges = true;\n        this.documentChanges = this.documentChanges.insert(key, changeType);\n    }\n    removeDocumentChange(key) {\n        this._hasPendingChanges = true;\n        this.documentChanges = this.documentChanges.remove(key);\n    }\n    recordPendingTargetRequest() {\n        this.pendingResponses += 1;\n    }\n    recordTargetResponse() {\n        this.pendingResponses -= 1;\n        hardAssert(this.pendingResponses >= 0, 0x0ca9, { pendingResponses: this.pendingResponses });\n    }\n    markCurrent() {\n        this._hasPendingChanges = true;\n        this._current = true;\n    }\n}\nconst LOG_TAG$g = 'WatchChangeAggregator';\n/**\n * A helper class to accumulate watch changes into a RemoteEvent.\n */\nclass WatchChangeAggregator {\n    constructor(metadataProvider) {\n        this.metadataProvider = metadataProvider;\n        /** The internal state of all tracked targets. */\n        this.targetStates = new Map();\n        /** Keeps track of the documents to update since the last raised snapshot. */\n        this.pendingDocumentUpdates = mutableDocumentMap();\n        this.pendingDocumentUpdatesByTarget = documentTargetMap();\n        /** A mapping of document keys to their set of target IDs. */\n        this.pendingDocumentTargetMapping = documentTargetMap();\n        /**\n         * A map of targets with existence filter mismatches. These targets are\n         * known to be inconsistent and their listens needs to be re-established by\n         * RemoteStore.\n         */\n        this.pendingTargetResets = new SortedMap(primitiveComparator);\n    }\n    /**\n     * Processes and adds the DocumentWatchChange to the current set of changes.\n     */\n    handleDocumentChange(docChange) {\n        for (const targetId of docChange.updatedTargetIds) {\n            if (docChange.newDoc && docChange.newDoc.isFoundDocument()) {\n                this.addDocumentToTarget(targetId, docChange.newDoc);\n            }\n            else {\n                this.removeDocumentFromTarget(targetId, docChange.key, docChange.newDoc);\n            }\n        }\n        for (const targetId of docChange.removedTargetIds) {\n            this.removeDocumentFromTarget(targetId, docChange.key, docChange.newDoc);\n        }\n    }\n    /** Processes and adds the WatchTargetChange to the current set of changes. */\n    handleTargetChange(targetChange) {\n        this.forEachTarget(targetChange, targetId => {\n            const targetState = this.ensureTargetState(targetId);\n            switch (targetChange.state) {\n                case 0 /* WatchTargetChangeState.NoChange */:\n                    if (this.isActiveTarget(targetId)) {\n                        targetState.updateResumeToken(targetChange.resumeToken);\n                    }\n                    break;\n                case 1 /* WatchTargetChangeState.Added */:\n                    // We need to decrement the number of pending acks needed from watch\n                    // for this targetId.\n                    targetState.recordTargetResponse();\n                    if (!targetState.isPending) {\n                        // We have a freshly added target, so we need to reset any state\n                        // that we had previously. This can happen e.g. when remove and add\n                        // back a target for existence filter mismatches.\n                        targetState.clearPendingChanges();\n                    }\n                    targetState.updateResumeToken(targetChange.resumeToken);\n                    break;\n                case 2 /* WatchTargetChangeState.Removed */:\n                    // We need to keep track of removed targets to we can post-filter and\n                    // remove any target changes.\n                    // We need to decrement the number of pending acks needed from watch\n                    // for this targetId.\n                    targetState.recordTargetResponse();\n                    if (!targetState.isPending) {\n                        this.removeTarget(targetId);\n                    }\n                    break;\n                case 3 /* WatchTargetChangeState.Current */:\n                    if (this.isActiveTarget(targetId)) {\n                        targetState.markCurrent();\n                        targetState.updateResumeToken(targetChange.resumeToken);\n                    }\n                    break;\n                case 4 /* WatchTargetChangeState.Reset */:\n                    if (this.isActiveTarget(targetId)) {\n                        // Reset the target and synthesizes removes for all existing\n                        // documents. The backend will re-add any documents that still\n                        // match the target before it sends the next global snapshot.\n                        this.resetTarget(targetId);\n                        targetState.updateResumeToken(targetChange.resumeToken);\n                    }\n                    break;\n                default:\n                    fail(0xddd6, {\n                        state: targetChange.state\n                    });\n            }\n        });\n    }\n    /**\n     * Iterates over all targetIds that the watch change applies to: either the\n     * targetIds explicitly listed in the change or the targetIds of all currently\n     * active targets.\n     */\n    forEachTarget(targetChange, fn) {\n        if (targetChange.targetIds.length > 0) {\n            targetChange.targetIds.forEach(fn);\n        }\n        else {\n            this.targetStates.forEach((_, targetId) => {\n                if (this.isActiveTarget(targetId)) {\n                    fn(targetId);\n                }\n            });\n        }\n    }\n    /**\n     * Handles existence filters and synthesizes deletes for filter mismatches.\n     * Targets that are invalidated by filter mismatches are added to\n     * `pendingTargetResets`.\n     */\n    handleExistenceFilter(watchChange) {\n        const targetId = watchChange.targetId;\n        const expectedCount = watchChange.existenceFilter.count;\n        const targetData = this.targetDataForActiveTarget(targetId);\n        if (targetData) {\n            const target = targetData.target;\n            if (targetIsDocumentTarget(target)) {\n                if (expectedCount === 0) {\n                    // The existence filter told us the document does not exist. We deduce\n                    // that this document does not exist and apply a deleted document to\n                    // our updates. Without applying this deleted document there might be\n                    // another query that will raise this document as part of a snapshot\n                    // until it is resolved, essentially exposing inconsistency between\n                    // queries.\n                    const key = new DocumentKey(target.path);\n                    this.removeDocumentFromTarget(targetId, key, MutableDocument.newNoDocument(key, SnapshotVersion.min()));\n                }\n                else {\n                    hardAssert(expectedCount === 1, 0x4e2d, { expectedCount });\n                }\n            }\n            else {\n                const currentSize = this.getCurrentDocumentCountForTarget(targetId);\n                // Existence filter mismatch. Mark the documents as being in limbo, and\n                // raise a snapshot with `isFromCache:true`.\n                if (currentSize !== expectedCount) {\n                    // Apply bloom filter to identify and mark removed documents.\n                    const bloomFilter = this.parseBloomFilter(watchChange);\n                    const status = bloomFilter\n                        ? this.applyBloomFilter(bloomFilter, watchChange, currentSize)\n                        : 1 /* BloomFilterApplicationStatus.Skipped */;\n                    if (status !== 0 /* BloomFilterApplicationStatus.Success */) {\n                        // If bloom filter application fails, we reset the mapping and\n                        // trigger re-run of the query.\n                        this.resetTarget(targetId);\n                        const purpose = status === 2 /* BloomFilterApplicationStatus.FalsePositive */\n                            ? \"TargetPurposeExistenceFilterMismatchBloom\" /* TargetPurpose.ExistenceFilterMismatchBloom */\n                            : \"TargetPurposeExistenceFilterMismatch\" /* TargetPurpose.ExistenceFilterMismatch */;\n                        this.pendingTargetResets = this.pendingTargetResets.insert(targetId, purpose);\n                    }\n                    testingHooksSpi === null || testingHooksSpi === void 0 ? void 0 : testingHooksSpi.notifyOnExistenceFilterMismatch(createExistenceFilterMismatchInfoForTestingHooks(currentSize, watchChange.existenceFilter, this.metadataProvider.getDatabaseId(), bloomFilter, status));\n                }\n            }\n        }\n    }\n    /**\n     * Parse the bloom filter from the \"unchanged_names\" field of an existence\n     * filter.\n     */\n    parseBloomFilter(watchChange) {\n        const unchangedNames = watchChange.existenceFilter.unchangedNames;\n        if (!unchangedNames || !unchangedNames.bits) {\n            return null;\n        }\n        const { bits: { bitmap = '', padding = 0 }, hashCount = 0 } = unchangedNames;\n        let normalizedBitmap;\n        try {\n            normalizedBitmap = normalizeByteString(bitmap).toUint8Array();\n        }\n        catch (err) {\n            if (err instanceof Base64DecodeError) {\n                logWarn('Decoding the base64 bloom filter in existence filter failed (' +\n                    err.message +\n                    '); ignoring the bloom filter and falling back to full re-query.');\n                return null;\n            }\n            else {\n                throw err;\n            }\n        }\n        let bloomFilter;\n        try {\n            // BloomFilter throws error if the inputs are invalid.\n            bloomFilter = new BloomFilter(normalizedBitmap, padding, hashCount);\n        }\n        catch (err) {\n            if (err instanceof BloomFilterError) {\n                logWarn('BloomFilter error: ', err);\n            }\n            else {\n                logWarn('Applying bloom filter failed: ', err);\n            }\n            return null;\n        }\n        if (bloomFilter.bitCount === 0) {\n            return null;\n        }\n        return bloomFilter;\n    }\n    /**\n     * Apply bloom filter to remove the deleted documents, and return the\n     * application status.\n     */\n    applyBloomFilter(bloomFilter, watchChange, currentCount) {\n        const expectedCount = watchChange.existenceFilter.count;\n        const removedDocumentCount = this.filterRemovedDocuments(bloomFilter, watchChange.targetId);\n        return expectedCount === currentCount - removedDocumentCount\n            ? 0 /* BloomFilterApplicationStatus.Success */\n            : 2 /* BloomFilterApplicationStatus.FalsePositive */;\n    }\n    /**\n     * Filter out removed documents based on bloom filter membership result and\n     * return number of documents removed.\n     */\n    filterRemovedDocuments(bloomFilter, targetId) {\n        const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n        let removalCount = 0;\n        existingKeys.forEach(key => {\n            const databaseId = this.metadataProvider.getDatabaseId();\n            const documentPath = `projects/${databaseId.projectId}` +\n                `/databases/${databaseId.database}` +\n                `/documents/${key.path.canonicalString()}`;\n            if (!bloomFilter.mightContain(documentPath)) {\n                this.removeDocumentFromTarget(targetId, key, /*updatedDocument=*/ null);\n                removalCount++;\n            }\n        });\n        return removalCount;\n    }\n    /**\n     * Converts the currently accumulated state into a remote event at the\n     * provided snapshot version. Resets the accumulated changes before returning.\n     */\n    createRemoteEvent(snapshotVersion) {\n        const targetChanges = new Map();\n        this.targetStates.forEach((targetState, targetId) => {\n            const targetData = this.targetDataForActiveTarget(targetId);\n            if (targetData) {\n                if (targetState.current && targetIsDocumentTarget(targetData.target)) {\n                    // Document queries for document that don't exist can produce an empty\n                    // result set. To update our local cache, we synthesize a document\n                    // delete if we have not previously received the document for this\n                    // target. This resolves the limbo state of the document, removing it\n                    // from limboDocumentRefs.\n                    //\n                    // TODO(dimond): Ideally we would have an explicit lookup target\n                    // instead resulting in an explicit delete message and we could\n                    // remove this special logic.\n                    const key = new DocumentKey(targetData.target.path);\n                    if (!this.ensureDocumentUpdateByTarget(key).has(targetId) &&\n                        !this.targetContainsDocument(targetId, key)) {\n                        this.removeDocumentFromTarget(targetId, key, MutableDocument.newNoDocument(key, snapshotVersion));\n                    }\n                }\n                if (targetState.hasPendingChanges) {\n                    targetChanges.set(targetId, targetState.toTargetChange());\n                    targetState.clearPendingChanges();\n                }\n            }\n        });\n        let resolvedLimboDocuments = documentKeySet();\n        // We extract the set of limbo-only document updates as the GC logic\n        // special-cases documents that do not appear in the target cache.\n        //\n        // TODO(gsoltis): Expand on this comment once GC is available in the JS\n        // client.\n        this.pendingDocumentTargetMapping.forEach((key, targets) => {\n            let isOnlyLimboTarget = true;\n            targets.forEachWhile(targetId => {\n                const targetData = this.targetDataForActiveTarget(targetId);\n                if (targetData &&\n                    targetData.purpose !== \"TargetPurposeLimboResolution\" /* TargetPurpose.LimboResolution */) {\n                    isOnlyLimboTarget = false;\n                    return false;\n                }\n                return true;\n            });\n            if (isOnlyLimboTarget) {\n                resolvedLimboDocuments = resolvedLimboDocuments.add(key);\n            }\n        });\n        this.pendingDocumentUpdates.forEach((_, doc) => doc.setReadTime(snapshotVersion));\n        const remoteEvent = new RemoteEvent(snapshotVersion, targetChanges, this.pendingTargetResets, this.pendingDocumentUpdates, resolvedLimboDocuments);\n        this.pendingDocumentUpdates = mutableDocumentMap();\n        this.pendingDocumentUpdatesByTarget = documentTargetMap();\n        this.pendingDocumentTargetMapping = documentTargetMap();\n        this.pendingTargetResets = new SortedMap(primitiveComparator);\n        return remoteEvent;\n    }\n    /**\n     * Adds the provided document to the internal list of document updates and\n     * its document key to the given target's mapping.\n     */\n    // Visible for testing.\n    addDocumentToTarget(targetId, document) {\n        if (!this.isActiveTarget(targetId)) {\n            return;\n        }\n        const changeType = this.targetContainsDocument(targetId, document.key)\n            ? 2 /* ChangeType.Modified */\n            : 0 /* ChangeType.Added */;\n        const targetState = this.ensureTargetState(targetId);\n        targetState.addDocumentChange(document.key, changeType);\n        this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(document.key, document);\n        this.pendingDocumentUpdatesByTarget =\n            this.pendingDocumentUpdatesByTarget.insert(document.key, this.ensureDocumentUpdateByTarget(document.key).add(targetId));\n        this.pendingDocumentTargetMapping =\n            this.pendingDocumentTargetMapping.insert(document.key, this.ensureDocumentTargetMapping(document.key).add(targetId));\n    }\n    /**\n     * Removes the provided document from the target mapping. If the\n     * document no longer matches the target, but the document's state is still\n     * known (e.g. we know that the document was deleted or we received the change\n     * that caused the filter mismatch), the new document can be provided\n     * to update the remote document cache.\n     */\n    // Visible for testing.\n    removeDocumentFromTarget(targetId, key, updatedDocument) {\n        if (!this.isActiveTarget(targetId)) {\n            return;\n        }\n        const targetState = this.ensureTargetState(targetId);\n        if (this.targetContainsDocument(targetId, key)) {\n            targetState.addDocumentChange(key, 1 /* ChangeType.Removed */);\n        }\n        else {\n            // The document may have entered and left the target before we raised a\n            // snapshot, so we can just ignore the change.\n            targetState.removeDocumentChange(key);\n        }\n        this.pendingDocumentTargetMapping =\n            this.pendingDocumentTargetMapping.insert(key, this.ensureDocumentTargetMapping(key).delete(targetId));\n        this.pendingDocumentTargetMapping =\n            this.pendingDocumentTargetMapping.insert(key, this.ensureDocumentTargetMapping(key).add(targetId));\n        if (updatedDocument) {\n            this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(key, updatedDocument);\n        }\n    }\n    removeTarget(targetId) {\n        this.targetStates.delete(targetId);\n    }\n    /**\n     * Returns the current count of documents in the target. This includes both\n     * the number of documents that the LocalStore considers to be part of the\n     * target as well as any accumulated changes.\n     */\n    getCurrentDocumentCountForTarget(targetId) {\n        const targetState = this.ensureTargetState(targetId);\n        const targetChange = targetState.toTargetChange();\n        return (this.metadataProvider.getRemoteKeysForTarget(targetId).size +\n            targetChange.addedDocuments.size -\n            targetChange.removedDocuments.size);\n    }\n    /**\n     * Increment the number of acks needed from watch before we can consider the\n     * server to be 'in-sync' with the client's active targets.\n     */\n    recordPendingTargetRequest(targetId) {\n        // For each request we get we need to record we need a response for it.\n        const targetState = this.ensureTargetState(targetId);\n        targetState.recordPendingTargetRequest();\n    }\n    ensureTargetState(targetId) {\n        let result = this.targetStates.get(targetId);\n        if (!result) {\n            result = new TargetState();\n            this.targetStates.set(targetId, result);\n        }\n        return result;\n    }\n    ensureDocumentTargetMapping(key) {\n        let targetMapping = this.pendingDocumentTargetMapping.get(key);\n        if (!targetMapping) {\n            targetMapping = new SortedSet(primitiveComparator);\n            this.pendingDocumentTargetMapping =\n                this.pendingDocumentTargetMapping.insert(key, targetMapping);\n        }\n        return targetMapping;\n    }\n    ensureDocumentUpdateByTarget(key) {\n        let targetMapping = this.pendingDocumentUpdatesByTarget.get(key);\n        if (!targetMapping) {\n            targetMapping = new SortedSet(primitiveComparator);\n            this.pendingDocumentUpdatesByTarget =\n                this.pendingDocumentUpdatesByTarget.insert(key, targetMapping);\n        }\n        return targetMapping;\n    }\n    /**\n     * Verifies that the user is still interested in this target (by calling\n     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs\n     * from watch.\n     */\n    isActiveTarget(targetId) {\n        const targetActive = this.targetDataForActiveTarget(targetId) !== null;\n        if (!targetActive) {\n            logDebug(LOG_TAG$g, 'Detected inactive target', targetId);\n        }\n        return targetActive;\n    }\n    /**\n     * Returns the TargetData for an active target (i.e. a target that the user\n     * is still interested in that has no outstanding target change requests).\n     */\n    targetDataForActiveTarget(targetId) {\n        const targetState = this.targetStates.get(targetId);\n        return targetState && targetState.isPending\n            ? null\n            : this.metadataProvider.getTargetDataForTarget(targetId);\n    }\n    /**\n     * Resets the state of a Watch target to its initial state (e.g. sets\n     * 'current' to false, clears the resume token and removes its target mapping\n     * from all documents).\n     */\n    resetTarget(targetId) {\n        this.targetStates.set(targetId, new TargetState());\n        // Trigger removal for any documents currently mapped to this target.\n        // These removals will be part of the initial snapshot if Watch does not\n        // resend these documents.\n        const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n        existingKeys.forEach(key => {\n            this.removeDocumentFromTarget(targetId, key, /*updatedDocument=*/ null);\n        });\n    }\n    /**\n     * Returns whether the LocalStore considers the document to be part of the\n     * specified target.\n     */\n    targetContainsDocument(targetId, key) {\n        const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n        return existingKeys.has(key);\n    }\n}\nfunction documentTargetMap() {\n    return new SortedMap(DocumentKey.comparator);\n}\nfunction snapshotChangesMap() {\n    return new SortedMap(DocumentKey.comparator);\n}\nfunction createExistenceFilterMismatchInfoForTestingHooks(localCacheCount, existenceFilter, databaseId, bloomFilter, bloomFilterStatus) {\n    var _a, _b, _c, _d, _e, _f;\n    const result = {\n        localCacheCount,\n        existenceFilterCount: existenceFilter.count,\n        databaseId: databaseId.database,\n        projectId: databaseId.projectId\n    };\n    const unchangedNames = existenceFilter.unchangedNames;\n    if (unchangedNames) {\n        result.bloomFilter = {\n            applied: bloomFilterStatus === 0 /* BloomFilterApplicationStatus.Success */,\n            hashCount: (_a = unchangedNames === null || unchangedNames === void 0 ? void 0 : unchangedNames.hashCount) !== null && _a !== void 0 ? _a : 0,\n            bitmapLength: (_d = (_c = (_b = unchangedNames === null || unchangedNames === void 0 ? void 0 : unchangedNames.bits) === null || _b === void 0 ? void 0 : _b.bitmap) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0,\n            padding: (_f = (_e = unchangedNames === null || unchangedNames === void 0 ? void 0 : unchangedNames.bits) === null || _e === void 0 ? void 0 : _e.padding) !== null && _f !== void 0 ? _f : 0,\n            mightContain: (value) => { var _a; return (_a = bloomFilter === null || bloomFilter === void 0 ? void 0 : bloomFilter.mightContain(value)) !== null && _a !== void 0 ? _a : false; }\n        };\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DIRECTIONS = (() => {\n    const dirs = {};\n    dirs[\"asc\" /* Direction.ASCENDING */] = 'ASCENDING';\n    dirs[\"desc\" /* Direction.DESCENDING */] = 'DESCENDING';\n    return dirs;\n})();\nconst OPERATORS = (() => {\n    const ops = {};\n    ops[\"<\" /* Operator.LESS_THAN */] = 'LESS_THAN';\n    ops[\"<=\" /* Operator.LESS_THAN_OR_EQUAL */] = 'LESS_THAN_OR_EQUAL';\n    ops[\">\" /* Operator.GREATER_THAN */] = 'GREATER_THAN';\n    ops[\">=\" /* Operator.GREATER_THAN_OR_EQUAL */] = 'GREATER_THAN_OR_EQUAL';\n    ops[\"==\" /* Operator.EQUAL */] = 'EQUAL';\n    ops[\"!=\" /* Operator.NOT_EQUAL */] = 'NOT_EQUAL';\n    ops[\"array-contains\" /* Operator.ARRAY_CONTAINS */] = 'ARRAY_CONTAINS';\n    ops[\"in\" /* Operator.IN */] = 'IN';\n    ops[\"not-in\" /* Operator.NOT_IN */] = 'NOT_IN';\n    ops[\"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */] = 'ARRAY_CONTAINS_ANY';\n    return ops;\n})();\nconst COMPOSITE_OPERATORS = (() => {\n    const ops = {};\n    ops[\"and\" /* CompositeOperator.AND */] = 'AND';\n    ops[\"or\" /* CompositeOperator.OR */] = 'OR';\n    return ops;\n})();\nfunction assertPresent(value, description) {\n}\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass JsonProtoSerializer {\n    constructor(databaseId, useProto3Json) {\n        this.databaseId = databaseId;\n        this.useProto3Json = useProto3Json;\n    }\n}\nfunction fromRpcStatus(status) {\n    const code = status.code === undefined ? Code.UNKNOWN : mapCodeFromRpcCode(status.code);\n    return new FirestoreError(code, status.message || '');\n}\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\nfunction toInt32Proto(serializer, val) {\n    if (serializer.useProto3Json || isNullOrUndefined(val)) {\n        return val;\n    }\n    else {\n        return { value: val };\n    }\n}\n/**\n * Returns a number (or null) from a google.protobuf.Int32Value proto.\n */\nfunction fromInt32Proto(val) {\n    let result;\n    if (typeof val === 'object') {\n        result = val.value;\n    }\n    else {\n        result = val;\n    }\n    return isNullOrUndefined(result) ? null : result;\n}\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction toTimestamp(serializer, timestamp) {\n    if (serializer.useProto3Json) {\n        // Serialize to ISO-8601 date format, but with full nano resolution.\n        // Since JS Date has only millis, let's only use it for the seconds and\n        // then manually add the fractions to the end.\n        const jsDateStr = new Date(timestamp.seconds * 1000).toISOString();\n        // Remove .xxx frac part and Z in the end.\n        const strUntilSeconds = jsDateStr.replace(/\\.\\d*/, '').replace('Z', '');\n        // Pad the fraction out to 9 digits (nanos).\n        const nanoStr = ('000000000' + timestamp.nanoseconds).slice(-9);\n        return `${strUntilSeconds}.${nanoStr}Z`;\n    }\n    else {\n        return {\n            seconds: '' + timestamp.seconds,\n            nanos: timestamp.nanoseconds\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        };\n    }\n}\n/**\n * Returns a Timestamp typed object given protobuf timestamp value.\n */\nfunction fromTimestamp(date) {\n    const timestamp = normalizeTimestamp(date);\n    return new Timestamp(timestamp.seconds, timestamp.nanos);\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction toBytes(serializer, bytes) {\n    if (serializer.useProto3Json) {\n        return bytes.toBase64();\n    }\n    else {\n        return bytes.toUint8Array();\n    }\n}\n/**\n * Returns a ByteString based on the proto string value.\n */\nfunction fromBytes(serializer, value) {\n    if (serializer.useProto3Json) {\n        hardAssert(value === undefined || typeof value === 'string', 0xe30b);\n        return ByteString.fromBase64String(value ? value : '');\n    }\n    else {\n        hardAssert(value === undefined ||\n            // Check if the value is an instance of both Buffer and Uint8Array,\n            // despite the fact that Buffer extends Uint8Array. In some\n            // environments, such as jsdom, the prototype chain of Buffer\n            // does not indicate that it extends Uint8Array.\n            value instanceof Buffer ||\n            value instanceof Uint8Array, 0x3f41);\n        return ByteString.fromUint8Array(value ? value : new Uint8Array());\n    }\n}\nfunction toVersion(serializer, version) {\n    return toTimestamp(serializer, version.toTimestamp());\n}\nfunction fromVersion(version) {\n    hardAssert(!!version, 0xc050);\n    return SnapshotVersion.fromTimestamp(fromTimestamp(version));\n}\nfunction toResourceName(databaseId, path) {\n    return toResourcePath(databaseId, path).canonicalString();\n}\nfunction toResourcePath(databaseId, path) {\n    const resourcePath = fullyQualifiedPrefixPath(databaseId).child('documents');\n    return path === undefined ? resourcePath : resourcePath.child(path);\n}\nfunction fromResourceName(name) {\n    const resource = ResourcePath.fromString(name);\n    hardAssert(isValidResourceName(resource), 0x27ce, { key: resource.toString() });\n    return resource;\n}\nfunction toName(serializer, key) {\n    return toResourceName(serializer.databaseId, key.path);\n}\nfunction fromName(serializer, name) {\n    const resource = fromResourceName(name);\n    if (resource.get(1) !== serializer.databaseId.projectId) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Tried to deserialize key from different project: ' +\n            resource.get(1) +\n            ' vs ' +\n            serializer.databaseId.projectId);\n    }\n    if (resource.get(3) !== serializer.databaseId.database) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Tried to deserialize key from different database: ' +\n            resource.get(3) +\n            ' vs ' +\n            serializer.databaseId.database);\n    }\n    return new DocumentKey(extractLocalPathFromResourceName(resource));\n}\nfunction toQueryPath(serializer, path) {\n    return toResourceName(serializer.databaseId, path);\n}\nfunction fromQueryPath(name) {\n    const resourceName = fromResourceName(name);\n    // In v1beta1 queries for collections at the root did not have a trailing\n    // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n    // ability to read the v1beta1 form for compatibility with queries persisted\n    // in the local target cache.\n    if (resourceName.length === 4) {\n        return ResourcePath.emptyPath();\n    }\n    return extractLocalPathFromResourceName(resourceName);\n}\nfunction getEncodedDatabaseId(serializer) {\n    const path = new ResourcePath([\n        'projects',\n        serializer.databaseId.projectId,\n        'databases',\n        serializer.databaseId.database\n    ]);\n    return path.canonicalString();\n}\nfunction fullyQualifiedPrefixPath(databaseId) {\n    return new ResourcePath([\n        'projects',\n        databaseId.projectId,\n        'databases',\n        databaseId.database\n    ]);\n}\nfunction extractLocalPathFromResourceName(resourceName) {\n    hardAssert(resourceName.length > 4 && resourceName.get(4) === 'documents', 0x71a3, { key: resourceName.toString() });\n    return resourceName.popFirst(5);\n}\n/** Creates a Document proto from key and fields (but no create/update time) */\nfunction toMutationDocument(serializer, key, fields) {\n    return {\n        name: toName(serializer, key),\n        fields: fields.value.mapValue.fields\n    };\n}\nfunction toDocument(serializer, document) {\n    return {\n        name: toName(serializer, document.key),\n        fields: document.data.value.mapValue.fields,\n        updateTime: toTimestamp(serializer, document.version.toTimestamp()),\n        createTime: toTimestamp(serializer, document.createTime.toTimestamp())\n    };\n}\nfunction fromDocument(serializer, document, hasCommittedMutations) {\n    const key = fromName(serializer, document.name);\n    const version = fromVersion(document.updateTime);\n    // If we read a document from persistence that is missing createTime, it's due\n    // to older SDK versions not storing this information. In such cases, we'll\n    // set the createTime to zero. This can be removed in the long term.\n    const createTime = document.createTime\n        ? fromVersion(document.createTime)\n        : SnapshotVersion.min();\n    const data = new ObjectValue({ mapValue: { fields: document.fields } });\n    const result = MutableDocument.newFoundDocument(key, version, createTime, data);\n    if (hasCommittedMutations) {\n        result.setHasCommittedMutations();\n    }\n    return hasCommittedMutations ? result.setHasCommittedMutations() : result;\n}\nfunction fromFound(serializer, doc) {\n    hardAssert(!!doc.found, 0xaa33);\n    assertPresent(doc.found.name);\n    assertPresent(doc.found.updateTime);\n    const key = fromName(serializer, doc.found.name);\n    const version = fromVersion(doc.found.updateTime);\n    const createTime = doc.found.createTime\n        ? fromVersion(doc.found.createTime)\n        : SnapshotVersion.min();\n    const data = new ObjectValue({ mapValue: { fields: doc.found.fields } });\n    return MutableDocument.newFoundDocument(key, version, createTime, data);\n}\nfunction fromMissing(serializer, result) {\n    hardAssert(!!result.missing, 0x0f36);\n    hardAssert(!!result.readTime, 0x5995);\n    const key = fromName(serializer, result.missing);\n    const version = fromVersion(result.readTime);\n    return MutableDocument.newNoDocument(key, version);\n}\nfunction fromBatchGetDocumentsResponse(serializer, result) {\n    if ('found' in result) {\n        return fromFound(serializer, result);\n    }\n    else if ('missing' in result) {\n        return fromMissing(serializer, result);\n    }\n    return fail(0x1c42, { result });\n}\nfunction fromWatchChange(serializer, change) {\n    let watchChange;\n    if ('targetChange' in change) {\n        assertPresent(change.targetChange);\n        // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n        // if unset\n        const state = fromWatchTargetChangeState(change.targetChange.targetChangeType || 'NO_CHANGE');\n        const targetIds = change.targetChange.targetIds || [];\n        const resumeToken = fromBytes(serializer, change.targetChange.resumeToken);\n        const causeProto = change.targetChange.cause;\n        const cause = causeProto && fromRpcStatus(causeProto);\n        watchChange = new WatchTargetChange(state, targetIds, resumeToken, cause || null);\n    }\n    else if ('documentChange' in change) {\n        assertPresent(change.documentChange);\n        const entityChange = change.documentChange;\n        assertPresent(entityChange.document);\n        assertPresent(entityChange.document.name);\n        assertPresent(entityChange.document.updateTime);\n        const key = fromName(serializer, entityChange.document.name);\n        const version = fromVersion(entityChange.document.updateTime);\n        const createTime = entityChange.document.createTime\n            ? fromVersion(entityChange.document.createTime)\n            : SnapshotVersion.min();\n        const data = new ObjectValue({\n            mapValue: { fields: entityChange.document.fields }\n        });\n        const doc = MutableDocument.newFoundDocument(key, version, createTime, data);\n        const updatedTargetIds = entityChange.targetIds || [];\n        const removedTargetIds = entityChange.removedTargetIds || [];\n        watchChange = new DocumentWatchChange(updatedTargetIds, removedTargetIds, doc.key, doc);\n    }\n    else if ('documentDelete' in change) {\n        assertPresent(change.documentDelete);\n        const docDelete = change.documentDelete;\n        assertPresent(docDelete.document);\n        const key = fromName(serializer, docDelete.document);\n        const version = docDelete.readTime\n            ? fromVersion(docDelete.readTime)\n            : SnapshotVersion.min();\n        const doc = MutableDocument.newNoDocument(key, version);\n        const removedTargetIds = docDelete.removedTargetIds || [];\n        watchChange = new DocumentWatchChange([], removedTargetIds, doc.key, doc);\n    }\n    else if ('documentRemove' in change) {\n        assertPresent(change.documentRemove);\n        const docRemove = change.documentRemove;\n        assertPresent(docRemove.document);\n        const key = fromName(serializer, docRemove.document);\n        const removedTargetIds = docRemove.removedTargetIds || [];\n        watchChange = new DocumentWatchChange([], removedTargetIds, key, null);\n    }\n    else if ('filter' in change) {\n        // TODO(dimond): implement existence filter parsing with strategy.\n        assertPresent(change.filter);\n        const filter = change.filter;\n        assertPresent(filter.targetId);\n        const { count = 0, unchangedNames } = filter;\n        const existenceFilter = new ExistenceFilter(count, unchangedNames);\n        const targetId = filter.targetId;\n        watchChange = new ExistenceFilterChange(targetId, existenceFilter);\n    }\n    else {\n        return fail(0x2d51, { change });\n    }\n    return watchChange;\n}\nfunction fromWatchTargetChangeState(state) {\n    if (state === 'NO_CHANGE') {\n        return 0 /* WatchTargetChangeState.NoChange */;\n    }\n    else if (state === 'ADD') {\n        return 1 /* WatchTargetChangeState.Added */;\n    }\n    else if (state === 'REMOVE') {\n        return 2 /* WatchTargetChangeState.Removed */;\n    }\n    else if (state === 'CURRENT') {\n        return 3 /* WatchTargetChangeState.Current */;\n    }\n    else if (state === 'RESET') {\n        return 4 /* WatchTargetChangeState.Reset */;\n    }\n    else {\n        return fail(0x9991, { state });\n    }\n}\nfunction versionFromListenResponse(change) {\n    // We have only reached a consistent snapshot for the entire stream if there\n    // is a read_time set and it applies to all targets (i.e. the list of\n    // targets is empty). The backend is guaranteed to send such responses.\n    if (!('targetChange' in change)) {\n        return SnapshotVersion.min();\n    }\n    const targetChange = change.targetChange;\n    if (targetChange.targetIds && targetChange.targetIds.length) {\n        return SnapshotVersion.min();\n    }\n    if (!targetChange.readTime) {\n        return SnapshotVersion.min();\n    }\n    return fromVersion(targetChange.readTime);\n}\nfunction toMutation(serializer, mutation) {\n    let result;\n    if (mutation instanceof SetMutation) {\n        result = {\n            update: toMutationDocument(serializer, mutation.key, mutation.value)\n        };\n    }\n    else if (mutation instanceof DeleteMutation) {\n        result = { delete: toName(serializer, mutation.key) };\n    }\n    else if (mutation instanceof PatchMutation) {\n        result = {\n            update: toMutationDocument(serializer, mutation.key, mutation.data),\n            updateMask: toDocumentMask(mutation.fieldMask)\n        };\n    }\n    else if (mutation instanceof VerifyMutation) {\n        result = {\n            verify: toName(serializer, mutation.key)\n        };\n    }\n    else {\n        return fail(0x40d7, {\n            mutationType: mutation.type\n        });\n    }\n    if (mutation.fieldTransforms.length > 0) {\n        result.updateTransforms = mutation.fieldTransforms.map(transform => toFieldTransform(serializer, transform));\n    }\n    if (!mutation.precondition.isNone) {\n        result.currentDocument = toPrecondition(serializer, mutation.precondition);\n    }\n    return result;\n}\nfunction fromMutation(serializer, proto) {\n    const precondition = proto.currentDocument\n        ? fromPrecondition(proto.currentDocument)\n        : Precondition.none();\n    const fieldTransforms = proto.updateTransforms\n        ? proto.updateTransforms.map(transform => fromFieldTransform(serializer, transform))\n        : [];\n    if (proto.update) {\n        assertPresent(proto.update.name);\n        const key = fromName(serializer, proto.update.name);\n        const value = new ObjectValue({\n            mapValue: { fields: proto.update.fields }\n        });\n        if (proto.updateMask) {\n            const fieldMask = fromDocumentMask(proto.updateMask);\n            return new PatchMutation(key, value, fieldMask, precondition, fieldTransforms);\n        }\n        else {\n            return new SetMutation(key, value, precondition, fieldTransforms);\n        }\n    }\n    else if (proto.delete) {\n        const key = fromName(serializer, proto.delete);\n        return new DeleteMutation(key, precondition);\n    }\n    else if (proto.verify) {\n        const key = fromName(serializer, proto.verify);\n        return new VerifyMutation(key, precondition);\n    }\n    else {\n        return fail(0x05b7, { proto });\n    }\n}\nfunction toPrecondition(serializer, precondition) {\n    if (precondition.updateTime !== undefined) {\n        return {\n            updateTime: toVersion(serializer, precondition.updateTime)\n        };\n    }\n    else if (precondition.exists !== undefined) {\n        return { exists: precondition.exists };\n    }\n    else {\n        return fail(0x6b69);\n    }\n}\nfunction fromPrecondition(precondition) {\n    if (precondition.updateTime !== undefined) {\n        return Precondition.updateTime(fromVersion(precondition.updateTime));\n    }\n    else if (precondition.exists !== undefined) {\n        return Precondition.exists(precondition.exists);\n    }\n    else {\n        return Precondition.none();\n    }\n}\nfunction fromWriteResult(proto, commitTime) {\n    // NOTE: Deletes don't have an updateTime.\n    let version = proto.updateTime\n        ? fromVersion(proto.updateTime)\n        : fromVersion(commitTime);\n    if (version.isEqual(SnapshotVersion.min())) {\n        // The Firestore Emulator currently returns an update time of 0 for\n        // deletes of non-existing documents (rather than null). This breaks the\n        // test \"get deleted doc while offline with source=cache\" as NoDocuments\n        // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n        // TODO(#2149): Remove this when Emulator is fixed\n        version = fromVersion(commitTime);\n    }\n    return new MutationResult(version, proto.transformResults || []);\n}\nfunction fromWriteResults(protos, commitTime) {\n    if (protos && protos.length > 0) {\n        hardAssert(commitTime !== undefined, 0x3811);\n        return protos.map(proto => fromWriteResult(proto, commitTime));\n    }\n    else {\n        return [];\n    }\n}\nfunction toFieldTransform(serializer, fieldTransform) {\n    const transform = fieldTransform.transform;\n    if (transform instanceof ServerTimestampTransform) {\n        return {\n            fieldPath: fieldTransform.field.canonicalString(),\n            setToServerValue: 'REQUEST_TIME'\n        };\n    }\n    else if (transform instanceof ArrayUnionTransformOperation) {\n        return {\n            fieldPath: fieldTransform.field.canonicalString(),\n            appendMissingElements: {\n                values: transform.elements\n            }\n        };\n    }\n    else if (transform instanceof ArrayRemoveTransformOperation) {\n        return {\n            fieldPath: fieldTransform.field.canonicalString(),\n            removeAllFromArray: {\n                values: transform.elements\n            }\n        };\n    }\n    else if (transform instanceof NumericIncrementTransformOperation) {\n        return {\n            fieldPath: fieldTransform.field.canonicalString(),\n            increment: transform.operand\n        };\n    }\n    else {\n        throw fail(0x51c2, {\n            transform: fieldTransform.transform\n        });\n    }\n}\nfunction fromFieldTransform(serializer, proto) {\n    let transform = null;\n    if ('setToServerValue' in proto) {\n        hardAssert(proto.setToServerValue === 'REQUEST_TIME', 0x40f6, { proto });\n        transform = new ServerTimestampTransform();\n    }\n    else if ('appendMissingElements' in proto) {\n        const values = proto.appendMissingElements.values || [];\n        transform = new ArrayUnionTransformOperation(values);\n    }\n    else if ('removeAllFromArray' in proto) {\n        const values = proto.removeAllFromArray.values || [];\n        transform = new ArrayRemoveTransformOperation(values);\n    }\n    else if ('increment' in proto) {\n        transform = new NumericIncrementTransformOperation(serializer, proto.increment);\n    }\n    else {\n        fail(0x40c8, { proto });\n    }\n    const fieldPath = FieldPath$1.fromServerFormat(proto.fieldPath);\n    return new FieldTransform(fieldPath, transform);\n}\nfunction toDocumentsTarget(serializer, target) {\n    return { documents: [toQueryPath(serializer, target.path)] };\n}\nfunction fromDocumentsTarget(documentsTarget) {\n    const count = documentsTarget.documents.length;\n    hardAssert(count === 1, 0x07ae, {\n        count\n    });\n    const name = documentsTarget.documents[0];\n    return queryToTarget(newQueryForPath(fromQueryPath(name)));\n}\nfunction toQueryTarget(serializer, target) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const queryTarget = { structuredQuery: {} };\n    const path = target.path;\n    let parent;\n    if (target.collectionGroup !== null) {\n        parent = path;\n        queryTarget.structuredQuery.from = [\n            {\n                collectionId: target.collectionGroup,\n                allDescendants: true\n            }\n        ];\n    }\n    else {\n        parent = path.popLast();\n        queryTarget.structuredQuery.from = [{ collectionId: path.lastSegment() }];\n    }\n    queryTarget.parent = toQueryPath(serializer, parent);\n    const where = toFilters(target.filters);\n    if (where) {\n        queryTarget.structuredQuery.where = where;\n    }\n    const orderBy = toOrder(target.orderBy);\n    if (orderBy) {\n        queryTarget.structuredQuery.orderBy = orderBy;\n    }\n    const limit = toInt32Proto(serializer, target.limit);\n    if (limit !== null) {\n        queryTarget.structuredQuery.limit = limit;\n    }\n    if (target.startAt) {\n        queryTarget.structuredQuery.startAt = toStartAtCursor(target.startAt);\n    }\n    if (target.endAt) {\n        queryTarget.structuredQuery.endAt = toEndAtCursor(target.endAt);\n    }\n    return { queryTarget, parent };\n}\nfunction toRunAggregationQueryRequest(serializer, target, aggregates, skipAliasing) {\n    const { queryTarget, parent } = toQueryTarget(serializer, target);\n    const aliasMap = {};\n    const aggregations = [];\n    let aggregationNum = 0;\n    aggregates.forEach(aggregate => {\n        // Map all client-side aliases to a unique short-form\n        // alias. This avoids issues with client-side aliases that\n        // exceed the 1500-byte string size limit.\n        const serverAlias = skipAliasing\n            ? aggregate.alias\n            : `aggregate_${aggregationNum++}`;\n        aliasMap[serverAlias] = aggregate.alias;\n        if (aggregate.aggregateType === 'count') {\n            aggregations.push({\n                alias: serverAlias,\n                count: {}\n            });\n        }\n        else if (aggregate.aggregateType === 'avg') {\n            aggregations.push({\n                alias: serverAlias,\n                avg: {\n                    field: toFieldPathReference(aggregate.fieldPath)\n                }\n            });\n        }\n        else if (aggregate.aggregateType === 'sum') {\n            aggregations.push({\n                alias: serverAlias,\n                sum: {\n                    field: toFieldPathReference(aggregate.fieldPath)\n                }\n            });\n        }\n    });\n    return {\n        request: {\n            structuredAggregationQuery: {\n                aggregations,\n                structuredQuery: queryTarget.structuredQuery\n            },\n            parent: queryTarget.parent\n        },\n        aliasMap,\n        parent\n    };\n}\nfunction convertQueryTargetToQuery(target) {\n    let path = fromQueryPath(target.parent);\n    const query = target.structuredQuery;\n    const fromCount = query.from ? query.from.length : 0;\n    let collectionGroup = null;\n    if (fromCount > 0) {\n        hardAssert(fromCount === 1, 0xfe26);\n        const from = query.from[0];\n        if (from.allDescendants) {\n            collectionGroup = from.collectionId;\n        }\n        else {\n            path = path.child(from.collectionId);\n        }\n    }\n    let filterBy = [];\n    if (query.where) {\n        filterBy = fromFilters(query.where);\n    }\n    let orderBy = [];\n    if (query.orderBy) {\n        orderBy = fromOrder(query.orderBy);\n    }\n    let limit = null;\n    if (query.limit) {\n        limit = fromInt32Proto(query.limit);\n    }\n    let startAt = null;\n    if (query.startAt) {\n        startAt = fromStartAtCursor(query.startAt);\n    }\n    let endAt = null;\n    if (query.endAt) {\n        endAt = fromEndAtCursor(query.endAt);\n    }\n    return newQuery(path, collectionGroup, orderBy, filterBy, limit, \"F\" /* LimitType.First */, startAt, endAt);\n}\nfunction fromQueryTarget(target) {\n    return queryToTarget(convertQueryTargetToQuery(target));\n}\nfunction toListenRequestLabels(serializer, targetData) {\n    const value = toLabel(targetData.purpose);\n    if (value == null) {\n        return null;\n    }\n    else {\n        return {\n            'goog-listen-tags': value\n        };\n    }\n}\nfunction toLabel(purpose) {\n    switch (purpose) {\n        case \"TargetPurposeListen\" /* TargetPurpose.Listen */:\n            return null;\n        case \"TargetPurposeExistenceFilterMismatch\" /* TargetPurpose.ExistenceFilterMismatch */:\n            return 'existence-filter-mismatch';\n        case \"TargetPurposeExistenceFilterMismatchBloom\" /* TargetPurpose.ExistenceFilterMismatchBloom */:\n            return 'existence-filter-mismatch-bloom';\n        case \"TargetPurposeLimboResolution\" /* TargetPurpose.LimboResolution */:\n            return 'limbo-document';\n        default:\n            return fail(0x713b, { purpose });\n    }\n}\nfunction toTarget(serializer, targetData) {\n    let result;\n    const target = targetData.target;\n    if (targetIsDocumentTarget(target)) {\n        result = { documents: toDocumentsTarget(serializer, target) };\n    }\n    else {\n        result = { query: toQueryTarget(serializer, target).queryTarget };\n    }\n    result.targetId = targetData.targetId;\n    if (targetData.resumeToken.approximateByteSize() > 0) {\n        result.resumeToken = toBytes(serializer, targetData.resumeToken);\n        const expectedCount = toInt32Proto(serializer, targetData.expectedCount);\n        if (expectedCount !== null) {\n            result.expectedCount = expectedCount;\n        }\n    }\n    else if (targetData.snapshotVersion.compareTo(SnapshotVersion.min()) > 0) {\n        // TODO(wuandy): Consider removing above check because it is most likely true.\n        // Right now, many tests depend on this behaviour though (leaving min() out\n        // of serialization).\n        result.readTime = toTimestamp(serializer, targetData.snapshotVersion.toTimestamp());\n        const expectedCount = toInt32Proto(serializer, targetData.expectedCount);\n        if (expectedCount !== null) {\n            result.expectedCount = expectedCount;\n        }\n    }\n    return result;\n}\nfunction toFilters(filters) {\n    if (filters.length === 0) {\n        return;\n    }\n    return toFilter(CompositeFilter.create(filters, \"and\" /* CompositeOperator.AND */));\n}\nfunction fromFilters(filter) {\n    const result = fromFilter(filter);\n    if (result instanceof CompositeFilter &&\n        compositeFilterIsFlatConjunction(result)) {\n        return result.getFilters();\n    }\n    return [result];\n}\nfunction fromFilter(filter) {\n    if (filter.unaryFilter !== undefined) {\n        return fromUnaryFilter(filter);\n    }\n    else if (filter.fieldFilter !== undefined) {\n        return fromFieldFilter(filter);\n    }\n    else if (filter.compositeFilter !== undefined) {\n        return fromCompositeFilter(filter);\n    }\n    else {\n        return fail(0x7591, { filter });\n    }\n}\nfunction toOrder(orderBys) {\n    if (orderBys.length === 0) {\n        return;\n    }\n    return orderBys.map(order => toPropertyOrder(order));\n}\nfunction fromOrder(orderBys) {\n    return orderBys.map(order => fromPropertyOrder(order));\n}\nfunction toStartAtCursor(cursor) {\n    return {\n        before: cursor.inclusive,\n        values: cursor.position\n    };\n}\nfunction toEndAtCursor(cursor) {\n    return {\n        before: !cursor.inclusive,\n        values: cursor.position\n    };\n}\nfunction fromStartAtCursor(cursor) {\n    const inclusive = !!cursor.before;\n    const position = cursor.values || [];\n    return new Bound(position, inclusive);\n}\nfunction fromEndAtCursor(cursor) {\n    const inclusive = !cursor.before;\n    const position = cursor.values || [];\n    return new Bound(position, inclusive);\n}\n// visible for testing\nfunction toDirection(dir) {\n    return DIRECTIONS[dir];\n}\n// visible for testing\nfunction fromDirection(dir) {\n    switch (dir) {\n        case 'ASCENDING':\n            return \"asc\" /* Direction.ASCENDING */;\n        case 'DESCENDING':\n            return \"desc\" /* Direction.DESCENDING */;\n        default:\n            return undefined;\n    }\n}\n// visible for testing\nfunction toOperatorName(op) {\n    return OPERATORS[op];\n}\nfunction toCompositeOperatorName(op) {\n    return COMPOSITE_OPERATORS[op];\n}\nfunction fromOperatorName(op) {\n    switch (op) {\n        case 'EQUAL':\n            return \"==\" /* Operator.EQUAL */;\n        case 'NOT_EQUAL':\n            return \"!=\" /* Operator.NOT_EQUAL */;\n        case 'GREATER_THAN':\n            return \">\" /* Operator.GREATER_THAN */;\n        case 'GREATER_THAN_OR_EQUAL':\n            return \">=\" /* Operator.GREATER_THAN_OR_EQUAL */;\n        case 'LESS_THAN':\n            return \"<\" /* Operator.LESS_THAN */;\n        case 'LESS_THAN_OR_EQUAL':\n            return \"<=\" /* Operator.LESS_THAN_OR_EQUAL */;\n        case 'ARRAY_CONTAINS':\n            return \"array-contains\" /* Operator.ARRAY_CONTAINS */;\n        case 'IN':\n            return \"in\" /* Operator.IN */;\n        case 'NOT_IN':\n            return \"not-in\" /* Operator.NOT_IN */;\n        case 'ARRAY_CONTAINS_ANY':\n            return \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */;\n        case 'OPERATOR_UNSPECIFIED':\n            return fail(0xe2fe);\n        default:\n            return fail(0xc54a);\n    }\n}\nfunction fromCompositeOperatorName(op) {\n    switch (op) {\n        case 'AND':\n            return \"and\" /* CompositeOperator.AND */;\n        case 'OR':\n            return \"or\" /* CompositeOperator.OR */;\n        default:\n            return fail(0x0402);\n    }\n}\nfunction toFieldPathReference(path) {\n    return { fieldPath: path.canonicalString() };\n}\nfunction fromFieldPathReference(fieldReference) {\n    return FieldPath$1.fromServerFormat(fieldReference.fieldPath);\n}\n// visible for testing\nfunction toPropertyOrder(orderBy) {\n    return {\n        field: toFieldPathReference(orderBy.field),\n        direction: toDirection(orderBy.dir)\n    };\n}\nfunction fromPropertyOrder(orderBy) {\n    return new OrderBy(fromFieldPathReference(orderBy.field), fromDirection(orderBy.direction));\n}\n// visible for testing\nfunction toFilter(filter) {\n    if (filter instanceof FieldFilter) {\n        return toUnaryOrFieldFilter(filter);\n    }\n    else if (filter instanceof CompositeFilter) {\n        return toCompositeFilter(filter);\n    }\n    else {\n        return fail(0xd65d, { filter });\n    }\n}\nfunction toCompositeFilter(filter) {\n    const protos = filter.getFilters().map(filter => toFilter(filter));\n    if (protos.length === 1) {\n        return protos[0];\n    }\n    return {\n        compositeFilter: {\n            op: toCompositeOperatorName(filter.op),\n            filters: protos\n        }\n    };\n}\nfunction toUnaryOrFieldFilter(filter) {\n    if (filter.op === \"==\" /* Operator.EQUAL */) {\n        if (isNanValue(filter.value)) {\n            return {\n                unaryFilter: {\n                    field: toFieldPathReference(filter.field),\n                    op: 'IS_NAN'\n                }\n            };\n        }\n        else if (isNullValue(filter.value)) {\n            return {\n                unaryFilter: {\n                    field: toFieldPathReference(filter.field),\n                    op: 'IS_NULL'\n                }\n            };\n        }\n    }\n    else if (filter.op === \"!=\" /* Operator.NOT_EQUAL */) {\n        if (isNanValue(filter.value)) {\n            return {\n                unaryFilter: {\n                    field: toFieldPathReference(filter.field),\n                    op: 'IS_NOT_NAN'\n                }\n            };\n        }\n        else if (isNullValue(filter.value)) {\n            return {\n                unaryFilter: {\n                    field: toFieldPathReference(filter.field),\n                    op: 'IS_NOT_NULL'\n                }\n            };\n        }\n    }\n    return {\n        fieldFilter: {\n            field: toFieldPathReference(filter.field),\n            op: toOperatorName(filter.op),\n            value: filter.value\n        }\n    };\n}\nfunction fromUnaryFilter(filter) {\n    switch (filter.unaryFilter.op) {\n        case 'IS_NAN':\n            const nanField = fromFieldPathReference(filter.unaryFilter.field);\n            return FieldFilter.create(nanField, \"==\" /* Operator.EQUAL */, {\n                doubleValue: NaN\n            });\n        case 'IS_NULL':\n            const nullField = fromFieldPathReference(filter.unaryFilter.field);\n            return FieldFilter.create(nullField, \"==\" /* Operator.EQUAL */, {\n                nullValue: 'NULL_VALUE'\n            });\n        case 'IS_NOT_NAN':\n            const notNanField = fromFieldPathReference(filter.unaryFilter.field);\n            return FieldFilter.create(notNanField, \"!=\" /* Operator.NOT_EQUAL */, {\n                doubleValue: NaN\n            });\n        case 'IS_NOT_NULL':\n            const notNullField = fromFieldPathReference(filter.unaryFilter.field);\n            return FieldFilter.create(notNullField, \"!=\" /* Operator.NOT_EQUAL */, {\n                nullValue: 'NULL_VALUE'\n            });\n        case 'OPERATOR_UNSPECIFIED':\n            return fail(0xef81);\n        default:\n            return fail(0xed36);\n    }\n}\nfunction fromFieldFilter(filter) {\n    return FieldFilter.create(fromFieldPathReference(filter.fieldFilter.field), fromOperatorName(filter.fieldFilter.op), filter.fieldFilter.value);\n}\nfunction fromCompositeFilter(filter) {\n    return CompositeFilter.create(filter.compositeFilter.filters.map(filter => fromFilter(filter)), fromCompositeOperatorName(filter.compositeFilter.op));\n}\nfunction toDocumentMask(fieldMask) {\n    const canonicalFields = [];\n    fieldMask.fields.forEach(field => canonicalFields.push(field.canonicalString()));\n    return {\n        fieldPaths: canonicalFields\n    };\n}\nfunction fromDocumentMask(proto) {\n    const paths = proto.fieldPaths || [];\n    return new FieldMask(paths.map(path => FieldPath$1.fromServerFormat(path)));\n}\nfunction isValidResourceName(path) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return (path.length >= 4 &&\n        path.get(0) === 'projects' &&\n        path.get(2) === 'databases');\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable set of metadata that the local store tracks for each target.\n */\nclass TargetData {\n    constructor(\n    /** The target being listened to. */\n    target, \n    /**\n     * The target ID to which the target corresponds; Assigned by the\n     * LocalStore for user listens and by the SyncEngine for limbo watches.\n     */\n    targetId, \n    /** The purpose of the target. */\n    purpose, \n    /**\n     * The sequence number of the last transaction during which this target data\n     * was modified.\n     */\n    sequenceNumber, \n    /** The latest snapshot version seen for this target. */\n    snapshotVersion = SnapshotVersion.min(), \n    /**\n     * The maximum snapshot version at which the associated view\n     * contained no limbo documents.\n     */\n    lastLimboFreeSnapshotVersion = SnapshotVersion.min(), \n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    resumeToken = ByteString.EMPTY_BYTE_STRING, \n    /**\n     * The number of documents that last matched the query at the resume token or\n     * read time. Documents are counted only when making a listen request with\n     * resume token or read time, otherwise, keep it null.\n     */\n    expectedCount = null) {\n        this.target = target;\n        this.targetId = targetId;\n        this.purpose = purpose;\n        this.sequenceNumber = sequenceNumber;\n        this.snapshotVersion = snapshotVersion;\n        this.lastLimboFreeSnapshotVersion = lastLimboFreeSnapshotVersion;\n        this.resumeToken = resumeToken;\n        this.expectedCount = expectedCount;\n    }\n    /** Creates a new target data instance with an updated sequence number. */\n    withSequenceNumber(sequenceNumber) {\n        return new TargetData(this.target, this.targetId, this.purpose, sequenceNumber, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken, this.expectedCount);\n    }\n    /**\n     * Creates a new target data instance with an updated resume token and\n     * snapshot version.\n     */\n    withResumeToken(resumeToken, snapshotVersion) {\n        return new TargetData(this.target, this.targetId, this.purpose, this.sequenceNumber, snapshotVersion, this.lastLimboFreeSnapshotVersion, resumeToken, \n        /* expectedCount= */ null);\n    }\n    /**\n     * Creates a new target data instance with an updated expected count.\n     */\n    withExpectedCount(expectedCount) {\n        return new TargetData(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken, expectedCount);\n    }\n    /**\n     * Creates a new target data instance with an updated last limbo free\n     * snapshot version number.\n     */\n    withLastLimboFreeSnapshotVersion(lastLimboFreeSnapshotVersion) {\n        return new TargetData(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, lastLimboFreeSnapshotVersion, this.resumeToken, this.expectedCount);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Serializer for values stored in the LocalStore. */\nclass LocalSerializer {\n    constructor(remoteSerializer) {\n        this.remoteSerializer = remoteSerializer;\n    }\n}\n/** Decodes a remote document from storage locally to a Document. */\nfunction fromDbRemoteDocument(localSerializer, remoteDoc) {\n    let doc;\n    if (remoteDoc.document) {\n        doc = fromDocument(localSerializer.remoteSerializer, remoteDoc.document, !!remoteDoc.hasCommittedMutations);\n    }\n    else if (remoteDoc.noDocument) {\n        const key = DocumentKey.fromSegments(remoteDoc.noDocument.path);\n        const version = fromDbTimestamp(remoteDoc.noDocument.readTime);\n        doc = MutableDocument.newNoDocument(key, version);\n        if (remoteDoc.hasCommittedMutations) {\n            doc.setHasCommittedMutations();\n        }\n    }\n    else if (remoteDoc.unknownDocument) {\n        const key = DocumentKey.fromSegments(remoteDoc.unknownDocument.path);\n        const version = fromDbTimestamp(remoteDoc.unknownDocument.version);\n        doc = MutableDocument.newUnknownDocument(key, version);\n    }\n    else {\n        return fail(0xdd85);\n    }\n    if (remoteDoc.readTime) {\n        doc.setReadTime(fromDbTimestampKey(remoteDoc.readTime));\n    }\n    return doc;\n}\n/** Encodes a document for storage locally. */\nfunction toDbRemoteDocument(localSerializer, document) {\n    const key = document.key;\n    const remoteDoc = {\n        prefixPath: key.getCollectionPath().popLast().toArray(),\n        collectionGroup: key.collectionGroup,\n        documentId: key.path.lastSegment(),\n        readTime: toDbTimestampKey(document.readTime),\n        hasCommittedMutations: document.hasCommittedMutations\n    };\n    if (document.isFoundDocument()) {\n        remoteDoc.document = toDocument(localSerializer.remoteSerializer, document);\n    }\n    else if (document.isNoDocument()) {\n        remoteDoc.noDocument = {\n            path: key.path.toArray(),\n            readTime: toDbTimestamp(document.version)\n        };\n    }\n    else if (document.isUnknownDocument()) {\n        remoteDoc.unknownDocument = {\n            path: key.path.toArray(),\n            version: toDbTimestamp(document.version)\n        };\n    }\n    else {\n        return fail(0xe230, { document });\n    }\n    return remoteDoc;\n}\nfunction toDbTimestampKey(snapshotVersion) {\n    const timestamp = snapshotVersion.toTimestamp();\n    return [timestamp.seconds, timestamp.nanoseconds];\n}\nfunction fromDbTimestampKey(dbTimestampKey) {\n    const timestamp = new Timestamp(dbTimestampKey[0], dbTimestampKey[1]);\n    return SnapshotVersion.fromTimestamp(timestamp);\n}\nfunction toDbTimestamp(snapshotVersion) {\n    const timestamp = snapshotVersion.toTimestamp();\n    return { seconds: timestamp.seconds, nanoseconds: timestamp.nanoseconds };\n}\nfunction fromDbTimestamp(dbTimestamp) {\n    const timestamp = new Timestamp(dbTimestamp.seconds, dbTimestamp.nanoseconds);\n    return SnapshotVersion.fromTimestamp(timestamp);\n}\n/** Encodes a batch of mutations into a DbMutationBatch for local storage. */\nfunction toDbMutationBatch(localSerializer, userId, batch) {\n    const serializedBaseMutations = batch.baseMutations.map(m => toMutation(localSerializer.remoteSerializer, m));\n    const serializedMutations = batch.mutations.map(m => toMutation(localSerializer.remoteSerializer, m));\n    return {\n        userId,\n        batchId: batch.batchId,\n        localWriteTimeMs: batch.localWriteTime.toMillis(),\n        baseMutations: serializedBaseMutations,\n        mutations: serializedMutations\n    };\n}\n/** Decodes a DbMutationBatch into a MutationBatch */\nfunction fromDbMutationBatch(localSerializer, dbBatch) {\n    const baseMutations = (dbBatch.baseMutations || []).map(m => fromMutation(localSerializer.remoteSerializer, m));\n    // Squash old transform mutations into existing patch or set mutations.\n    // The replacement of representing `transforms` with `update_transforms`\n    // on the SDK means that old `transform` mutations stored in IndexedDB need\n    // to be updated to `update_transforms`.\n    // TODO(b/174608374): Remove this code once we perform a schema migration.\n    for (let i = 0; i < dbBatch.mutations.length - 1; ++i) {\n        const currentMutation = dbBatch.mutations[i];\n        const hasTransform = i + 1 < dbBatch.mutations.length &&\n            dbBatch.mutations[i + 1].transform !== undefined;\n        if (hasTransform) {\n            const transformMutation = dbBatch.mutations[i + 1];\n            currentMutation.updateTransforms =\n                transformMutation.transform.fieldTransforms;\n            dbBatch.mutations.splice(i + 1, 1);\n            ++i;\n        }\n    }\n    const mutations = dbBatch.mutations.map(m => fromMutation(localSerializer.remoteSerializer, m));\n    const timestamp = Timestamp.fromMillis(dbBatch.localWriteTimeMs);\n    return new MutationBatch(dbBatch.batchId, timestamp, baseMutations, mutations);\n}\n/** Decodes a DbTarget into TargetData */\nfunction fromDbTarget(dbTarget) {\n    const version = fromDbTimestamp(dbTarget.readTime);\n    const lastLimboFreeSnapshotVersion = dbTarget.lastLimboFreeSnapshotVersion !== undefined\n        ? fromDbTimestamp(dbTarget.lastLimboFreeSnapshotVersion)\n        : SnapshotVersion.min();\n    let target;\n    if (isDocumentQuery(dbTarget.query)) {\n        target = fromDocumentsTarget(dbTarget.query);\n    }\n    else {\n        target = fromQueryTarget(dbTarget.query);\n    }\n    return new TargetData(target, dbTarget.targetId, \"TargetPurposeListen\" /* TargetPurpose.Listen */, dbTarget.lastListenSequenceNumber, version, lastLimboFreeSnapshotVersion, ByteString.fromBase64String(dbTarget.resumeToken));\n}\n/** Encodes TargetData into a DbTarget for storage locally. */\nfunction toDbTarget(localSerializer, targetData) {\n    const dbTimestamp = toDbTimestamp(targetData.snapshotVersion);\n    const dbLastLimboFreeTimestamp = toDbTimestamp(targetData.lastLimboFreeSnapshotVersion);\n    let queryProto;\n    if (targetIsDocumentTarget(targetData.target)) {\n        queryProto = toDocumentsTarget(localSerializer.remoteSerializer, targetData.target);\n    }\n    else {\n        queryProto = toQueryTarget(localSerializer.remoteSerializer, targetData.target).queryTarget;\n    }\n    // We can't store the resumeToken as a ByteString in IndexedDb, so we\n    // convert it to a base64 string for storage.\n    const resumeToken = targetData.resumeToken.toBase64();\n    // lastListenSequenceNumber is always 0 until we do real GC.\n    return {\n        targetId: targetData.targetId,\n        canonicalId: canonifyTarget(targetData.target),\n        readTime: dbTimestamp,\n        resumeToken,\n        lastListenSequenceNumber: targetData.sequenceNumber,\n        lastLimboFreeSnapshotVersion: dbLastLimboFreeTimestamp,\n        query: queryProto\n    };\n}\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\nfunction isDocumentQuery(dbQuery) {\n    return dbQuery.documents !== undefined;\n}\n/** Encodes a DbBundle to a BundleMetadata object. */\nfunction fromDbBundle(dbBundle) {\n    return {\n        id: dbBundle.bundleId,\n        createTime: fromDbTimestamp(dbBundle.createTime),\n        version: dbBundle.version\n    };\n}\n/** Encodes a BundleMetadata to a DbBundle. */\nfunction toDbBundle(metadata) {\n    return {\n        bundleId: metadata.id,\n        createTime: toDbTimestamp(fromVersion(metadata.createTime)),\n        version: metadata.version\n    };\n}\n/** Encodes a DbNamedQuery to a NamedQuery. */\nfunction fromDbNamedQuery(dbNamedQuery) {\n    return {\n        name: dbNamedQuery.name,\n        query: fromBundledQuery(dbNamedQuery.bundledQuery),\n        readTime: fromDbTimestamp(dbNamedQuery.readTime)\n    };\n}\n/** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */\nfunction toDbNamedQuery(query) {\n    return {\n        name: query.name,\n        readTime: toDbTimestamp(fromVersion(query.readTime)),\n        bundledQuery: query.bundledQuery\n    };\n}\n/**\n * Encodes a `BundledQuery` from bundle proto to a Query object.\n *\n * This reconstructs the original query used to build the bundle being loaded,\n * including features exists only in SDKs (for example: limit-to-last).\n */\nfunction fromBundledQuery(bundledQuery) {\n    const query = convertQueryTargetToQuery({\n        parent: bundledQuery.parent,\n        structuredQuery: bundledQuery.structuredQuery\n    });\n    if (bundledQuery.limitType === 'LAST') {\n        return queryWithLimit(query, query.limit, \"L\" /* LimitType.Last */);\n    }\n    return query;\n}\n/** Encodes a NamedQuery proto object to a NamedQuery model object. */\nfunction fromProtoNamedQuery(namedQuery) {\n    return {\n        name: namedQuery.name,\n        query: fromBundledQuery(namedQuery.bundledQuery),\n        readTime: fromVersion(namedQuery.readTime)\n    };\n}\n/** Decodes a BundleMetadata proto into a BundleMetadata object. */\nfunction fromBundleMetadata(metadata) {\n    return {\n        id: metadata.id,\n        version: metadata.version,\n        createTime: fromVersion(metadata.createTime)\n    };\n}\n/** Encodes a DbDocumentOverlay object to an Overlay model object. */\nfunction fromDbDocumentOverlay(localSerializer, dbDocumentOverlay) {\n    return new Overlay(dbDocumentOverlay.largestBatchId, fromMutation(localSerializer.remoteSerializer, dbDocumentOverlay.overlayMutation));\n}\n/** Decodes an Overlay model object into a DbDocumentOverlay object. */\nfunction toDbDocumentOverlay(localSerializer, userId, overlay) {\n    const [_, collectionPath, documentId] = toDbDocumentOverlayKey(userId, overlay.mutation.key);\n    return {\n        userId,\n        collectionPath,\n        documentId,\n        collectionGroup: overlay.mutation.key.getCollectionGroup(),\n        largestBatchId: overlay.largestBatchId,\n        overlayMutation: toMutation(localSerializer.remoteSerializer, overlay.mutation)\n    };\n}\n/**\n * Returns the DbDocumentOverlayKey corresponding to the given user and\n * document key.\n */\nfunction toDbDocumentOverlayKey(userId, docKey) {\n    const docId = docKey.path.lastSegment();\n    const collectionPath = encodeResourcePath(docKey.path.popLast());\n    return [userId, collectionPath, docId];\n}\nfunction toDbIndexConfiguration(index) {\n    return {\n        indexId: index.indexId,\n        collectionGroup: index.collectionGroup,\n        fields: index.fields.map(s => [s.fieldPath.canonicalString(), s.kind])\n    };\n}\nfunction fromDbIndexConfiguration(index, state) {\n    const decodedState = state\n        ? new IndexState(state.sequenceNumber, new IndexOffset(fromDbTimestamp(state.readTime), new DocumentKey(decodeResourcePath(state.documentKey)), state.largestBatchId))\n        : IndexState.empty();\n    const decodedSegments = index.fields.map(([fieldPath, kind]) => new IndexSegment(FieldPath$1.fromServerFormat(fieldPath), kind));\n    return new FieldIndex(index.indexId, index.collectionGroup, decodedSegments, decodedState);\n}\nfunction toDbIndexState(indexId, uid, sequenceNumber, offset) {\n    return {\n        indexId,\n        uid,\n        sequenceNumber,\n        readTime: toDbTimestamp(offset.readTime),\n        documentKey: encodeResourcePath(offset.documentKey.path),\n        largestBatchId: offset.largestBatchId\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass IndexedDbBundleCache {\n    getBundleMetadata(transaction, bundleId) {\n        return bundlesStore(transaction)\n            .get(bundleId)\n            .next(bundle => {\n            if (bundle) {\n                return fromDbBundle(bundle);\n            }\n            return undefined;\n        });\n    }\n    saveBundleMetadata(transaction, bundleMetadata) {\n        return bundlesStore(transaction).put(toDbBundle(bundleMetadata));\n    }\n    getNamedQuery(transaction, queryName) {\n        return namedQueriesStore(transaction)\n            .get(queryName)\n            .next(query => {\n            if (query) {\n                return fromDbNamedQuery(query);\n            }\n            return undefined;\n        });\n    }\n    saveNamedQuery(transaction, query) {\n        return namedQueriesStore(transaction).put(toDbNamedQuery(query));\n    }\n}\n/**\n * Helper to get a typed SimpleDbStore for the bundles object store.\n */\nfunction bundlesStore(txn) {\n    return getStore(txn, DbBundleStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the namedQueries object store.\n */\nfunction namedQueriesStore(txn) {\n    return getStore(txn, DbNamedQueryStore);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Implementation of DocumentOverlayCache using IndexedDb.\n */\nclass IndexedDbDocumentOverlayCache {\n    /**\n     * @param serializer - The document serializer.\n     * @param userId - The userId for which we are accessing overlays.\n     */\n    constructor(serializer, userId) {\n        this.serializer = serializer;\n        this.userId = userId;\n    }\n    static forUser(serializer, user) {\n        const userId = user.uid || '';\n        return new IndexedDbDocumentOverlayCache(serializer, userId);\n    }\n    getOverlay(transaction, key) {\n        return documentOverlayStore(transaction)\n            .get(toDbDocumentOverlayKey(this.userId, key))\n            .next(dbOverlay => {\n            if (dbOverlay) {\n                return fromDbDocumentOverlay(this.serializer, dbOverlay);\n            }\n            return null;\n        });\n    }\n    getOverlays(transaction, keys) {\n        const result = newOverlayMap();\n        return PersistencePromise.forEach(keys, (key) => {\n            return this.getOverlay(transaction, key).next(overlay => {\n                if (overlay !== null) {\n                    result.set(key, overlay);\n                }\n            });\n        }).next(() => result);\n    }\n    saveOverlays(transaction, largestBatchId, overlays) {\n        const promises = [];\n        overlays.forEach((_, mutation) => {\n            const overlay = new Overlay(largestBatchId, mutation);\n            promises.push(this.saveOverlay(transaction, overlay));\n        });\n        return PersistencePromise.waitFor(promises);\n    }\n    removeOverlaysForBatchId(transaction, documentKeys, batchId) {\n        const collectionPaths = new Set();\n        // Get the set of unique collection paths.\n        documentKeys.forEach(key => collectionPaths.add(encodeResourcePath(key.getCollectionPath())));\n        const promises = [];\n        collectionPaths.forEach(collectionPath => {\n            const range = IDBKeyRange.bound([this.userId, collectionPath, batchId], [this.userId, collectionPath, batchId + 1], \n            /*lowerOpen=*/ false, \n            /*upperOpen=*/ true);\n            promises.push(documentOverlayStore(transaction).deleteAll(DbDocumentOverlayCollectionPathOverlayIndex, range));\n        });\n        return PersistencePromise.waitFor(promises);\n    }\n    getOverlaysForCollection(transaction, collection, sinceBatchId) {\n        const result = newOverlayMap();\n        const collectionPath = encodeResourcePath(collection);\n        // We want batch IDs larger than `sinceBatchId`, and so the lower bound\n        // is not inclusive.\n        const range = IDBKeyRange.bound([this.userId, collectionPath, sinceBatchId], [this.userId, collectionPath, Number.POSITIVE_INFINITY], \n        /*lowerOpen=*/ true);\n        return documentOverlayStore(transaction)\n            .loadAll(DbDocumentOverlayCollectionPathOverlayIndex, range)\n            .next(dbOverlays => {\n            for (const dbOverlay of dbOverlays) {\n                const overlay = fromDbDocumentOverlay(this.serializer, dbOverlay);\n                result.set(overlay.getKey(), overlay);\n            }\n            return result;\n        });\n    }\n    getOverlaysForCollectionGroup(transaction, collectionGroup, sinceBatchId, count) {\n        const result = newOverlayMap();\n        let currentBatchId = undefined;\n        // We want batch IDs larger than `sinceBatchId`, and so the lower bound\n        // is not inclusive.\n        const range = IDBKeyRange.bound([this.userId, collectionGroup, sinceBatchId], [this.userId, collectionGroup, Number.POSITIVE_INFINITY], \n        /*lowerOpen=*/ true);\n        return documentOverlayStore(transaction)\n            .iterate({\n            index: DbDocumentOverlayCollectionGroupOverlayIndex,\n            range\n        }, (_, dbOverlay, control) => {\n            // We do not want to return partial batch overlays, even if the size\n            // of the result set exceeds the given `count` argument. Therefore, we\n            // continue to aggregate results even after the result size exceeds\n            // `count` if there are more overlays from the `currentBatchId`.\n            const overlay = fromDbDocumentOverlay(this.serializer, dbOverlay);\n            if (result.size() < count ||\n                overlay.largestBatchId === currentBatchId) {\n                result.set(overlay.getKey(), overlay);\n                currentBatchId = overlay.largestBatchId;\n            }\n            else {\n                control.done();\n            }\n        })\n            .next(() => result);\n    }\n    saveOverlay(transaction, overlay) {\n        return documentOverlayStore(transaction).put(toDbDocumentOverlay(this.serializer, this.userId, overlay));\n    }\n}\n/**\n * Helper to get a typed SimpleDbStore for the document overlay object store.\n */\nfunction documentOverlayStore(txn) {\n    return getStore(txn, DbDocumentOverlayStore);\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass IndexedDbGlobalsCache {\n    globalsStore(txn) {\n        return getStore(txn, DbGlobalsStore);\n    }\n    getSessionToken(txn) {\n        const globals = this.globalsStore(txn);\n        return globals.get('sessionToken').next(global => {\n            const value = global === null || global === void 0 ? void 0 : global.value;\n            return value\n                ? ByteString.fromUint8Array(value)\n                : ByteString.EMPTY_BYTE_STRING;\n        });\n    }\n    setSessionToken(txn, sessionToken) {\n        const globals = this.globalsStore(txn);\n        return globals.put({\n            name: 'sessionToken',\n            value: sessionToken.toUint8Array()\n        });\n    }\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: This code is copied from the backend. Code that is not used by\n// Firestore was removed.\nconst INDEX_TYPE_NULL = 5;\nconst INDEX_TYPE_BOOLEAN = 10;\nconst INDEX_TYPE_NAN = 13;\nconst INDEX_TYPE_NUMBER = 15;\nconst INDEX_TYPE_TIMESTAMP = 20;\nconst INDEX_TYPE_STRING = 25;\nconst INDEX_TYPE_BLOB = 30;\nconst INDEX_TYPE_REFERENCE = 37;\nconst INDEX_TYPE_GEOPOINT = 45;\nconst INDEX_TYPE_ARRAY = 50;\nconst INDEX_TYPE_VECTOR = 53;\nconst INDEX_TYPE_MAP = 55;\nconst INDEX_TYPE_REFERENCE_SEGMENT = 60;\n// A terminator that indicates that a truncatable value was not truncated.\n// This must be smaller than all other type labels.\nconst NOT_TRUNCATED = 2;\n/** Firestore index value writer.  */\nclass FirestoreIndexValueWriter {\n    constructor() { }\n    // The write methods below short-circuit writing terminators for values\n    // containing a (terminating) truncated value.\n    //\n    // As an example, consider the resulting encoding for:\n    //\n    // [\"bar\", [2, \"foo\"]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TERM, TERM, TERM)\n    // [\"bar\", [2, truncated(\"foo\")]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TRUNC)\n    // [\"bar\", truncated([\"foo\"])] -> (STRING, \"bar\", TERM, ARRAY. STRING, \"foo\", TERM, TRUNC)\n    /** Writes an index value.  */\n    writeIndexValue(value, encoder) {\n        this.writeIndexValueAux(value, encoder);\n        // Write separator to split index values\n        // (see go/firestore-storage-format#encodings).\n        encoder.writeInfinity();\n    }\n    writeIndexValueAux(indexValue, encoder) {\n        if ('nullValue' in indexValue) {\n            this.writeValueTypeLabel(encoder, INDEX_TYPE_NULL);\n        }\n        else if ('booleanValue' in indexValue) {\n            this.writeValueTypeLabel(encoder, INDEX_TYPE_BOOLEAN);\n            encoder.writeNumber(indexValue.booleanValue ? 1 : 0);\n        }\n        else if ('integerValue' in indexValue) {\n            this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n            encoder.writeNumber(normalizeNumber(indexValue.integerValue));\n        }\n        else if ('doubleValue' in indexValue) {\n            const n = normalizeNumber(indexValue.doubleValue);\n            if (isNaN(n)) {\n                this.writeValueTypeLabel(encoder, INDEX_TYPE_NAN);\n            }\n            else {\n                this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n                if (isNegativeZero(n)) {\n                    // -0.0, 0 and 0.0 are all considered the same\n                    encoder.writeNumber(0.0);\n                }\n                else {\n                    encoder.writeNumber(n);\n                }\n            }\n        }\n        else if ('timestampValue' in indexValue) {\n            let timestamp = indexValue.timestampValue;\n            this.writeValueTypeLabel(encoder, INDEX_TYPE_TIMESTAMP);\n            if (typeof timestamp === 'string') {\n                timestamp = normalizeTimestamp(timestamp);\n            }\n            encoder.writeString(`${timestamp.seconds || ''}`);\n            encoder.writeNumber(timestamp.nanos || 0);\n        }\n        else if ('stringValue' in indexValue) {\n            this.writeIndexString(indexValue.stringValue, encoder);\n            this.writeTruncationMarker(encoder);\n        }\n        else if ('bytesValue' in indexValue) {\n            this.writeValueTypeLabel(encoder, INDEX_TYPE_BLOB);\n            encoder.writeBytes(normalizeByteString(indexValue.bytesValue));\n            this.writeTruncationMarker(encoder);\n        }\n        else if ('referenceValue' in indexValue) {\n            this.writeIndexEntityRef(indexValue.referenceValue, encoder);\n        }\n        else if ('geoPointValue' in indexValue) {\n            const geoPoint = indexValue.geoPointValue;\n            this.writeValueTypeLabel(encoder, INDEX_TYPE_GEOPOINT);\n            encoder.writeNumber(geoPoint.latitude || 0);\n            encoder.writeNumber(geoPoint.longitude || 0);\n        }\n        else if ('mapValue' in indexValue) {\n            if (isMaxValue(indexValue)) {\n                this.writeValueTypeLabel(encoder, Number.MAX_SAFE_INTEGER);\n            }\n            else if (isVectorValue(indexValue)) {\n                this.writeIndexVector(indexValue.mapValue, encoder);\n            }\n            else {\n                this.writeIndexMap(indexValue.mapValue, encoder);\n                this.writeTruncationMarker(encoder);\n            }\n        }\n        else if ('arrayValue' in indexValue) {\n            this.writeIndexArray(indexValue.arrayValue, encoder);\n            this.writeTruncationMarker(encoder);\n        }\n        else {\n            fail(0x4a4e, { indexValue });\n        }\n    }\n    writeIndexString(stringIndexValue, encoder) {\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_STRING);\n        this.writeUnlabeledIndexString(stringIndexValue, encoder);\n    }\n    writeUnlabeledIndexString(stringIndexValue, encoder) {\n        encoder.writeString(stringIndexValue);\n    }\n    writeIndexMap(mapIndexValue, encoder) {\n        const map = mapIndexValue.fields || {};\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_MAP);\n        for (const key of Object.keys(map)) {\n            this.writeIndexString(key, encoder);\n            this.writeIndexValueAux(map[key], encoder);\n        }\n    }\n    writeIndexVector(mapIndexValue, encoder) {\n        var _a, _b;\n        const map = mapIndexValue.fields || {};\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_VECTOR);\n        // Vectors sort first by length\n        const key = VECTOR_MAP_VECTORS_KEY;\n        const length = ((_b = (_a = map[key].arrayValue) === null || _a === void 0 ? void 0 : _a.values) === null || _b === void 0 ? void 0 : _b.length) || 0;\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n        encoder.writeNumber(normalizeNumber(length));\n        // Vectors then sort by position value\n        this.writeIndexString(key, encoder);\n        this.writeIndexValueAux(map[key], encoder);\n    }\n    writeIndexArray(arrayIndexValue, encoder) {\n        const values = arrayIndexValue.values || [];\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_ARRAY);\n        for (const element of values) {\n            this.writeIndexValueAux(element, encoder);\n        }\n    }\n    writeIndexEntityRef(referenceValue, encoder) {\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_REFERENCE);\n        const path = DocumentKey.fromName(referenceValue).path;\n        path.forEach(segment => {\n            this.writeValueTypeLabel(encoder, INDEX_TYPE_REFERENCE_SEGMENT);\n            this.writeUnlabeledIndexString(segment, encoder);\n        });\n    }\n    writeValueTypeLabel(encoder, typeOrder) {\n        encoder.writeNumber(typeOrder);\n    }\n    writeTruncationMarker(encoder) {\n        // While the SDK does not implement truncation, the truncation marker is\n        // used to terminate all variable length values (which are strings, bytes,\n        // references, arrays and maps).\n        encoder.writeNumber(NOT_TRUNCATED);\n    }\n}\nFirestoreIndexValueWriter.INSTANCE = new FirestoreIndexValueWriter();\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law | agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES | CONDITIONS OF ANY KIND, either express | implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** These constants are taken from the backend. */\nconst MIN_SURROGATE = '\\uD800';\nconst MAX_SURROGATE = '\\uDBFF';\nconst ESCAPE1 = 0x00;\nconst NULL_BYTE = 0xff; // Combined with ESCAPE1\nconst SEPARATOR = 0x01; // Combined with ESCAPE1\nconst ESCAPE2 = 0xff;\nconst INFINITY = 0xff; // Combined with ESCAPE2\nconst FF_BYTE = 0x00; // Combined with ESCAPE2\nconst LONG_SIZE = 64;\nconst BYTE_SIZE = 8;\n/**\n * The default size of the buffer. This is arbitrary, but likely larger than\n * most index values so that less copies of the underlying buffer will be made.\n * For large values, a single copy will made to double the buffer length.\n */\nconst DEFAULT_BUFFER_SIZE = 1024;\n/** Converts a JavaScript number to a byte array (using big endian encoding). */\nfunction doubleToLongBits(value) {\n    const dv = new DataView(new ArrayBuffer(8));\n    dv.setFloat64(0, value, /* littleEndian= */ false);\n    return new Uint8Array(dv.buffer);\n}\n/**\n * Counts the number of zeros in a byte.\n *\n * Visible for testing.\n */\nfunction numberOfLeadingZerosInByte(x) {\n    if (x === 0) {\n        return 8;\n    }\n    let zeros = 0;\n    if (x >> 4 === 0) {\n        // Test if the first four bits are zero.\n        zeros += 4;\n        x = x << 4;\n    }\n    if (x >> 6 === 0) {\n        // Test if the first two (or next two) bits are zero.\n        zeros += 2;\n        x = x << 2;\n    }\n    if (x >> 7 === 0) {\n        // Test if the remaining bit is zero.\n        zeros += 1;\n    }\n    return zeros;\n}\n/** Counts the number of leading zeros in the given byte array. */\nfunction numberOfLeadingZeros(bytes) {\n    let leadingZeros = 0;\n    for (let i = 0; i < 8; ++i) {\n        const zeros = numberOfLeadingZerosInByte(bytes[i] & 0xff);\n        leadingZeros += zeros;\n        if (zeros !== 8) {\n            break;\n        }\n    }\n    return leadingZeros;\n}\n/**\n * Returns the number of bytes required to store \"value\". Leading zero bytes\n * are skipped.\n */\nfunction unsignedNumLength(value) {\n    // This is just the number of bytes for the unsigned representation of the number.\n    const numBits = LONG_SIZE - numberOfLeadingZeros(value);\n    return Math.ceil(numBits / BYTE_SIZE);\n}\n/**\n * OrderedCodeWriter is a minimal-allocation implementation of the writing\n * behavior defined by the backend.\n *\n * The code is ported from its Java counterpart.\n */\nclass OrderedCodeWriter {\n    constructor() {\n        this.buffer = new Uint8Array(DEFAULT_BUFFER_SIZE);\n        this.position = 0;\n    }\n    writeBytesAscending(value) {\n        const it = value[Symbol.iterator]();\n        let byte = it.next();\n        while (!byte.done) {\n            this.writeByteAscending(byte.value);\n            byte = it.next();\n        }\n        this.writeSeparatorAscending();\n    }\n    writeBytesDescending(value) {\n        const it = value[Symbol.iterator]();\n        let byte = it.next();\n        while (!byte.done) {\n            this.writeByteDescending(byte.value);\n            byte = it.next();\n        }\n        this.writeSeparatorDescending();\n    }\n    /** Writes utf8 bytes into this byte sequence, ascending. */\n    writeUtf8Ascending(sequence) {\n        for (const c of sequence) {\n            const charCode = c.charCodeAt(0);\n            if (charCode < 0x80) {\n                this.writeByteAscending(charCode);\n            }\n            else if (charCode < 0x800) {\n                this.writeByteAscending((0x0f << 6) | (charCode >>> 6));\n                this.writeByteAscending(0x80 | (0x3f & charCode));\n            }\n            else if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n                this.writeByteAscending((0x0f << 5) | (charCode >>> 12));\n                this.writeByteAscending(0x80 | (0x3f & (charCode >>> 6)));\n                this.writeByteAscending(0x80 | (0x3f & charCode));\n            }\n            else {\n                const codePoint = c.codePointAt(0);\n                this.writeByteAscending((0x0f << 4) | (codePoint >>> 18));\n                this.writeByteAscending(0x80 | (0x3f & (codePoint >>> 12)));\n                this.writeByteAscending(0x80 | (0x3f & (codePoint >>> 6)));\n                this.writeByteAscending(0x80 | (0x3f & codePoint));\n            }\n        }\n        this.writeSeparatorAscending();\n    }\n    /** Writes utf8 bytes into this byte sequence, descending */\n    writeUtf8Descending(sequence) {\n        for (const c of sequence) {\n            const charCode = c.charCodeAt(0);\n            if (charCode < 0x80) {\n                this.writeByteDescending(charCode);\n            }\n            else if (charCode < 0x800) {\n                this.writeByteDescending((0x0f << 6) | (charCode >>> 6));\n                this.writeByteDescending(0x80 | (0x3f & charCode));\n            }\n            else if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n                this.writeByteDescending((0x0f << 5) | (charCode >>> 12));\n                this.writeByteDescending(0x80 | (0x3f & (charCode >>> 6)));\n                this.writeByteDescending(0x80 | (0x3f & charCode));\n            }\n            else {\n                const codePoint = c.codePointAt(0);\n                this.writeByteDescending((0x0f << 4) | (codePoint >>> 18));\n                this.writeByteDescending(0x80 | (0x3f & (codePoint >>> 12)));\n                this.writeByteDescending(0x80 | (0x3f & (codePoint >>> 6)));\n                this.writeByteDescending(0x80 | (0x3f & codePoint));\n            }\n        }\n        this.writeSeparatorDescending();\n    }\n    writeNumberAscending(val) {\n        // Values are encoded with a single byte length prefix, followed by the\n        // actual value in big-endian format with leading 0 bytes dropped.\n        const value = this.toOrderedBits(val);\n        const len = unsignedNumLength(value);\n        this.ensureAvailable(1 + len);\n        this.buffer[this.position++] = len & 0xff; // Write the length\n        for (let i = value.length - len; i < value.length; ++i) {\n            this.buffer[this.position++] = value[i] & 0xff;\n        }\n    }\n    writeNumberDescending(val) {\n        // Values are encoded with a single byte length prefix, followed by the\n        // inverted value in big-endian format with leading 0 bytes dropped.\n        const value = this.toOrderedBits(val);\n        const len = unsignedNumLength(value);\n        this.ensureAvailable(1 + len);\n        this.buffer[this.position++] = ~(len & 0xff); // Write the length\n        for (let i = value.length - len; i < value.length; ++i) {\n            this.buffer[this.position++] = ~(value[i] & 0xff);\n        }\n    }\n    /**\n     * Writes the \"infinity\" byte sequence that sorts after all other byte\n     * sequences written in ascending order.\n     */\n    writeInfinityAscending() {\n        this.writeEscapedByteAscending(ESCAPE2);\n        this.writeEscapedByteAscending(INFINITY);\n    }\n    /**\n     * Writes the \"infinity\" byte sequence that sorts before all other byte\n     * sequences written in descending order.\n     */\n    writeInfinityDescending() {\n        this.writeEscapedByteDescending(ESCAPE2);\n        this.writeEscapedByteDescending(INFINITY);\n    }\n    /**\n     * Resets the buffer such that it is the same as when it was newly\n     * constructed.\n     */\n    reset() {\n        this.position = 0;\n    }\n    seed(encodedBytes) {\n        this.ensureAvailable(encodedBytes.length);\n        this.buffer.set(encodedBytes, this.position);\n        this.position += encodedBytes.length;\n    }\n    /** Makes a copy of the encoded bytes in this buffer.  */\n    encodedBytes() {\n        return this.buffer.slice(0, this.position);\n    }\n    /**\n     * Encodes `val` into an encoding so that the order matches the IEEE 754\n     * floating-point comparison results with the following exceptions:\n     *   -0.0 < 0.0\n     *   all non-NaN < NaN\n     *   NaN = NaN\n     */\n    toOrderedBits(val) {\n        const value = doubleToLongBits(val);\n        // Check if the first bit is set. We use a bit mask since value[0] is\n        // encoded as a number from 0 to 255.\n        const isNegative = (value[0] & 0x80) !== 0;\n        // Revert the two complement to get natural ordering\n        value[0] ^= isNegative ? 0xff : 0x80;\n        for (let i = 1; i < value.length; ++i) {\n            value[i] ^= isNegative ? 0xff : 0x00;\n        }\n        return value;\n    }\n    /** Writes a single byte ascending to the buffer. */\n    writeByteAscending(b) {\n        const masked = b & 0xff;\n        if (masked === ESCAPE1) {\n            this.writeEscapedByteAscending(ESCAPE1);\n            this.writeEscapedByteAscending(NULL_BYTE);\n        }\n        else if (masked === ESCAPE2) {\n            this.writeEscapedByteAscending(ESCAPE2);\n            this.writeEscapedByteAscending(FF_BYTE);\n        }\n        else {\n            this.writeEscapedByteAscending(masked);\n        }\n    }\n    /** Writes a single byte descending to the buffer.  */\n    writeByteDescending(b) {\n        const masked = b & 0xff;\n        if (masked === ESCAPE1) {\n            this.writeEscapedByteDescending(ESCAPE1);\n            this.writeEscapedByteDescending(NULL_BYTE);\n        }\n        else if (masked === ESCAPE2) {\n            this.writeEscapedByteDescending(ESCAPE2);\n            this.writeEscapedByteDescending(FF_BYTE);\n        }\n        else {\n            this.writeEscapedByteDescending(b);\n        }\n    }\n    writeSeparatorAscending() {\n        this.writeEscapedByteAscending(ESCAPE1);\n        this.writeEscapedByteAscending(SEPARATOR);\n    }\n    writeSeparatorDescending() {\n        this.writeEscapedByteDescending(ESCAPE1);\n        this.writeEscapedByteDescending(SEPARATOR);\n    }\n    writeEscapedByteAscending(b) {\n        this.ensureAvailable(1);\n        this.buffer[this.position++] = b;\n    }\n    writeEscapedByteDescending(b) {\n        this.ensureAvailable(1);\n        this.buffer[this.position++] = ~b;\n    }\n    ensureAvailable(bytes) {\n        const minCapacity = bytes + this.position;\n        if (minCapacity <= this.buffer.length) {\n            return;\n        }\n        // Try doubling.\n        let newLength = this.buffer.length * 2;\n        // Still not big enough? Just allocate the right size.\n        if (newLength < minCapacity) {\n            newLength = minCapacity;\n        }\n        // Create the new buffer.\n        const newBuffer = new Uint8Array(newLength);\n        newBuffer.set(this.buffer); // copy old data\n        this.buffer = newBuffer;\n    }\n}\n\nclass AscendingIndexByteEncoder {\n    constructor(orderedCode) {\n        this.orderedCode = orderedCode;\n    }\n    writeBytes(value) {\n        this.orderedCode.writeBytesAscending(value);\n    }\n    writeString(value) {\n        this.orderedCode.writeUtf8Ascending(value);\n    }\n    writeNumber(value) {\n        this.orderedCode.writeNumberAscending(value);\n    }\n    writeInfinity() {\n        this.orderedCode.writeInfinityAscending();\n    }\n}\nclass DescendingIndexByteEncoder {\n    constructor(orderedCode) {\n        this.orderedCode = orderedCode;\n    }\n    writeBytes(value) {\n        this.orderedCode.writeBytesDescending(value);\n    }\n    writeString(value) {\n        this.orderedCode.writeUtf8Descending(value);\n    }\n    writeNumber(value) {\n        this.orderedCode.writeNumberDescending(value);\n    }\n    writeInfinity() {\n        this.orderedCode.writeInfinityDescending();\n    }\n}\n/**\n * Implements `DirectionalIndexByteEncoder` using `OrderedCodeWriter` for the\n * actual encoding.\n */\nclass IndexByteEncoder {\n    constructor() {\n        this.orderedCode = new OrderedCodeWriter();\n        this.ascending = new AscendingIndexByteEncoder(this.orderedCode);\n        this.descending = new DescendingIndexByteEncoder(this.orderedCode);\n    }\n    seed(encodedBytes) {\n        this.orderedCode.seed(encodedBytes);\n    }\n    forKind(kind) {\n        return kind === 0 /* IndexKind.ASCENDING */ ? this.ascending : this.descending;\n    }\n    encodedBytes() {\n        return this.orderedCode.encodedBytes();\n    }\n    reset() {\n        this.orderedCode.reset();\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Represents an index entry saved by the SDK in persisted storage. */\nclass IndexEntry {\n    constructor(_indexId, _documentKey, _arrayValue, _directionalValue) {\n        this._indexId = _indexId;\n        this._documentKey = _documentKey;\n        this._arrayValue = _arrayValue;\n        this._directionalValue = _directionalValue;\n    }\n    /**\n     * Returns an IndexEntry entry that sorts immediately after the current\n     * directional value.\n     */\n    successor() {\n        const currentLength = this._directionalValue.length;\n        const newLength = currentLength === 0 || this._directionalValue[currentLength - 1] === 255\n            ? currentLength + 1\n            : currentLength;\n        const successor = new Uint8Array(newLength);\n        successor.set(this._directionalValue, 0);\n        if (newLength !== currentLength) {\n            successor.set([0], this._directionalValue.length);\n        }\n        else {\n            ++successor[successor.length - 1];\n        }\n        return new IndexEntry(this._indexId, this._documentKey, this._arrayValue, successor);\n    }\n    // Create a representation of the Index Entry as a DbIndexEntry\n    dbIndexEntry(uid, orderedDocumentKey, documentKey) {\n        return {\n            indexId: this._indexId,\n            uid,\n            arrayValue: encodeKeySafeBytes(this._arrayValue),\n            directionalValue: encodeKeySafeBytes(this._directionalValue),\n            orderedDocumentKey: encodeKeySafeBytes(orderedDocumentKey),\n            documentKey: documentKey.path.toArray()\n        };\n    }\n    // Create a representation of the Index Entry as a DbIndexEntryKey\n    dbIndexEntryKey(uid, orderedDocumentKey, documentKey) {\n        const entry = this.dbIndexEntry(uid, orderedDocumentKey, documentKey);\n        return [\n            entry.indexId,\n            entry.uid,\n            entry.arrayValue,\n            entry.directionalValue,\n            entry.orderedDocumentKey,\n            entry.documentKey\n        ];\n    }\n}\nfunction indexEntryComparator(left, right) {\n    let cmp = left._indexId - right._indexId;\n    if (cmp !== 0) {\n        return cmp;\n    }\n    cmp = compareByteArrays(left._arrayValue, right._arrayValue);\n    if (cmp !== 0) {\n        return cmp;\n    }\n    cmp = compareByteArrays(left._directionalValue, right._directionalValue);\n    if (cmp !== 0) {\n        return cmp;\n    }\n    return DocumentKey.comparator(left._documentKey, right._documentKey);\n}\nfunction compareByteArrays(left, right) {\n    for (let i = 0; i < left.length && i < right.length; ++i) {\n        const compare = left[i] - right[i];\n        if (compare !== 0) {\n            return compare;\n        }\n    }\n    return left.length - right.length;\n}\n/**\n * Workaround for WebKit bug: https://bugs.webkit.org/show_bug.cgi?id=292721\n * Create a key safe representation of Uint8Array values.\n * If the browser is detected as Safari or WebKit, then\n * the input array will be converted to \"sortable byte string\".\n * Otherwise, the input array will be returned in its original type.\n */\nfunction encodeKeySafeBytes(array) {\n    if (isSafariOrWebkit()) {\n        return encodeUint8ArrayToSortableString(array);\n    }\n    return array;\n}\n/**\n * Reverts the key safe representation of Uint8Array (created by\n * encodeKeySafeBytes) to a normal Uint8Array.\n */\nfunction decodeKeySafeBytes(input) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n    return decodeSortableStringToUint8Array(input);\n}\n/**\n * Encodes a Uint8Array into a \"sortable byte string\".\n * A \"sortable byte string\" sorts in the same order as the Uint8Array.\n * This works because JS string comparison sorts strings based on code points.\n */\nfunction encodeUint8ArrayToSortableString(array) {\n    let byteString = '';\n    for (let i = 0; i < array.length; i++) {\n        byteString += String.fromCharCode(array[i]);\n    }\n    return byteString;\n}\n/**\n * Decodes a \"sortable byte string\" back into a Uint8Array.\n * A \"sortable byte string\" is assumed to be created where each character's\n * Unicode code point directly corresponds to a single byte value (0-255).\n */\nfunction decodeSortableStringToUint8Array(byteString) {\n    const uint8array = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n        uint8array[i] = byteString.charCodeAt(i);\n    }\n    return uint8array;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A light query planner for Firestore.\n *\n * This class matches a `FieldIndex` against a Firestore Query `Target`. It\n * determines whether a given index can be used to serve the specified target.\n *\n * The following table showcases some possible index configurations:\n *\n * Query                                               | Index\n * -----------------------------------------------------------------------------\n * where('a', '==', 'a').where('b', '==', 'b')         | a ASC, b DESC\n * where('a', '==', 'a').where('b', '==', 'b')         | a ASC\n * where('a', '==', 'a').where('b', '==', 'b')         | b DESC\n * where('a', '>=', 'a').orderBy('a')                  | a ASC\n * where('a', '>=', 'a').orderBy('a', 'desc')          | a DESC\n * where('a', '>=', 'a').orderBy('a').orderBy('b')     | a ASC, b ASC\n * where('a', '>=', 'a').orderBy('a').orderBy('b')     | a ASC\n * where('a', 'array-contains', 'a').orderBy('b')      | a CONTAINS, b ASCENDING\n * where('a', 'array-contains', 'a').orderBy('b')      | a CONTAINS\n */\nclass TargetIndexMatcher {\n    constructor(target) {\n        // The inequality filters of the target (if it exists).\n        // Note: The sort on FieldFilters is not required. Using SortedSet here just to utilize the custom\n        // comparator.\n        this.inequalityFilters = new SortedSet((lhs, rhs) => FieldPath$1.comparator(lhs.field, rhs.field));\n        this.collectionId =\n            target.collectionGroup != null\n                ? target.collectionGroup\n                : target.path.lastSegment();\n        this.orderBys = target.orderBy;\n        this.equalityFilters = [];\n        for (const filter of target.filters) {\n            const fieldFilter = filter;\n            if (fieldFilter.isInequality()) {\n                this.inequalityFilters = this.inequalityFilters.add(fieldFilter);\n            }\n            else {\n                this.equalityFilters.push(fieldFilter);\n            }\n        }\n    }\n    get hasMultipleInequality() {\n        return this.inequalityFilters.size > 1;\n    }\n    /**\n     * Returns whether the index can be used to serve the TargetIndexMatcher's\n     * target.\n     *\n     * An index is considered capable of serving the target when:\n     * - The target uses all index segments for its filters and orderBy clauses.\n     *   The target can have additional filter and orderBy clauses, but not\n     *   fewer.\n     * - If an ArrayContains/ArrayContainsAnyfilter is used, the index must also\n     *   have a corresponding `CONTAINS` segment.\n     * - All directional index segments can be mapped to the target as a series of\n     *   equality filters, a single inequality filter and a series of orderBy\n     *   clauses.\n     * - The segments that represent the equality filters may appear out of order.\n     * - The optional segment for the inequality filter must appear after all\n     *   equality segments.\n     * - The segments that represent that orderBy clause of the target must appear\n     *   in order after all equality and inequality segments. Single orderBy\n     *   clauses cannot be skipped, but a continuous orderBy suffix may be\n     *   omitted.\n     */\n    servedByIndex(index) {\n        hardAssert(index.collectionGroup === this.collectionId, 0xc07f);\n        if (this.hasMultipleInequality) {\n            // Only single inequality is supported for now.\n            // TODO(Add support for multiple inequality query): b/298441043\n            return false;\n        }\n        // If there is an array element, find a matching filter.\n        const arraySegment = fieldIndexGetArraySegment(index);\n        if (arraySegment !== undefined &&\n            !this.hasMatchingEqualityFilter(arraySegment)) {\n            return false;\n        }\n        const segments = fieldIndexGetDirectionalSegments(index);\n        let equalitySegments = new Set();\n        let segmentIndex = 0;\n        let orderBysIndex = 0;\n        // Process all equalities first. Equalities can appear out of order.\n        for (; segmentIndex < segments.length; ++segmentIndex) {\n            // We attempt to greedily match all segments to equality filters. If a\n            // filter matches an index segment, we can mark the segment as used.\n            if (this.hasMatchingEqualityFilter(segments[segmentIndex])) {\n                equalitySegments = equalitySegments.add(segments[segmentIndex].fieldPath.canonicalString());\n            }\n            else {\n                // If we cannot find a matching filter, we need to verify whether the\n                // remaining segments map to the target's inequality and its orderBy\n                // clauses.\n                break;\n            }\n        }\n        // If we already have processed all segments, all segments are used to serve\n        // the equality filters and we do not need to map any segments to the\n        // target's inequality and orderBy clauses.\n        if (segmentIndex === segments.length) {\n            return true;\n        }\n        if (this.inequalityFilters.size > 0) {\n            // Only a single inequality is currently supported. Get the only entry in the set.\n            const inequalityFilter = this.inequalityFilters.getIterator().getNext();\n            // If there is an inequality filter and the field was not in one of the\n            // equality filters above, the next segment must match both the filter\n            // and the first orderBy clause.\n            if (!equalitySegments.has(inequalityFilter.field.canonicalString())) {\n                const segment = segments[segmentIndex];\n                if (!this.matchesFilter(inequalityFilter, segment) ||\n                    !this.matchesOrderBy(this.orderBys[orderBysIndex++], segment)) {\n                    return false;\n                }\n            }\n            ++segmentIndex;\n        }\n        // All remaining segments need to represent the prefix of the target's\n        // orderBy.\n        for (; segmentIndex < segments.length; ++segmentIndex) {\n            const segment = segments[segmentIndex];\n            if (orderBysIndex >= this.orderBys.length ||\n                !this.matchesOrderBy(this.orderBys[orderBysIndex++], segment)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns a full matched field index for this target. Currently multiple\n     * inequality query is not supported so function returns null.\n     */\n    buildTargetIndex() {\n        if (this.hasMultipleInequality) {\n            return null;\n        }\n        // We want to make sure only one segment created for one field. For example,\n        // in case like a == 3 and a > 2, Index {a ASCENDING} will only be created\n        // once.\n        let uniqueFields = new SortedSet(FieldPath$1.comparator);\n        const segments = [];\n        for (const filter of this.equalityFilters) {\n            if (filter.field.isKeyField()) {\n                continue;\n            }\n            const isArrayOperator = filter.op === \"array-contains\" /* Operator.ARRAY_CONTAINS */ ||\n                filter.op === \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */;\n            if (isArrayOperator) {\n                segments.push(new IndexSegment(filter.field, 2 /* IndexKind.CONTAINS */));\n            }\n            else {\n                if (uniqueFields.has(filter.field)) {\n                    continue;\n                }\n                uniqueFields = uniqueFields.add(filter.field);\n                segments.push(new IndexSegment(filter.field, 0 /* IndexKind.ASCENDING */));\n            }\n        }\n        // Note: We do not explicitly check `this.inequalityFilter` but rather rely\n        // on the target defining an appropriate \"order by\" to ensure that the\n        // required index segment is added. The query engine would reject a query\n        // with an inequality filter that lacks the required order-by clause.\n        for (const orderBy of this.orderBys) {\n            // Stop adding more segments if we see a order-by on key. Typically this\n            // is the default implicit order-by which is covered in the index_entry\n            // table as a separate column. If it is not the default order-by, the\n            // generated index will be missing some segments optimized for order-bys,\n            // which is probably fine.\n            if (orderBy.field.isKeyField()) {\n                continue;\n            }\n            if (uniqueFields.has(orderBy.field)) {\n                continue;\n            }\n            uniqueFields = uniqueFields.add(orderBy.field);\n            segments.push(new IndexSegment(orderBy.field, orderBy.dir === \"asc\" /* Direction.ASCENDING */\n                ? 0 /* IndexKind.ASCENDING */\n                : 1 /* IndexKind.DESCENDING */));\n        }\n        return new FieldIndex(FieldIndex.UNKNOWN_ID, this.collectionId, segments, IndexState.empty());\n    }\n    hasMatchingEqualityFilter(segment) {\n        for (const filter of this.equalityFilters) {\n            if (this.matchesFilter(filter, segment)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    matchesFilter(filter, segment) {\n        if (filter === undefined || !filter.field.isEqual(segment.fieldPath)) {\n            return false;\n        }\n        const isArrayOperator = filter.op === \"array-contains\" /* Operator.ARRAY_CONTAINS */ ||\n            filter.op === \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */;\n        return (segment.kind === 2 /* IndexKind.CONTAINS */) === isArrayOperator;\n    }\n    matchesOrderBy(orderBy, segment) {\n        if (!orderBy.field.isEqual(segment.fieldPath)) {\n            return false;\n        }\n        return ((segment.kind === 0 /* IndexKind.ASCENDING */ &&\n            orderBy.dir === \"asc\" /* Direction.ASCENDING */) ||\n            (segment.kind === 1 /* IndexKind.DESCENDING */ &&\n                orderBy.dir === \"desc\" /* Direction.DESCENDING */));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides utility functions that help with boolean logic transformations needed for handling\n * complex filters used in queries.\n */\n/**\n * The `in` filter is only a syntactic sugar over a disjunction of equalities. For instance: `a in\n * [1,2,3]` is in fact `a==1 || a==2 || a==3`. This method expands any `in` filter in the given\n * input into a disjunction of equality filters and returns the expanded filter.\n */\nfunction computeInExpansion(filter) {\n    var _a, _b;\n    hardAssert(filter instanceof FieldFilter || filter instanceof CompositeFilter, 0x4e2c);\n    if (filter instanceof FieldFilter) {\n        if (filter instanceof InFilter) {\n            const expandedFilters = ((_b = (_a = filter.value.arrayValue) === null || _a === void 0 ? void 0 : _a.values) === null || _b === void 0 ? void 0 : _b.map(value => FieldFilter.create(filter.field, \"==\" /* Operator.EQUAL */, value))) || [];\n            return CompositeFilter.create(expandedFilters, \"or\" /* CompositeOperator.OR */);\n        }\n        else {\n            // We have reached other kinds of field filters.\n            return filter;\n        }\n    }\n    // We have a composite filter.\n    const expandedFilters = filter.filters.map(subfilter => computeInExpansion(subfilter));\n    return CompositeFilter.create(expandedFilters, filter.op);\n}\n/**\n * Given a composite filter, returns the list of terms in its disjunctive normal form.\n *\n * <p>Each element in the return value is one term of the resulting DNF. For instance: For the\n * input: (A || B) && C, the DNF form is: (A && C) || (B && C), and the return value is a list\n * with two elements: a composite filter that performs (A && C), and a composite filter that\n * performs (B && C).\n *\n * @param filter the composite filter to calculate DNF transform for.\n * @return the terms in the DNF transform.\n */\nfunction getDnfTerms(filter) {\n    if (filter.getFilters().length === 0) {\n        return [];\n    }\n    const result = computeDistributedNormalForm(computeInExpansion(filter));\n    hardAssert(isDisjunctiveNormalForm(result), 0x1cdf);\n    if (isSingleFieldFilter(result) || isFlatConjunction(result)) {\n        return [result];\n    }\n    return result.getFilters();\n}\n/** Returns true if the given filter is a single field filter. e.g. (a == 10). */\nfunction isSingleFieldFilter(filter) {\n    return filter instanceof FieldFilter;\n}\n/**\n * Returns true if the given filter is the conjunction of one or more field filters. e.g. (a == 10\n * && b == 20)\n */\nfunction isFlatConjunction(filter) {\n    return (filter instanceof CompositeFilter &&\n        compositeFilterIsFlatConjunction(filter));\n}\n/**\n * Returns whether or not the given filter is in disjunctive normal form (DNF).\n *\n * <p>In boolean logic, a disjunctive normal form (DNF) is a canonical normal form of a logical\n * formula consisting of a disjunction of conjunctions; it can also be described as an OR of ANDs.\n *\n * <p>For more info, visit: https://en.wikipedia.org/wiki/Disjunctive_normal_form\n */\nfunction isDisjunctiveNormalForm(filter) {\n    return (isSingleFieldFilter(filter) ||\n        isFlatConjunction(filter) ||\n        isDisjunctionOfFieldFiltersAndFlatConjunctions(filter));\n}\n/**\n * Returns true if the given filter is the disjunction of one or more \"flat conjunctions\" and\n * field filters. e.g. (a == 10) || (b==20 && c==30)\n */\nfunction isDisjunctionOfFieldFiltersAndFlatConjunctions(filter) {\n    if (filter instanceof CompositeFilter) {\n        if (compositeFilterIsDisjunction(filter)) {\n            for (const subFilter of filter.getFilters()) {\n                if (!isSingleFieldFilter(subFilter) && !isFlatConjunction(subFilter)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction computeDistributedNormalForm(filter) {\n    hardAssert(filter instanceof FieldFilter || filter instanceof CompositeFilter, 0x84e2);\n    if (filter instanceof FieldFilter) {\n        return filter;\n    }\n    if (filter.filters.length === 1) {\n        return computeDistributedNormalForm(filter.filters[0]);\n    }\n    // Compute DNF for each of the subfilters first\n    const result = filter.filters.map(subfilter => computeDistributedNormalForm(subfilter));\n    let newFilter = CompositeFilter.create(result, filter.op);\n    newFilter = applyAssociation(newFilter);\n    if (isDisjunctiveNormalForm(newFilter)) {\n        return newFilter;\n    }\n    hardAssert(newFilter instanceof CompositeFilter, 0xfbf2);\n    hardAssert(compositeFilterIsConjunction(newFilter), 0x9d3b);\n    hardAssert(newFilter.filters.length > 1, 0xe247);\n    return newFilter.filters.reduce((runningResult, filter) => applyDistribution(runningResult, filter));\n}\nfunction applyDistribution(lhs, rhs) {\n    hardAssert(lhs instanceof FieldFilter || lhs instanceof CompositeFilter, 0x95f4);\n    hardAssert(rhs instanceof FieldFilter || rhs instanceof CompositeFilter, 0x6381);\n    let result;\n    if (lhs instanceof FieldFilter) {\n        if (rhs instanceof FieldFilter) {\n            // FieldFilter FieldFilter\n            result = applyDistributionFieldFilters(lhs, rhs);\n        }\n        else {\n            // FieldFilter CompositeFilter\n            result = applyDistributionFieldAndCompositeFilters(lhs, rhs);\n        }\n    }\n    else {\n        if (rhs instanceof FieldFilter) {\n            // CompositeFilter FieldFilter\n            result = applyDistributionFieldAndCompositeFilters(rhs, lhs);\n        }\n        else {\n            // CompositeFilter CompositeFilter\n            result = applyDistributionCompositeFilters(lhs, rhs);\n        }\n    }\n    return applyAssociation(result);\n}\nfunction applyDistributionFieldFilters(lhs, rhs) {\n    // Conjunction distribution for two field filters is the conjunction of them.\n    return CompositeFilter.create([lhs, rhs], \"and\" /* CompositeOperator.AND */);\n}\nfunction applyDistributionCompositeFilters(lhs, rhs) {\n    hardAssert(lhs.filters.length > 0 && rhs.filters.length > 0, 0xbb85);\n    // There are four cases:\n    // (A & B) & (C & D) --> (A & B & C & D)\n    // (A & B) & (C | D) --> (A & B & C) | (A & B & D)\n    // (A | B) & (C & D) --> (C & D & A) | (C & D & B)\n    // (A | B) & (C | D) --> (A & C) | (A & D) | (B & C) | (B & D)\n    // Case 1 is a merge.\n    if (compositeFilterIsConjunction(lhs) && compositeFilterIsConjunction(rhs)) {\n        return compositeFilterWithAddedFilters(lhs, rhs.getFilters());\n    }\n    // Case 2,3,4 all have at least one side (lhs or rhs) that is a disjunction. In all three cases\n    // we should take each element of the disjunction and distribute it over the other side, and\n    // return the disjunction of the distribution results.\n    const disjunctionSide = compositeFilterIsDisjunction(lhs) ? lhs : rhs;\n    const otherSide = compositeFilterIsDisjunction(lhs) ? rhs : lhs;\n    const results = disjunctionSide.filters.map(subfilter => applyDistribution(subfilter, otherSide));\n    return CompositeFilter.create(results, \"or\" /* CompositeOperator.OR */);\n}\nfunction applyDistributionFieldAndCompositeFilters(fieldFilter, compositeFilter) {\n    // There are two cases:\n    // A & (B & C) --> (A & B & C)\n    // A & (B | C) --> (A & B) | (A & C)\n    if (compositeFilterIsConjunction(compositeFilter)) {\n        // Case 1\n        return compositeFilterWithAddedFilters(compositeFilter, fieldFilter.getFilters());\n    }\n    else {\n        // Case 2\n        const newFilters = compositeFilter.filters.map(subfilter => applyDistribution(fieldFilter, subfilter));\n        return CompositeFilter.create(newFilters, \"or\" /* CompositeOperator.OR */);\n    }\n}\n/**\n * Applies the associativity property to the given filter and returns the resulting filter.\n *\n * <ul>\n *   <li>A | (B | C) == (A | B) | C == (A | B | C)\n *   <li>A & (B & C) == (A & B) & C == (A & B & C)\n * </ul>\n *\n * <p>For more info, visit: https://en.wikipedia.org/wiki/Associative_property#Propositional_logic\n */\nfunction applyAssociation(filter) {\n    hardAssert(filter instanceof FieldFilter || filter instanceof CompositeFilter, 0x2e4a);\n    if (filter instanceof FieldFilter) {\n        return filter;\n    }\n    const filters = filter.getFilters();\n    // If the composite filter only contains 1 filter, apply associativity to it.\n    if (filters.length === 1) {\n        return applyAssociation(filters[0]);\n    }\n    // Associativity applied to a flat composite filter results is itself.\n    if (compositeFilterIsFlat(filter)) {\n        return filter;\n    }\n    // First apply associativity to all subfilters. This will in turn recursively apply\n    // associativity to all nested composite filters and field filters.\n    const updatedFilters = filters.map(subfilter => applyAssociation(subfilter));\n    // For composite subfilters that perform the same kind of logical operation as `compositeFilter`\n    // take out their filters and add them to `compositeFilter`. For example:\n    // compositeFilter = (A | (B | C | D))\n    // compositeSubfilter = (B | C | D)\n    // Result: (A | B | C | D)\n    // Note that the `compositeSubfilter` has been eliminated, and its filters (B, C, D) have been\n    // added to the top-level \"compositeFilter\".\n    const newSubfilters = [];\n    updatedFilters.forEach(subfilter => {\n        if (subfilter instanceof FieldFilter) {\n            newSubfilters.push(subfilter);\n        }\n        else if (subfilter instanceof CompositeFilter) {\n            if (subfilter.op === filter.op) {\n                // compositeFilter: (A | (B | C))\n                // compositeSubfilter: (B | C)\n                // Result: (A | B | C)\n                newSubfilters.push(...subfilter.filters);\n            }\n            else {\n                // compositeFilter: (A | (B & C))\n                // compositeSubfilter: (B & C)\n                // Result: (A | (B & C))\n                newSubfilters.push(subfilter);\n            }\n        }\n    });\n    if (newSubfilters.length === 1) {\n        return newSubfilters[0];\n    }\n    return CompositeFilter.create(newSubfilters, filter.op);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory implementation of IndexManager.\n */\nclass MemoryIndexManager {\n    constructor() {\n        this.collectionParentIndex = new MemoryCollectionParentIndex();\n    }\n    addToCollectionParentIndex(transaction, collectionPath) {\n        this.collectionParentIndex.add(collectionPath);\n        return PersistencePromise.resolve();\n    }\n    getCollectionParents(transaction, collectionId) {\n        return PersistencePromise.resolve(this.collectionParentIndex.getEntries(collectionId));\n    }\n    addFieldIndex(transaction, index) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve();\n    }\n    deleteFieldIndex(transaction, index) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve();\n    }\n    deleteAllFieldIndexes(transaction) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve();\n    }\n    createTargetIndexes(transaction, target) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve();\n    }\n    getDocumentsMatchingTarget(transaction, target) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve(null);\n    }\n    getIndexType(transaction, target) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve(0 /* IndexType.NONE */);\n    }\n    getFieldIndexes(transaction, collectionGroup) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve([]);\n    }\n    getNextCollectionGroupToUpdate(transaction) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve(null);\n    }\n    getMinOffset(transaction, target) {\n        return PersistencePromise.resolve(IndexOffset.min());\n    }\n    getMinOffsetFromCollectionGroup(transaction, collectionGroup) {\n        return PersistencePromise.resolve(IndexOffset.min());\n    }\n    updateCollectionGroup(transaction, collectionGroup, offset) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve();\n    }\n    updateIndexEntries(transaction, documents) {\n        // Field indices are not supported with memory persistence.\n        return PersistencePromise.resolve();\n    }\n}\n/**\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\n * in indexeddb_schema.ts\n */\nclass MemoryCollectionParentIndex {\n    constructor() {\n        this.index = {};\n    }\n    // Returns false if the entry already existed.\n    add(collectionPath) {\n        const collectionId = collectionPath.lastSegment();\n        const parentPath = collectionPath.popLast();\n        const existingParents = this.index[collectionId] ||\n            new SortedSet(ResourcePath.comparator);\n        const added = !existingParents.has(parentPath);\n        this.index[collectionId] = existingParents.add(parentPath);\n        return added;\n    }\n    has(collectionPath) {\n        const collectionId = collectionPath.lastSegment();\n        const parentPath = collectionPath.popLast();\n        const existingParents = this.index[collectionId];\n        return existingParents && existingParents.has(parentPath);\n    }\n    getEntries(collectionId) {\n        const parentPaths = this.index[collectionId] ||\n            new SortedSet(ResourcePath.comparator);\n        return parentPaths.toArray();\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$f = 'IndexedDbIndexManager';\nconst EMPTY_VALUE = new Uint8Array(0);\n/**\n * A persisted implementation of IndexManager.\n *\n * PORTING NOTE: Unlike iOS and Android, the Web SDK does not memoize index\n * data as it supports multi-tab access.\n */\nclass IndexedDbIndexManager {\n    constructor(user, databaseId) {\n        this.databaseId = databaseId;\n        /**\n         * An in-memory copy of the index entries we've already written since the SDK\n         * launched. Used to avoid re-writing the same entry repeatedly.\n         *\n         * This is *NOT* a complete cache of what's in persistence and so can never be\n         * used to satisfy reads.\n         */\n        this.collectionParentsCache = new MemoryCollectionParentIndex();\n        /**\n         * Maps from a target to its equivalent list of sub-targets. Each sub-target\n         * contains only one term from the target's disjunctive normal form (DNF).\n         */\n        this.targetToDnfSubTargets = new ObjectMap(t => canonifyTarget(t), (l, r) => targetEquals(l, r));\n        this.uid = user.uid || '';\n    }\n    /**\n     * Adds a new entry to the collection parent index.\n     *\n     * Repeated calls for the same collectionPath should be avoided within a\n     * transaction as IndexedDbIndexManager only caches writes once a transaction\n     * has been committed.\n     */\n    addToCollectionParentIndex(transaction, collectionPath) {\n        if (!this.collectionParentsCache.has(collectionPath)) {\n            const collectionId = collectionPath.lastSegment();\n            const parentPath = collectionPath.popLast();\n            transaction.addOnCommittedListener(() => {\n                // Add the collection to the in memory cache only if the transaction was\n                // successfully committed.\n                this.collectionParentsCache.add(collectionPath);\n            });\n            const collectionParent = {\n                collectionId,\n                parent: encodeResourcePath(parentPath)\n            };\n            return collectionParentsStore(transaction).put(collectionParent);\n        }\n        return PersistencePromise.resolve();\n    }\n    getCollectionParents(transaction, collectionId) {\n        const parentPaths = [];\n        const range = IDBKeyRange.bound([collectionId, ''], [immediateSuccessor(collectionId), ''], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        return collectionParentsStore(transaction)\n            .loadAll(range)\n            .next(entries => {\n            for (const entry of entries) {\n                // This collectionId guard shouldn't be necessary (and isn't as long\n                // as we're running in a real browser), but there's a bug in\n                // indexeddbshim that breaks our range in our tests running in node:\n                // https://github.com/axemclion/IndexedDBShim/issues/334\n                if (entry.collectionId !== collectionId) {\n                    break;\n                }\n                parentPaths.push(decodeResourcePath(entry.parent));\n            }\n            return parentPaths;\n        });\n    }\n    addFieldIndex(transaction, index) {\n        // TODO(indexing): Verify that the auto-incrementing index ID works in\n        // Safari & Firefox.\n        const indexes = indexConfigurationStore(transaction);\n        const dbIndex = toDbIndexConfiguration(index);\n        delete dbIndex.indexId; // `indexId` is auto-populated by IndexedDb\n        const result = indexes.add(dbIndex);\n        if (index.indexState) {\n            const states = indexStateStore(transaction);\n            return result.next(indexId => {\n                states.put(toDbIndexState(indexId, this.uid, index.indexState.sequenceNumber, index.indexState.offset));\n            });\n        }\n        else {\n            return result.next();\n        }\n    }\n    deleteFieldIndex(transaction, index) {\n        const indexes = indexConfigurationStore(transaction);\n        const states = indexStateStore(transaction);\n        const entries = indexEntriesStore(transaction);\n        return indexes\n            .delete(index.indexId)\n            .next(() => states.delete(IDBKeyRange.bound([index.indexId], [index.indexId + 1], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true)))\n            .next(() => entries.delete(IDBKeyRange.bound([index.indexId], [index.indexId + 1], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true)));\n    }\n    deleteAllFieldIndexes(transaction) {\n        const indexes = indexConfigurationStore(transaction);\n        const entries = indexEntriesStore(transaction);\n        const states = indexStateStore(transaction);\n        return indexes\n            .deleteAll()\n            .next(() => entries.deleteAll())\n            .next(() => states.deleteAll());\n    }\n    createTargetIndexes(transaction, target) {\n        return PersistencePromise.forEach(this.getSubTargets(target), (subTarget) => {\n            return this.getIndexType(transaction, subTarget).next(type => {\n                if (type === 0 /* IndexType.NONE */ || type === 1 /* IndexType.PARTIAL */) {\n                    const targetIndexMatcher = new TargetIndexMatcher(subTarget);\n                    const fieldIndex = targetIndexMatcher.buildTargetIndex();\n                    if (fieldIndex != null) {\n                        return this.addFieldIndex(transaction, fieldIndex);\n                    }\n                }\n            });\n        });\n    }\n    getDocumentsMatchingTarget(transaction, target) {\n        const indexEntries = indexEntriesStore(transaction);\n        let canServeTarget = true;\n        const indexes = new Map();\n        return PersistencePromise.forEach(this.getSubTargets(target), (subTarget) => {\n            return this.getFieldIndex(transaction, subTarget).next(index => {\n                canServeTarget && (canServeTarget = !!index);\n                indexes.set(subTarget, index);\n            });\n        }).next(() => {\n            if (!canServeTarget) {\n                return PersistencePromise.resolve(null);\n            }\n            else {\n                let existingKeys = documentKeySet();\n                const result = [];\n                return PersistencePromise.forEach(indexes, (index, subTarget) => {\n                    logDebug(LOG_TAG$f, `Using index ${fieldIndexToString(index)} to execute ${canonifyTarget(target)}`);\n                    const arrayValues = targetGetArrayValues(subTarget, index);\n                    const notInValues = targetGetNotInValues(subTarget, index);\n                    const lowerBound = targetGetLowerBound(subTarget, index);\n                    const upperBound = targetGetUpperBound(subTarget, index);\n                    const lowerBoundEncoded = this.encodeBound(index, subTarget, lowerBound);\n                    const upperBoundEncoded = this.encodeBound(index, subTarget, upperBound);\n                    const notInEncoded = this.encodeValues(index, subTarget, notInValues);\n                    const indexRanges = this.generateIndexRanges(index.indexId, arrayValues, lowerBoundEncoded, lowerBound.inclusive, upperBoundEncoded, upperBound.inclusive, notInEncoded);\n                    return PersistencePromise.forEach(indexRanges, (indexRange) => {\n                        return indexEntries\n                            .loadFirst(indexRange, target.limit)\n                            .next(entries => {\n                            entries.forEach(entry => {\n                                const documentKey = DocumentKey.fromSegments(entry.documentKey);\n                                if (!existingKeys.has(documentKey)) {\n                                    existingKeys = existingKeys.add(documentKey);\n                                    result.push(documentKey);\n                                }\n                            });\n                        });\n                    });\n                }).next(() => result);\n            }\n        });\n    }\n    getSubTargets(target) {\n        let subTargets = this.targetToDnfSubTargets.get(target);\n        if (subTargets) {\n            return subTargets;\n        }\n        if (target.filters.length === 0) {\n            subTargets = [target];\n        }\n        else {\n            // There is an implicit AND operation between all the filters stored in the target\n            const dnf = getDnfTerms(CompositeFilter.create(target.filters, \"and\" /* CompositeOperator.AND */));\n            subTargets = dnf.map(term => newTarget(target.path, target.collectionGroup, target.orderBy, term.getFilters(), target.limit, target.startAt, target.endAt));\n        }\n        this.targetToDnfSubTargets.set(target, subTargets);\n        return subTargets;\n    }\n    /**\n     * Constructs a key range query on `DbIndexEntryStore` that unions all\n     * bounds.\n     */\n    generateIndexRanges(indexId, arrayValues, lowerBounds, lowerBoundInclusive, upperBounds, upperBoundInclusive, notInValues) {\n        // The number of total index scans we union together. This is similar to a\n        // distributed normal form, but adapted for array values. We create a single\n        // index range per value in an ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filter\n        // combined with the values from the query bounds.\n        const totalScans = (arrayValues != null ? arrayValues.length : 1) *\n            Math.max(lowerBounds.length, upperBounds.length);\n        const scansPerArrayElement = totalScans / (arrayValues != null ? arrayValues.length : 1);\n        const indexRanges = [];\n        for (let i = 0; i < totalScans; ++i) {\n            const arrayValue = arrayValues\n                ? this.encodeSingleElement(arrayValues[i / scansPerArrayElement])\n                : EMPTY_VALUE;\n            const lowerBound = this.generateLowerBound(indexId, arrayValue, lowerBounds[i % scansPerArrayElement], lowerBoundInclusive);\n            const upperBound = this.generateUpperBound(indexId, arrayValue, upperBounds[i % scansPerArrayElement], upperBoundInclusive);\n            const notInBound = notInValues.map(notIn => this.generateLowerBound(indexId, arrayValue, notIn, \n            /* inclusive= */ true));\n            indexRanges.push(...this.createRange(lowerBound, upperBound, notInBound));\n        }\n        return indexRanges;\n    }\n    /** Generates the lower bound for `arrayValue` and `directionalValue`. */\n    generateLowerBound(indexId, arrayValue, directionalValue, inclusive) {\n        const entry = new IndexEntry(indexId, DocumentKey.empty(), arrayValue, directionalValue);\n        return inclusive ? entry : entry.successor();\n    }\n    /** Generates the upper bound for `arrayValue` and `directionalValue`. */\n    generateUpperBound(indexId, arrayValue, directionalValue, inclusive) {\n        const entry = new IndexEntry(indexId, DocumentKey.empty(), arrayValue, directionalValue);\n        return inclusive ? entry.successor() : entry;\n    }\n    getFieldIndex(transaction, target) {\n        const targetIndexMatcher = new TargetIndexMatcher(target);\n        const collectionGroup = target.collectionGroup != null\n            ? target.collectionGroup\n            : target.path.lastSegment();\n        return this.getFieldIndexes(transaction, collectionGroup).next(indexes => {\n            // Return the index with the most number of segments.\n            let index = null;\n            for (const candidate of indexes) {\n                const matches = targetIndexMatcher.servedByIndex(candidate);\n                if (matches &&\n                    (!index || candidate.fields.length > index.fields.length)) {\n                    index = candidate;\n                }\n            }\n            return index;\n        });\n    }\n    getIndexType(transaction, target) {\n        let indexType = 2 /* IndexType.FULL */;\n        const subTargets = this.getSubTargets(target);\n        return PersistencePromise.forEach(subTargets, (target) => {\n            return this.getFieldIndex(transaction, target).next(index => {\n                if (!index) {\n                    indexType = 0 /* IndexType.NONE */;\n                }\n                else if (indexType !== 0 /* IndexType.NONE */ &&\n                    index.fields.length < targetGetSegmentCount(target)) {\n                    indexType = 1 /* IndexType.PARTIAL */;\n                }\n            });\n        }).next(() => {\n            // OR queries have more than one sub-target (one sub-target per DNF term). We currently consider\n            // OR queries that have a `limit` to have a partial index. For such queries we perform sorting\n            // and apply the limit in memory as a post-processing step.\n            if (targetHasLimit(target) &&\n                subTargets.length > 1 &&\n                indexType === 2 /* IndexType.FULL */) {\n                return 1 /* IndexType.PARTIAL */;\n            }\n            return indexType;\n        });\n    }\n    /**\n     * Returns the byte encoded form of the directional values in the field index.\n     * Returns `null` if the document does not have all fields specified in the\n     * index.\n     */\n    encodeDirectionalElements(fieldIndex, document) {\n        const encoder = new IndexByteEncoder();\n        for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n            const field = document.data.field(segment.fieldPath);\n            if (field == null) {\n                return null;\n            }\n            const directionalEncoder = encoder.forKind(segment.kind);\n            FirestoreIndexValueWriter.INSTANCE.writeIndexValue(field, directionalEncoder);\n        }\n        return encoder.encodedBytes();\n    }\n    /** Encodes a single value to the ascending index format. */\n    encodeSingleElement(value) {\n        const encoder = new IndexByteEncoder();\n        FirestoreIndexValueWriter.INSTANCE.writeIndexValue(value, encoder.forKind(0 /* IndexKind.ASCENDING */));\n        return encoder.encodedBytes();\n    }\n    /**\n     * Returns an encoded form of the document key that sorts based on the key\n     * ordering of the field index.\n     */\n    encodeDirectionalKey(fieldIndex, documentKey) {\n        const encoder = new IndexByteEncoder();\n        FirestoreIndexValueWriter.INSTANCE.writeIndexValue(refValue(this.databaseId, documentKey), encoder.forKind(fieldIndexGetKeyOrder(fieldIndex)));\n        return encoder.encodedBytes();\n    }\n    /**\n     * Encodes the given field values according to the specification in `target`.\n     * For IN queries, a list of possible values is returned.\n     */\n    encodeValues(fieldIndex, target, values) {\n        if (values === null) {\n            return [];\n        }\n        let encoders = [];\n        encoders.push(new IndexByteEncoder());\n        let valueIdx = 0;\n        for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n            const value = values[valueIdx++];\n            for (const encoder of encoders) {\n                if (this.isInFilter(target, segment.fieldPath) && isArray(value)) {\n                    encoders = this.expandIndexValues(encoders, segment, value);\n                }\n                else {\n                    const directionalEncoder = encoder.forKind(segment.kind);\n                    FirestoreIndexValueWriter.INSTANCE.writeIndexValue(value, directionalEncoder);\n                }\n            }\n        }\n        return this.getEncodedBytes(encoders);\n    }\n    /**\n     * Encodes the given bounds according to the specification in `target`. For IN\n     * queries, a list of possible values is returned.\n     */\n    encodeBound(fieldIndex, target, bound) {\n        return this.encodeValues(fieldIndex, target, bound.position);\n    }\n    /** Returns the byte representation for the provided encoders. */\n    getEncodedBytes(encoders) {\n        const result = [];\n        for (let i = 0; i < encoders.length; ++i) {\n            result[i] = encoders[i].encodedBytes();\n        }\n        return result;\n    }\n    /**\n     * Creates a separate encoder for each element of an array.\n     *\n     * The method appends each value to all existing encoders (e.g. filter(\"a\",\n     * \"==\", \"a1\").filter(\"b\", \"in\", [\"b1\", \"b2\"]) becomes [\"a1,b1\", \"a1,b2\"]). A\n     * list of new encoders is returned.\n     */\n    expandIndexValues(encoders, segment, value) {\n        const prefixes = [...encoders];\n        const results = [];\n        for (const arrayElement of value.arrayValue.values || []) {\n            for (const prefix of prefixes) {\n                const clonedEncoder = new IndexByteEncoder();\n                clonedEncoder.seed(prefix.encodedBytes());\n                FirestoreIndexValueWriter.INSTANCE.writeIndexValue(arrayElement, clonedEncoder.forKind(segment.kind));\n                results.push(clonedEncoder);\n            }\n        }\n        return results;\n    }\n    isInFilter(target, fieldPath) {\n        return !!target.filters.find(f => f instanceof FieldFilter &&\n            f.field.isEqual(fieldPath) &&\n            (f.op === \"in\" /* Operator.IN */ || f.op === \"not-in\" /* Operator.NOT_IN */));\n    }\n    getFieldIndexes(transaction, collectionGroup) {\n        const indexes = indexConfigurationStore(transaction);\n        const states = indexStateStore(transaction);\n        return (collectionGroup\n            ? indexes.loadAll(DbIndexConfigurationCollectionGroupIndex, IDBKeyRange.bound(collectionGroup, collectionGroup))\n            : indexes.loadAll()).next(indexConfigs => {\n            const result = [];\n            return PersistencePromise.forEach(indexConfigs, (indexConfig) => {\n                return states\n                    .get([indexConfig.indexId, this.uid])\n                    .next(indexState => {\n                    result.push(fromDbIndexConfiguration(indexConfig, indexState));\n                });\n            }).next(() => result);\n        });\n    }\n    getNextCollectionGroupToUpdate(transaction) {\n        return this.getFieldIndexes(transaction).next(indexes => {\n            if (indexes.length === 0) {\n                return null;\n            }\n            indexes.sort((l, r) => {\n                const cmp = l.indexState.sequenceNumber - r.indexState.sequenceNumber;\n                return cmp !== 0\n                    ? cmp\n                    : primitiveComparator(l.collectionGroup, r.collectionGroup);\n            });\n            return indexes[0].collectionGroup;\n        });\n    }\n    updateCollectionGroup(transaction, collectionGroup, offset) {\n        const indexes = indexConfigurationStore(transaction);\n        const states = indexStateStore(transaction);\n        return this.getNextSequenceNumber(transaction).next(nextSequenceNumber => indexes\n            .loadAll(DbIndexConfigurationCollectionGroupIndex, IDBKeyRange.bound(collectionGroup, collectionGroup))\n            .next(configs => PersistencePromise.forEach(configs, (config) => states.put(toDbIndexState(config.indexId, this.uid, nextSequenceNumber, offset)))));\n    }\n    updateIndexEntries(transaction, documents) {\n        // Porting Note: `getFieldIndexes()` on Web does not cache index lookups as\n        // it could be used across different IndexedDB transactions. As any cached\n        // data might be invalidated by other multi-tab clients, we can only trust\n        // data within a single IndexedDB transaction. We therefore add a cache\n        // here.\n        const memoizedIndexes = new Map();\n        return PersistencePromise.forEach(documents, (key, doc) => {\n            const memoizedCollectionIndexes = memoizedIndexes.get(key.collectionGroup);\n            const fieldIndexes = memoizedCollectionIndexes\n                ? PersistencePromise.resolve(memoizedCollectionIndexes)\n                : this.getFieldIndexes(transaction, key.collectionGroup);\n            return fieldIndexes.next(fieldIndexes => {\n                memoizedIndexes.set(key.collectionGroup, fieldIndexes);\n                return PersistencePromise.forEach(fieldIndexes, (fieldIndex) => {\n                    return this.getExistingIndexEntries(transaction, key, fieldIndex).next(existingEntries => {\n                        const newEntries = this.computeIndexEntries(doc, fieldIndex);\n                        if (!existingEntries.isEqual(newEntries)) {\n                            return this.updateEntries(transaction, doc, fieldIndex, existingEntries, newEntries);\n                        }\n                        return PersistencePromise.resolve();\n                    });\n                });\n            });\n        });\n    }\n    addIndexEntry(transaction, document, fieldIndex, indexEntry) {\n        const indexEntries = indexEntriesStore(transaction);\n        return indexEntries.put(indexEntry.dbIndexEntry(this.uid, this.encodeDirectionalKey(fieldIndex, document.key), document.key));\n    }\n    deleteIndexEntry(transaction, document, fieldIndex, indexEntry) {\n        const indexEntries = indexEntriesStore(transaction);\n        return indexEntries.delete(indexEntry.dbIndexEntryKey(this.uid, this.encodeDirectionalKey(fieldIndex, document.key), document.key));\n    }\n    getExistingIndexEntries(transaction, documentKey, fieldIndex) {\n        const indexEntries = indexEntriesStore(transaction);\n        let results = new SortedSet(indexEntryComparator);\n        return indexEntries\n            .iterate({\n            index: DbIndexEntryDocumentKeyIndex,\n            range: IDBKeyRange.only([\n                fieldIndex.indexId,\n                this.uid,\n                encodeKeySafeBytes(this.encodeDirectionalKey(fieldIndex, documentKey))\n            ])\n        }, (_, entry) => {\n            results = results.add(new IndexEntry(fieldIndex.indexId, documentKey, decodeKeySafeBytes(entry.arrayValue), decodeKeySafeBytes(entry.directionalValue)));\n        })\n            .next(() => results);\n    }\n    /** Creates the index entries for the given document. */\n    computeIndexEntries(document, fieldIndex) {\n        let results = new SortedSet(indexEntryComparator);\n        const directionalValue = this.encodeDirectionalElements(fieldIndex, document);\n        if (directionalValue == null) {\n            return results;\n        }\n        const arraySegment = fieldIndexGetArraySegment(fieldIndex);\n        if (arraySegment != null) {\n            const value = document.data.field(arraySegment.fieldPath);\n            if (isArray(value)) {\n                for (const arrayValue of value.arrayValue.values || []) {\n                    results = results.add(new IndexEntry(fieldIndex.indexId, document.key, this.encodeSingleElement(arrayValue), directionalValue));\n                }\n            }\n        }\n        else {\n            results = results.add(new IndexEntry(fieldIndex.indexId, document.key, EMPTY_VALUE, directionalValue));\n        }\n        return results;\n    }\n    /**\n     * Updates the index entries for the provided document by deleting entries\n     * that are no longer referenced in `newEntries` and adding all newly added\n     * entries.\n     */\n    updateEntries(transaction, document, fieldIndex, existingEntries, newEntries) {\n        logDebug(LOG_TAG$f, \"Updating index entries for document '%s'\", document.key);\n        const promises = [];\n        diffSortedSets(existingEntries, newEntries, indexEntryComparator, \n        /* onAdd= */ entry => {\n            promises.push(this.addIndexEntry(transaction, document, fieldIndex, entry));\n        }, \n        /* onRemove= */ entry => {\n            promises.push(this.deleteIndexEntry(transaction, document, fieldIndex, entry));\n        });\n        return PersistencePromise.waitFor(promises);\n    }\n    getNextSequenceNumber(transaction) {\n        let nextSequenceNumber = 1;\n        const states = indexStateStore(transaction);\n        return states\n            .iterate({\n            index: DbIndexStateSequenceNumberIndex,\n            reverse: true,\n            range: IDBKeyRange.upperBound([this.uid, Number.MAX_SAFE_INTEGER])\n        }, (_, state, controller) => {\n            controller.done();\n            nextSequenceNumber = state.sequenceNumber + 1;\n        })\n            .next(() => nextSequenceNumber);\n    }\n    /**\n     * Returns a new set of IDB ranges that splits the existing range and excludes\n     * any values that match the `notInValue` from these ranges. As an example,\n     * '[foo > 2 && foo != 3]` becomes  `[foo > 2 && < 3, foo > 3]`.\n     */\n    createRange(lower, upper, notInValues) {\n        // The notIn values need to be sorted and unique so that we can return a\n        // sorted set of non-overlapping ranges.\n        notInValues = notInValues\n            .sort((l, r) => indexEntryComparator(l, r))\n            .filter((el, i, values) => !i || indexEntryComparator(el, values[i - 1]) !== 0);\n        const bounds = [];\n        bounds.push(lower);\n        for (const notInValue of notInValues) {\n            const cmpToLower = indexEntryComparator(notInValue, lower);\n            const cmpToUpper = indexEntryComparator(notInValue, upper);\n            if (cmpToLower === 0) {\n                // `notInValue` is the lower bound. We therefore need to raise the bound\n                // to the next value.\n                bounds[0] = lower.successor();\n            }\n            else if (cmpToLower > 0 && cmpToUpper < 0) {\n                // `notInValue` is in the middle of the range\n                bounds.push(notInValue);\n                bounds.push(notInValue.successor());\n            }\n            else if (cmpToUpper > 0) {\n                // `notInValue` (and all following values) are out of the range\n                break;\n            }\n        }\n        bounds.push(upper);\n        const ranges = [];\n        for (let i = 0; i < bounds.length; i += 2) {\n            // If we encounter two bounds that will create an unmatchable key range,\n            // then we return an empty set of key ranges.\n            if (this.isRangeMatchable(bounds[i], bounds[i + 1])) {\n                return [];\n            }\n            const lowerBound = bounds[i].dbIndexEntryKey(this.uid, EMPTY_VALUE, DocumentKey.empty());\n            const upperBound = bounds[i + 1].dbIndexEntryKey(this.uid, EMPTY_VALUE, DocumentKey.empty());\n            ranges.push(IDBKeyRange.bound(lowerBound, upperBound));\n        }\n        return ranges;\n    }\n    isRangeMatchable(lowerBound, upperBound) {\n        // If lower bound is greater than the upper bound, then the key\n        // range can never be matched.\n        return indexEntryComparator(lowerBound, upperBound) > 0;\n    }\n    getMinOffsetFromCollectionGroup(transaction, collectionGroup) {\n        return this.getFieldIndexes(transaction, collectionGroup).next(getMinOffsetFromFieldIndexes);\n    }\n    getMinOffset(transaction, target) {\n        return PersistencePromise.mapArray(this.getSubTargets(target), (subTarget) => this.getFieldIndex(transaction, subTarget).next(index => index ? index : fail(0xad8a))).next(getMinOffsetFromFieldIndexes);\n    }\n}\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */\nfunction collectionParentsStore(txn) {\n    return getStore(txn, DbCollectionParentStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the index entry object store.\n */\nfunction indexEntriesStore(txn) {\n    return getStore(txn, DbIndexEntryStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the index configuration object store.\n */\nfunction indexConfigurationStore(txn) {\n    return getStore(txn, DbIndexConfigurationStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the index state object store.\n */\nfunction indexStateStore(txn) {\n    return getStore(txn, DbIndexStateStore);\n}\nfunction getMinOffsetFromFieldIndexes(fieldIndexes) {\n    hardAssert(fieldIndexes.length !== 0, 0x7099);\n    let minOffset = fieldIndexes[0].indexState.offset;\n    let maxBatchId = minOffset.largestBatchId;\n    for (let i = 1; i < fieldIndexes.length; i++) {\n        const newOffset = fieldIndexes[i].indexState.offset;\n        if (indexOffsetComparator(newOffset, minOffset) < 0) {\n            minOffset = newOffset;\n        }\n        if (maxBatchId < newOffset.largestBatchId) {\n            maxBatchId = newOffset.largestBatchId;\n        }\n    }\n    return new IndexOffset(minOffset.readTime, minOffset.documentKey, maxBatchId);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Delete a mutation batch and the associated document mutations.\n * @returns A PersistencePromise of the document mutations that were removed.\n */\nfunction removeMutationBatch(txn, userId, batch) {\n    const mutationStore = txn.store(DbMutationBatchStore);\n    const indexTxn = txn.store(DbDocumentMutationStore);\n    const promises = [];\n    const range = IDBKeyRange.only(batch.batchId);\n    let numDeleted = 0;\n    const removePromise = mutationStore.iterate({ range }, (key, value, control) => {\n        numDeleted++;\n        return control.delete();\n    });\n    promises.push(removePromise.next(() => {\n        hardAssert(numDeleted === 1, 0xb7de, { batchId: batch.batchId });\n    }));\n    const removedDocuments = [];\n    for (const mutation of batch.mutations) {\n        const indexKey = newDbDocumentMutationKey(userId, mutation.key.path, batch.batchId);\n        promises.push(indexTxn.delete(indexKey));\n        removedDocuments.push(mutation.key);\n    }\n    return PersistencePromise.waitFor(promises).next(() => removedDocuments);\n}\n/**\n * Returns an approximate size for the given document.\n */\nfunction dbDocumentSize(doc) {\n    if (!doc) {\n        return 0;\n    }\n    let value;\n    if (doc.document) {\n        value = doc.document;\n    }\n    else if (doc.unknownDocument) {\n        value = doc.unknownDocument;\n    }\n    else if (doc.noDocument) {\n        value = doc.noDocument;\n    }\n    else {\n        throw fail(0x398b);\n    }\n    return JSON.stringify(value).length;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A mutation queue for a specific user, backed by IndexedDB. */\nclass IndexedDbMutationQueue {\n    constructor(\n    /**\n     * The normalized userId (e.g. null UID => \"\" userId) used to store /\n     * retrieve mutations.\n     */\n    userId, serializer, indexManager, referenceDelegate) {\n        this.userId = userId;\n        this.serializer = serializer;\n        this.indexManager = indexManager;\n        this.referenceDelegate = referenceDelegate;\n        /**\n         * Caches the document keys for pending mutation batches. If the mutation\n         * has been removed from IndexedDb, the cached value may continue to\n         * be used to retrieve the batch's document keys. To remove a cached value\n         * locally, `removeCachedMutationKeys()` should be invoked either directly\n         * or through `removeMutationBatches()`.\n         *\n         * With multi-tab, when the primary client acknowledges or rejects a mutation,\n         * this cache is used by secondary clients to invalidate the local\n         * view of the documents that were previously affected by the mutation.\n         */\n        // PORTING NOTE: Multi-tab only.\n        this.documentKeysByBatchId = {};\n    }\n    /**\n     * Creates a new mutation queue for the given user.\n     * @param user - The user for which to create a mutation queue.\n     * @param serializer - The serializer to use when persisting to IndexedDb.\n     */\n    static forUser(user, serializer, indexManager, referenceDelegate) {\n        // TODO(mcg): Figure out what constraints there are on userIDs\n        // In particular, are there any reserved characters? are empty ids allowed?\n        // For the moment store these together in the same mutations table assuming\n        // that empty userIDs aren't allowed.\n        hardAssert(user.uid !== '', 0xfb83);\n        const userId = user.isAuthenticated() ? user.uid : '';\n        return new IndexedDbMutationQueue(userId, serializer, indexManager, referenceDelegate);\n    }\n    checkEmpty(transaction) {\n        let empty = true;\n        const range = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);\n        return mutationsStore(transaction)\n            .iterate({ index: DbMutationBatchUserMutationsIndex, range }, (key, value, control) => {\n            empty = false;\n            control.done();\n        })\n            .next(() => empty);\n    }\n    addMutationBatch(transaction, localWriteTime, baseMutations, mutations) {\n        const documentStore = documentMutationsStore(transaction);\n        const mutationStore = mutationsStore(transaction);\n        // The IndexedDb implementation in Chrome (and Firefox) does not handle\n        // compound indices that include auto-generated keys correctly. To ensure\n        // that the index entry is added correctly in all browsers, we perform two\n        // writes: The first write is used to retrieve the next auto-generated Batch\n        // ID, and the second write populates the index and stores the actual\n        // mutation batch.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972\n        // We write an empty object to obtain key\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return mutationStore.add({}).next(batchId => {\n            hardAssert(typeof batchId === 'number', 0xbf7b);\n            const batch = new MutationBatch(batchId, localWriteTime, baseMutations, mutations);\n            const dbBatch = toDbMutationBatch(this.serializer, this.userId, batch);\n            const promises = [];\n            let collectionParents = new SortedSet((l, r) => primitiveComparator(l.canonicalString(), r.canonicalString()));\n            for (const mutation of mutations) {\n                const indexKey = newDbDocumentMutationKey(this.userId, mutation.key.path, batchId);\n                collectionParents = collectionParents.add(mutation.key.path.popLast());\n                promises.push(mutationStore.put(dbBatch));\n                promises.push(documentStore.put(indexKey, DbDocumentMutationPlaceholder));\n            }\n            collectionParents.forEach(parent => {\n                promises.push(this.indexManager.addToCollectionParentIndex(transaction, parent));\n            });\n            transaction.addOnCommittedListener(() => {\n                this.documentKeysByBatchId[batchId] = batch.keys();\n            });\n            return PersistencePromise.waitFor(promises).next(() => batch);\n        });\n    }\n    lookupMutationBatch(transaction, batchId) {\n        return mutationsStore(transaction)\n            .get(batchId)\n            .next(dbBatch => {\n            if (dbBatch) {\n                hardAssert(dbBatch.userId === this.userId, 0x0030, `Unexpected user for mutation batch`, {\n                    userId: dbBatch.userId,\n                    batchId\n                });\n                return fromDbMutationBatch(this.serializer, dbBatch);\n            }\n            return null;\n        });\n    }\n    /**\n     * Returns the document keys for the mutation batch with the given batchId.\n     * For primary clients, this method returns `null` after\n     * `removeMutationBatches()` has been called. Secondary clients return a\n     * cached result until `removeCachedMutationKeys()` is invoked.\n     */\n    // PORTING NOTE: Multi-tab only.\n    lookupMutationKeys(transaction, batchId) {\n        if (this.documentKeysByBatchId[batchId]) {\n            return PersistencePromise.resolve(this.documentKeysByBatchId[batchId]);\n        }\n        else {\n            return this.lookupMutationBatch(transaction, batchId).next(batch => {\n                if (batch) {\n                    const keys = batch.keys();\n                    this.documentKeysByBatchId[batchId] = keys;\n                    return keys;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n    }\n    getNextMutationBatchAfterBatchId(transaction, batchId) {\n        const nextBatchId = batchId + 1;\n        const range = IDBKeyRange.lowerBound([this.userId, nextBatchId]);\n        let foundBatch = null;\n        return mutationsStore(transaction)\n            .iterate({ index: DbMutationBatchUserMutationsIndex, range }, (key, dbBatch, control) => {\n            if (dbBatch.userId === this.userId) {\n                hardAssert(dbBatch.batchId >= nextBatchId, 0xb9a4, { nextBatchId });\n                foundBatch = fromDbMutationBatch(this.serializer, dbBatch);\n            }\n            control.done();\n        })\n            .next(() => foundBatch);\n    }\n    getHighestUnacknowledgedBatchId(transaction) {\n        const range = IDBKeyRange.upperBound([\n            this.userId,\n            Number.POSITIVE_INFINITY\n        ]);\n        let batchId = BATCHID_UNKNOWN;\n        return mutationsStore(transaction)\n            .iterate({ index: DbMutationBatchUserMutationsIndex, range, reverse: true }, (key, dbBatch, control) => {\n            batchId = dbBatch.batchId;\n            control.done();\n        })\n            .next(() => batchId);\n    }\n    getAllMutationBatches(transaction) {\n        const range = IDBKeyRange.bound([this.userId, BATCHID_UNKNOWN], [this.userId, Number.POSITIVE_INFINITY]);\n        return mutationsStore(transaction)\n            .loadAll(DbMutationBatchUserMutationsIndex, range)\n            .next(dbBatches => dbBatches.map(dbBatch => fromDbMutationBatch(this.serializer, dbBatch)));\n    }\n    getAllMutationBatchesAffectingDocumentKey(transaction, documentKey) {\n        // Scan the document-mutation index starting with a prefix starting with\n        // the given documentKey.\n        const indexPrefix = newDbDocumentMutationPrefixForPath(this.userId, documentKey.path);\n        const indexStart = IDBKeyRange.lowerBound(indexPrefix);\n        const results = [];\n        return documentMutationsStore(transaction)\n            .iterate({ range: indexStart }, (indexKey, _, control) => {\n            const [userID, encodedPath, batchId] = indexKey;\n            // Only consider rows matching exactly the specific key of\n            // interest. Note that because we order by path first, and we\n            // order terminators before path separators, we'll encounter all\n            // the index rows for documentKey contiguously. In particular, all\n            // the rows for documentKey will occur before any rows for\n            // documents nested in a subcollection beneath documentKey so we\n            // can stop as soon as we hit any such row.\n            const path = decodeResourcePath(encodedPath);\n            if (userID !== this.userId || !documentKey.path.isEqual(path)) {\n                control.done();\n                return;\n            }\n            // Look up the mutation batch in the store.\n            return mutationsStore(transaction)\n                .get(batchId)\n                .next(mutation => {\n                if (!mutation) {\n                    throw fail(0xf028, {\n                        indexKey,\n                        batchId\n                    });\n                }\n                hardAssert(mutation.userId === this.userId, 0x2907, `Unexpected user for mutation batch`, {\n                    userId: mutation.userId,\n                    batchId\n                });\n                results.push(fromDbMutationBatch(this.serializer, mutation));\n            });\n        })\n            .next(() => results);\n    }\n    getAllMutationBatchesAffectingDocumentKeys(transaction, documentKeys) {\n        let uniqueBatchIDs = new SortedSet(primitiveComparator);\n        const promises = [];\n        documentKeys.forEach(documentKey => {\n            const indexStart = newDbDocumentMutationPrefixForPath(this.userId, documentKey.path);\n            const range = IDBKeyRange.lowerBound(indexStart);\n            const promise = documentMutationsStore(transaction).iterate({ range }, (indexKey, _, control) => {\n                const [userID, encodedPath, batchID] = indexKey;\n                // Only consider rows matching exactly the specific key of\n                // interest. Note that because we order by path first, and we\n                // order terminators before path separators, we'll encounter all\n                // the index rows for documentKey contiguously. In particular, all\n                // the rows for documentKey will occur before any rows for\n                // documents nested in a subcollection beneath documentKey so we\n                // can stop as soon as we hit any such row.\n                const path = decodeResourcePath(encodedPath);\n                if (userID !== this.userId || !documentKey.path.isEqual(path)) {\n                    control.done();\n                    return;\n                }\n                uniqueBatchIDs = uniqueBatchIDs.add(batchID);\n            });\n            promises.push(promise);\n        });\n        return PersistencePromise.waitFor(promises).next(() => this.lookupMutationBatches(transaction, uniqueBatchIDs));\n    }\n    getAllMutationBatchesAffectingQuery(transaction, query) {\n        const queryPath = query.path;\n        const immediateChildrenLength = queryPath.length + 1;\n        // TODO(mcg): Actually implement a single-collection query\n        //\n        // This is actually executing an ancestor query, traversing the whole\n        // subtree below the collection which can be horrifically inefficient for\n        // some structures. The right way to solve this is to implement the full\n        // value index, but that's not in the cards in the near future so this is\n        // the best we can do for the moment.\n        //\n        // Since we don't yet index the actual properties in the mutations, our\n        // current approach is to just return all mutation batches that affect\n        // documents in the collection being queried.\n        const indexPrefix = newDbDocumentMutationPrefixForPath(this.userId, queryPath);\n        const indexStart = IDBKeyRange.lowerBound(indexPrefix);\n        // Collect up unique batchIDs encountered during a scan of the index. Use a\n        // SortedSet to accumulate batch IDs so they can be traversed in order in a\n        // scan of the main table.\n        let uniqueBatchIDs = new SortedSet(primitiveComparator);\n        return documentMutationsStore(transaction)\n            .iterate({ range: indexStart }, (indexKey, _, control) => {\n            const [userID, encodedPath, batchID] = indexKey;\n            const path = decodeResourcePath(encodedPath);\n            if (userID !== this.userId || !queryPath.isPrefixOf(path)) {\n                control.done();\n                return;\n            }\n            // Rows with document keys more than one segment longer than the\n            // query path can't be matches. For example, a query on 'rooms'\n            // can't match the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            if (path.length !== immediateChildrenLength) {\n                return;\n            }\n            uniqueBatchIDs = uniqueBatchIDs.add(batchID);\n        })\n            .next(() => this.lookupMutationBatches(transaction, uniqueBatchIDs));\n    }\n    lookupMutationBatches(transaction, batchIDs) {\n        const results = [];\n        const promises = [];\n        // TODO(rockwood): Implement this using iterate.\n        batchIDs.forEach(batchId => {\n            promises.push(mutationsStore(transaction)\n                .get(batchId)\n                .next(mutation => {\n                if (mutation === null) {\n                    throw fail(0x89ca, {\n                        batchId\n                    });\n                }\n                hardAssert(mutation.userId === this.userId, 0x2614, `Unexpected user for mutation batch`, { userId: mutation.userId, batchId });\n                results.push(fromDbMutationBatch(this.serializer, mutation));\n            }));\n        });\n        return PersistencePromise.waitFor(promises).next(() => results);\n    }\n    removeMutationBatch(transaction, batch) {\n        return removeMutationBatch(transaction.simpleDbTransaction, this.userId, batch).next(removedDocuments => {\n            transaction.addOnCommittedListener(() => {\n                this.removeCachedMutationKeys(batch.batchId);\n            });\n            return PersistencePromise.forEach(removedDocuments, (key) => {\n                return this.referenceDelegate.markPotentiallyOrphaned(transaction, key);\n            });\n        });\n    }\n    /**\n     * Clears the cached keys for a mutation batch. This method should be\n     * called by secondary clients after they process mutation updates.\n     *\n     * Note that this method does not have to be called from primary clients as\n     * the corresponding cache entries are cleared when an acknowledged or\n     * rejected batch is removed from the mutation queue.\n     */\n    // PORTING NOTE: Multi-tab only\n    removeCachedMutationKeys(batchId) {\n        delete this.documentKeysByBatchId[batchId];\n    }\n    performConsistencyCheck(txn) {\n        return this.checkEmpty(txn).next(empty => {\n            if (!empty) {\n                return PersistencePromise.resolve();\n            }\n            // Verify that there are no entries in the documentMutations index if\n            // the queue is empty.\n            const startRange = IDBKeyRange.lowerBound(newDbDocumentMutationPrefixForUser(this.userId));\n            const danglingMutationReferences = [];\n            return documentMutationsStore(txn)\n                .iterate({ range: startRange }, (key, _, control) => {\n                const userID = key[0];\n                if (userID !== this.userId) {\n                    control.done();\n                    return;\n                }\n                else {\n                    const path = decodeResourcePath(key[1]);\n                    danglingMutationReferences.push(path);\n                }\n            })\n                .next(() => {\n                hardAssert(danglingMutationReferences.length === 0, 0xdd90, {\n                    danglingKeys: danglingMutationReferences.map(p => p.canonicalString())\n                });\n            });\n        });\n    }\n    containsKey(txn, key) {\n        return mutationQueueContainsKey(txn, this.userId, key);\n    }\n    // PORTING NOTE: Multi-tab only (state is held in memory in other clients).\n    /** Returns the mutation queue's metadata from IndexedDb. */\n    getMutationQueueMetadata(transaction) {\n        return mutationQueuesStore(transaction)\n            .get(this.userId)\n            .next((metadata) => {\n            return (metadata || {\n                userId: this.userId,\n                lastAcknowledgedBatchId: BATCHID_UNKNOWN,\n                lastStreamToken: ''\n            });\n        });\n    }\n}\n/**\n * @returns true if the mutation queue for the given user contains a pending\n *         mutation for the given key.\n */\nfunction mutationQueueContainsKey(txn, userId, key) {\n    const indexKey = newDbDocumentMutationPrefixForPath(userId, key.path);\n    const encodedPath = indexKey[1];\n    const startRange = IDBKeyRange.lowerBound(indexKey);\n    let containsKey = false;\n    return documentMutationsStore(txn)\n        .iterate({ range: startRange, keysOnly: true }, (key, value, control) => {\n        const [userID, keyPath, /*batchID*/ _] = key;\n        if (userID === userId && keyPath === encodedPath) {\n            containsKey = true;\n        }\n        control.done();\n    })\n        .next(() => containsKey);\n}\n/** Returns true if any mutation queue contains the given document. */\nfunction mutationQueuesContainKey(txn, docKey) {\n    let found = false;\n    return mutationQueuesStore(txn)\n        .iterateSerial(userId => {\n        return mutationQueueContainsKey(txn, userId, docKey).next(containsKey => {\n            if (containsKey) {\n                found = true;\n            }\n            return PersistencePromise.resolve(!containsKey);\n        });\n    })\n        .next(() => found);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutations object store.\n */\nfunction mutationsStore(txn) {\n    return getStore(txn, DbMutationBatchStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */\nfunction documentMutationsStore(txn) {\n    return getStore(txn, DbDocumentMutationStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */\nfunction mutationQueuesStore(txn) {\n    return getStore(txn, DbMutationQueueStore);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Offset to ensure non-overlapping target ids. */\nconst OFFSET = 2;\n/**\n * Generates monotonically increasing target IDs for sending targets to the\n * watch stream.\n *\n * The client constructs two generators, one for the target cache, and one for\n * for the sync engine (to generate limbo documents targets). These\n * generators produce non-overlapping IDs (by using even and odd IDs\n * respectively).\n *\n * By separating the target ID space, the query cache can generate target IDs\n * that persist across client restarts, while sync engine can independently\n * generate in-memory target IDs that are transient and can be reused after a\n * restart.\n */\nclass TargetIdGenerator {\n    constructor(lastId) {\n        this.lastId = lastId;\n    }\n    next() {\n        this.lastId += OFFSET;\n        return this.lastId;\n    }\n    static forTargetCache() {\n        // The target cache generator must return '2' in its first call to `next()`\n        // as there is no differentiation in the protocol layer between an unset\n        // number and the number '0'. If we were to sent a target with target ID\n        // '0', the backend would consider it unset and replace it with its own ID.\n        return new TargetIdGenerator(2 - OFFSET);\n    }\n    static forSyncEngine() {\n        // Sync engine assigns target IDs for limbo document detection.\n        return new TargetIdGenerator(1 - OFFSET);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass IndexedDbTargetCache {\n    constructor(referenceDelegate, serializer) {\n        this.referenceDelegate = referenceDelegate;\n        this.serializer = serializer;\n    }\n    // PORTING NOTE: We don't cache global metadata for the target cache, since\n    // some of it (in particular `highestTargetId`) can be modified by secondary\n    // tabs. We could perhaps be more granular (and e.g. still cache\n    // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go\n    // to IndexedDb whenever we need to read metadata. We can revisit if it turns\n    // out to have a meaningful performance impact.\n    allocateTargetId(transaction) {\n        return this.retrieveMetadata(transaction).next(metadata => {\n            const targetIdGenerator = new TargetIdGenerator(metadata.highestTargetId);\n            metadata.highestTargetId = targetIdGenerator.next();\n            return this.saveMetadata(transaction, metadata).next(() => metadata.highestTargetId);\n        });\n    }\n    getLastRemoteSnapshotVersion(transaction) {\n        return this.retrieveMetadata(transaction).next(metadata => {\n            return SnapshotVersion.fromTimestamp(new Timestamp(metadata.lastRemoteSnapshotVersion.seconds, metadata.lastRemoteSnapshotVersion.nanoseconds));\n        });\n    }\n    getHighestSequenceNumber(transaction) {\n        return this.retrieveMetadata(transaction).next(targetGlobal => targetGlobal.highestListenSequenceNumber);\n    }\n    setTargetsMetadata(transaction, highestListenSequenceNumber, lastRemoteSnapshotVersion) {\n        return this.retrieveMetadata(transaction).next(metadata => {\n            metadata.highestListenSequenceNumber = highestListenSequenceNumber;\n            if (lastRemoteSnapshotVersion) {\n                metadata.lastRemoteSnapshotVersion =\n                    lastRemoteSnapshotVersion.toTimestamp();\n            }\n            if (highestListenSequenceNumber > metadata.highestListenSequenceNumber) {\n                metadata.highestListenSequenceNumber = highestListenSequenceNumber;\n            }\n            return this.saveMetadata(transaction, metadata);\n        });\n    }\n    addTargetData(transaction, targetData) {\n        return this.saveTargetData(transaction, targetData).next(() => {\n            return this.retrieveMetadata(transaction).next(metadata => {\n                metadata.targetCount += 1;\n                this.updateMetadataFromTargetData(targetData, metadata);\n                return this.saveMetadata(transaction, metadata);\n            });\n        });\n    }\n    updateTargetData(transaction, targetData) {\n        return this.saveTargetData(transaction, targetData);\n    }\n    removeTargetData(transaction, targetData) {\n        return this.removeMatchingKeysForTargetId(transaction, targetData.targetId)\n            .next(() => targetsStore(transaction).delete(targetData.targetId))\n            .next(() => this.retrieveMetadata(transaction))\n            .next(metadata => {\n            hardAssert(metadata.targetCount > 0, 0x1f81);\n            metadata.targetCount -= 1;\n            return this.saveMetadata(transaction, metadata);\n        });\n    }\n    /**\n     * Drops any targets with sequence number less than or equal to the upper bound, excepting those\n     * present in `activeTargetIds`. Document associations for the removed targets are also removed.\n     * Returns the number of targets removed.\n     */\n    removeTargets(txn, upperBound, activeTargetIds) {\n        let count = 0;\n        const promises = [];\n        return targetsStore(txn)\n            .iterate((key, value) => {\n            const targetData = fromDbTarget(value);\n            if (targetData.sequenceNumber <= upperBound &&\n                activeTargetIds.get(targetData.targetId) === null) {\n                count++;\n                promises.push(this.removeTargetData(txn, targetData));\n            }\n        })\n            .next(() => PersistencePromise.waitFor(promises))\n            .next(() => count);\n    }\n    /**\n     * Call provided function with each `TargetData` that we have cached.\n     */\n    forEachTarget(txn, f) {\n        return targetsStore(txn).iterate((key, value) => {\n            const targetData = fromDbTarget(value);\n            f(targetData);\n        });\n    }\n    retrieveMetadata(transaction) {\n        return globalTargetStore(transaction)\n            .get(DbTargetGlobalKey)\n            .next(metadata => {\n            hardAssert(metadata !== null, 0x0b48);\n            return metadata;\n        });\n    }\n    saveMetadata(transaction, metadata) {\n        return globalTargetStore(transaction).put(DbTargetGlobalKey, metadata);\n    }\n    saveTargetData(transaction, targetData) {\n        return targetsStore(transaction).put(toDbTarget(this.serializer, targetData));\n    }\n    /**\n     * In-place updates the provided metadata to account for values in the given\n     * TargetData. Saving is done separately. Returns true if there were any\n     * changes to the metadata.\n     */\n    updateMetadataFromTargetData(targetData, metadata) {\n        let updated = false;\n        if (targetData.targetId > metadata.highestTargetId) {\n            metadata.highestTargetId = targetData.targetId;\n            updated = true;\n        }\n        if (targetData.sequenceNumber > metadata.highestListenSequenceNumber) {\n            metadata.highestListenSequenceNumber = targetData.sequenceNumber;\n            updated = true;\n        }\n        return updated;\n    }\n    getTargetCount(transaction) {\n        return this.retrieveMetadata(transaction).next(metadata => metadata.targetCount);\n    }\n    getTargetData(transaction, target) {\n        // Iterating by the canonicalId may yield more than one result because\n        // canonicalId values are not required to be unique per target. This query\n        // depends on the queryTargets index to be efficient.\n        const canonicalId = canonifyTarget(target);\n        const range = IDBKeyRange.bound([canonicalId, Number.NEGATIVE_INFINITY], [canonicalId, Number.POSITIVE_INFINITY]);\n        let result = null;\n        return targetsStore(transaction)\n            .iterate({ range, index: DbTargetQueryTargetsIndexName }, (key, value, control) => {\n            const found = fromDbTarget(value);\n            // After finding a potential match, check that the target is\n            // actually equal to the requested target.\n            if (targetEquals(target, found.target)) {\n                result = found;\n                control.done();\n            }\n        })\n            .next(() => result);\n    }\n    addMatchingKeys(txn, keys, targetId) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        const promises = [];\n        const store = documentTargetStore(txn);\n        keys.forEach(key => {\n            const path = encodeResourcePath(key.path);\n            promises.push(store.put({ targetId, path }));\n            promises.push(this.referenceDelegate.addReference(txn, targetId, key));\n        });\n        return PersistencePromise.waitFor(promises);\n    }\n    removeMatchingKeys(txn, keys, targetId) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        const store = documentTargetStore(txn);\n        return PersistencePromise.forEach(keys, (key) => {\n            const path = encodeResourcePath(key.path);\n            return PersistencePromise.waitFor([\n                store.delete([targetId, path]),\n                this.referenceDelegate.removeReference(txn, targetId, key)\n            ]);\n        });\n    }\n    removeMatchingKeysForTargetId(txn, targetId) {\n        const store = documentTargetStore(txn);\n        const range = IDBKeyRange.bound([targetId], [targetId + 1], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        return store.delete(range);\n    }\n    getMatchingKeysForTargetId(txn, targetId) {\n        const range = IDBKeyRange.bound([targetId], [targetId + 1], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        const store = documentTargetStore(txn);\n        let result = documentKeySet();\n        return store\n            .iterate({ range, keysOnly: true }, (key, _, control) => {\n            const path = decodeResourcePath(key[1]);\n            const docKey = new DocumentKey(path);\n            result = result.add(docKey);\n        })\n            .next(() => result);\n    }\n    containsKey(txn, key) {\n        const path = encodeResourcePath(key.path);\n        const range = IDBKeyRange.bound([path], [immediateSuccessor(path)], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        let count = 0;\n        return documentTargetStore(txn)\n            .iterate({\n            index: DbTargetDocumentDocumentTargetsIndex,\n            keysOnly: true,\n            range\n        }, ([targetId, path], _, control) => {\n            // Having a sentinel row for a document does not count as containing that document;\n            // For the target cache, containing the document means the document is part of some\n            // target.\n            if (targetId !== 0) {\n                count++;\n                control.done();\n            }\n        })\n            .next(() => count > 0);\n    }\n    /**\n     * Looks up a TargetData entry by target ID.\n     *\n     * @param targetId - The target ID of the TargetData entry to look up.\n     * @returns The cached TargetData entry, or null if the cache has no entry for\n     * the target.\n     */\n    // PORTING NOTE: Multi-tab only.\n    getTargetDataForTarget(transaction, targetId) {\n        return targetsStore(transaction)\n            .get(targetId)\n            .next(found => {\n            if (found) {\n                return fromDbTarget(found);\n            }\n            else {\n                return null;\n            }\n        });\n    }\n}\n/**\n * Helper to get a typed SimpleDbStore for the queries object store.\n */\nfunction targetsStore(txn) {\n    return getStore(txn, DbTargetStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the target globals object store.\n */\nfunction globalTargetStore(txn) {\n    return getStore(txn, DbTargetGlobalStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the document target object store.\n */\nfunction documentTargetStore(txn) {\n    return getStore(txn, DbTargetDocumentStore);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst GC_DID_NOT_RUN = {\n    didRun: false,\n    sequenceNumbersCollected: 0,\n    targetsRemoved: 0,\n    documentsRemoved: 0\n};\nconst LRU_COLLECTION_DISABLED = -1;\nconst LRU_DEFAULT_CACHE_SIZE_BYTES = 40 * 1024 * 1024;\nclass LruParams {\n    static withCacheSize(cacheSize) {\n        return new LruParams(cacheSize, LruParams.DEFAULT_COLLECTION_PERCENTILE, LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);\n    }\n    constructor(\n    // When we attempt to collect, we will only do so if the cache size is greater than this\n    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n    cacheSizeCollectionThreshold, \n    // The percentage of sequence numbers that we will attempt to collect\n    percentileToCollect, \n    // A cap on the total number of sequence numbers that will be collected. This prevents\n    // us from collecting a huge number of sequence numbers if the cache has grown very large.\n    maximumSequenceNumbersToCollect) {\n        this.cacheSizeCollectionThreshold = cacheSizeCollectionThreshold;\n        this.percentileToCollect = percentileToCollect;\n        this.maximumSequenceNumbersToCollect = maximumSequenceNumbersToCollect;\n    }\n}\nLruParams.DEFAULT_COLLECTION_PERCENTILE = 10;\nLruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1000;\nLruParams.DEFAULT = new LruParams(LRU_DEFAULT_CACHE_SIZE_BYTES, LruParams.DEFAULT_COLLECTION_PERCENTILE, LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);\nLruParams.DISABLED = new LruParams(LRU_COLLECTION_DISABLED, 0, 0);\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$e = 'LruGarbageCollector';\nconst LRU_MINIMUM_CACHE_SIZE_BYTES = 1 * 1024 * 1024;\n/** How long we wait to try running LRU GC after SDK initialization. */\nconst INITIAL_GC_DELAY_MS = 1 * 60 * 1000;\n/** Minimum amount of time between GC checks, after the first one. */\nconst REGULAR_GC_DELAY_MS = 5 * 60 * 1000;\nfunction bufferEntryComparator([aSequence, aIndex], [bSequence, bIndex]) {\n    const seqCmp = primitiveComparator(aSequence, bSequence);\n    if (seqCmp === 0) {\n        // This order doesn't matter, but we can bias against churn by sorting\n        // entries created earlier as less than newer entries.\n        return primitiveComparator(aIndex, bIndex);\n    }\n    else {\n        return seqCmp;\n    }\n}\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */\nclass RollingSequenceNumberBuffer {\n    constructor(maxElements) {\n        this.maxElements = maxElements;\n        this.buffer = new SortedSet(bufferEntryComparator);\n        this.previousIndex = 0;\n    }\n    nextIndex() {\n        return ++this.previousIndex;\n    }\n    addElement(sequenceNumber) {\n        const entry = [sequenceNumber, this.nextIndex()];\n        if (this.buffer.size < this.maxElements) {\n            this.buffer = this.buffer.add(entry);\n        }\n        else {\n            const highestValue = this.buffer.last();\n            if (bufferEntryComparator(entry, highestValue) < 0) {\n                this.buffer = this.buffer.delete(highestValue).add(entry);\n            }\n        }\n    }\n    get maxValue() {\n        // Guaranteed to be non-empty. If we decide we are not collecting any\n        // sequence numbers, nthSequenceNumber below short-circuits. If we have\n        // decided that we are collecting n sequence numbers, it's because n is some\n        // percentage of the existing sequence numbers. That means we should never\n        // be in a situation where we are collecting sequence numbers but don't\n        // actually have any.\n        return this.buffer.last()[0];\n    }\n}\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */\nclass LruScheduler {\n    constructor(garbageCollector, asyncQueue, localStore) {\n        this.garbageCollector = garbageCollector;\n        this.asyncQueue = asyncQueue;\n        this.localStore = localStore;\n        this.gcTask = null;\n    }\n    start() {\n        if (this.garbageCollector.params.cacheSizeCollectionThreshold !==\n            LRU_COLLECTION_DISABLED) {\n            this.scheduleGC(INITIAL_GC_DELAY_MS);\n        }\n    }\n    stop() {\n        if (this.gcTask) {\n            this.gcTask.cancel();\n            this.gcTask = null;\n        }\n    }\n    get started() {\n        return this.gcTask !== null;\n    }\n    scheduleGC(delay) {\n        logDebug(LOG_TAG$e, `Garbage collection scheduled in ${delay}ms`);\n        this.gcTask = this.asyncQueue.enqueueAfterDelay(\"lru_garbage_collection\" /* TimerId.LruGarbageCollection */, delay, async () => {\n            this.gcTask = null;\n            try {\n                await this.localStore.collectGarbage(this.garbageCollector);\n            }\n            catch (e) {\n                if (isIndexedDbTransactionError(e)) {\n                    logDebug(LOG_TAG$e, 'Ignoring IndexedDB error during garbage collection: ', e);\n                }\n                else {\n                    await ignoreIfPrimaryLeaseLoss(e);\n                }\n            }\n            await this.scheduleGC(REGULAR_GC_DELAY_MS);\n        });\n    }\n}\n/**\n * Implements the steps for LRU garbage collection.\n */\nclass LruGarbageCollectorImpl {\n    constructor(delegate, params) {\n        this.delegate = delegate;\n        this.params = params;\n    }\n    calculateTargetCount(txn, percentile) {\n        return this.delegate.getSequenceNumberCount(txn).next(targetCount => {\n            return Math.floor((percentile / 100.0) * targetCount);\n        });\n    }\n    nthSequenceNumber(txn, n) {\n        if (n === 0) {\n            return PersistencePromise.resolve(ListenSequence.INVALID);\n        }\n        const buffer = new RollingSequenceNumberBuffer(n);\n        return this.delegate\n            .forEachTarget(txn, target => buffer.addElement(target.sequenceNumber))\n            .next(() => {\n            return this.delegate.forEachOrphanedDocumentSequenceNumber(txn, sequenceNumber => buffer.addElement(sequenceNumber));\n        })\n            .next(() => buffer.maxValue);\n    }\n    removeTargets(txn, upperBound, activeTargetIds) {\n        return this.delegate.removeTargets(txn, upperBound, activeTargetIds);\n    }\n    removeOrphanedDocuments(txn, upperBound) {\n        return this.delegate.removeOrphanedDocuments(txn, upperBound);\n    }\n    collect(txn, activeTargetIds) {\n        if (this.params.cacheSizeCollectionThreshold === LRU_COLLECTION_DISABLED) {\n            logDebug('LruGarbageCollector', 'Garbage collection skipped; disabled');\n            return PersistencePromise.resolve(GC_DID_NOT_RUN);\n        }\n        return this.getCacheSize(txn).next(cacheSize => {\n            if (cacheSize < this.params.cacheSizeCollectionThreshold) {\n                logDebug('LruGarbageCollector', `Garbage collection skipped; Cache size ${cacheSize} ` +\n                    `is lower than threshold ${this.params.cacheSizeCollectionThreshold}`);\n                return GC_DID_NOT_RUN;\n            }\n            else {\n                return this.runGarbageCollection(txn, activeTargetIds);\n            }\n        });\n    }\n    getCacheSize(txn) {\n        return this.delegate.getCacheSize(txn);\n    }\n    runGarbageCollection(txn, activeTargetIds) {\n        let upperBoundSequenceNumber;\n        let sequenceNumbersToCollect, targetsRemoved;\n        // Timestamps for various pieces of the process\n        let countedTargetsTs, foundUpperBoundTs, removedTargetsTs, removedDocumentsTs;\n        const startTs = Date.now();\n        return this.calculateTargetCount(txn, this.params.percentileToCollect)\n            .next(sequenceNumbers => {\n            // Cap at the configured max\n            if (sequenceNumbers > this.params.maximumSequenceNumbersToCollect) {\n                logDebug('LruGarbageCollector', 'Capping sequence numbers to collect down ' +\n                    `to the maximum of ${this.params.maximumSequenceNumbersToCollect} ` +\n                    `from ${sequenceNumbers}`);\n                sequenceNumbersToCollect =\n                    this.params.maximumSequenceNumbersToCollect;\n            }\n            else {\n                sequenceNumbersToCollect = sequenceNumbers;\n            }\n            countedTargetsTs = Date.now();\n            return this.nthSequenceNumber(txn, sequenceNumbersToCollect);\n        })\n            .next(upperBound => {\n            upperBoundSequenceNumber = upperBound;\n            foundUpperBoundTs = Date.now();\n            return this.removeTargets(txn, upperBoundSequenceNumber, activeTargetIds);\n        })\n            .next(numTargetsRemoved => {\n            targetsRemoved = numTargetsRemoved;\n            removedTargetsTs = Date.now();\n            return this.removeOrphanedDocuments(txn, upperBoundSequenceNumber);\n        })\n            .next(documentsRemoved => {\n            removedDocumentsTs = Date.now();\n            if (getLogLevel() <= LogLevel.DEBUG) {\n                const desc = 'LRU Garbage Collection\\n' +\n                    `\\tCounted targets in ${countedTargetsTs - startTs}ms\\n` +\n                    `\\tDetermined least recently used ${sequenceNumbersToCollect} in ` +\n                    `${foundUpperBoundTs - countedTargetsTs}ms\\n` +\n                    `\\tRemoved ${targetsRemoved} targets in ` +\n                    `${removedTargetsTs - foundUpperBoundTs}ms\\n` +\n                    `\\tRemoved ${documentsRemoved} documents in ` +\n                    `${removedDocumentsTs - removedTargetsTs}ms\\n` +\n                    `Total Duration: ${removedDocumentsTs - startTs}ms`;\n                logDebug('LruGarbageCollector', desc);\n            }\n            return PersistencePromise.resolve({\n                didRun: true,\n                sequenceNumbersCollected: sequenceNumbersToCollect,\n                targetsRemoved,\n                documentsRemoved\n            });\n        });\n    }\n}\nfunction newLruGarbageCollector(delegate, params) {\n    return new LruGarbageCollectorImpl(delegate, params);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Provides LRU functionality for IndexedDB persistence. */\nclass IndexedDbLruDelegateImpl {\n    constructor(db, params) {\n        this.db = db;\n        this.garbageCollector = newLruGarbageCollector(this, params);\n    }\n    getSequenceNumberCount(txn) {\n        const docCountPromise = this.orphanedDocumentCount(txn);\n        const targetCountPromise = this.db.getTargetCache().getTargetCount(txn);\n        return targetCountPromise.next(targetCount => docCountPromise.next(docCount => targetCount + docCount));\n    }\n    orphanedDocumentCount(txn) {\n        let orphanedCount = 0;\n        return this.forEachOrphanedDocumentSequenceNumber(txn, _ => {\n            orphanedCount++;\n        }).next(() => orphanedCount);\n    }\n    forEachTarget(txn, f) {\n        return this.db.getTargetCache().forEachTarget(txn, f);\n    }\n    forEachOrphanedDocumentSequenceNumber(txn, f) {\n        return this.forEachOrphanedDocument(txn, (docKey, sequenceNumber) => f(sequenceNumber));\n    }\n    addReference(txn, targetId, key) {\n        return writeSentinelKey(txn, key);\n    }\n    removeReference(txn, targetId, key) {\n        return writeSentinelKey(txn, key);\n    }\n    removeTargets(txn, upperBound, activeTargetIds) {\n        return this.db.getTargetCache().removeTargets(txn, upperBound, activeTargetIds);\n    }\n    markPotentiallyOrphaned(txn, key) {\n        return writeSentinelKey(txn, key);\n    }\n    /**\n     * Returns true if anything would prevent this document from being garbage\n     * collected, given that the document in question is not present in any\n     * targets and has a sequence number less than or equal to the upper bound for\n     * the collection run.\n     */\n    isPinned(txn, docKey) {\n        return mutationQueuesContainKey(txn, docKey);\n    }\n    removeOrphanedDocuments(txn, upperBound) {\n        const documentCache = this.db.getRemoteDocumentCache();\n        const changeBuffer = documentCache.newChangeBuffer();\n        const promises = [];\n        let documentCount = 0;\n        const iteration = this.forEachOrphanedDocument(txn, (docKey, sequenceNumber) => {\n            if (sequenceNumber <= upperBound) {\n                const p = this.isPinned(txn, docKey).next(isPinned => {\n                    if (!isPinned) {\n                        documentCount++;\n                        // Our size accounting requires us to read all documents before\n                        // removing them.\n                        return changeBuffer.getEntry(txn, docKey).next(() => {\n                            changeBuffer.removeEntry(docKey, SnapshotVersion.min());\n                            return documentTargetStore(txn).delete(sentinelKey$1(docKey));\n                        });\n                    }\n                });\n                promises.push(p);\n            }\n        });\n        return iteration\n            .next(() => PersistencePromise.waitFor(promises))\n            .next(() => changeBuffer.apply(txn))\n            .next(() => documentCount);\n    }\n    removeTarget(txn, targetData) {\n        const updated = targetData.withSequenceNumber(txn.currentSequenceNumber);\n        return this.db.getTargetCache().updateTargetData(txn, updated);\n    }\n    updateLimboDocument(txn, key) {\n        return writeSentinelKey(txn, key);\n    }\n    /**\n     * Call provided function for each document in the cache that is 'orphaned'. Orphaned\n     * means not a part of any target, so the only entry in the target-document index for\n     * that document will be the sentinel row (targetId 0), which will also have the sequence\n     * number for the last time the document was accessed.\n     */\n    forEachOrphanedDocument(txn, f) {\n        const store = documentTargetStore(txn);\n        let nextToReport = ListenSequence.INVALID;\n        let nextPath;\n        return store\n            .iterate({\n            index: DbTargetDocumentDocumentTargetsIndex\n        }, ([targetId, docKey], { path, sequenceNumber }) => {\n            if (targetId === 0) {\n                // if nextToReport is valid, report it, this is a new key so the\n                // last one must not be a member of any targets.\n                if (nextToReport !== ListenSequence.INVALID) {\n                    f(new DocumentKey(decodeResourcePath(nextPath)), nextToReport);\n                }\n                // set nextToReport to be this sequence number. It's the next one we\n                // might report, if we don't find any targets for this document.\n                // Note that the sequence number must be defined when the targetId\n                // is 0.\n                nextToReport = sequenceNumber;\n                nextPath = path;\n            }\n            else {\n                // set nextToReport to be invalid, we know we don't need to report\n                // this one since we found a target for it.\n                nextToReport = ListenSequence.INVALID;\n            }\n        })\n            .next(() => {\n            // Since we report sequence numbers after getting to the next key, we\n            // need to check if the last key we iterated over was an orphaned\n            // document and report it.\n            if (nextToReport !== ListenSequence.INVALID) {\n                f(new DocumentKey(decodeResourcePath(nextPath)), nextToReport);\n            }\n        });\n    }\n    getCacheSize(txn) {\n        return this.db.getRemoteDocumentCache().getSize(txn);\n    }\n}\nfunction sentinelKey$1(key) {\n    return [0, encodeResourcePath(key.path)];\n}\n/**\n * @returns A value suitable for writing a sentinel row in the target-document\n * store.\n */\nfunction sentinelRow(key, sequenceNumber) {\n    return { targetId: 0, path: encodeResourcePath(key.path), sequenceNumber };\n}\nfunction writeSentinelKey(txn, key) {\n    return documentTargetStore(txn).put(sentinelRow(key, txn.currentSequenceNumber));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * Entries added to the cache *must* be read first. This is to facilitate\n * calculating the size delta of the pending changes.\n *\n * PORTING NOTE: This class was implemented then removed from other platforms.\n * If byte-counting ends up being needed on the other platforms, consider\n * porting this class as part of that implementation work.\n */\nclass RemoteDocumentChangeBuffer {\n    constructor() {\n        // A mapping of document key to the new cache entry that should be written.\n        this.changes = new ObjectMap(key => key.toString(), (l, r) => l.isEqual(r));\n        this.changesApplied = false;\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.addEntry()` call.\n     *\n     * You can only modify documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */\n    addEntry(document) {\n        this.assertNotApplied();\n        this.changes.set(document.key, document);\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.removeEntry()` call.\n     *\n     * You can only remove documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */\n    removeEntry(key, readTime) {\n        this.assertNotApplied();\n        this.changes.set(key, MutableDocument.newInvalidDocument(key).setReadTime(readTime));\n    }\n    /**\n     * Looks up an entry in the cache. The buffered changes will first be checked,\n     * and if no buffered change applies, this will forward to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document or an invalid document if we have nothing\n     * cached.\n     */\n    getEntry(transaction, documentKey) {\n        this.assertNotApplied();\n        const bufferedEntry = this.changes.get(documentKey);\n        if (bufferedEntry !== undefined) {\n            return PersistencePromise.resolve(bufferedEntry);\n        }\n        else {\n            return this.getFromCache(transaction, documentKey);\n        }\n    }\n    /**\n     * Looks up several entries in the cache, forwarding to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKeys - The keys of the entries to look up.\n     * @returns A map of cached documents, indexed by key. If an entry cannot be\n     *     found, the corresponding key will be mapped to an invalid document.\n     */\n    getEntries(transaction, documentKeys) {\n        return this.getAllFromCache(transaction, documentKeys);\n    }\n    /**\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\n     * the provided transaction.\n     */\n    apply(transaction) {\n        this.assertNotApplied();\n        this.changesApplied = true;\n        return this.applyChanges(transaction);\n    }\n    /** Helper to assert this.changes is not null  */\n    assertNotApplied() {\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newIndexedDbRemoteDocumentCache()`.\n */\nclass IndexedDbRemoteDocumentCacheImpl {\n    constructor(serializer) {\n        this.serializer = serializer;\n    }\n    setIndexManager(indexManager) {\n        this.indexManager = indexManager;\n    }\n    /**\n     * Adds the supplied entries to the cache.\n     *\n     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */\n    addEntry(transaction, key, doc) {\n        const documentStore = remoteDocumentsStore(transaction);\n        return documentStore.put(doc);\n    }\n    /**\n     * Removes a document from the cache.\n     *\n     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */\n    removeEntry(transaction, documentKey, readTime) {\n        const store = remoteDocumentsStore(transaction);\n        return store.delete(dbReadTimeKey(documentKey, readTime));\n    }\n    /**\n     * Updates the current cache size.\n     *\n     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the\n     * cache's metadata.\n     */\n    updateMetadata(transaction, sizeDelta) {\n        return this.getMetadata(transaction).next(metadata => {\n            metadata.byteSize += sizeDelta;\n            return this.setMetadata(transaction, metadata);\n        });\n    }\n    getEntry(transaction, documentKey) {\n        let doc = MutableDocument.newInvalidDocument(documentKey);\n        return remoteDocumentsStore(transaction)\n            .iterate({\n            index: DbRemoteDocumentDocumentKeyIndex,\n            range: IDBKeyRange.only(dbKey(documentKey))\n        }, (_, dbRemoteDoc) => {\n            doc = this.maybeDecodeDocument(documentKey, dbRemoteDoc);\n        })\n            .next(() => doc);\n    }\n    /**\n     * Looks up an entry in the cache.\n     *\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document entry and its size.\n     */\n    getSizedEntry(transaction, documentKey) {\n        let result = {\n            size: 0,\n            document: MutableDocument.newInvalidDocument(documentKey)\n        };\n        return remoteDocumentsStore(transaction)\n            .iterate({\n            index: DbRemoteDocumentDocumentKeyIndex,\n            range: IDBKeyRange.only(dbKey(documentKey))\n        }, (_, dbRemoteDoc) => {\n            result = {\n                document: this.maybeDecodeDocument(documentKey, dbRemoteDoc),\n                size: dbDocumentSize(dbRemoteDoc)\n            };\n        })\n            .next(() => result);\n    }\n    getEntries(transaction, documentKeys) {\n        let results = mutableDocumentMap();\n        return this.forEachDbEntry(transaction, documentKeys, (key, dbRemoteDoc) => {\n            const doc = this.maybeDecodeDocument(key, dbRemoteDoc);\n            results = results.insert(key, doc);\n        }).next(() => results);\n    }\n    /**\n     * Looks up several entries in the cache.\n     *\n     * @param documentKeys - The set of keys entries to look up.\n     * @returns A map of documents indexed by key and a map of sizes indexed by\n     *     key (zero if the document does not exist).\n     */\n    getSizedEntries(transaction, documentKeys) {\n        let results = mutableDocumentMap();\n        let sizeMap = new SortedMap(DocumentKey.comparator);\n        return this.forEachDbEntry(transaction, documentKeys, (key, dbRemoteDoc) => {\n            const doc = this.maybeDecodeDocument(key, dbRemoteDoc);\n            results = results.insert(key, doc);\n            sizeMap = sizeMap.insert(key, dbDocumentSize(dbRemoteDoc));\n        }).next(() => {\n            return { documents: results, sizeMap };\n        });\n    }\n    forEachDbEntry(transaction, documentKeys, callback) {\n        if (documentKeys.isEmpty()) {\n            return PersistencePromise.resolve();\n        }\n        let sortedKeys = new SortedSet(dbKeyComparator);\n        documentKeys.forEach(e => (sortedKeys = sortedKeys.add(e)));\n        const range = IDBKeyRange.bound(dbKey(sortedKeys.first()), dbKey(sortedKeys.last()));\n        const keyIter = sortedKeys.getIterator();\n        let nextKey = keyIter.getNext();\n        return remoteDocumentsStore(transaction)\n            .iterate({ index: DbRemoteDocumentDocumentKeyIndex, range }, (_, dbRemoteDoc, control) => {\n            const potentialKey = DocumentKey.fromSegments([\n                ...dbRemoteDoc.prefixPath,\n                dbRemoteDoc.collectionGroup,\n                dbRemoteDoc.documentId\n            ]);\n            // Go through keys not found in cache.\n            while (nextKey && dbKeyComparator(nextKey, potentialKey) < 0) {\n                callback(nextKey, null);\n                nextKey = keyIter.getNext();\n            }\n            if (nextKey && nextKey.isEqual(potentialKey)) {\n                // Key found in cache.\n                callback(nextKey, dbRemoteDoc);\n                nextKey = keyIter.hasNext() ? keyIter.getNext() : null;\n            }\n            // Skip to the next key (if there is one).\n            if (nextKey) {\n                control.skip(dbKey(nextKey));\n            }\n            else {\n                control.done();\n            }\n        })\n            .next(() => {\n            // The rest of the keys are not in the cache. One case where `iterate`\n            // above won't go through them is when the cache is empty.\n            while (nextKey) {\n                callback(nextKey, null);\n                nextKey = keyIter.hasNext() ? keyIter.getNext() : null;\n            }\n        });\n    }\n    getDocumentsMatchingQuery(transaction, query, offset, mutatedDocs, context) {\n        const collection = query.path;\n        const startKey = [\n            collection.popLast().toArray(),\n            collection.lastSegment(),\n            toDbTimestampKey(offset.readTime),\n            offset.documentKey.path.isEmpty()\n                ? ''\n                : offset.documentKey.path.lastSegment()\n        ];\n        const endKey = [\n            collection.popLast().toArray(),\n            collection.lastSegment(),\n            [Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\n            ''\n        ];\n        return remoteDocumentsStore(transaction)\n            .loadAll(IDBKeyRange.bound(startKey, endKey, true))\n            .next(dbRemoteDocs => {\n            context === null || context === void 0 ? void 0 : context.incrementDocumentReadCount(dbRemoteDocs.length);\n            let results = mutableDocumentMap();\n            for (const dbRemoteDoc of dbRemoteDocs) {\n                const document = this.maybeDecodeDocument(DocumentKey.fromSegments(dbRemoteDoc.prefixPath.concat(dbRemoteDoc.collectionGroup, dbRemoteDoc.documentId)), dbRemoteDoc);\n                if (document.isFoundDocument() &&\n                    (queryMatches(query, document) || mutatedDocs.has(document.key))) {\n                    // Either the document matches the given query, or it is mutated.\n                    results = results.insert(document.key, document);\n                }\n            }\n            return results;\n        });\n    }\n    getAllFromCollectionGroup(transaction, collectionGroup, offset, limit) {\n        let results = mutableDocumentMap();\n        const startKey = dbCollectionGroupKey(collectionGroup, offset);\n        const endKey = dbCollectionGroupKey(collectionGroup, IndexOffset.max());\n        return remoteDocumentsStore(transaction)\n            .iterate({\n            index: DbRemoteDocumentCollectionGroupIndex,\n            range: IDBKeyRange.bound(startKey, endKey, true)\n        }, (_, dbRemoteDoc, control) => {\n            const document = this.maybeDecodeDocument(DocumentKey.fromSegments(dbRemoteDoc.prefixPath.concat(dbRemoteDoc.collectionGroup, dbRemoteDoc.documentId)), dbRemoteDoc);\n            results = results.insert(document.key, document);\n            if (results.size === limit) {\n                control.done();\n            }\n        })\n            .next(() => results);\n    }\n    newChangeBuffer(options) {\n        return new IndexedDbRemoteDocumentChangeBuffer(this, !!options && options.trackRemovals);\n    }\n    getSize(txn) {\n        return this.getMetadata(txn).next(metadata => metadata.byteSize);\n    }\n    getMetadata(txn) {\n        return documentGlobalStore(txn)\n            .get(DbRemoteDocumentGlobalKey)\n            .next(metadata => {\n            hardAssert(!!metadata, 0x4e35);\n            return metadata;\n        });\n    }\n    setMetadata(txn, metadata) {\n        return documentGlobalStore(txn).put(DbRemoteDocumentGlobalKey, metadata);\n    }\n    /**\n     * Decodes `dbRemoteDoc` and returns the document (or an invalid document if\n     * the document corresponds to the format used for sentinel deletes).\n     */\n    maybeDecodeDocument(documentKey, dbRemoteDoc) {\n        if (dbRemoteDoc) {\n            const doc = fromDbRemoteDocument(this.serializer, dbRemoteDoc);\n            // Whether the document is a sentinel removal and should only be used in the\n            // `getNewDocumentChanges()`\n            const isSentinelRemoval = doc.isNoDocument() && doc.version.isEqual(SnapshotVersion.min());\n            if (!isSentinelRemoval) {\n                return doc;\n            }\n        }\n        return MutableDocument.newInvalidDocument(documentKey);\n    }\n}\n/** Creates a new IndexedDbRemoteDocumentCache. */\nfunction newIndexedDbRemoteDocumentCache(serializer) {\n    return new IndexedDbRemoteDocumentCacheImpl(serializer);\n}\n/**\n * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.\n *\n * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size\n * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb\n * when we apply the changes.\n */\nclass IndexedDbRemoteDocumentChangeBuffer extends RemoteDocumentChangeBuffer {\n    /**\n     * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.\n     * @param trackRemovals - Whether to create sentinel deletes that can be tracked by\n     * `getNewDocumentChanges()`.\n     */\n    constructor(documentCache, trackRemovals) {\n        super();\n        this.documentCache = documentCache;\n        this.trackRemovals = trackRemovals;\n        // A map of document sizes and read times prior to applying the changes in\n        // this buffer.\n        this.documentStates = new ObjectMap(key => key.toString(), (l, r) => l.isEqual(r));\n    }\n    applyChanges(transaction) {\n        const promises = [];\n        let sizeDelta = 0;\n        let collectionParents = new SortedSet((l, r) => primitiveComparator(l.canonicalString(), r.canonicalString()));\n        this.changes.forEach((key, documentChange) => {\n            const previousDoc = this.documentStates.get(key);\n            promises.push(this.documentCache.removeEntry(transaction, key, previousDoc.readTime));\n            if (documentChange.isValidDocument()) {\n                const doc = toDbRemoteDocument(this.documentCache.serializer, documentChange);\n                collectionParents = collectionParents.add(key.path.popLast());\n                const size = dbDocumentSize(doc);\n                sizeDelta += size - previousDoc.size;\n                promises.push(this.documentCache.addEntry(transaction, key, doc));\n            }\n            else {\n                sizeDelta -= previousDoc.size;\n                if (this.trackRemovals) {\n                    // In order to track removals, we store a \"sentinel delete\" in the\n                    // RemoteDocumentCache. This entry is represented by a NoDocument\n                    // with a version of 0 and ignored by `maybeDecodeDocument()` but\n                    // preserved in `getNewDocumentChanges()`.\n                    const deletedDoc = toDbRemoteDocument(this.documentCache.serializer, documentChange.convertToNoDocument(SnapshotVersion.min()));\n                    promises.push(this.documentCache.addEntry(transaction, key, deletedDoc));\n                }\n            }\n        });\n        collectionParents.forEach(parent => {\n            promises.push(this.documentCache.indexManager.addToCollectionParentIndex(transaction, parent));\n        });\n        promises.push(this.documentCache.updateMetadata(transaction, sizeDelta));\n        return PersistencePromise.waitFor(promises);\n    }\n    getFromCache(transaction, documentKey) {\n        // Record the size of everything we load from the cache so we can compute a delta later.\n        return this.documentCache\n            .getSizedEntry(transaction, documentKey)\n            .next(getResult => {\n            this.documentStates.set(documentKey, {\n                size: getResult.size,\n                readTime: getResult.document.readTime\n            });\n            return getResult.document;\n        });\n    }\n    getAllFromCache(transaction, documentKeys) {\n        // Record the size of everything we load from the cache so we can compute\n        // a delta later.\n        return this.documentCache\n            .getSizedEntries(transaction, documentKeys)\n            .next(({ documents, sizeMap }) => {\n            // Note: `getAllFromCache` returns two maps instead of a single map from\n            // keys to `DocumentSizeEntry`s. This is to allow returning the\n            // `MutableDocumentMap` directly, without a conversion.\n            sizeMap.forEach((documentKey, size) => {\n                this.documentStates.set(documentKey, {\n                    size,\n                    readTime: documents.get(documentKey).readTime\n                });\n            });\n            return documents;\n        });\n    }\n}\nfunction documentGlobalStore(txn) {\n    return getStore(txn, DbRemoteDocumentGlobalStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */\nfunction remoteDocumentsStore(txn) {\n    return getStore(txn, DbRemoteDocumentStore);\n}\n/**\n * Returns a key that can be used for document lookups on the\n * `DbRemoteDocumentDocumentKeyIndex` index.\n */\nfunction dbKey(documentKey) {\n    const path = documentKey.path.toArray();\n    return [\n        /* prefix path */ path.slice(0, path.length - 2),\n        /* collection id */ path[path.length - 2],\n        /* document id */ path[path.length - 1]\n    ];\n}\n/**\n * Returns a key that can be used for document lookups via the primary key of\n * the DbRemoteDocument object store.\n */\nfunction dbReadTimeKey(documentKey, readTime) {\n    const path = documentKey.path.toArray();\n    return [\n        /* prefix path */ path.slice(0, path.length - 2),\n        /* collection id */ path[path.length - 2],\n        toDbTimestampKey(readTime),\n        /* document id */ path[path.length - 1]\n    ];\n}\n/**\n * Returns a key that can be used for document lookups on the\n * `DbRemoteDocumentDocumentCollectionGroupIndex` index.\n */\nfunction dbCollectionGroupKey(collectionGroup, offset) {\n    const path = offset.documentKey.path.toArray();\n    return [\n        /* collection id */ collectionGroup,\n        toDbTimestampKey(offset.readTime),\n        /* prefix path */ path.slice(0, path.length - 2),\n        /* document id */ path.length > 0 ? path[path.length - 1] : ''\n    ];\n}\n/**\n * Comparator that compares document keys according to the primary key sorting\n * used by the `DbRemoteDocumentDocument` store (by prefix path, collection id\n * and then document ID).\n *\n * Visible for testing.\n */\nfunction dbKeyComparator(l, r) {\n    const left = l.path.toArray();\n    const right = r.path.toArray();\n    // The ordering is based on https://chromium.googlesource.com/chromium/blink/+/fe5c21fef94dae71c1c3344775b8d8a7f7e6d9ec/Source/modules/indexeddb/IDBKey.cpp#74\n    let cmp = 0;\n    for (let i = 0; i < left.length - 2 && i < right.length - 2; ++i) {\n        cmp = primitiveComparator(left[i], right[i]);\n        if (cmp) {\n            return cmp;\n        }\n    }\n    cmp = primitiveComparator(left.length, right.length);\n    if (cmp) {\n        return cmp;\n    }\n    cmp = primitiveComparator(left[left.length - 2], right[right.length - 2]);\n    if (cmp) {\n        return cmp;\n    }\n    // TODO(b/329441702): Document IDs should be sorted by UTF-8 encoded byte\n    // order, but IndexedDB sorts strings lexicographically. Document ID\n    // comparison here still relies on primitive comparison to avoid mismatches\n    // observed in snapshot listeners with Unicode characters in documentIds\n    return primitiveComparator(left[left.length - 1], right[right.length - 1]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Schema Version for the Web client:\n * 1.  Initial version including Mutation Queue, Query Cache, and Remote\n *     Document Cache\n * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No\n *     longer required because migration 3 unconditionally clears it.\n * 3.  Dropped and re-created Query Cache to deal with cache corruption related\n *     to limbo resolution. Addresses\n *     https://github.com/firebase/firebase-ios-sdk/issues/1548\n * 4.  Multi-Tab Support.\n * 5.  Removal of held write acks.\n * 6.  Create document global for tracking document cache size.\n * 7.  Ensure every cached document has a sentinel row with a sequence number.\n * 8.  Add collection-parent index for Collection Group queries.\n * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than\n *     an auto-incrementing ID. This is required for Index-Free queries.\n * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.\n * 11. Add bundles and named_queries for bundle support.\n * 12. Add document overlays.\n * 13. Rewrite the keys of the remote document cache to allow for efficient\n *     document lookup via `getAll()`.\n * 14. Add overlays.\n * 15. Add indexing support.\n * 16. Parse timestamp strings before creating index entries.\n * 17. TODO(tomandersen)\n * 18. Encode key safe representations of IndexEntry in DbIndexEntryStore.\n */\nconst SCHEMA_VERSION = 18;\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a local view (overlay) of a document, and the fields that are\n * locally mutated.\n */\nclass OverlayedDocument {\n    constructor(overlayedDocument, \n    /**\n     * The fields that are locally mutated by patch mutations.\n     *\n     * If the overlayed\tdocument is from set or delete mutations, this is `null`.\n     * If there is no overlay (mutation) for the document, this is an empty `FieldMask`.\n     */\n    mutatedFields) {\n        this.overlayedDocument = overlayedDocument;\n        this.mutatedFields = mutatedFields;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */\nclass LocalDocumentsView {\n    constructor(remoteDocumentCache, mutationQueue, documentOverlayCache, indexManager) {\n        this.remoteDocumentCache = remoteDocumentCache;\n        this.mutationQueue = mutationQueue;\n        this.documentOverlayCache = documentOverlayCache;\n        this.indexManager = indexManager;\n    }\n    /**\n     * Get the local view of the document identified by `key`.\n     *\n     * @returns Local view of the document or null if we don't have any cached\n     * state for it.\n     */\n    getDocument(transaction, key) {\n        let overlay = null;\n        return this.documentOverlayCache\n            .getOverlay(transaction, key)\n            .next(value => {\n            overlay = value;\n            return this.remoteDocumentCache.getEntry(transaction, key);\n        })\n            .next(document => {\n            if (overlay !== null) {\n                mutationApplyToLocalView(overlay.mutation, document, FieldMask.empty(), Timestamp.now());\n            }\n            return document;\n        });\n    }\n    /**\n     * Gets the local view of the documents identified by `keys`.\n     *\n     * If we don't have cached state for a document in `keys`, a NoDocument will\n     * be stored for that key in the resulting set.\n     */\n    getDocuments(transaction, keys) {\n        return this.remoteDocumentCache\n            .getEntries(transaction, keys)\n            .next(docs => this.getLocalViewOfDocuments(transaction, docs, documentKeySet()).next(() => docs));\n    }\n    /**\n     * Similar to `getDocuments`, but creates the local view from the given\n     * `baseDocs` without retrieving documents from the local store.\n     *\n     * @param transaction - The transaction this operation is scoped to.\n     * @param docs - The documents to apply local mutations to get the local views.\n     * @param existenceStateChanged - The set of document keys whose existence state\n     *   is changed. This is useful to determine if some documents overlay needs\n     *   to be recalculated.\n     */\n    getLocalViewOfDocuments(transaction, docs, existenceStateChanged = documentKeySet()) {\n        const overlays = newOverlayMap();\n        return this.populateOverlays(transaction, overlays, docs).next(() => {\n            return this.computeViews(transaction, docs, overlays, existenceStateChanged).next(computeViewsResult => {\n                let result = documentMap();\n                computeViewsResult.forEach((documentKey, overlayedDocument) => {\n                    result = result.insert(documentKey, overlayedDocument.overlayedDocument);\n                });\n                return result;\n            });\n        });\n    }\n    /**\n     * Gets the overlayed documents for the given document map, which will include\n     * the local view of those documents and a `FieldMask` indicating which fields\n     * are mutated locally, `null` if overlay is a Set or Delete mutation.\n     */\n    getOverlayedDocuments(transaction, docs) {\n        const overlays = newOverlayMap();\n        return this.populateOverlays(transaction, overlays, docs).next(() => this.computeViews(transaction, docs, overlays, documentKeySet()));\n    }\n    /**\n     * Fetches the overlays for {@code docs} and adds them to provided overlay map\n     * if the map does not already contain an entry for the given document key.\n     */\n    populateOverlays(transaction, overlays, docs) {\n        const missingOverlays = [];\n        docs.forEach(key => {\n            if (!overlays.has(key)) {\n                missingOverlays.push(key);\n            }\n        });\n        return this.documentOverlayCache\n            .getOverlays(transaction, missingOverlays)\n            .next(result => {\n            result.forEach((key, val) => {\n                overlays.set(key, val);\n            });\n        });\n    }\n    /**\n     * Computes the local view for the given documents.\n     *\n     * @param docs - The documents to compute views for. It also has the base\n     *   version of the documents.\n     * @param overlays - The overlays that need to be applied to the given base\n     *   version of the documents.\n     * @param existenceStateChanged - A set of documents whose existence states\n     *   might have changed. This is used to determine if we need to re-calculate\n     *   overlays from mutation queues.\n     * @return A map represents the local documents view.\n     */\n    computeViews(transaction, docs, overlays, existenceStateChanged) {\n        let recalculateDocuments = mutableDocumentMap();\n        const mutatedFields = newDocumentKeyMap();\n        const results = newOverlayedDocumentMap();\n        docs.forEach((_, doc) => {\n            const overlay = overlays.get(doc.key);\n            // Recalculate an overlay if the document's existence state changed due to\n            // a remote event *and* the overlay is a PatchMutation. This is because\n            // document existence state can change if some patch mutation's\n            // preconditions are met.\n            // NOTE: we recalculate when `overlay` is undefined as well, because there\n            // might be a patch mutation whose precondition does not match before the\n            // change (hence overlay is undefined), but would now match.\n            if (existenceStateChanged.has(doc.key) &&\n                (overlay === undefined || overlay.mutation instanceof PatchMutation)) {\n                recalculateDocuments = recalculateDocuments.insert(doc.key, doc);\n            }\n            else if (overlay !== undefined) {\n                mutatedFields.set(doc.key, overlay.mutation.getFieldMask());\n                mutationApplyToLocalView(overlay.mutation, doc, overlay.mutation.getFieldMask(), Timestamp.now());\n            }\n            else {\n                // no overlay exists\n                // Using EMPTY to indicate there is no overlay for the document.\n                mutatedFields.set(doc.key, FieldMask.empty());\n            }\n        });\n        return this.recalculateAndSaveOverlays(transaction, recalculateDocuments).next(recalculatedFields => {\n            recalculatedFields.forEach((documentKey, mask) => mutatedFields.set(documentKey, mask));\n            docs.forEach((documentKey, document) => {\n                var _a;\n                return results.set(documentKey, new OverlayedDocument(document, (_a = mutatedFields.get(documentKey)) !== null && _a !== void 0 ? _a : null));\n            });\n            return results;\n        });\n    }\n    recalculateAndSaveOverlays(transaction, docs) {\n        const masks = newDocumentKeyMap();\n        // A reverse lookup map from batch id to the documents within that batch.\n        let documentsByBatchId = new SortedMap((key1, key2) => key1 - key2);\n        let processed = documentKeySet();\n        return this.mutationQueue\n            .getAllMutationBatchesAffectingDocumentKeys(transaction, docs)\n            .next(batches => {\n            for (const batch of batches) {\n                batch.keys().forEach(key => {\n                    const baseDoc = docs.get(key);\n                    if (baseDoc === null) {\n                        return;\n                    }\n                    let mask = masks.get(key) || FieldMask.empty();\n                    mask = batch.applyToLocalView(baseDoc, mask);\n                    masks.set(key, mask);\n                    const newSet = (documentsByBatchId.get(batch.batchId) || documentKeySet()).add(key);\n                    documentsByBatchId = documentsByBatchId.insert(batch.batchId, newSet);\n                });\n            }\n        })\n            .next(() => {\n            const promises = [];\n            // Iterate in descending order of batch IDs, and skip documents that are\n            // already saved.\n            const iter = documentsByBatchId.getReverseIterator();\n            while (iter.hasNext()) {\n                const entry = iter.getNext();\n                const batchId = entry.key;\n                const keys = entry.value;\n                const overlays = newMutationMap();\n                keys.forEach(key => {\n                    if (!processed.has(key)) {\n                        const overlayMutation = calculateOverlayMutation(docs.get(key), masks.get(key));\n                        if (overlayMutation !== null) {\n                            overlays.set(key, overlayMutation);\n                        }\n                        processed = processed.add(key);\n                    }\n                });\n                promises.push(this.documentOverlayCache.saveOverlays(transaction, batchId, overlays));\n            }\n            return PersistencePromise.waitFor(promises);\n        })\n            .next(() => masks);\n    }\n    /**\n     * Recalculates overlays by reading the documents from remote document cache\n     * first, and saves them after they are calculated.\n     */\n    recalculateAndSaveOverlaysForDocumentKeys(transaction, documentKeys) {\n        return this.remoteDocumentCache\n            .getEntries(transaction, documentKeys)\n            .next(docs => this.recalculateAndSaveOverlays(transaction, docs));\n    }\n    /**\n     * Performs a query against the local view of all documents.\n     *\n     * @param transaction - The persistence transaction.\n     * @param query - The query to match documents against.\n     * @param offset - Read time and key to start scanning by (exclusive).\n     * @param context - A optional tracker to keep a record of important details\n     *   during database local query execution.\n     */\n    getDocumentsMatchingQuery(transaction, query, offset, context) {\n        if (isDocumentQuery$1(query)) {\n            return this.getDocumentsMatchingDocumentQuery(transaction, query.path);\n        }\n        else if (isCollectionGroupQuery(query)) {\n            return this.getDocumentsMatchingCollectionGroupQuery(transaction, query, offset, context);\n        }\n        else {\n            return this.getDocumentsMatchingCollectionQuery(transaction, query, offset, context);\n        }\n    }\n    /**\n     * Given a collection group, returns the next documents that follow the provided offset, along\n     * with an updated batch ID.\n     *\n     * <p>The documents returned by this method are ordered by remote version from the provided\n     * offset. If there are no more remote documents after the provided offset, documents with\n     * mutations in order of batch id from the offset are returned. Since all documents in a batch are\n     * returned together, the total number of documents returned can exceed {@code count}.\n     *\n     * @param transaction\n     * @param collectionGroup The collection group for the documents.\n     * @param offset The offset to index into.\n     * @param count The number of documents to return\n     * @return A LocalWriteResult with the documents that follow the provided offset and the last processed batch id.\n     */\n    getNextDocuments(transaction, collectionGroup, offset, count) {\n        return this.remoteDocumentCache\n            .getAllFromCollectionGroup(transaction, collectionGroup, offset, count)\n            .next((originalDocs) => {\n            const overlaysPromise = count - originalDocs.size > 0\n                ? this.documentOverlayCache.getOverlaysForCollectionGroup(transaction, collectionGroup, offset.largestBatchId, count - originalDocs.size)\n                : PersistencePromise.resolve(newOverlayMap());\n            // The callsite will use the largest batch ID together with the latest read time to create\n            // a new index offset. Since we only process batch IDs if all remote documents have been read,\n            // no overlay will increase the overall read time. This is why we only need to special case\n            // the batch id.\n            let largestBatchId = INITIAL_LARGEST_BATCH_ID;\n            let modifiedDocs = originalDocs;\n            return overlaysPromise.next(overlays => {\n                return PersistencePromise.forEach(overlays, (key, overlay) => {\n                    if (largestBatchId < overlay.largestBatchId) {\n                        largestBatchId = overlay.largestBatchId;\n                    }\n                    if (originalDocs.get(key)) {\n                        return PersistencePromise.resolve();\n                    }\n                    return this.remoteDocumentCache\n                        .getEntry(transaction, key)\n                        .next(doc => {\n                        modifiedDocs = modifiedDocs.insert(key, doc);\n                    });\n                })\n                    .next(() => this.populateOverlays(transaction, overlays, originalDocs))\n                    .next(() => this.computeViews(transaction, modifiedDocs, overlays, documentKeySet()))\n                    .next(localDocs => ({\n                    batchId: largestBatchId,\n                    changes: convertOverlayedDocumentMapToDocumentMap(localDocs)\n                }));\n            });\n        });\n    }\n    getDocumentsMatchingDocumentQuery(transaction, docPath) {\n        // Just do a simple document lookup.\n        return this.getDocument(transaction, new DocumentKey(docPath)).next(document => {\n            let result = documentMap();\n            if (document.isFoundDocument()) {\n                result = result.insert(document.key, document);\n            }\n            return result;\n        });\n    }\n    getDocumentsMatchingCollectionGroupQuery(transaction, query, offset, context) {\n        const collectionId = query.collectionGroup;\n        let results = documentMap();\n        return this.indexManager\n            .getCollectionParents(transaction, collectionId)\n            .next(parents => {\n            // Perform a collection query against each parent that contains the\n            // collectionId and aggregate the results.\n            return PersistencePromise.forEach(parents, (parent) => {\n                const collectionQuery = asCollectionQueryAtPath(query, parent.child(collectionId));\n                return this.getDocumentsMatchingCollectionQuery(transaction, collectionQuery, offset, context).next(r => {\n                    r.forEach((key, doc) => {\n                        results = results.insert(key, doc);\n                    });\n                });\n            }).next(() => results);\n        });\n    }\n    getDocumentsMatchingCollectionQuery(transaction, query, offset, context) {\n        // Query the remote documents and overlay mutations.\n        let overlays;\n        return this.documentOverlayCache\n            .getOverlaysForCollection(transaction, query.path, offset.largestBatchId)\n            .next(result => {\n            overlays = result;\n            return this.remoteDocumentCache.getDocumentsMatchingQuery(transaction, query, offset, overlays, context);\n        })\n            .next(remoteDocuments => {\n            // As documents might match the query because of their overlay we need to\n            // include documents for all overlays in the initial document set.\n            overlays.forEach((_, overlay) => {\n                const key = overlay.getKey();\n                if (remoteDocuments.get(key) === null) {\n                    remoteDocuments = remoteDocuments.insert(key, MutableDocument.newInvalidDocument(key));\n                }\n            });\n            // Apply the overlays and match against the query.\n            let results = documentMap();\n            remoteDocuments.forEach((key, document) => {\n                const overlay = overlays.get(key);\n                if (overlay !== undefined) {\n                    mutationApplyToLocalView(overlay.mutation, document, FieldMask.empty(), Timestamp.now());\n                }\n                // Finally, insert the documents that still match the query\n                if (queryMatches(query, document)) {\n                    results = results.insert(key, document);\n                }\n            });\n            return results;\n        });\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MemoryBundleCache {\n    constructor(serializer) {\n        this.serializer = serializer;\n        this.bundles = new Map();\n        this.namedQueries = new Map();\n    }\n    getBundleMetadata(transaction, bundleId) {\n        return PersistencePromise.resolve(this.bundles.get(bundleId));\n    }\n    saveBundleMetadata(transaction, bundleMetadata) {\n        this.bundles.set(bundleMetadata.id, fromBundleMetadata(bundleMetadata));\n        return PersistencePromise.resolve();\n    }\n    getNamedQuery(transaction, queryName) {\n        return PersistencePromise.resolve(this.namedQueries.get(queryName));\n    }\n    saveNamedQuery(transaction, query) {\n        this.namedQueries.set(query.name, fromProtoNamedQuery(query));\n        return PersistencePromise.resolve();\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory implementation of DocumentOverlayCache.\n */\nclass MemoryDocumentOverlayCache {\n    constructor() {\n        // A map sorted by DocumentKey, whose value is a pair of the largest batch id\n        // for the overlay and the overlay itself.\n        this.overlays = new SortedMap(DocumentKey.comparator);\n        this.overlayByBatchId = new Map();\n    }\n    getOverlay(transaction, key) {\n        return PersistencePromise.resolve(this.overlays.get(key));\n    }\n    getOverlays(transaction, keys) {\n        const result = newOverlayMap();\n        return PersistencePromise.forEach(keys, (key) => {\n            return this.getOverlay(transaction, key).next(overlay => {\n                if (overlay !== null) {\n                    result.set(key, overlay);\n                }\n            });\n        }).next(() => result);\n    }\n    saveOverlays(transaction, largestBatchId, overlays) {\n        overlays.forEach((_, mutation) => {\n            this.saveOverlay(transaction, largestBatchId, mutation);\n        });\n        return PersistencePromise.resolve();\n    }\n    removeOverlaysForBatchId(transaction, documentKeys, batchId) {\n        const keys = this.overlayByBatchId.get(batchId);\n        if (keys !== undefined) {\n            keys.forEach(key => (this.overlays = this.overlays.remove(key)));\n            this.overlayByBatchId.delete(batchId);\n        }\n        return PersistencePromise.resolve();\n    }\n    getOverlaysForCollection(transaction, collection, sinceBatchId) {\n        const result = newOverlayMap();\n        const immediateChildrenPathLength = collection.length + 1;\n        const prefix = new DocumentKey(collection.child(''));\n        const iter = this.overlays.getIteratorFrom(prefix);\n        while (iter.hasNext()) {\n            const entry = iter.getNext();\n            const overlay = entry.value;\n            const key = overlay.getKey();\n            if (!collection.isPrefixOf(key.path)) {\n                break;\n            }\n            // Documents from sub-collections\n            if (key.path.length !== immediateChildrenPathLength) {\n                continue;\n            }\n            if (overlay.largestBatchId > sinceBatchId) {\n                result.set(overlay.getKey(), overlay);\n            }\n        }\n        return PersistencePromise.resolve(result);\n    }\n    getOverlaysForCollectionGroup(transaction, collectionGroup, sinceBatchId, count) {\n        let batchIdToOverlays = new SortedMap((key1, key2) => key1 - key2);\n        const iter = this.overlays.getIterator();\n        while (iter.hasNext()) {\n            const entry = iter.getNext();\n            const overlay = entry.value;\n            const key = overlay.getKey();\n            if (key.getCollectionGroup() !== collectionGroup) {\n                continue;\n            }\n            if (overlay.largestBatchId > sinceBatchId) {\n                let overlaysForBatchId = batchIdToOverlays.get(overlay.largestBatchId);\n                if (overlaysForBatchId === null) {\n                    overlaysForBatchId = newOverlayMap();\n                    batchIdToOverlays = batchIdToOverlays.insert(overlay.largestBatchId, overlaysForBatchId);\n                }\n                overlaysForBatchId.set(overlay.getKey(), overlay);\n            }\n        }\n        const result = newOverlayMap();\n        const batchIter = batchIdToOverlays.getIterator();\n        while (batchIter.hasNext()) {\n            const entry = batchIter.getNext();\n            const overlays = entry.value;\n            overlays.forEach((key, overlay) => result.set(key, overlay));\n            if (result.size() >= count) {\n                break;\n            }\n        }\n        return PersistencePromise.resolve(result);\n    }\n    saveOverlay(transaction, largestBatchId, mutation) {\n        // Remove the association of the overlay to its batch id.\n        const existing = this.overlays.get(mutation.key);\n        if (existing !== null) {\n            const newSet = this.overlayByBatchId\n                .get(existing.largestBatchId)\n                .delete(mutation.key);\n            this.overlayByBatchId.set(existing.largestBatchId, newSet);\n        }\n        this.overlays = this.overlays.insert(mutation.key, new Overlay(largestBatchId, mutation));\n        // Create the association of this overlay to the given largestBatchId.\n        let batch = this.overlayByBatchId.get(largestBatchId);\n        if (batch === undefined) {\n            batch = documentKeySet();\n            this.overlayByBatchId.set(largestBatchId, batch);\n        }\n        this.overlayByBatchId.set(largestBatchId, batch.add(mutation.key));\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MemoryGlobalsCache {\n    constructor() {\n        this.sessionToken = ByteString.EMPTY_BYTE_STRING;\n    }\n    getSessionToken(transaction) {\n        return PersistencePromise.resolve(this.sessionToken);\n    }\n    setSessionToken(transaction, sessionToken) {\n        this.sessionToken = sessionToken;\n        return PersistencePromise.resolve();\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */\nclass ReferenceSet {\n    constructor() {\n        // A set of outstanding references to a document sorted by key.\n        this.refsByKey = new SortedSet(DocReference.compareByKey);\n        // A set of outstanding references to a document sorted by target id.\n        this.refsByTarget = new SortedSet(DocReference.compareByTargetId);\n    }\n    /** Returns true if the reference set contains no references. */\n    isEmpty() {\n        return this.refsByKey.isEmpty();\n    }\n    /** Adds a reference to the given document key for the given ID. */\n    addReference(key, id) {\n        const ref = new DocReference(key, id);\n        this.refsByKey = this.refsByKey.add(ref);\n        this.refsByTarget = this.refsByTarget.add(ref);\n    }\n    /** Add references to the given document keys for the given ID. */\n    addReferences(keys, id) {\n        keys.forEach(key => this.addReference(key, id));\n    }\n    /**\n     * Removes a reference to the given document key for the given\n     * ID.\n     */\n    removeReference(key, id) {\n        this.removeRef(new DocReference(key, id));\n    }\n    removeReferences(keys, id) {\n        keys.forEach(key => this.removeReference(key, id));\n    }\n    /**\n     * Clears all references with a given ID. Calls removeRef() for each key\n     * removed.\n     */\n    removeReferencesForId(id) {\n        const emptyKey = new DocumentKey(new ResourcePath([]));\n        const startRef = new DocReference(emptyKey, id);\n        const endRef = new DocReference(emptyKey, id + 1);\n        const keys = [];\n        this.refsByTarget.forEachInRange([startRef, endRef], ref => {\n            this.removeRef(ref);\n            keys.push(ref.key);\n        });\n        return keys;\n    }\n    removeAllReferences() {\n        this.refsByKey.forEach(ref => this.removeRef(ref));\n    }\n    removeRef(ref) {\n        this.refsByKey = this.refsByKey.delete(ref);\n        this.refsByTarget = this.refsByTarget.delete(ref);\n    }\n    referencesForId(id) {\n        const emptyKey = new DocumentKey(new ResourcePath([]));\n        const startRef = new DocReference(emptyKey, id);\n        const endRef = new DocReference(emptyKey, id + 1);\n        let keys = documentKeySet();\n        this.refsByTarget.forEachInRange([startRef, endRef], ref => {\n            keys = keys.add(ref.key);\n        });\n        return keys;\n    }\n    containsKey(key) {\n        const ref = new DocReference(key, 0);\n        const firstRef = this.refsByKey.firstAfterOrEqual(ref);\n        return firstRef !== null && key.isEqual(firstRef.key);\n    }\n}\nclass DocReference {\n    constructor(key, targetOrBatchId) {\n        this.key = key;\n        this.targetOrBatchId = targetOrBatchId;\n    }\n    /** Compare by key then by ID */\n    static compareByKey(left, right) {\n        return (DocumentKey.comparator(left.key, right.key) ||\n            primitiveComparator(left.targetOrBatchId, right.targetOrBatchId));\n    }\n    /** Compare by ID then by key */\n    static compareByTargetId(left, right) {\n        return (primitiveComparator(left.targetOrBatchId, right.targetOrBatchId) ||\n            DocumentKey.comparator(left.key, right.key));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MemoryMutationQueue {\n    constructor(indexManager, referenceDelegate) {\n        this.indexManager = indexManager;\n        this.referenceDelegate = referenceDelegate;\n        /**\n         * The set of all mutations that have been sent but not yet been applied to\n         * the backend.\n         */\n        this.mutationQueue = [];\n        /** Next value to use when assigning sequential IDs to each mutation batch. */\n        this.nextBatchId = 1;\n        /** An ordered mapping between documents and the mutations batch IDs. */\n        this.batchesByDocumentKey = new SortedSet(DocReference.compareByKey);\n    }\n    checkEmpty(transaction) {\n        return PersistencePromise.resolve(this.mutationQueue.length === 0);\n    }\n    addMutationBatch(transaction, localWriteTime, baseMutations, mutations) {\n        const batchId = this.nextBatchId;\n        this.nextBatchId++;\n        if (this.mutationQueue.length > 0) {\n            this.mutationQueue[this.mutationQueue.length - 1];\n        }\n        const batch = new MutationBatch(batchId, localWriteTime, baseMutations, mutations);\n        this.mutationQueue.push(batch);\n        // Track references by document key and index collection parents.\n        for (const mutation of mutations) {\n            this.batchesByDocumentKey = this.batchesByDocumentKey.add(new DocReference(mutation.key, batchId));\n            this.indexManager.addToCollectionParentIndex(transaction, mutation.key.path.popLast());\n        }\n        return PersistencePromise.resolve(batch);\n    }\n    lookupMutationBatch(transaction, batchId) {\n        return PersistencePromise.resolve(this.findMutationBatch(batchId));\n    }\n    getNextMutationBatchAfterBatchId(transaction, batchId) {\n        const nextBatchId = batchId + 1;\n        // The requested batchId may still be out of range so normalize it to the\n        // start of the queue.\n        const rawIndex = this.indexOfBatchId(nextBatchId);\n        const index = rawIndex < 0 ? 0 : rawIndex;\n        return PersistencePromise.resolve(this.mutationQueue.length > index ? this.mutationQueue[index] : null);\n    }\n    getHighestUnacknowledgedBatchId() {\n        return PersistencePromise.resolve(this.mutationQueue.length === 0 ? BATCHID_UNKNOWN : this.nextBatchId - 1);\n    }\n    getAllMutationBatches(transaction) {\n        return PersistencePromise.resolve(this.mutationQueue.slice());\n    }\n    getAllMutationBatchesAffectingDocumentKey(transaction, documentKey) {\n        const start = new DocReference(documentKey, 0);\n        const end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n        const result = [];\n        this.batchesByDocumentKey.forEachInRange([start, end], ref => {\n            const batch = this.findMutationBatch(ref.targetOrBatchId);\n            result.push(batch);\n        });\n        return PersistencePromise.resolve(result);\n    }\n    getAllMutationBatchesAffectingDocumentKeys(transaction, documentKeys) {\n        let uniqueBatchIDs = new SortedSet(primitiveComparator);\n        documentKeys.forEach(documentKey => {\n            const start = new DocReference(documentKey, 0);\n            const end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n            this.batchesByDocumentKey.forEachInRange([start, end], ref => {\n                uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n            });\n        });\n        return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));\n    }\n    getAllMutationBatchesAffectingQuery(transaction, query) {\n        // Use the query path as a prefix for testing if a document matches the\n        // query.\n        const prefix = query.path;\n        const immediateChildrenPathLength = prefix.length + 1;\n        // Construct a document reference for actually scanning the index. Unlike\n        // the prefix the document key in this reference must have an even number of\n        // segments. The empty segment can be used a suffix of the query path\n        // because it precedes all other segments in an ordered traversal.\n        let startPath = prefix;\n        if (!DocumentKey.isDocumentKey(startPath)) {\n            startPath = startPath.child('');\n        }\n        const start = new DocReference(new DocumentKey(startPath), 0);\n        // Find unique batchIDs referenced by all documents potentially matching the\n        // query.\n        let uniqueBatchIDs = new SortedSet(primitiveComparator);\n        this.batchesByDocumentKey.forEachWhile(ref => {\n            const rowKeyPath = ref.key.path;\n            if (!prefix.isPrefixOf(rowKeyPath)) {\n                return false;\n            }\n            else {\n                // Rows with document keys more than one segment longer than the query\n                // path can't be matches. For example, a query on 'rooms' can't match\n                // the document /rooms/abc/messages/xyx.\n                // TODO(mcg): we'll need a different scanner when we implement\n                // ancestor queries.\n                if (rowKeyPath.length === immediateChildrenPathLength) {\n                    uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n                }\n                return true;\n            }\n        }, start);\n        return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));\n    }\n    findMutationBatches(batchIDs) {\n        // Construct an array of matching batches, sorted by batchID to ensure that\n        // multiple mutations affecting the same document key are applied in order.\n        const result = [];\n        batchIDs.forEach(batchId => {\n            const batch = this.findMutationBatch(batchId);\n            if (batch !== null) {\n                result.push(batch);\n            }\n        });\n        return result;\n    }\n    removeMutationBatch(transaction, batch) {\n        // Find the position of the first batch for removal.\n        const batchIndex = this.indexOfExistingBatchId(batch.batchId, 'removed');\n        hardAssert(batchIndex === 0, 0xd6db);\n        this.mutationQueue.shift();\n        let references = this.batchesByDocumentKey;\n        return PersistencePromise.forEach(batch.mutations, (mutation) => {\n            const ref = new DocReference(mutation.key, batch.batchId);\n            references = references.delete(ref);\n            return this.referenceDelegate.markPotentiallyOrphaned(transaction, mutation.key);\n        }).next(() => {\n            this.batchesByDocumentKey = references;\n        });\n    }\n    removeCachedMutationKeys(batchId) {\n        // No-op since the memory mutation queue does not maintain a separate cache.\n    }\n    containsKey(txn, key) {\n        const ref = new DocReference(key, 0);\n        const firstRef = this.batchesByDocumentKey.firstAfterOrEqual(ref);\n        return PersistencePromise.resolve(key.isEqual(firstRef && firstRef.key));\n    }\n    performConsistencyCheck(txn) {\n        if (this.mutationQueue.length === 0) ;\n        return PersistencePromise.resolve();\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue and asserts that\n     * the resulting index is within the bounds of the queue.\n     *\n     * @param batchId - The batchId to search for\n     * @param action - A description of what the caller is doing, phrased in passive\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n     */\n    indexOfExistingBatchId(batchId, action) {\n        const index = this.indexOfBatchId(batchId);\n        return index;\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue. This operation\n     * is O(1).\n     *\n     * @returns The computed index of the batch with the given batchId, based on\n     * the state of the queue. Note this index can be negative if the requested\n     * batchId has already been removed from the queue or past the end of the\n     * queue if the batchId is larger than the last added batch.\n     */\n    indexOfBatchId(batchId) {\n        if (this.mutationQueue.length === 0) {\n            // As an index this is past the end of the queue\n            return 0;\n        }\n        // Examine the front of the queue to figure out the difference between the\n        // batchId and indexes in the array. Note that since the queue is ordered\n        // by batchId, if the first batch has a larger batchId then the requested\n        // batchId doesn't exist in the queue.\n        const firstBatchId = this.mutationQueue[0].batchId;\n        return batchId - firstBatchId;\n    }\n    /**\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\n     * other functions that uses this code easier to read and more efficient.\n     */\n    findMutationBatch(batchId) {\n        const index = this.indexOfBatchId(batchId);\n        if (index < 0 || index >= this.mutationQueue.length) {\n            return null;\n        }\n        const batch = this.mutationQueue[index];\n        return batch;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The smallest value representable by a 64-bit signed integer (long).\n */\nconst MIN_LONG_VALUE = '-9223372036854775808';\nfunction documentEntryMap() {\n    return new SortedMap(DocumentKey.comparator);\n}\n/**\n * The memory-only RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newMemoryRemoteDocumentCache()`.\n */\nclass MemoryRemoteDocumentCacheImpl {\n    /**\n     * @param sizer - Used to assess the size of a document. For eager GC, this is\n     * expected to just return 0 to avoid unnecessarily doing the work of\n     * calculating the size.\n     */\n    constructor(sizer) {\n        this.sizer = sizer;\n        /** Underlying cache of documents and their read times. */\n        this.docs = documentEntryMap();\n        /** Size of all cached documents. */\n        this.size = 0;\n    }\n    setIndexManager(indexManager) {\n        this.indexManager = indexManager;\n    }\n    /**\n     * Adds the supplied entry to the cache and updates the cache size as appropriate.\n     *\n     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */\n    addEntry(transaction, doc) {\n        const key = doc.key;\n        const entry = this.docs.get(key);\n        const previousSize = entry ? entry.size : 0;\n        const currentSize = this.sizer(doc);\n        this.docs = this.docs.insert(key, {\n            document: doc.mutableCopy(),\n            size: currentSize\n        });\n        this.size += currentSize - previousSize;\n        return this.indexManager.addToCollectionParentIndex(transaction, key.path.popLast());\n    }\n    /**\n     * Removes the specified entry from the cache and updates the cache size as appropriate.\n     *\n     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */\n    removeEntry(documentKey) {\n        const entry = this.docs.get(documentKey);\n        if (entry) {\n            this.docs = this.docs.remove(documentKey);\n            this.size -= entry.size;\n        }\n    }\n    getEntry(transaction, documentKey) {\n        const entry = this.docs.get(documentKey);\n        return PersistencePromise.resolve(entry\n            ? entry.document.mutableCopy()\n            : MutableDocument.newInvalidDocument(documentKey));\n    }\n    getEntries(transaction, documentKeys) {\n        let results = mutableDocumentMap();\n        documentKeys.forEach(documentKey => {\n            const entry = this.docs.get(documentKey);\n            results = results.insert(documentKey, entry\n                ? entry.document.mutableCopy()\n                : MutableDocument.newInvalidDocument(documentKey));\n        });\n        return PersistencePromise.resolve(results);\n    }\n    getDocumentsMatchingQuery(transaction, query, offset, mutatedDocs) {\n        let results = mutableDocumentMap();\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n        const collectionPath = query.path;\n        // Document keys are ordered first by numeric value (\"__id<Long>__\"),\n        // then lexicographically by string value. Start the iterator at the minimum\n        // possible Document key value.\n        const prefix = new DocumentKey(collectionPath.child('__id' + MIN_LONG_VALUE + '__'));\n        const iterator = this.docs.getIteratorFrom(prefix);\n        while (iterator.hasNext()) {\n            const { key, value: { document } } = iterator.getNext();\n            if (!collectionPath.isPrefixOf(key.path)) {\n                break;\n            }\n            if (key.path.length > collectionPath.length + 1) {\n                // Exclude entries from subcollections.\n                continue;\n            }\n            if (indexOffsetComparator(newIndexOffsetFromDocument(document), offset) <= 0) {\n                // The document sorts before the offset.\n                continue;\n            }\n            if (!mutatedDocs.has(document.key) && !queryMatches(query, document)) {\n                // The document cannot possibly match the query.\n                continue;\n            }\n            results = results.insert(document.key, document.mutableCopy());\n        }\n        return PersistencePromise.resolve(results);\n    }\n    getAllFromCollectionGroup(transaction, collectionGroup, offset, limit) {\n        // This method should only be called from the IndexBackfiller if persistence\n        // is enabled.\n        fail(0x251c);\n    }\n    forEachDocumentKey(transaction, f) {\n        return PersistencePromise.forEach(this.docs, (key) => f(key));\n    }\n    newChangeBuffer(options) {\n        // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps\n        // a separate changelog and does not need special handling for removals.\n        return new MemoryRemoteDocumentChangeBuffer(this);\n    }\n    getSize(txn) {\n        return PersistencePromise.resolve(this.size);\n    }\n}\n/**\n * Creates a new memory-only RemoteDocumentCache.\n *\n * @param sizer - Used to assess the size of a document. For eager GC, this is\n * expected to just return 0 to avoid unnecessarily doing the work of\n * calculating the size.\n */\nfunction newMemoryRemoteDocumentCache(sizer) {\n    return new MemoryRemoteDocumentCacheImpl(sizer);\n}\n/**\n * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.\n */\nclass MemoryRemoteDocumentChangeBuffer extends RemoteDocumentChangeBuffer {\n    constructor(documentCache) {\n        super();\n        this.documentCache = documentCache;\n    }\n    applyChanges(transaction) {\n        const promises = [];\n        this.changes.forEach((key, doc) => {\n            if (doc.isValidDocument()) {\n                promises.push(this.documentCache.addEntry(transaction, doc));\n            }\n            else {\n                this.documentCache.removeEntry(key);\n            }\n        });\n        return PersistencePromise.waitFor(promises);\n    }\n    getFromCache(transaction, documentKey) {\n        return this.documentCache.getEntry(transaction, documentKey);\n    }\n    getAllFromCache(transaction, documentKeys) {\n        return this.documentCache.getEntries(transaction, documentKeys);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MemoryTargetCache {\n    constructor(persistence) {\n        this.persistence = persistence;\n        /**\n         * Maps a target to the data about that target\n         */\n        this.targets = new ObjectMap(t => canonifyTarget(t), targetEquals);\n        /** The last received snapshot version. */\n        this.lastRemoteSnapshotVersion = SnapshotVersion.min();\n        /** The highest numbered target ID encountered. */\n        this.highestTargetId = 0;\n        /** The highest sequence number encountered. */\n        this.highestSequenceNumber = 0;\n        /**\n         * A ordered bidirectional mapping between documents and the remote target\n         * IDs.\n         */\n        this.references = new ReferenceSet();\n        this.targetCount = 0;\n        this.targetIdGenerator = TargetIdGenerator.forTargetCache();\n    }\n    forEachTarget(txn, f) {\n        this.targets.forEach((_, targetData) => f(targetData));\n        return PersistencePromise.resolve();\n    }\n    getLastRemoteSnapshotVersion(transaction) {\n        return PersistencePromise.resolve(this.lastRemoteSnapshotVersion);\n    }\n    getHighestSequenceNumber(transaction) {\n        return PersistencePromise.resolve(this.highestSequenceNumber);\n    }\n    allocateTargetId(transaction) {\n        this.highestTargetId = this.targetIdGenerator.next();\n        return PersistencePromise.resolve(this.highestTargetId);\n    }\n    setTargetsMetadata(transaction, highestListenSequenceNumber, lastRemoteSnapshotVersion) {\n        if (lastRemoteSnapshotVersion) {\n            this.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion;\n        }\n        if (highestListenSequenceNumber > this.highestSequenceNumber) {\n            this.highestSequenceNumber = highestListenSequenceNumber;\n        }\n        return PersistencePromise.resolve();\n    }\n    saveTargetData(targetData) {\n        this.targets.set(targetData.target, targetData);\n        const targetId = targetData.targetId;\n        if (targetId > this.highestTargetId) {\n            this.targetIdGenerator = new TargetIdGenerator(targetId);\n            this.highestTargetId = targetId;\n        }\n        if (targetData.sequenceNumber > this.highestSequenceNumber) {\n            this.highestSequenceNumber = targetData.sequenceNumber;\n        }\n    }\n    addTargetData(transaction, targetData) {\n        this.saveTargetData(targetData);\n        this.targetCount += 1;\n        return PersistencePromise.resolve();\n    }\n    updateTargetData(transaction, targetData) {\n        this.saveTargetData(targetData);\n        return PersistencePromise.resolve();\n    }\n    removeTargetData(transaction, targetData) {\n        this.targets.delete(targetData.target);\n        this.references.removeReferencesForId(targetData.targetId);\n        this.targetCount -= 1;\n        return PersistencePromise.resolve();\n    }\n    removeTargets(transaction, upperBound, activeTargetIds) {\n        let count = 0;\n        const removals = [];\n        this.targets.forEach((key, targetData) => {\n            if (targetData.sequenceNumber <= upperBound &&\n                activeTargetIds.get(targetData.targetId) === null) {\n                this.targets.delete(key);\n                removals.push(this.removeMatchingKeysForTargetId(transaction, targetData.targetId));\n                count++;\n            }\n        });\n        return PersistencePromise.waitFor(removals).next(() => count);\n    }\n    getTargetCount(transaction) {\n        return PersistencePromise.resolve(this.targetCount);\n    }\n    getTargetData(transaction, target) {\n        const targetData = this.targets.get(target) || null;\n        return PersistencePromise.resolve(targetData);\n    }\n    addMatchingKeys(txn, keys, targetId) {\n        this.references.addReferences(keys, targetId);\n        return PersistencePromise.resolve();\n    }\n    removeMatchingKeys(txn, keys, targetId) {\n        this.references.removeReferences(keys, targetId);\n        const referenceDelegate = this.persistence.referenceDelegate;\n        const promises = [];\n        if (referenceDelegate) {\n            keys.forEach(key => {\n                promises.push(referenceDelegate.markPotentiallyOrphaned(txn, key));\n            });\n        }\n        return PersistencePromise.waitFor(promises);\n    }\n    removeMatchingKeysForTargetId(txn, targetId) {\n        this.references.removeReferencesForId(targetId);\n        return PersistencePromise.resolve();\n    }\n    getMatchingKeysForTargetId(txn, targetId) {\n        const matchingKeys = this.references.referencesForId(targetId);\n        return PersistencePromise.resolve(matchingKeys);\n    }\n    containsKey(txn, key) {\n        return PersistencePromise.resolve(this.references.containsKey(key));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$d = 'MemoryPersistence';\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\nclass MemoryPersistence {\n    /**\n     * The constructor accepts a factory for creating a reference delegate. This\n     * allows both the delegate and this instance to have strong references to\n     * each other without having nullable fields that would then need to be\n     * checked or asserted on every access.\n     */\n    constructor(referenceDelegateFactory, serializer) {\n        this.mutationQueues = {};\n        this.overlays = {};\n        this.listenSequence = new ListenSequence(0);\n        this._started = false;\n        this._started = true;\n        this.globalsCache = new MemoryGlobalsCache();\n        this.referenceDelegate = referenceDelegateFactory(this);\n        this.targetCache = new MemoryTargetCache(this);\n        const sizer = (doc) => this.referenceDelegate.documentSize(doc);\n        this.indexManager = new MemoryIndexManager();\n        this.remoteDocumentCache = newMemoryRemoteDocumentCache(sizer);\n        this.serializer = new LocalSerializer(serializer);\n        this.bundleCache = new MemoryBundleCache(this.serializer);\n    }\n    start() {\n        return Promise.resolve();\n    }\n    shutdown() {\n        // No durable state to ensure is closed on shutdown.\n        this._started = false;\n        return Promise.resolve();\n    }\n    get started() {\n        return this._started;\n    }\n    setDatabaseDeletedListener() {\n        // No op.\n    }\n    setNetworkEnabled() {\n        // No op.\n    }\n    getIndexManager(user) {\n        // We do not currently support indices for memory persistence, so we can\n        // return the same shared instance of the memory index manager.\n        return this.indexManager;\n    }\n    getDocumentOverlayCache(user) {\n        let overlay = this.overlays[user.toKey()];\n        if (!overlay) {\n            overlay = new MemoryDocumentOverlayCache();\n            this.overlays[user.toKey()] = overlay;\n        }\n        return overlay;\n    }\n    getMutationQueue(user, indexManager) {\n        let queue = this.mutationQueues[user.toKey()];\n        if (!queue) {\n            queue = new MemoryMutationQueue(indexManager, this.referenceDelegate);\n            this.mutationQueues[user.toKey()] = queue;\n        }\n        return queue;\n    }\n    getGlobalsCache() {\n        return this.globalsCache;\n    }\n    getTargetCache() {\n        return this.targetCache;\n    }\n    getRemoteDocumentCache() {\n        return this.remoteDocumentCache;\n    }\n    getBundleCache() {\n        return this.bundleCache;\n    }\n    runTransaction(action, mode, transactionOperation) {\n        logDebug(LOG_TAG$d, 'Starting transaction:', action);\n        const txn = new MemoryTransaction(this.listenSequence.next());\n        this.referenceDelegate.onTransactionStarted();\n        return transactionOperation(txn)\n            .next(result => {\n            return this.referenceDelegate\n                .onTransactionCommitted(txn)\n                .next(() => result);\n        })\n            .toPromise()\n            .then(result => {\n            txn.raiseOnCommittedEvent();\n            return result;\n        });\n    }\n    mutationQueuesContainKey(transaction, key) {\n        return PersistencePromise.or(Object.values(this.mutationQueues).map(queue => () => queue.containsKey(transaction, key)));\n    }\n}\n/**\n * Memory persistence is not actually transactional, but future implementations\n * may have transaction-scoped state.\n */\nclass MemoryTransaction extends PersistenceTransaction {\n    constructor(currentSequenceNumber) {\n        super();\n        this.currentSequenceNumber = currentSequenceNumber;\n    }\n}\nclass MemoryEagerDelegate {\n    constructor(persistence) {\n        this.persistence = persistence;\n        /** Tracks all documents that are active in Query views. */\n        this.localViewReferences = new ReferenceSet();\n        /** The list of documents that are potentially GCed after each transaction. */\n        this._orphanedDocuments = null;\n    }\n    static factory(persistence) {\n        return new MemoryEagerDelegate(persistence);\n    }\n    get orphanedDocuments() {\n        if (!this._orphanedDocuments) {\n            throw fail(0xee44);\n        }\n        else {\n            return this._orphanedDocuments;\n        }\n    }\n    addReference(txn, targetId, key) {\n        this.localViewReferences.addReference(key, targetId);\n        this.orphanedDocuments.delete(key.toString());\n        return PersistencePromise.resolve();\n    }\n    removeReference(txn, targetId, key) {\n        this.localViewReferences.removeReference(key, targetId);\n        this.orphanedDocuments.add(key.toString());\n        return PersistencePromise.resolve();\n    }\n    markPotentiallyOrphaned(txn, key) {\n        this.orphanedDocuments.add(key.toString());\n        return PersistencePromise.resolve();\n    }\n    removeTarget(txn, targetData) {\n        const orphaned = this.localViewReferences.removeReferencesForId(targetData.targetId);\n        orphaned.forEach(key => this.orphanedDocuments.add(key.toString()));\n        const cache = this.persistence.getTargetCache();\n        return cache\n            .getMatchingKeysForTargetId(txn, targetData.targetId)\n            .next(keys => {\n            keys.forEach(key => this.orphanedDocuments.add(key.toString()));\n        })\n            .next(() => cache.removeTargetData(txn, targetData));\n    }\n    onTransactionStarted() {\n        this._orphanedDocuments = new Set();\n    }\n    onTransactionCommitted(txn) {\n        // Remove newly orphaned documents.\n        const cache = this.persistence.getRemoteDocumentCache();\n        const changeBuffer = cache.newChangeBuffer();\n        return PersistencePromise.forEach(this.orphanedDocuments, (path) => {\n            const key = DocumentKey.fromPath(path);\n            return this.isReferenced(txn, key).next(isReferenced => {\n                if (!isReferenced) {\n                    changeBuffer.removeEntry(key, SnapshotVersion.min());\n                }\n            });\n        }).next(() => {\n            this._orphanedDocuments = null;\n            return changeBuffer.apply(txn);\n        });\n    }\n    updateLimboDocument(txn, key) {\n        return this.isReferenced(txn, key).next(isReferenced => {\n            if (isReferenced) {\n                this.orphanedDocuments.delete(key.toString());\n            }\n            else {\n                this.orphanedDocuments.add(key.toString());\n            }\n        });\n    }\n    documentSize(doc) {\n        // For eager GC, we don't care about the document size, there are no size thresholds.\n        return 0;\n    }\n    isReferenced(txn, key) {\n        return PersistencePromise.or([\n            () => PersistencePromise.resolve(this.localViewReferences.containsKey(key)),\n            () => this.persistence.getTargetCache().containsKey(txn, key),\n            () => this.persistence.mutationQueuesContainKey(txn, key)\n        ]);\n    }\n}\nclass MemoryLruDelegate {\n    constructor(persistence, lruParams) {\n        this.persistence = persistence;\n        this.orphanedSequenceNumbers = new ObjectMap(k => encodeResourcePath(k.path), (l, r) => l.isEqual(r));\n        this.garbageCollector = newLruGarbageCollector(this, lruParams);\n    }\n    static factory(persistence, lruParams) {\n        return new MemoryLruDelegate(persistence, lruParams);\n    }\n    // No-ops, present so memory persistence doesn't have to care which delegate\n    // it has.\n    onTransactionStarted() { }\n    onTransactionCommitted(txn) {\n        return PersistencePromise.resolve();\n    }\n    forEachTarget(txn, f) {\n        return this.persistence.getTargetCache().forEachTarget(txn, f);\n    }\n    getSequenceNumberCount(txn) {\n        const docCountPromise = this.orphanedDocumentCount(txn);\n        const targetCountPromise = this.persistence\n            .getTargetCache()\n            .getTargetCount(txn);\n        return targetCountPromise.next(targetCount => docCountPromise.next(docCount => targetCount + docCount));\n    }\n    orphanedDocumentCount(txn) {\n        let orphanedCount = 0;\n        return this.forEachOrphanedDocumentSequenceNumber(txn, _ => {\n            orphanedCount++;\n        }).next(() => orphanedCount);\n    }\n    forEachOrphanedDocumentSequenceNumber(txn, f) {\n        return PersistencePromise.forEach(this.orphanedSequenceNumbers, (key, sequenceNumber) => {\n            // Pass in the exact sequence number as the upper bound so we know it won't be pinned by\n            // being too recent.\n            return this.isPinned(txn, key, sequenceNumber).next(isPinned => {\n                if (!isPinned) {\n                    return f(sequenceNumber);\n                }\n                else {\n                    return PersistencePromise.resolve();\n                }\n            });\n        });\n    }\n    removeTargets(txn, upperBound, activeTargetIds) {\n        return this.persistence\n            .getTargetCache()\n            .removeTargets(txn, upperBound, activeTargetIds);\n    }\n    removeOrphanedDocuments(txn, upperBound) {\n        let count = 0;\n        const cache = this.persistence.getRemoteDocumentCache();\n        const changeBuffer = cache.newChangeBuffer();\n        const p = cache.forEachDocumentKey(txn, key => {\n            return this.isPinned(txn, key, upperBound).next(isPinned => {\n                if (!isPinned) {\n                    count++;\n                    changeBuffer.removeEntry(key, SnapshotVersion.min());\n                }\n            });\n        });\n        return p.next(() => changeBuffer.apply(txn)).next(() => count);\n    }\n    markPotentiallyOrphaned(txn, key) {\n        this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n        return PersistencePromise.resolve();\n    }\n    removeTarget(txn, targetData) {\n        const updated = targetData.withSequenceNumber(txn.currentSequenceNumber);\n        return this.persistence.getTargetCache().updateTargetData(txn, updated);\n    }\n    addReference(txn, targetId, key) {\n        this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n        return PersistencePromise.resolve();\n    }\n    removeReference(txn, targetId, key) {\n        this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n        return PersistencePromise.resolve();\n    }\n    updateLimboDocument(txn, key) {\n        this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n        return PersistencePromise.resolve();\n    }\n    documentSize(document) {\n        let documentSize = document.key.toString().length;\n        if (document.isFoundDocument()) {\n            documentSize += estimateByteSize(document.data.value);\n        }\n        return documentSize;\n    }\n    isPinned(txn, key, upperBound) {\n        return PersistencePromise.or([\n            () => this.persistence.mutationQueuesContainKey(txn, key),\n            () => this.persistence.getTargetCache().containsKey(txn, key),\n            () => {\n                const orphanedAt = this.orphanedSequenceNumbers.get(key);\n                return PersistencePromise.resolve(orphanedAt !== undefined && orphanedAt > upperBound);\n            }\n        ]);\n    }\n    getCacheSize(txn) {\n        return this.persistence.getRemoteDocumentCache().getSize(txn);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Performs database creation and schema upgrades. */\nclass SchemaConverter {\n    constructor(serializer) {\n        this.serializer = serializer;\n    }\n    /**\n     * Performs database creation and schema upgrades.\n     *\n     * Note that in production, this method is only ever used to upgrade the schema\n     * to SCHEMA_VERSION. Different values of toVersion are only used for testing\n     * and local feature development.\n     */\n    createOrUpgrade(db, txn, fromVersion, toVersion) {\n        const simpleDbTransaction = new SimpleDbTransaction('createOrUpgrade', txn);\n        if (fromVersion < 1 && toVersion >= 1) {\n            createPrimaryClientStore(db);\n            createMutationQueue(db);\n            createQueryCache(db);\n            createLegacyRemoteDocumentCache(db);\n        }\n        // Migration 2 to populate the targetGlobal object no longer needed since\n        // migration 3 unconditionally clears it.\n        let p = PersistencePromise.resolve();\n        if (fromVersion < 3 && toVersion >= 3) {\n            // Brand new clients don't need to drop and recreate--only clients that\n            // potentially have corrupt data.\n            if (fromVersion !== 0) {\n                dropQueryCache(db);\n                createQueryCache(db);\n            }\n            p = p.next(() => writeEmptyTargetGlobalEntry(simpleDbTransaction));\n        }\n        if (fromVersion < 4 && toVersion >= 4) {\n            if (fromVersion !== 0) {\n                // Schema version 3 uses auto-generated keys to generate globally unique\n                // mutation batch IDs (this was previously ensured internally by the\n                // client). To migrate to the new schema, we have to read all mutations\n                // and write them back out. We preserve the existing batch IDs to guarantee\n                // consistency with other object stores. Any further mutation batch IDs will\n                // be auto-generated.\n                p = p.next(() => upgradeMutationBatchSchemaAndMigrateData(db, simpleDbTransaction));\n            }\n            p = p.next(() => {\n                createClientMetadataStore(db);\n            });\n        }\n        if (fromVersion < 5 && toVersion >= 5) {\n            p = p.next(() => this.removeAcknowledgedMutations(simpleDbTransaction));\n        }\n        if (fromVersion < 6 && toVersion >= 6) {\n            p = p.next(() => {\n                createDocumentGlobalStore(db);\n                return this.addDocumentGlobal(simpleDbTransaction);\n            });\n        }\n        if (fromVersion < 7 && toVersion >= 7) {\n            p = p.next(() => this.ensureSequenceNumbers(simpleDbTransaction));\n        }\n        if (fromVersion < 8 && toVersion >= 8) {\n            p = p.next(() => this.createCollectionParentIndex(db, simpleDbTransaction));\n        }\n        if (fromVersion < 9 && toVersion >= 9) {\n            p = p.next(() => {\n                // Multi-Tab used to manage its own changelog, but this has been moved\n                // to the DbRemoteDocument object store itself. Since the previous change\n                // log only contained transient data, we can drop its object store.\n                dropRemoteDocumentChangesStore(db);\n                // Note: Schema version 9 used to create a read time index for the\n                // RemoteDocumentCache. This is now done with schema version 13.\n            });\n        }\n        if (fromVersion < 10 && toVersion >= 10) {\n            p = p.next(() => this.rewriteCanonicalIds(simpleDbTransaction));\n        }\n        if (fromVersion < 11 && toVersion >= 11) {\n            p = p.next(() => {\n                createBundlesStore(db);\n                createNamedQueriesStore(db);\n            });\n        }\n        if (fromVersion < 12 && toVersion >= 12) {\n            p = p.next(() => {\n                createDocumentOverlayStore(db);\n            });\n        }\n        if (fromVersion < 13 && toVersion >= 13) {\n            p = p\n                .next(() => createRemoteDocumentCache(db))\n                .next(() => this.rewriteRemoteDocumentCache(db, simpleDbTransaction))\n                .next(() => db.deleteObjectStore(DbRemoteDocumentStore$1));\n        }\n        if (fromVersion < 14 && toVersion >= 14) {\n            p = p.next(() => this.runOverlayMigration(db, simpleDbTransaction));\n        }\n        if (fromVersion < 15 && toVersion >= 15) {\n            p = p.next(() => createFieldIndex(db));\n        }\n        if (fromVersion < 16 && toVersion >= 16) {\n            // Clear the object stores to remove possibly corrupted index entries\n            p = p\n                .next(() => {\n                const indexStateStore = txn.objectStore(DbIndexStateStore);\n                indexStateStore.clear();\n            })\n                .next(() => {\n                const indexEntryStore = txn.objectStore(DbIndexEntryStore);\n                indexEntryStore.clear();\n            });\n        }\n        if (fromVersion < 17 && toVersion >= 17) {\n            p = p.next(() => {\n                createGlobalsStore(db);\n            });\n        }\n        if (fromVersion < 18 && toVersion >= 18) {\n            // Clear the IndexEntryStores on WebKit and Safari to remove possibly\n            // corrupted index entries\n            if (isSafariOrWebkit()) {\n                p = p\n                    .next(() => {\n                    const indexStateStore = txn.objectStore(DbIndexStateStore);\n                    indexStateStore.clear();\n                })\n                    .next(() => {\n                    const indexEntryStore = txn.objectStore(DbIndexEntryStore);\n                    indexEntryStore.clear();\n                });\n            }\n        }\n        return p;\n    }\n    addDocumentGlobal(txn) {\n        let byteSize = 0;\n        return txn\n            .store(DbRemoteDocumentStore$1)\n            .iterate((_, doc) => {\n            byteSize += dbDocumentSize(doc);\n        })\n            .next(() => {\n            const metadata = { byteSize };\n            return txn\n                .store(DbRemoteDocumentGlobalStore)\n                .put(DbRemoteDocumentGlobalKey, metadata);\n        });\n    }\n    removeAcknowledgedMutations(txn) {\n        const queuesStore = txn.store(DbMutationQueueStore);\n        const mutationsStore = txn.store(DbMutationBatchStore);\n        return queuesStore.loadAll().next(queues => {\n            return PersistencePromise.forEach(queues, (queue) => {\n                const range = IDBKeyRange.bound([queue.userId, BATCHID_UNKNOWN], [queue.userId, queue.lastAcknowledgedBatchId]);\n                return mutationsStore\n                    .loadAll(DbMutationBatchUserMutationsIndex, range)\n                    .next(dbBatches => {\n                    return PersistencePromise.forEach(dbBatches, (dbBatch) => {\n                        hardAssert(dbBatch.userId === queue.userId, 0x48da, `Cannot process batch from unexpected user`, { batchId: dbBatch.batchId });\n                        const batch = fromDbMutationBatch(this.serializer, dbBatch);\n                        return removeMutationBatch(txn, queue.userId, batch).next(() => { });\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * Ensures that every document in the remote document cache has a corresponding sentinel row\n     * with a sequence number. Missing rows are given the most recently used sequence number.\n     */\n    ensureSequenceNumbers(txn) {\n        const documentTargetStore = txn.store(DbTargetDocumentStore);\n        const documentsStore = txn.store(DbRemoteDocumentStore$1);\n        const globalTargetStore = txn.store(DbTargetGlobalStore);\n        return globalTargetStore.get(DbTargetGlobalKey).next(metadata => {\n            const writeSentinelKey = (path) => {\n                return documentTargetStore.put({\n                    targetId: 0,\n                    path: encodeResourcePath(path),\n                    sequenceNumber: metadata.highestListenSequenceNumber\n                });\n            };\n            const promises = [];\n            return documentsStore\n                .iterate((key, doc) => {\n                const path = new ResourcePath(key);\n                const docSentinelKey = sentinelKey(path);\n                promises.push(documentTargetStore.get(docSentinelKey).next(maybeSentinel => {\n                    if (!maybeSentinel) {\n                        return writeSentinelKey(path);\n                    }\n                    else {\n                        return PersistencePromise.resolve();\n                    }\n                }));\n            })\n                .next(() => PersistencePromise.waitFor(promises));\n        });\n    }\n    createCollectionParentIndex(db, txn) {\n        // Create the index.\n        db.createObjectStore(DbCollectionParentStore, {\n            keyPath: DbCollectionParentKeyPath\n        });\n        const collectionParentsStore = txn.store(DbCollectionParentStore);\n        // Helper to add an index entry iff we haven't already written it.\n        const cache = new MemoryCollectionParentIndex();\n        const addEntry = (collectionPath) => {\n            if (cache.add(collectionPath)) {\n                const collectionId = collectionPath.lastSegment();\n                const parentPath = collectionPath.popLast();\n                return collectionParentsStore.put({\n                    collectionId,\n                    parent: encodeResourcePath(parentPath)\n                });\n            }\n        };\n        // Index existing remote documents.\n        return txn\n            .store(DbRemoteDocumentStore$1)\n            .iterate({ keysOnly: true }, (pathSegments, _) => {\n            const path = new ResourcePath(pathSegments);\n            return addEntry(path.popLast());\n        })\n            .next(() => {\n            // Index existing mutations.\n            return txn\n                .store(DbDocumentMutationStore)\n                .iterate({ keysOnly: true }, ([userID, encodedPath, batchId], _) => {\n                const path = decodeResourcePath(encodedPath);\n                return addEntry(path.popLast());\n            });\n        });\n    }\n    rewriteCanonicalIds(txn) {\n        const targetStore = txn.store(DbTargetStore);\n        return targetStore.iterate((key, originalDbTarget) => {\n            const originalTargetData = fromDbTarget(originalDbTarget);\n            const updatedDbTarget = toDbTarget(this.serializer, originalTargetData);\n            return targetStore.put(updatedDbTarget);\n        });\n    }\n    rewriteRemoteDocumentCache(db, transaction) {\n        const legacyRemoteDocumentStore = transaction.store(DbRemoteDocumentStore$1);\n        const writes = [];\n        return legacyRemoteDocumentStore\n            .iterate((_, legacyDocument) => {\n            const remoteDocumentStore = transaction.store(DbRemoteDocumentStore);\n            const path = extractKey(legacyDocument).path.toArray();\n            const dbRemoteDocument = {\n                prefixPath: path.slice(0, path.length - 2),\n                collectionGroup: path[path.length - 2],\n                documentId: path[path.length - 1],\n                readTime: legacyDocument.readTime || [0, 0],\n                unknownDocument: legacyDocument.unknownDocument,\n                noDocument: legacyDocument.noDocument,\n                document: legacyDocument.document,\n                hasCommittedMutations: !!legacyDocument.hasCommittedMutations\n            };\n            writes.push(remoteDocumentStore.put(dbRemoteDocument));\n        })\n            .next(() => PersistencePromise.waitFor(writes));\n    }\n    runOverlayMigration(db, transaction) {\n        const mutationsStore = transaction.store(DbMutationBatchStore);\n        const remoteDocumentCache = newIndexedDbRemoteDocumentCache(this.serializer);\n        const memoryPersistence = new MemoryPersistence(MemoryEagerDelegate.factory, this.serializer.remoteSerializer);\n        return mutationsStore.loadAll().next(dbBatches => {\n            const userToDocumentSet = new Map();\n            dbBatches.forEach(dbBatch => {\n                var _a;\n                let documentSet = (_a = userToDocumentSet.get(dbBatch.userId)) !== null && _a !== void 0 ? _a : documentKeySet();\n                const batch = fromDbMutationBatch(this.serializer, dbBatch);\n                batch.keys().forEach(key => (documentSet = documentSet.add(key)));\n                userToDocumentSet.set(dbBatch.userId, documentSet);\n            });\n            return PersistencePromise.forEach(userToDocumentSet, (allDocumentKeysForUser, userId) => {\n                const user = new User(userId);\n                const documentOverlayCache = IndexedDbDocumentOverlayCache.forUser(this.serializer, user);\n                // NOTE: The index manager and the reference delegate are\n                // irrelevant for the purpose of recalculating and saving\n                // overlays. We can therefore simply use the memory\n                // implementation.\n                const indexManager = memoryPersistence.getIndexManager(user);\n                const mutationQueue = IndexedDbMutationQueue.forUser(user, this.serializer, indexManager, memoryPersistence.referenceDelegate);\n                const localDocumentsView = new LocalDocumentsView(remoteDocumentCache, mutationQueue, documentOverlayCache, indexManager);\n                return localDocumentsView\n                    .recalculateAndSaveOverlaysForDocumentKeys(new IndexedDbTransaction(transaction, ListenSequence.INVALID), allDocumentKeysForUser)\n                    .next();\n            });\n        });\n    }\n}\nfunction sentinelKey(path) {\n    return [0, encodeResourcePath(path)];\n}\nfunction createPrimaryClientStore(db) {\n    db.createObjectStore(DbPrimaryClientStore);\n}\nfunction createMutationQueue(db) {\n    db.createObjectStore(DbMutationQueueStore, {\n        keyPath: DbMutationQueueKeyPath\n    });\n    const mutationBatchesStore = db.createObjectStore(DbMutationBatchStore, {\n        keyPath: DbMutationBatchKeyPath,\n        autoIncrement: true\n    });\n    mutationBatchesStore.createIndex(DbMutationBatchUserMutationsIndex, DbMutationBatchUserMutationsKeyPath, { unique: true });\n    db.createObjectStore(DbDocumentMutationStore);\n}\n/**\n * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads\n * and rewrites all data.\n */\nfunction upgradeMutationBatchSchemaAndMigrateData(db, txn) {\n    const v1MutationsStore = txn.store(DbMutationBatchStore);\n    return v1MutationsStore.loadAll().next(existingMutations => {\n        db.deleteObjectStore(DbMutationBatchStore);\n        const mutationsStore = db.createObjectStore(DbMutationBatchStore, {\n            keyPath: DbMutationBatchKeyPath,\n            autoIncrement: true\n        });\n        mutationsStore.createIndex(DbMutationBatchUserMutationsIndex, DbMutationBatchUserMutationsKeyPath, { unique: true });\n        const v3MutationsStore = txn.store(DbMutationBatchStore);\n        const writeAll = existingMutations.map(mutation => v3MutationsStore.put(mutation));\n        return PersistencePromise.waitFor(writeAll);\n    });\n}\nfunction createLegacyRemoteDocumentCache(db) {\n    db.createObjectStore(DbRemoteDocumentStore$1);\n}\nfunction createRemoteDocumentCache(db) {\n    const remoteDocumentStore = db.createObjectStore(DbRemoteDocumentStore, {\n        keyPath: DbRemoteDocumentKeyPath\n    });\n    remoteDocumentStore.createIndex(DbRemoteDocumentDocumentKeyIndex, DbRemoteDocumentDocumentKeyIndexPath);\n    remoteDocumentStore.createIndex(DbRemoteDocumentCollectionGroupIndex, DbRemoteDocumentCollectionGroupIndexPath);\n}\nfunction createDocumentGlobalStore(db) {\n    db.createObjectStore(DbRemoteDocumentGlobalStore);\n}\nfunction createQueryCache(db) {\n    const targetDocumentsStore = db.createObjectStore(DbTargetDocumentStore, {\n        keyPath: DbTargetDocumentKeyPath\n    });\n    targetDocumentsStore.createIndex(DbTargetDocumentDocumentTargetsIndex, DbTargetDocumentDocumentTargetsKeyPath, { unique: true });\n    const targetStore = db.createObjectStore(DbTargetStore, {\n        keyPath: DbTargetKeyPath\n    });\n    // NOTE: This is unique only because the TargetId is the suffix.\n    targetStore.createIndex(DbTargetQueryTargetsIndexName, DbTargetQueryTargetsKeyPath, { unique: true });\n    db.createObjectStore(DbTargetGlobalStore);\n}\nfunction dropQueryCache(db) {\n    db.deleteObjectStore(DbTargetDocumentStore);\n    db.deleteObjectStore(DbTargetStore);\n    db.deleteObjectStore(DbTargetGlobalStore);\n}\nfunction dropRemoteDocumentChangesStore(db) {\n    if (db.objectStoreNames.contains('remoteDocumentChanges')) {\n        db.deleteObjectStore('remoteDocumentChanges');\n    }\n}\n/**\n * Creates the target global singleton row.\n *\n * @param txn - The version upgrade transaction for indexeddb\n */\nfunction writeEmptyTargetGlobalEntry(txn) {\n    const globalStore = txn.store(DbTargetGlobalStore);\n    const metadata = {\n        highestTargetId: 0,\n        highestListenSequenceNumber: 0,\n        lastRemoteSnapshotVersion: SnapshotVersion.min().toTimestamp(),\n        targetCount: 0\n    };\n    return globalStore.put(DbTargetGlobalKey, metadata);\n}\nfunction createClientMetadataStore(db) {\n    db.createObjectStore(DbClientMetadataStore, {\n        keyPath: DbClientMetadataKeyPath\n    });\n}\nfunction createBundlesStore(db) {\n    db.createObjectStore(DbBundleStore, {\n        keyPath: DbBundleKeyPath\n    });\n}\nfunction createNamedQueriesStore(db) {\n    db.createObjectStore(DbNamedQueryStore, {\n        keyPath: DbNamedQueryKeyPath\n    });\n}\nfunction createFieldIndex(db) {\n    const indexConfigurationStore = db.createObjectStore(DbIndexConfigurationStore, {\n        keyPath: DbIndexConfigurationKeyPath,\n        autoIncrement: true\n    });\n    indexConfigurationStore.createIndex(DbIndexConfigurationCollectionGroupIndex, DbIndexConfigurationCollectionGroupIndexPath, { unique: false });\n    const indexStateStore = db.createObjectStore(DbIndexStateStore, {\n        keyPath: DbIndexStateKeyPath\n    });\n    indexStateStore.createIndex(DbIndexStateSequenceNumberIndex, DbIndexStateSequenceNumberIndexPath, { unique: false });\n    const indexEntryStore = db.createObjectStore(DbIndexEntryStore, {\n        keyPath: DbIndexEntryKeyPath\n    });\n    indexEntryStore.createIndex(DbIndexEntryDocumentKeyIndex, DbIndexEntryDocumentKeyIndexPath, { unique: false });\n}\nfunction createDocumentOverlayStore(db) {\n    const documentOverlayStore = db.createObjectStore(DbDocumentOverlayStore, {\n        keyPath: DbDocumentOverlayKeyPath\n    });\n    documentOverlayStore.createIndex(DbDocumentOverlayCollectionPathOverlayIndex, DbDocumentOverlayCollectionPathOverlayIndexPath, { unique: false });\n    documentOverlayStore.createIndex(DbDocumentOverlayCollectionGroupOverlayIndex, DbDocumentOverlayCollectionGroupOverlayIndexPath, { unique: false });\n}\nfunction createGlobalsStore(db) {\n    db.createObjectStore(DbGlobalsStore, {\n        keyPath: DbGlobalsKeyPath\n    });\n}\nfunction extractKey(remoteDoc) {\n    if (remoteDoc.document) {\n        return new DocumentKey(ResourcePath.fromString(remoteDoc.document.name).popFirst(5));\n    }\n    else if (remoteDoc.noDocument) {\n        return DocumentKey.fromSegments(remoteDoc.noDocument.path);\n    }\n    else if (remoteDoc.unknownDocument) {\n        return DocumentKey.fromSegments(remoteDoc.unknownDocument.path);\n    }\n    else {\n        return fail(0x8faf);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$c = 'IndexedDbPersistence';\n/**\n * Oldest acceptable age in milliseconds for client metadata before the client\n * is considered inactive and its associated data is garbage collected.\n */\nconst MAX_CLIENT_AGE_MS = 30 * 60 * 1000; // 30 minutes\n/**\n * Oldest acceptable metadata age for clients that may participate in the\n * primary lease election. Clients that have not updated their client metadata\n * within 5 seconds are not eligible to receive a primary lease.\n */\nconst MAX_PRIMARY_ELIGIBLE_AGE_MS = 5000;\n/**\n * The interval at which clients will update their metadata, including\n * refreshing their primary lease if held or potentially trying to acquire it if\n * not held.\n *\n * Primary clients may opportunistically refresh their metadata earlier\n * if they're already performing an IndexedDB operation.\n */\nconst CLIENT_METADATA_REFRESH_INTERVAL_MS = 4000;\n/** User-facing error when the primary lease is required but not available. */\nconst PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG = 'Failed to obtain exclusive access to the persistence layer. To allow ' +\n    'shared access, multi-tab synchronization has to be enabled in all tabs. ' +\n    'If you are using `experimentalForceOwningTab:true`, make sure that only ' +\n    'one tab has persistence enabled at any given time.';\nconst UNSUPPORTED_PLATFORM_ERROR_MSG = 'This platform is either missing IndexedDB or is known to have ' +\n    'an incomplete implementation. Offline persistence has been disabled.';\n// The format of the LocalStorage key that stores zombied client is:\n//     firestore_zombie_<persistence_prefix>_<instance_key>\nconst ZOMBIED_CLIENTS_KEY_PREFIX = 'firestore_zombie';\n/**\n * The name of the main (and currently only) IndexedDB database. This name is\n * appended to the prefix provided to the IndexedDbPersistence constructor.\n */\nconst MAIN_DATABASE = 'main';\n/**\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\n * across sessions.\n *\n * On Web only, the Firestore SDKs support shared access to its persistence\n * layer. This allows multiple browser tabs to read and write to IndexedDb and\n * to synchronize state even without network connectivity. Shared access is\n * currently optional and not enabled unless all clients invoke\n * `enablePersistence()` with `{synchronizeTabs:true}`.\n *\n * In multi-tab mode, if multiple clients are active at the same time, the SDK\n * will designate one client as the “primary client”. An effort is made to pick\n * a visible, network-connected and active client, and this client is\n * responsible for letting other clients know about its presence. The primary\n * client writes a unique client-generated identifier (the client ID) to\n * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to\n * update this entry, another client can acquire the lease and take over as\n * primary.\n *\n * Some persistence operations in the SDK are designated as primary-client only\n * operations. This includes the acknowledgment of mutations and all updates of\n * remote documents. The effects of these operations are written to persistence\n * and then broadcast to other tabs via LocalStorage (see\n * `WebStorageSharedClientState`), which then refresh their state from\n * persistence.\n *\n * Similarly, the primary client listens to notifications sent by secondary\n * clients to discover persistence changes written by secondary clients, such as\n * the addition of new mutations and query targets.\n *\n * If multi-tab is not enabled and another tab already obtained the primary\n * lease, IndexedDbPersistence enters a failed state and all subsequent\n * operations will automatically fail.\n *\n * Additionally, there is an optimization so that when a tab is closed, the\n * primary lease is released immediately (this is especially important to make\n * sure that a refreshed tab is able to immediately re-acquire the primary\n * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload\n * since it is an asynchronous API. So in addition to attempting to give up the\n * lease, the leaseholder writes its client ID to a \"zombiedClient\" entry in\n * LocalStorage which acts as an indicator that another tab should go ahead and\n * take the primary lease immediately regardless of the current lease timestamp.\n *\n * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no\n * longer optional.\n */\nclass IndexedDbPersistence {\n    constructor(\n    /**\n     * Whether to synchronize the in-memory state of multiple tabs and share\n     * access to local persistence.\n     */\n    allowTabSynchronization, persistenceKey, clientId, lruParams, queue, window, document, serializer, sequenceNumberSyncer, \n    /**\n     * If set to true, forcefully obtains database access. Existing tabs will\n     * no longer be able to access IndexedDB.\n     */\n    forceOwningTab, schemaVersion = SCHEMA_VERSION) {\n        this.allowTabSynchronization = allowTabSynchronization;\n        this.persistenceKey = persistenceKey;\n        this.clientId = clientId;\n        this.queue = queue;\n        this.window = window;\n        this.document = document;\n        this.sequenceNumberSyncer = sequenceNumberSyncer;\n        this.forceOwningTab = forceOwningTab;\n        this.schemaVersion = schemaVersion;\n        this.listenSequence = null;\n        this._started = false;\n        this.isPrimary = false;\n        this.networkEnabled = true;\n        /** Our window.unload handler, if registered. */\n        this.windowUnloadHandler = null;\n        this.inForeground = false;\n        /** Our 'visibilitychange' listener if registered. */\n        this.documentVisibilityHandler = null;\n        /** The client metadata refresh task. */\n        this.clientMetadataRefresher = null;\n        /** The last time we garbage collected the client metadata object store. */\n        this.lastGarbageCollectionTime = Number.NEGATIVE_INFINITY;\n        /** A listener to notify on primary state changes. */\n        this.primaryStateListener = _ => Promise.resolve();\n        if (!IndexedDbPersistence.isAvailable()) {\n            throw new FirestoreError(Code.UNIMPLEMENTED, UNSUPPORTED_PLATFORM_ERROR_MSG);\n        }\n        this.referenceDelegate = new IndexedDbLruDelegateImpl(this, lruParams);\n        this.dbName = persistenceKey + MAIN_DATABASE;\n        this.serializer = new LocalSerializer(serializer);\n        this.simpleDb = new SimpleDb(this.dbName, this.schemaVersion, new SchemaConverter(this.serializer));\n        this.globalsCache = new IndexedDbGlobalsCache();\n        this.targetCache = new IndexedDbTargetCache(this.referenceDelegate, this.serializer);\n        this.remoteDocumentCache = newIndexedDbRemoteDocumentCache(this.serializer);\n        this.bundleCache = new IndexedDbBundleCache();\n        if (this.window && this.window.localStorage) {\n            this.webStorage = this.window.localStorage;\n        }\n        else {\n            this.webStorage = null;\n            if (forceOwningTab === false) {\n                logError(LOG_TAG$c, 'LocalStorage is unavailable. As a result, persistence may not work ' +\n                    'reliably. In particular enablePersistence() could fail immediately ' +\n                    'after refreshing the page.');\n            }\n        }\n    }\n    /**\n     * Attempt to start IndexedDb persistence.\n     *\n     * @returns Whether persistence was enabled.\n     */\n    start() {\n        // NOTE: This is expected to fail sometimes (in the case of another tab\n        // already having the persistence lock), so it's the first thing we should\n        // do.\n        return this.updateClientMetadataAndTryBecomePrimary()\n            .then(() => {\n            if (!this.isPrimary && !this.allowTabSynchronization) {\n                // Fail `start()` if `synchronizeTabs` is disabled and we cannot\n                // obtain the primary lease.\n                throw new FirestoreError(Code.FAILED_PRECONDITION, PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG);\n            }\n            this.attachVisibilityHandler();\n            this.attachWindowUnloadHook();\n            this.scheduleClientMetadataAndPrimaryLeaseRefreshes();\n            return this.runTransaction('getHighestListenSequenceNumber', 'readonly', txn => this.targetCache.getHighestSequenceNumber(txn));\n        })\n            .then(highestListenSequenceNumber => {\n            this.listenSequence = new ListenSequence(highestListenSequenceNumber, this.sequenceNumberSyncer);\n        })\n            .then(() => {\n            this._started = true;\n        })\n            .catch(reason => {\n            this.simpleDb && this.simpleDb.close();\n            return Promise.reject(reason);\n        });\n    }\n    /**\n     * Registers a listener that gets called when the primary state of the\n     * instance changes. Upon registering, this listener is invoked immediately\n     * with the current primary state.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n    setPrimaryStateListener(primaryStateListener) {\n        this.primaryStateListener = async (primaryState) => {\n            if (this.started) {\n                return primaryStateListener(primaryState);\n            }\n        };\n        return primaryStateListener(this.isPrimary);\n    }\n    /**\n     * Registers a listener that gets called when the underlying database receives\n     * an event indicating that it either has been deleted or is pending deletion\n     * and must be closed.\n     *\n     * For example, this callback will be called in the case that multi-tab\n     * IndexedDB persistence is in use and another tab calls\n     * clearIndexedDbPersistence(). In that case, this Firestore instance must\n     * close its IndexedDB connection in order to allow the deletion initiated by\n     * the other tab to proceed.\n     *\n     * This method may only be called once; subsequent invocations will result in\n     * an exception, refusing to supersede the previously-registered listener.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n    setDatabaseDeletedListener(databaseDeletedListener) {\n        this.simpleDb.setDatabaseDeletedListener(databaseDeletedListener);\n    }\n    /**\n     * Adjusts the current network state in the client's metadata, potentially\n     * affecting the primary lease.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n    setNetworkEnabled(networkEnabled) {\n        if (this.networkEnabled !== networkEnabled) {\n            this.networkEnabled = networkEnabled;\n            // Schedule a primary lease refresh for immediate execution. The eventual\n            // lease update will be propagated via `primaryStateListener`.\n            this.queue.enqueueAndForget(async () => {\n                if (this.started) {\n                    await this.updateClientMetadataAndTryBecomePrimary();\n                }\n            });\n        }\n    }\n    /**\n     * Updates the client metadata in IndexedDb and attempts to either obtain or\n     * extend the primary lease for the local client. Asynchronously notifies the\n     * primary state listener if the client either newly obtained or released its\n     * primary lease.\n     */\n    updateClientMetadataAndTryBecomePrimary() {\n        return this.runTransaction('updateClientMetadataAndTryBecomePrimary', 'readwrite', txn => {\n            const metadataStore = clientMetadataStore(txn);\n            return metadataStore\n                .put({\n                clientId: this.clientId,\n                updateTimeMs: Date.now(),\n                networkEnabled: this.networkEnabled,\n                inForeground: this.inForeground\n            })\n                .next(() => {\n                if (this.isPrimary) {\n                    return this.verifyPrimaryLease(txn).next(success => {\n                        if (!success) {\n                            this.isPrimary = false;\n                            this.queue.enqueueRetryable(() => this.primaryStateListener(false));\n                        }\n                    });\n                }\n            })\n                .next(() => this.canActAsPrimary(txn))\n                .next(canActAsPrimary => {\n                if (this.isPrimary && !canActAsPrimary) {\n                    return this.releasePrimaryLeaseIfHeld(txn).next(() => false);\n                }\n                else if (canActAsPrimary) {\n                    return this.acquireOrExtendPrimaryLease(txn).next(() => true);\n                }\n                else {\n                    return /* canActAsPrimary= */ false;\n                }\n            });\n        })\n            .catch(e => {\n            if (isIndexedDbTransactionError(e)) {\n                logDebug(LOG_TAG$c, 'Failed to extend owner lease: ', e);\n                // Proceed with the existing state. Any subsequent access to\n                // IndexedDB will verify the lease.\n                return this.isPrimary;\n            }\n            if (!this.allowTabSynchronization) {\n                throw e;\n            }\n            logDebug(LOG_TAG$c, 'Releasing owner lease after error during lease refresh', e);\n            return /* isPrimary= */ false;\n        })\n            .then(isPrimary => {\n            if (this.isPrimary !== isPrimary) {\n                this.queue.enqueueRetryable(() => this.primaryStateListener(isPrimary));\n            }\n            this.isPrimary = isPrimary;\n        });\n    }\n    verifyPrimaryLease(txn) {\n        const store = primaryClientStore(txn);\n        return store.get(DbPrimaryClientKey).next(primaryClient => {\n            return PersistencePromise.resolve(this.isLocalClient(primaryClient));\n        });\n    }\n    removeClientMetadata(txn) {\n        const metadataStore = clientMetadataStore(txn);\n        return metadataStore.delete(this.clientId);\n    }\n    /**\n     * If the garbage collection threshold has passed, prunes the\n     * RemoteDocumentChanges and the ClientMetadata store based on the last update\n     * time of all clients.\n     */\n    async maybeGarbageCollectMultiClientState() {\n        if (this.isPrimary &&\n            !this.isWithinAge(this.lastGarbageCollectionTime, MAX_CLIENT_AGE_MS)) {\n            this.lastGarbageCollectionTime = Date.now();\n            const inactiveClients = await this.runTransaction('maybeGarbageCollectMultiClientState', 'readwrite-primary', txn => {\n                const metadataStore = getStore(txn, DbClientMetadataStore);\n                return metadataStore.loadAll().next(existingClients => {\n                    const active = this.filterActiveClients(existingClients, MAX_CLIENT_AGE_MS);\n                    const inactive = existingClients.filter(client => active.indexOf(client) === -1);\n                    // Delete metadata for clients that are no longer considered active.\n                    return PersistencePromise.forEach(inactive, (inactiveClient) => metadataStore.delete(inactiveClient.clientId)).next(() => inactive);\n                });\n            }).catch(() => {\n                // Ignore primary lease violations or any other type of error. The next\n                // primary will run `maybeGarbageCollectMultiClientState()` again.\n                // We don't use `ignoreIfPrimaryLeaseLoss()` since we don't want to depend\n                // on LocalStore.\n                return [];\n            });\n            // Delete potential leftover entries that may continue to mark the\n            // inactive clients as zombied in LocalStorage.\n            // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for\n            // the client atomically, but we can't. So we opt to delete the IndexedDb\n            // entries first to avoid potentially reviving a zombied client.\n            if (this.webStorage) {\n                for (const inactiveClient of inactiveClients) {\n                    this.webStorage.removeItem(this.zombiedClientLocalStorageKey(inactiveClient.clientId));\n                }\n            }\n        }\n    }\n    /**\n     * Schedules a recurring timer to update the client metadata and to either\n     * extend or acquire the primary lease if the client is eligible.\n     */\n    scheduleClientMetadataAndPrimaryLeaseRefreshes() {\n        this.clientMetadataRefresher = this.queue.enqueueAfterDelay(\"client_metadata_refresh\" /* TimerId.ClientMetadataRefresh */, CLIENT_METADATA_REFRESH_INTERVAL_MS, () => {\n            return this.updateClientMetadataAndTryBecomePrimary()\n                .then(() => this.maybeGarbageCollectMultiClientState())\n                .then(() => this.scheduleClientMetadataAndPrimaryLeaseRefreshes());\n        });\n    }\n    /** Checks whether `client` is the local client. */\n    isLocalClient(client) {\n        return client ? client.ownerId === this.clientId : false;\n    }\n    /**\n     * Evaluate the state of all active clients and determine whether the local\n     * client is or can act as the holder of the primary lease. Returns whether\n     * the client is eligible for the lease, but does not actually acquire it.\n     * May return 'false' even if there is no active leaseholder and another\n     * (foreground) client should become leaseholder instead.\n     */\n    canActAsPrimary(txn) {\n        if (this.forceOwningTab) {\n            return PersistencePromise.resolve(true);\n        }\n        const store = primaryClientStore(txn);\n        return store\n            .get(DbPrimaryClientKey)\n            .next(currentPrimary => {\n            const currentLeaseIsValid = currentPrimary !== null &&\n                this.isWithinAge(currentPrimary.leaseTimestampMs, MAX_PRIMARY_ELIGIBLE_AGE_MS) &&\n                !this.isClientZombied(currentPrimary.ownerId);\n            // A client is eligible for the primary lease if:\n            // - its network is enabled and the client's tab is in the foreground.\n            // - its network is enabled and no other client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and the client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and no other client's tab is in\n            //   the foreground.\n            // - the `forceOwningTab` setting was passed in.\n            if (currentLeaseIsValid) {\n                if (this.isLocalClient(currentPrimary) && this.networkEnabled) {\n                    return true;\n                }\n                if (!this.isLocalClient(currentPrimary)) {\n                    if (!currentPrimary.allowTabSynchronization) {\n                        // Fail the `canActAsPrimary` check if the current leaseholder has\n                        // not opted into multi-tab synchronization. If this happens at\n                        // client startup, we reject the Promise returned by\n                        // `enablePersistence()` and the user can continue to use Firestore\n                        // with in-memory persistence.\n                        // If this fails during a lease refresh, we will instead block the\n                        // AsyncQueue from executing further operations. Note that this is\n                        // acceptable since mixing & matching different `synchronizeTabs`\n                        // settings is not supported.\n                        //\n                        // TODO(b/114226234): Remove this check when `synchronizeTabs` can\n                        // no longer be turned off.\n                        throw new FirestoreError(Code.FAILED_PRECONDITION, PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG);\n                    }\n                    return false;\n                }\n            }\n            if (this.networkEnabled && this.inForeground) {\n                return true;\n            }\n            return clientMetadataStore(txn)\n                .loadAll()\n                .next(existingClients => {\n                // Process all existing clients and determine whether at least one of\n                // them is better suited to obtain the primary lease.\n                const preferredCandidate = this.filterActiveClients(existingClients, MAX_PRIMARY_ELIGIBLE_AGE_MS).find(otherClient => {\n                    if (this.clientId !== otherClient.clientId) {\n                        const otherClientHasBetterNetworkState = !this.networkEnabled && otherClient.networkEnabled;\n                        const otherClientHasBetterVisibility = !this.inForeground && otherClient.inForeground;\n                        const otherClientHasSameNetworkState = this.networkEnabled === otherClient.networkEnabled;\n                        if (otherClientHasBetterNetworkState ||\n                            (otherClientHasBetterVisibility &&\n                                otherClientHasSameNetworkState)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n                return preferredCandidate === undefined;\n            });\n        })\n            .next(canActAsPrimary => {\n            if (this.isPrimary !== canActAsPrimary) {\n                logDebug(LOG_TAG$c, `Client ${canActAsPrimary ? 'is' : 'is not'} eligible for a primary lease.`);\n            }\n            return canActAsPrimary;\n        });\n    }\n    async shutdown() {\n        // The shutdown() operations are idempotent and can be called even when\n        // start() aborted (e.g. because it couldn't acquire the persistence lease).\n        this._started = false;\n        this.markClientZombied();\n        if (this.clientMetadataRefresher) {\n            this.clientMetadataRefresher.cancel();\n            this.clientMetadataRefresher = null;\n        }\n        this.detachVisibilityHandler();\n        this.detachWindowUnloadHook();\n        // Use `SimpleDb.runTransaction` directly to avoid failing if another tab\n        // has obtained the primary lease.\n        await this.simpleDb.runTransaction('shutdown', 'readwrite', [DbPrimaryClientStore, DbClientMetadataStore], simpleDbTxn => {\n            const persistenceTransaction = new IndexedDbTransaction(simpleDbTxn, ListenSequence.INVALID);\n            return this.releasePrimaryLeaseIfHeld(persistenceTransaction).next(() => this.removeClientMetadata(persistenceTransaction));\n        });\n        this.simpleDb.close();\n        // Remove the entry marking the client as zombied from LocalStorage since\n        // we successfully deleted its metadata from IndexedDb.\n        this.removeClientZombiedEntry();\n    }\n    /**\n     * Returns clients that are not zombied and have an updateTime within the\n     * provided threshold.\n     */\n    filterActiveClients(clients, activityThresholdMs) {\n        return clients.filter(client => this.isWithinAge(client.updateTimeMs, activityThresholdMs) &&\n            !this.isClientZombied(client.clientId));\n    }\n    /**\n     * Returns the IDs of the clients that are currently active. If multi-tab\n     * is not supported, returns an array that only contains the local client's\n     * ID.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n    getActiveClients() {\n        return this.runTransaction('getActiveClients', 'readonly', txn => {\n            return clientMetadataStore(txn)\n                .loadAll()\n                .next(clients => this.filterActiveClients(clients, MAX_CLIENT_AGE_MS).map(clientMetadata => clientMetadata.clientId));\n        });\n    }\n    get started() {\n        return this._started;\n    }\n    getGlobalsCache() {\n        return this.globalsCache;\n    }\n    getMutationQueue(user, indexManager) {\n        return IndexedDbMutationQueue.forUser(user, this.serializer, indexManager, this.referenceDelegate);\n    }\n    getTargetCache() {\n        return this.targetCache;\n    }\n    getRemoteDocumentCache() {\n        return this.remoteDocumentCache;\n    }\n    getIndexManager(user) {\n        return new IndexedDbIndexManager(user, this.serializer.remoteSerializer.databaseId);\n    }\n    getDocumentOverlayCache(user) {\n        return IndexedDbDocumentOverlayCache.forUser(this.serializer, user);\n    }\n    getBundleCache() {\n        return this.bundleCache;\n    }\n    runTransaction(action, mode, transactionOperation) {\n        logDebug(LOG_TAG$c, 'Starting transaction:', action);\n        const simpleDbMode = mode === 'readonly' ? 'readonly' : 'readwrite';\n        const objectStores = getObjectStores(this.schemaVersion);\n        let persistenceTransaction;\n        // Do all transactions as readwrite against all object stores, since we\n        // are the only reader/writer.\n        return this.simpleDb\n            .runTransaction(action, simpleDbMode, objectStores, simpleDbTxn => {\n            persistenceTransaction = new IndexedDbTransaction(simpleDbTxn, this.listenSequence\n                ? this.listenSequence.next()\n                : ListenSequence.INVALID);\n            if (mode === 'readwrite-primary') {\n                // While we merely verify that we have (or can acquire) the lease\n                // immediately, we wait to extend the primary lease until after\n                // executing transactionOperation(). This ensures that even if the\n                // transactionOperation takes a long time, we'll use a recent\n                // leaseTimestampMs in the extended (or newly acquired) lease.\n                return this.verifyPrimaryLease(persistenceTransaction)\n                    .next(holdsPrimaryLease => {\n                    if (holdsPrimaryLease) {\n                        return /* holdsPrimaryLease= */ true;\n                    }\n                    return this.canActAsPrimary(persistenceTransaction);\n                })\n                    .next(holdsPrimaryLease => {\n                    if (!holdsPrimaryLease) {\n                        logError(`Failed to obtain primary lease for action '${action}'.`);\n                        this.isPrimary = false;\n                        this.queue.enqueueRetryable(() => this.primaryStateListener(false));\n                        throw new FirestoreError(Code.FAILED_PRECONDITION, PRIMARY_LEASE_LOST_ERROR_MSG);\n                    }\n                    return transactionOperation(persistenceTransaction);\n                })\n                    .next(result => {\n                    return this.acquireOrExtendPrimaryLease(persistenceTransaction).next(() => result);\n                });\n            }\n            else {\n                return this.verifyAllowTabSynchronization(persistenceTransaction).next(() => transactionOperation(persistenceTransaction));\n            }\n        })\n            .then(result => {\n            persistenceTransaction.raiseOnCommittedEvent();\n            return result;\n        });\n    }\n    /**\n     * Verifies that the current tab is the primary leaseholder or alternatively\n     * that the leaseholder has opted into multi-tab synchronization.\n     */\n    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer\n    // be turned off.\n    verifyAllowTabSynchronization(txn) {\n        const store = primaryClientStore(txn);\n        return store.get(DbPrimaryClientKey).next(currentPrimary => {\n            const currentLeaseIsValid = currentPrimary !== null &&\n                this.isWithinAge(currentPrimary.leaseTimestampMs, MAX_PRIMARY_ELIGIBLE_AGE_MS) &&\n                !this.isClientZombied(currentPrimary.ownerId);\n            if (currentLeaseIsValid && !this.isLocalClient(currentPrimary)) {\n                if (!this.forceOwningTab &&\n                    (!this.allowTabSynchronization ||\n                        !currentPrimary.allowTabSynchronization)) {\n                    throw new FirestoreError(Code.FAILED_PRECONDITION, PRIMARY_LEASE_EXCLUSIVE_ERROR_MSG);\n                }\n            }\n        });\n    }\n    /**\n     * Obtains or extends the new primary lease for the local client. This\n     * method does not verify that the client is eligible for this lease.\n     */\n    acquireOrExtendPrimaryLease(txn) {\n        const newPrimary = {\n            ownerId: this.clientId,\n            allowTabSynchronization: this.allowTabSynchronization,\n            leaseTimestampMs: Date.now()\n        };\n        return primaryClientStore(txn).put(DbPrimaryClientKey, newPrimary);\n    }\n    static isAvailable() {\n        return SimpleDb.isAvailable();\n    }\n    /** Checks the primary lease and removes it if we are the current primary. */\n    releasePrimaryLeaseIfHeld(txn) {\n        const store = primaryClientStore(txn);\n        return store.get(DbPrimaryClientKey).next(primaryClient => {\n            if (this.isLocalClient(primaryClient)) {\n                logDebug(LOG_TAG$c, 'Releasing primary lease.');\n                return store.delete(DbPrimaryClientKey);\n            }\n            else {\n                return PersistencePromise.resolve();\n            }\n        });\n    }\n    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */\n    isWithinAge(updateTimeMs, maxAgeMs) {\n        const now = Date.now();\n        const minAcceptable = now - maxAgeMs;\n        const maxAcceptable = now;\n        if (updateTimeMs < minAcceptable) {\n            return false;\n        }\n        else if (updateTimeMs > maxAcceptable) {\n            logError(`Detected an update time that is in the future: ${updateTimeMs} > ${maxAcceptable}`);\n            return false;\n        }\n        return true;\n    }\n    attachVisibilityHandler() {\n        if (this.document !== null &&\n            typeof this.document.addEventListener === 'function') {\n            this.documentVisibilityHandler = () => {\n                this.queue.enqueueAndForget(() => {\n                    this.inForeground = this.document.visibilityState === 'visible';\n                    return this.updateClientMetadataAndTryBecomePrimary();\n                });\n            };\n            this.document.addEventListener('visibilitychange', this.documentVisibilityHandler);\n            this.inForeground = this.document.visibilityState === 'visible';\n        }\n    }\n    detachVisibilityHandler() {\n        if (this.documentVisibilityHandler) {\n            this.document.removeEventListener('visibilitychange', this.documentVisibilityHandler);\n            this.documentVisibilityHandler = null;\n        }\n    }\n    /**\n     * Attaches a window.unload handler that will synchronously write our\n     * clientId to a \"zombie client id\" location in LocalStorage. This can be used\n     * by tabs trying to acquire the primary lease to determine that the lease\n     * is no longer valid even if the timestamp is recent. This is particularly\n     * important for the refresh case (so the tab correctly re-acquires the\n     * primary lease). LocalStorage is used for this rather than IndexedDb because\n     * it is a synchronous API and so can be used reliably from  an unload\n     * handler.\n     */\n    attachWindowUnloadHook() {\n        var _a;\n        if (typeof ((_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener) === 'function') {\n            this.windowUnloadHandler = () => {\n                // Note: In theory, this should be scheduled on the AsyncQueue since it\n                // accesses internal state. We execute this code directly during shutdown\n                // to make sure it gets a chance to run.\n                this.markClientZombied();\n                const safariIndexdbBugVersionRegex = /(?:Version|Mobile)\\/1[456]/;\n                if (isSafari() &&\n                    (navigator.appVersion.match(safariIndexdbBugVersionRegex) ||\n                        navigator.userAgent.match(safariIndexdbBugVersionRegex))) {\n                    // On Safari 14, 15, and 16, we do not run any cleanup actions as it might\n                    // trigger a bug that prevents Safari from re-opening IndexedDB during\n                    // the next page load.\n                    // See https://bugs.webkit.org/show_bug.cgi?id=226547\n                    this.queue.enterRestrictedMode(/* purgeExistingTasks= */ true);\n                }\n                this.queue.enqueueAndForget(() => {\n                    // Attempt graceful shutdown (including releasing our primary lease),\n                    // but there's no guarantee it will complete.\n                    return this.shutdown();\n                });\n            };\n            this.window.addEventListener('pagehide', this.windowUnloadHandler);\n        }\n    }\n    detachWindowUnloadHook() {\n        if (this.windowUnloadHandler) {\n            this.window.removeEventListener('pagehide', this.windowUnloadHandler);\n            this.windowUnloadHandler = null;\n        }\n    }\n    /**\n     * Returns whether a client is \"zombied\" based on its LocalStorage entry.\n     * Clients become zombied when their tab closes without running all of the\n     * cleanup logic in `shutdown()`.\n     */\n    isClientZombied(clientId) {\n        var _a;\n        try {\n            const isZombied = ((_a = this.webStorage) === null || _a === void 0 ? void 0 : _a.getItem(this.zombiedClientLocalStorageKey(clientId))) !== null;\n            logDebug(LOG_TAG$c, `Client '${clientId}' ${isZombied ? 'is' : 'is not'} zombied in LocalStorage`);\n            return isZombied;\n        }\n        catch (e) {\n            // Gracefully handle if LocalStorage isn't working.\n            logError(LOG_TAG$c, 'Failed to get zombied client id.', e);\n            return false;\n        }\n    }\n    /**\n     * Record client as zombied (a client that had its tab closed). Zombied\n     * clients are ignored during primary tab selection.\n     */\n    markClientZombied() {\n        if (!this.webStorage) {\n            return;\n        }\n        try {\n            this.webStorage.setItem(this.zombiedClientLocalStorageKey(this.clientId), String(Date.now()));\n        }\n        catch (e) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            logError('Failed to set zombie client id.', e);\n        }\n    }\n    /** Removes the zombied client entry if it exists. */\n    removeClientZombiedEntry() {\n        if (!this.webStorage) {\n            return;\n        }\n        try {\n            this.webStorage.removeItem(this.zombiedClientLocalStorageKey(this.clientId));\n        }\n        catch (e) {\n            // Ignore\n        }\n    }\n    zombiedClientLocalStorageKey(clientId) {\n        return `${ZOMBIED_CLIENTS_KEY_PREFIX}_${this.persistenceKey}_${clientId}`;\n    }\n}\n/**\n * Helper to get a typed SimpleDbStore for the primary client object store.\n */\nfunction primaryClientStore(txn) {\n    return getStore(txn, DbPrimaryClientStore);\n}\n/**\n * Helper to get a typed SimpleDbStore for the client metadata object store.\n */\nfunction clientMetadataStore(txn) {\n    return getStore(txn, DbClientMetadataStore);\n}\n/**\n * Generates a string used as a prefix when storing data in IndexedDB and\n * LocalStorage.\n */\nfunction indexedDbStoragePrefix(databaseId, persistenceKey) {\n    // Use two different prefix formats:\n    //\n    //   * firestore / persistenceKey / projectID . databaseID / ...\n    //   * firestore / persistenceKey / projectID / ...\n    //\n    // projectIDs are DNS-compatible names and cannot contain dots\n    // so there's no danger of collisions.\n    let database = databaseId.projectId;\n    if (!databaseId.isDefaultDatabase) {\n        database += '.' + databaseId.database;\n    }\n    return 'firestore/' + persistenceKey + '/' + database + '/';\n}\nasync function indexedDbClearPersistence(persistenceKey) {\n    if (!SimpleDb.isAvailable()) {\n        return Promise.resolve();\n    }\n    const dbName = persistenceKey + MAIN_DATABASE;\n    await SimpleDb.delete(dbName);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Compares two array for equality using comparator. The method computes the\n * intersection and invokes `onAdd` for every element that is in `after` but not\n * `before`. `onRemove` is invoked for every element in `before` but missing\n * from `after`.\n *\n * The method creates a copy of both `before` and `after` and runs in O(n log\n * n), where n is the size of the two lists.\n *\n * @param before - The elements that exist in the original array.\n * @param after - The elements to diff against the original array.\n * @param comparator - The comparator for the elements in before and after.\n * @param onAdd - A function to invoke for every element that is part of `\n * after` but not `before`.\n * @param onRemove - A function to invoke for every element that is part of\n * `before` but not `after`.\n */\nfunction diffArrays(before, after, comparator, onAdd, onRemove) {\n    before = [...before];\n    after = [...after];\n    before.sort(comparator);\n    after.sort(comparator);\n    const bLen = before.length;\n    const aLen = after.length;\n    let a = 0;\n    let b = 0;\n    while (a < aLen && b < bLen) {\n        const cmp = comparator(before[b], after[a]);\n        if (cmp < 0) {\n            // The element was removed if the next element in our ordered\n            // walkthrough is only in `before`.\n            onRemove(before[b++]);\n        }\n        else if (cmp > 0) {\n            // The element was added if the next element in our ordered walkthrough\n            // is only in `after`.\n            onAdd(after[a++]);\n        }\n        else {\n            a++;\n            b++;\n        }\n    }\n    while (a < aLen) {\n        onAdd(after[a++]);\n    }\n    while (b < bLen) {\n        onRemove(before[b++]);\n    }\n}\n/**\n * Verifies equality for an array of primitives.\n *\n * @private\n * @internal\n * @param left Array of primitives.\n * @param right Array of primitives.\n * @return True if arrays are equal.\n */\nfunction isPrimitiveArrayEqual(left, right) {\n    if (left.length !== right.length) {\n        return false;\n    }\n    for (let i = 0; i < left.length; ++i) {\n        if (left[i] !== right[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$b = 'LocalStore';\n/**\n * The maximum time to leave a resume token buffered without writing it out.\n * This value is arbitrary: it's long enough to avoid several writes\n * (possibly indefinitely if updates come more frequently than this) but\n * short enough that restarting after crashing will still have a pretty\n * recent resume token.\n */\nconst RESUME_TOKEN_MAX_AGE_MICROS = 5 * 60 * 1e6;\n/**\n * Implements `LocalStore` interface.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass LocalStoreImpl {\n    constructor(\n    /** Manages our in-memory or durable persistence. */\n    persistence, queryEngine, initialUser, serializer) {\n        this.persistence = persistence;\n        this.queryEngine = queryEngine;\n        this.serializer = serializer;\n        /**\n         * Maps a targetID to data about its target.\n         *\n         * PORTING NOTE: We are using an immutable data structure on Web to make re-runs\n         * of `applyRemoteEvent()` idempotent.\n         */\n        this.targetDataByTarget = new SortedMap(primitiveComparator);\n        /** Maps a target to its targetID. */\n        // TODO(wuandy): Evaluate if TargetId can be part of Target.\n        this.targetIdByTarget = new ObjectMap(t => canonifyTarget(t), targetEquals);\n        /**\n         * A per collection group index of the last read time processed by\n         * `getNewDocumentChanges()`.\n         *\n         * PORTING NOTE: This is only used for multi-tab synchronization.\n         */\n        this.collectionGroupReadTime = new Map();\n        this.remoteDocuments = persistence.getRemoteDocumentCache();\n        this.targetCache = persistence.getTargetCache();\n        this.bundleCache = persistence.getBundleCache();\n        this.initializeUserComponents(initialUser);\n    }\n    initializeUserComponents(user) {\n        // TODO(indexing): Add spec tests that test these components change after a\n        // user change\n        this.documentOverlayCache = this.persistence.getDocumentOverlayCache(user);\n        this.indexManager = this.persistence.getIndexManager(user);\n        this.mutationQueue = this.persistence.getMutationQueue(user, this.indexManager);\n        this.localDocuments = new LocalDocumentsView(this.remoteDocuments, this.mutationQueue, this.documentOverlayCache, this.indexManager);\n        this.remoteDocuments.setIndexManager(this.indexManager);\n        this.queryEngine.initialize(this.localDocuments, this.indexManager);\n    }\n    collectGarbage(garbageCollector) {\n        return this.persistence.runTransaction('Collect garbage', 'readwrite-primary', txn => garbageCollector.collect(txn, this.targetDataByTarget));\n    }\n}\nfunction newLocalStore(\n/** Manages our in-memory or durable persistence. */\npersistence, queryEngine, initialUser, serializer) {\n    return new LocalStoreImpl(persistence, queryEngine, initialUser, serializer);\n}\n/**\n * Tells the LocalStore that the currently authenticated user has changed.\n *\n * In response the local store switches the mutation queue to the new user and\n * returns any resulting document changes.\n */\n// PORTING NOTE: Android and iOS only return the documents affected by the\n// change.\nasync function localStoreHandleUserChange(localStore, user) {\n    const localStoreImpl = debugCast(localStore);\n    const result = await localStoreImpl.persistence.runTransaction('Handle user change', 'readonly', txn => {\n        // Swap out the mutation queue, grabbing the pending mutation batches\n        // before and after.\n        let oldBatches;\n        return localStoreImpl.mutationQueue\n            .getAllMutationBatches(txn)\n            .next(promisedOldBatches => {\n            oldBatches = promisedOldBatches;\n            localStoreImpl.initializeUserComponents(user);\n            return localStoreImpl.mutationQueue.getAllMutationBatches(txn);\n        })\n            .next(newBatches => {\n            const removedBatchIds = [];\n            const addedBatchIds = [];\n            // Union the old/new changed keys.\n            let changedKeys = documentKeySet();\n            for (const batch of oldBatches) {\n                removedBatchIds.push(batch.batchId);\n                for (const mutation of batch.mutations) {\n                    changedKeys = changedKeys.add(mutation.key);\n                }\n            }\n            for (const batch of newBatches) {\n                addedBatchIds.push(batch.batchId);\n                for (const mutation of batch.mutations) {\n                    changedKeys = changedKeys.add(mutation.key);\n                }\n            }\n            // Return the set of all (potentially) changed documents and the list\n            // of mutation batch IDs that were affected by change.\n            return localStoreImpl.localDocuments\n                .getDocuments(txn, changedKeys)\n                .next(affectedDocuments => {\n                return {\n                    affectedDocuments,\n                    removedBatchIds,\n                    addedBatchIds\n                };\n            });\n        });\n    });\n    return result;\n}\n/* Accepts locally generated Mutations and commit them to storage. */\nfunction localStoreWriteLocally(localStore, mutations) {\n    const localStoreImpl = debugCast(localStore);\n    const localWriteTime = Timestamp.now();\n    const keys = mutations.reduce((keys, m) => keys.add(m.key), documentKeySet());\n    let overlayedDocuments;\n    let mutationBatch;\n    return localStoreImpl.persistence\n        .runTransaction('Locally write mutations', 'readwrite', txn => {\n        // Figure out which keys do not have a remote version in the cache, this\n        // is needed to create the right overlay mutation: if no remote version\n        // presents, we do not need to create overlays as patch mutations.\n        // TODO(Overlay): Is there a better way to determine this? Using the\n        //  document version does not work because local mutations set them back\n        //  to 0.\n        let remoteDocs = mutableDocumentMap();\n        let docsWithoutRemoteVersion = documentKeySet();\n        return localStoreImpl.remoteDocuments\n            .getEntries(txn, keys)\n            .next(docs => {\n            remoteDocs = docs;\n            remoteDocs.forEach((key, doc) => {\n                if (!doc.isValidDocument()) {\n                    docsWithoutRemoteVersion = docsWithoutRemoteVersion.add(key);\n                }\n            });\n        })\n            .next(() => {\n            // Load and apply all existing mutations. This lets us compute the\n            // current base state for all non-idempotent transforms before applying\n            // any additional user-provided writes.\n            return localStoreImpl.localDocuments.getOverlayedDocuments(txn, remoteDocs);\n        })\n            .next((docs) => {\n            overlayedDocuments = docs;\n            // For non-idempotent mutations (such as `FieldValue.increment()`),\n            // we record the base state in a separate patch mutation. This is\n            // later used to guarantee consistent values and prevents flicker\n            // even if the backend sends us an update that already includes our\n            // transform.\n            const baseMutations = [];\n            for (const mutation of mutations) {\n                const baseValue = mutationExtractBaseValue(mutation, overlayedDocuments.get(mutation.key).overlayedDocument);\n                if (baseValue != null) {\n                    // NOTE: The base state should only be applied if there's some\n                    // existing document to override, so use a Precondition of\n                    // exists=true\n                    baseMutations.push(new PatchMutation(mutation.key, baseValue, extractFieldMask(baseValue.value.mapValue), Precondition.exists(true)));\n                }\n            }\n            return localStoreImpl.mutationQueue.addMutationBatch(txn, localWriteTime, baseMutations, mutations);\n        })\n            .next(batch => {\n            mutationBatch = batch;\n            const overlays = batch.applyToLocalDocumentSet(overlayedDocuments, docsWithoutRemoteVersion);\n            return localStoreImpl.documentOverlayCache.saveOverlays(txn, batch.batchId, overlays);\n        });\n    })\n        .then(() => ({\n        batchId: mutationBatch.batchId,\n        changes: convertOverlayedDocumentMapToDocumentMap(overlayedDocuments)\n    }));\n}\n/**\n * Acknowledges the given batch.\n *\n * On the happy path when a batch is acknowledged, the local store will\n *\n *  + remove the batch from the mutation queue;\n *  + apply the changes to the remote document cache;\n *  + recalculate the latency compensated view implied by those changes (there\n *    may be mutations in the queue that affect the documents but haven't been\n *    acknowledged yet); and\n *  + give the changed documents back the sync engine\n *\n * @returns The resulting (modified) documents.\n */\nfunction localStoreAcknowledgeBatch(localStore, batchResult) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('Acknowledge batch', 'readwrite-primary', txn => {\n        const affected = batchResult.batch.keys();\n        const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n            trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n        });\n        return applyWriteToRemoteDocuments(localStoreImpl, txn, batchResult, documentBuffer)\n            .next(() => documentBuffer.apply(txn))\n            .next(() => localStoreImpl.mutationQueue.performConsistencyCheck(txn))\n            .next(() => localStoreImpl.documentOverlayCache.removeOverlaysForBatchId(txn, affected, batchResult.batch.batchId))\n            .next(() => localStoreImpl.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(txn, getKeysWithTransformResults(batchResult)))\n            .next(() => localStoreImpl.localDocuments.getDocuments(txn, affected));\n    });\n}\nfunction getKeysWithTransformResults(batchResult) {\n    let result = documentKeySet();\n    for (let i = 0; i < batchResult.mutationResults.length; ++i) {\n        const mutationResult = batchResult.mutationResults[i];\n        if (mutationResult.transformResults.length > 0) {\n            result = result.add(batchResult.batch.mutations[i].key);\n        }\n    }\n    return result;\n}\n/**\n * Removes mutations from the MutationQueue for the specified batch;\n * LocalDocuments will be recalculated.\n *\n * @returns The resulting modified documents.\n */\nfunction localStoreRejectBatch(localStore, batchId) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('Reject batch', 'readwrite-primary', txn => {\n        let affectedKeys;\n        return localStoreImpl.mutationQueue\n            .lookupMutationBatch(txn, batchId)\n            .next((batch) => {\n            hardAssert(batch !== null, 0x90f9);\n            affectedKeys = batch.keys();\n            return localStoreImpl.mutationQueue.removeMutationBatch(txn, batch);\n        })\n            .next(() => localStoreImpl.mutationQueue.performConsistencyCheck(txn))\n            .next(() => localStoreImpl.documentOverlayCache.removeOverlaysForBatchId(txn, affectedKeys, batchId))\n            .next(() => localStoreImpl.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(txn, affectedKeys))\n            .next(() => localStoreImpl.localDocuments.getDocuments(txn, affectedKeys));\n    });\n}\n/**\n * Returns the largest (latest) batch id in mutation queue that is pending\n * server response.\n *\n * Returns `BATCHID_UNKNOWN` if the queue is empty.\n */\nfunction localStoreGetHighestUnacknowledgedBatchId(localStore) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('Get highest unacknowledged batch id', 'readonly', txn => localStoreImpl.mutationQueue.getHighestUnacknowledgedBatchId(txn));\n}\n/**\n * Returns the last consistent snapshot processed (used by the RemoteStore to\n * determine whether to buffer incoming snapshots from the backend).\n */\nfunction localStoreGetLastRemoteSnapshotVersion(localStore) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('Get last remote snapshot version', 'readonly', txn => localStoreImpl.targetCache.getLastRemoteSnapshotVersion(txn));\n}\n/**\n * Updates the \"ground-state\" (remote) documents. We assume that the remote\n * event reflects any write batches that have been acknowledged or rejected\n * (i.e. we do not re-apply local mutations to updates from this event).\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nfunction localStoreApplyRemoteEventToLocalCache(localStore, remoteEvent) {\n    const localStoreImpl = debugCast(localStore);\n    const remoteVersion = remoteEvent.snapshotVersion;\n    let newTargetDataByTargetMap = localStoreImpl.targetDataByTarget;\n    return localStoreImpl.persistence\n        .runTransaction('Apply remote event', 'readwrite-primary', txn => {\n        const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n            trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n        });\n        // Reset newTargetDataByTargetMap in case this transaction gets re-run.\n        newTargetDataByTargetMap = localStoreImpl.targetDataByTarget;\n        const promises = [];\n        remoteEvent.targetChanges.forEach((change, targetId) => {\n            const oldTargetData = newTargetDataByTargetMap.get(targetId);\n            if (!oldTargetData) {\n                return;\n            }\n            // Only update the remote keys if the target is still active. This\n            // ensures that we can persist the updated target data along with\n            // the updated assignment.\n            promises.push(localStoreImpl.targetCache\n                .removeMatchingKeys(txn, change.removedDocuments, targetId)\n                .next(() => {\n                return localStoreImpl.targetCache.addMatchingKeys(txn, change.addedDocuments, targetId);\n            }));\n            let newTargetData = oldTargetData.withSequenceNumber(txn.currentSequenceNumber);\n            if (remoteEvent.targetMismatches.get(targetId) !== null) {\n                newTargetData = newTargetData\n                    .withResumeToken(ByteString.EMPTY_BYTE_STRING, SnapshotVersion.min())\n                    .withLastLimboFreeSnapshotVersion(SnapshotVersion.min());\n            }\n            else if (change.resumeToken.approximateByteSize() > 0) {\n                newTargetData = newTargetData.withResumeToken(change.resumeToken, remoteVersion);\n            }\n            newTargetDataByTargetMap = newTargetDataByTargetMap.insert(targetId, newTargetData);\n            // Update the target data if there are target changes (or if\n            // sufficient time has passed since the last update).\n            if (shouldPersistTargetData(oldTargetData, newTargetData, change)) {\n                promises.push(localStoreImpl.targetCache.updateTargetData(txn, newTargetData));\n            }\n        });\n        let changedDocs = mutableDocumentMap();\n        let existenceChangedKeys = documentKeySet();\n        remoteEvent.documentUpdates.forEach(key => {\n            if (remoteEvent.resolvedLimboDocuments.has(key)) {\n                promises.push(localStoreImpl.persistence.referenceDelegate.updateLimboDocument(txn, key));\n            }\n        });\n        // Each loop iteration only affects its \"own\" doc, so it's safe to get all\n        // the remote documents in advance in a single call.\n        promises.push(populateDocumentChangeBuffer(txn, documentBuffer, remoteEvent.documentUpdates).next(result => {\n            changedDocs = result.changedDocuments;\n            existenceChangedKeys = result.existenceChangedKeys;\n        }));\n        // HACK: The only reason we allow a null snapshot version is so that we\n        // can synthesize remote events when we get permission denied errors while\n        // trying to resolve the state of a locally cached document that is in\n        // limbo.\n        if (!remoteVersion.isEqual(SnapshotVersion.min())) {\n            const updateRemoteVersion = localStoreImpl.targetCache\n                .getLastRemoteSnapshotVersion(txn)\n                .next(lastRemoteSnapshotVersion => {\n                return localStoreImpl.targetCache.setTargetsMetadata(txn, txn.currentSequenceNumber, remoteVersion);\n            });\n            promises.push(updateRemoteVersion);\n        }\n        return PersistencePromise.waitFor(promises)\n            .next(() => documentBuffer.apply(txn))\n            .next(() => localStoreImpl.localDocuments.getLocalViewOfDocuments(txn, changedDocs, existenceChangedKeys))\n            .next(() => changedDocs);\n    })\n        .then(changedDocs => {\n        localStoreImpl.targetDataByTarget = newTargetDataByTargetMap;\n        return changedDocs;\n    });\n}\n/**\n * Populates document change buffer with documents from backend or a bundle.\n * Returns the document changes resulting from applying those documents, and\n * also a set of documents whose existence state are changed as a result.\n *\n * @param txn - Transaction to use to read existing documents from storage.\n * @param documentBuffer - Document buffer to collect the resulted changes to be\n *        applied to storage.\n * @param documents - Documents to be applied.\n */\nfunction populateDocumentChangeBuffer(txn, documentBuffer, documents) {\n    let updatedKeys = documentKeySet();\n    let existenceChangedKeys = documentKeySet();\n    documents.forEach(k => (updatedKeys = updatedKeys.add(k)));\n    return documentBuffer.getEntries(txn, updatedKeys).next(existingDocs => {\n        let changedDocuments = mutableDocumentMap();\n        documents.forEach((key, doc) => {\n            const existingDoc = existingDocs.get(key);\n            // Check if see if there is a existence state change for this document.\n            if (doc.isFoundDocument() !== existingDoc.isFoundDocument()) {\n                existenceChangedKeys = existenceChangedKeys.add(key);\n            }\n            // Note: The order of the steps below is important, since we want\n            // to ensure that rejected limbo resolutions (which fabricate\n            // NoDocuments with SnapshotVersion.min()) never add documents to\n            // cache.\n            if (doc.isNoDocument() && doc.version.isEqual(SnapshotVersion.min())) {\n                // NoDocuments with SnapshotVersion.min() are used in manufactured\n                // events. We remove these documents from cache since we lost\n                // access.\n                documentBuffer.removeEntry(key, doc.readTime);\n                changedDocuments = changedDocuments.insert(key, doc);\n            }\n            else if (!existingDoc.isValidDocument() ||\n                doc.version.compareTo(existingDoc.version) > 0 ||\n                (doc.version.compareTo(existingDoc.version) === 0 &&\n                    existingDoc.hasPendingWrites)) {\n                documentBuffer.addEntry(doc);\n                changedDocuments = changedDocuments.insert(key, doc);\n            }\n            else {\n                logDebug(LOG_TAG$b, 'Ignoring outdated watch update for ', key, '. Current version:', existingDoc.version, ' Watch version:', doc.version);\n            }\n        });\n        return { changedDocuments, existenceChangedKeys };\n    });\n}\n/**\n * Returns true if the newTargetData should be persisted during an update of\n * an active target. TargetData should always be persisted when a target is\n * being released and should not call this function.\n *\n * While the target is active, TargetData updates can be omitted when nothing\n * about the target has changed except metadata like the resume token or\n * snapshot version. Occasionally it's worth the extra write to prevent these\n * values from getting too stale after a crash, but this doesn't have to be\n * too frequent.\n */\nfunction shouldPersistTargetData(oldTargetData, newTargetData, change) {\n    // Always persist target data if we don't already have a resume token.\n    if (oldTargetData.resumeToken.approximateByteSize() === 0) {\n        return true;\n    }\n    // Don't allow resume token changes to be buffered indefinitely. This\n    // allows us to be reasonably up-to-date after a crash and avoids needing\n    // to loop over all active queries on shutdown. Especially in the browser\n    // we may not get time to do anything interesting while the current tab is\n    // closing.\n    const timeDelta = newTargetData.snapshotVersion.toMicroseconds() -\n        oldTargetData.snapshotVersion.toMicroseconds();\n    if (timeDelta >= RESUME_TOKEN_MAX_AGE_MICROS) {\n        return true;\n    }\n    // Otherwise if the only thing that has changed about a target is its resume\n    // token it's not worth persisting. Note that the RemoteStore keeps an\n    // in-memory view of the currently active targets which includes the current\n    // resume token, so stream failure or user changes will still use an\n    // up-to-date resume token regardless of what we do here.\n    const changes = change.addedDocuments.size +\n        change.modifiedDocuments.size +\n        change.removedDocuments.size;\n    return changes > 0;\n}\n/**\n * Notifies local store of the changed views to locally pin documents.\n */\nasync function localStoreNotifyLocalViewChanges(localStore, viewChanges) {\n    const localStoreImpl = debugCast(localStore);\n    try {\n        await localStoreImpl.persistence.runTransaction('notifyLocalViewChanges', 'readwrite', txn => {\n            return PersistencePromise.forEach(viewChanges, (viewChange) => {\n                return PersistencePromise.forEach(viewChange.addedKeys, (key) => localStoreImpl.persistence.referenceDelegate.addReference(txn, viewChange.targetId, key)).next(() => PersistencePromise.forEach(viewChange.removedKeys, (key) => localStoreImpl.persistence.referenceDelegate.removeReference(txn, viewChange.targetId, key)));\n            });\n        });\n    }\n    catch (e) {\n        if (isIndexedDbTransactionError(e)) {\n            // If `notifyLocalViewChanges` fails, we did not advance the sequence\n            // number for the documents that were included in this transaction.\n            // This might trigger them to be deleted earlier than they otherwise\n            // would have, but it should not invalidate the integrity of the data.\n            logDebug(LOG_TAG$b, 'Failed to update sequence numbers: ' + e);\n        }\n        else {\n            throw e;\n        }\n    }\n    for (const viewChange of viewChanges) {\n        const targetId = viewChange.targetId;\n        if (!viewChange.fromCache) {\n            const targetData = localStoreImpl.targetDataByTarget.get(targetId);\n            // Advance the last limbo free snapshot version\n            const lastLimboFreeSnapshotVersion = targetData.snapshotVersion;\n            const updatedTargetData = targetData.withLastLimboFreeSnapshotVersion(lastLimboFreeSnapshotVersion);\n            localStoreImpl.targetDataByTarget =\n                localStoreImpl.targetDataByTarget.insert(targetId, updatedTargetData);\n            // TODO(b/272564316): Apply the optimization done on other platforms.\n            // This is a problem for web because saving the updated targetData from\n            // non-primary client conflicts with what primary client saved.\n        }\n    }\n}\n/**\n * Gets the mutation batch after the passed in batchId in the mutation queue\n * or null if empty.\n * @param afterBatchId - If provided, the batch to search after.\n * @returns The next mutation or null if there wasn't one.\n */\nfunction localStoreGetNextMutationBatch(localStore, afterBatchId) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('Get next mutation batch', 'readonly', txn => {\n        if (afterBatchId === undefined) {\n            afterBatchId = BATCHID_UNKNOWN;\n        }\n        return localStoreImpl.mutationQueue.getNextMutationBatchAfterBatchId(txn, afterBatchId);\n    });\n}\n/**\n * Reads the current value of a Document with a given key or null if not\n * found - used for testing.\n */\nfunction localStoreReadDocument(localStore, key) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('read document', 'readonly', txn => localStoreImpl.localDocuments.getDocument(txn, key));\n}\n/**\n * Assigns the given target an internal ID so that its results can be pinned so\n * they don't get GC'd. A target must be allocated in the local store before\n * the store can be used to manage its view.\n *\n * Allocating an already allocated `Target` will return the existing `TargetData`\n * for that `Target`.\n */\nfunction localStoreAllocateTarget(localStore, target) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence\n        .runTransaction('Allocate target', 'readwrite', txn => {\n        let targetData;\n        return localStoreImpl.targetCache\n            .getTargetData(txn, target)\n            .next((cached) => {\n            if (cached) {\n                // This target has been listened to previously, so reuse the\n                // previous targetID.\n                // TODO(mcg): freshen last accessed date?\n                targetData = cached;\n                return PersistencePromise.resolve(targetData);\n            }\n            else {\n                return localStoreImpl.targetCache\n                    .allocateTargetId(txn)\n                    .next(targetId => {\n                    targetData = new TargetData(target, targetId, \"TargetPurposeListen\" /* TargetPurpose.Listen */, txn.currentSequenceNumber);\n                    return localStoreImpl.targetCache\n                        .addTargetData(txn, targetData)\n                        .next(() => targetData);\n                });\n            }\n        });\n    })\n        .then(targetData => {\n        // If Multi-Tab is enabled, the existing target data may be newer than\n        // the in-memory data\n        const cachedTargetData = localStoreImpl.targetDataByTarget.get(targetData.targetId);\n        if (cachedTargetData === null ||\n            targetData.snapshotVersion.compareTo(cachedTargetData.snapshotVersion) >\n                0) {\n            localStoreImpl.targetDataByTarget =\n                localStoreImpl.targetDataByTarget.insert(targetData.targetId, targetData);\n            localStoreImpl.targetIdByTarget.set(target, targetData.targetId);\n        }\n        return targetData;\n    });\n}\n/**\n * Returns the TargetData as seen by the LocalStore, including updates that may\n * have not yet been persisted to the TargetCache.\n */\n// Visible for testing.\nfunction localStoreGetTargetData(localStore, transaction, target) {\n    const localStoreImpl = debugCast(localStore);\n    const targetId = localStoreImpl.targetIdByTarget.get(target);\n    if (targetId !== undefined) {\n        return PersistencePromise.resolve(localStoreImpl.targetDataByTarget.get(targetId));\n    }\n    else {\n        return localStoreImpl.targetCache.getTargetData(transaction, target);\n    }\n}\n/**\n * Unpins all the documents associated with the given target. If\n * `keepPersistedTargetData` is set to false and Eager GC enabled, the method\n * directly removes the associated target data from the target cache.\n *\n * Releasing a non-existing `Target` is a no-op.\n */\n// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.\nasync function localStoreReleaseTarget(localStore, targetId, keepPersistedTargetData) {\n    const localStoreImpl = debugCast(localStore);\n    const targetData = localStoreImpl.targetDataByTarget.get(targetId);\n    const mode = keepPersistedTargetData ? 'readwrite' : 'readwrite-primary';\n    try {\n        if (!keepPersistedTargetData) {\n            await localStoreImpl.persistence.runTransaction('Release target', mode, txn => {\n                return localStoreImpl.persistence.referenceDelegate.removeTarget(txn, targetData);\n            });\n        }\n    }\n    catch (e) {\n        if (isIndexedDbTransactionError(e)) {\n            // All `releaseTarget` does is record the final metadata state for the\n            // target, but we've been recording this periodically during target\n            // activity. If we lose this write this could cause a very slight\n            // difference in the order of target deletion during GC, but we\n            // don't define exact LRU semantics so this is acceptable.\n            logDebug(LOG_TAG$b, `Failed to update sequence numbers for target ${targetId}: ${e}`);\n        }\n        else {\n            throw e;\n        }\n    }\n    localStoreImpl.targetDataByTarget =\n        localStoreImpl.targetDataByTarget.remove(targetId);\n    localStoreImpl.targetIdByTarget.delete(targetData.target);\n}\n/**\n * Runs the specified query against the local store and returns the results,\n * potentially taking advantage of query data from previous executions (such\n * as the set of remote keys).\n *\n * @param usePreviousResults - Whether results from previous executions can\n * be used to optimize this query execution.\n */\nfunction localStoreExecuteQuery(localStore, query, usePreviousResults) {\n    const localStoreImpl = debugCast(localStore);\n    let lastLimboFreeSnapshotVersion = SnapshotVersion.min();\n    let remoteKeys = documentKeySet();\n    return localStoreImpl.persistence.runTransaction('Execute query', 'readwrite', // Use readwrite instead of readonly so indexes can be created\n    // Use readwrite instead of readonly so indexes can be created\n    txn => {\n        return localStoreGetTargetData(localStoreImpl, txn, queryToTarget(query))\n            .next(targetData => {\n            if (targetData) {\n                lastLimboFreeSnapshotVersion =\n                    targetData.lastLimboFreeSnapshotVersion;\n                return localStoreImpl.targetCache\n                    .getMatchingKeysForTargetId(txn, targetData.targetId)\n                    .next(result => {\n                    remoteKeys = result;\n                });\n            }\n        })\n            .next(() => localStoreImpl.queryEngine.getDocumentsMatchingQuery(txn, query, usePreviousResults\n            ? lastLimboFreeSnapshotVersion\n            : SnapshotVersion.min(), usePreviousResults ? remoteKeys : documentKeySet()))\n            .next(documents => {\n            setMaxReadTime(localStoreImpl, queryCollectionGroup(query), documents);\n            return { documents, remoteKeys };\n        });\n    });\n}\nfunction applyWriteToRemoteDocuments(localStoreImpl, txn, batchResult, documentBuffer) {\n    const batch = batchResult.batch;\n    const docKeys = batch.keys();\n    let promiseChain = PersistencePromise.resolve();\n    docKeys.forEach(docKey => {\n        promiseChain = promiseChain\n            .next(() => documentBuffer.getEntry(txn, docKey))\n            .next(doc => {\n            const ackVersion = batchResult.docVersions.get(docKey);\n            hardAssert(ackVersion !== null, 0xbd9d);\n            if (doc.version.compareTo(ackVersion) < 0) {\n                batch.applyToRemoteDocument(doc, batchResult);\n                if (doc.isValidDocument()) {\n                    // We use the commitVersion as the readTime rather than the\n                    // document's updateTime since the updateTime is not advanced\n                    // for updates that do not modify the underlying document.\n                    doc.setReadTime(batchResult.commitVersion);\n                    documentBuffer.addEntry(doc);\n                }\n            }\n        });\n    });\n    return promiseChain.next(() => localStoreImpl.mutationQueue.removeMutationBatch(txn, batch));\n}\n/** Returns the local view of the documents affected by a mutation batch. */\n// PORTING NOTE: Multi-Tab only.\nfunction localStoreLookupMutationDocuments(localStore, batchId) {\n    const localStoreImpl = debugCast(localStore);\n    const mutationQueueImpl = debugCast(localStoreImpl.mutationQueue);\n    return localStoreImpl.persistence.runTransaction('Lookup mutation documents', 'readonly', txn => {\n        return mutationQueueImpl.lookupMutationKeys(txn, batchId).next(keys => {\n            if (keys) {\n                return localStoreImpl.localDocuments.getDocuments(txn, keys);\n            }\n            else {\n                return PersistencePromise.resolve(null);\n            }\n        });\n    });\n}\n// PORTING NOTE: Multi-Tab only.\nfunction localStoreRemoveCachedMutationBatchMetadata(localStore, batchId) {\n    const mutationQueueImpl = debugCast(debugCast(localStore, LocalStoreImpl).mutationQueue);\n    mutationQueueImpl.removeCachedMutationKeys(batchId);\n}\n// PORTING NOTE: Multi-Tab only.\nfunction localStoreGetActiveClients(localStore) {\n    const persistenceImpl = debugCast(debugCast(localStore, LocalStoreImpl).persistence);\n    return persistenceImpl.getActiveClients();\n}\n// PORTING NOTE: Multi-Tab only.\nfunction localStoreGetCachedTarget(localStore, targetId) {\n    const localStoreImpl = debugCast(localStore);\n    const targetCacheImpl = debugCast(localStoreImpl.targetCache);\n    const cachedTargetData = localStoreImpl.targetDataByTarget.get(targetId);\n    if (cachedTargetData) {\n        return Promise.resolve(cachedTargetData.target);\n    }\n    else {\n        return localStoreImpl.persistence.runTransaction('Get target data', 'readonly', txn => {\n            return targetCacheImpl\n                .getTargetDataForTarget(txn, targetId)\n                .next(targetData => (targetData ? targetData.target : null));\n        });\n    }\n}\n/**\n * Returns the set of documents that have been updated since the last call.\n * If this is the first call, returns the set of changes since client\n * initialization. Further invocations will return document that have changed\n * since the prior call.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction localStoreGetNewDocumentChanges(localStore, collectionGroup) {\n    const localStoreImpl = debugCast(localStore);\n    // Get the current maximum read time for the collection. This should always\n    // exist, but to reduce the chance for regressions we default to\n    // SnapshotVersion.Min()\n    // TODO(indexing): Consider removing the default value.\n    const readTime = localStoreImpl.collectionGroupReadTime.get(collectionGroup) ||\n        SnapshotVersion.min();\n    return localStoreImpl.persistence\n        .runTransaction('Get new document changes', 'readonly', txn => localStoreImpl.remoteDocuments.getAllFromCollectionGroup(txn, collectionGroup, newIndexOffsetSuccessorFromReadTime(readTime, INITIAL_LARGEST_BATCH_ID), \n    /* limit= */ Number.MAX_SAFE_INTEGER))\n        .then(changedDocs => {\n        setMaxReadTime(localStoreImpl, collectionGroup, changedDocs);\n        return changedDocs;\n    });\n}\n/** Sets the collection group's maximum read time from the given documents. */\n// PORTING NOTE: Multi-Tab only.\nfunction setMaxReadTime(localStoreImpl, collectionGroup, changedDocs) {\n    let readTime = localStoreImpl.collectionGroupReadTime.get(collectionGroup) ||\n        SnapshotVersion.min();\n    changedDocs.forEach((_, doc) => {\n        if (doc.readTime.compareTo(readTime) > 0) {\n            readTime = doc.readTime;\n        }\n    });\n    localStoreImpl.collectionGroupReadTime.set(collectionGroup, readTime);\n}\n/**\n * Creates a new target using the given bundle name, which will be used to\n * hold the keys of all documents from the bundle in query-document mappings.\n * This ensures that the loaded documents do not get garbage collected\n * right away.\n */\nfunction umbrellaTarget(bundleName) {\n    // It is OK that the path used for the query is not valid, because this will\n    // not be read and queried.\n    return queryToTarget(newQueryForPath(ResourcePath.fromString(`__bundle__/docs/${bundleName}`)));\n}\n/**\n * Applies the documents from a bundle to the \"ground-state\" (remote)\n * documents.\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nasync function localStoreApplyBundledDocuments(localStore, bundleConverter, documents, bundleName) {\n    const localStoreImpl = debugCast(localStore);\n    let documentKeys = documentKeySet();\n    let documentMap = mutableDocumentMap();\n    for (const bundleDoc of documents) {\n        const documentKey = bundleConverter.toDocumentKey(bundleDoc.metadata.name);\n        if (bundleDoc.document) {\n            documentKeys = documentKeys.add(documentKey);\n        }\n        const doc = bundleConverter.toMutableDocument(bundleDoc);\n        doc.setReadTime(bundleConverter.toSnapshotVersion(bundleDoc.metadata.readTime));\n        documentMap = documentMap.insert(documentKey, doc);\n    }\n    const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n        trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n    });\n    // Allocates a target to hold all document keys from the bundle, such that\n    // they will not get garbage collected right away.\n    const umbrellaTargetData = await localStoreAllocateTarget(localStoreImpl, umbrellaTarget(bundleName));\n    return localStoreImpl.persistence.runTransaction('Apply bundle documents', 'readwrite', txn => {\n        return populateDocumentChangeBuffer(txn, documentBuffer, documentMap)\n            .next(documentChangeResult => {\n            documentBuffer.apply(txn);\n            return documentChangeResult;\n        })\n            .next(documentChangeResult => {\n            return localStoreImpl.targetCache\n                .removeMatchingKeysForTargetId(txn, umbrellaTargetData.targetId)\n                .next(() => localStoreImpl.targetCache.addMatchingKeys(txn, documentKeys, umbrellaTargetData.targetId))\n                .next(() => localStoreImpl.localDocuments.getLocalViewOfDocuments(txn, documentChangeResult.changedDocuments, documentChangeResult.existenceChangedKeys))\n                .next(() => documentChangeResult.changedDocuments);\n        });\n    });\n}\n/**\n * Returns a promise of a boolean to indicate if the given bundle has already\n * been loaded and the create time is newer than the current loading bundle.\n */\nfunction localStoreHasNewerBundle(localStore, bundleMetadata) {\n    const localStoreImpl = debugCast(localStore);\n    const currentReadTime = fromVersion(bundleMetadata.createTime);\n    return localStoreImpl.persistence\n        .runTransaction('hasNewerBundle', 'readonly', transaction => {\n        return localStoreImpl.bundleCache.getBundleMetadata(transaction, bundleMetadata.id);\n    })\n        .then(cached => {\n        return !!cached && cached.createTime.compareTo(currentReadTime) >= 0;\n    });\n}\n/**\n * Saves the given `BundleMetadata` to local persistence.\n */\nfunction localStoreSaveBundle(localStore, bundleMetadata) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('Save bundle', 'readwrite', transaction => {\n        return localStoreImpl.bundleCache.saveBundleMetadata(transaction, bundleMetadata);\n    });\n}\n/**\n * Returns a promise of a `NamedQuery` associated with given query name. Promise\n * resolves to undefined if no persisted data can be found.\n */\nfunction localStoreGetNamedQuery(localStore, queryName) {\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('Get named query', 'readonly', transaction => localStoreImpl.bundleCache.getNamedQuery(transaction, queryName));\n}\n/**\n * Saves the given `NamedQuery` to local persistence.\n */\nasync function localStoreSaveNamedQuery(localStore, query, documents = documentKeySet()) {\n    // Allocate a target for the named query such that it can be resumed\n    // from associated read time if users use it to listen.\n    // NOTE: this also means if no corresponding target exists, the new target\n    // will remain active and will not get collected, unless users happen to\n    // unlisten the query somehow.\n    const allocated = await localStoreAllocateTarget(localStore, queryToTarget(fromBundledQuery(query.bundledQuery)));\n    const localStoreImpl = debugCast(localStore);\n    return localStoreImpl.persistence.runTransaction('Save named query', 'readwrite', transaction => {\n        const readTime = fromVersion(query.readTime);\n        // Simply save the query itself if it is older than what the SDK already\n        // has.\n        if (allocated.snapshotVersion.compareTo(readTime) >= 0) {\n            return localStoreImpl.bundleCache.saveNamedQuery(transaction, query);\n        }\n        // Update existing target data because the query from the bundle is newer.\n        const newTargetData = allocated.withResumeToken(ByteString.EMPTY_BYTE_STRING, readTime);\n        localStoreImpl.targetDataByTarget =\n            localStoreImpl.targetDataByTarget.insert(newTargetData.targetId, newTargetData);\n        return localStoreImpl.targetCache\n            .updateTargetData(transaction, newTargetData)\n            .next(() => localStoreImpl.targetCache.removeMatchingKeysForTargetId(transaction, allocated.targetId))\n            .next(() => localStoreImpl.targetCache.addMatchingKeys(transaction, documents, allocated.targetId))\n            .next(() => localStoreImpl.bundleCache.saveNamedQuery(transaction, query));\n    });\n}\nasync function localStoreConfigureFieldIndexes(localStore, newFieldIndexes) {\n    const localStoreImpl = debugCast(localStore);\n    const indexManager = localStoreImpl.indexManager;\n    const promises = [];\n    return localStoreImpl.persistence.runTransaction('Configure indexes', 'readwrite', transaction => indexManager\n        .getFieldIndexes(transaction)\n        .next(oldFieldIndexes => diffArrays(oldFieldIndexes, newFieldIndexes, fieldIndexSemanticComparator, fieldIndex => {\n        promises.push(indexManager.addFieldIndex(transaction, fieldIndex));\n    }, fieldIndex => {\n        promises.push(indexManager.deleteFieldIndex(transaction, fieldIndex));\n    }))\n        .next(() => PersistencePromise.waitFor(promises)));\n}\nfunction localStoreSetIndexAutoCreationEnabled(localStore, isEnabled) {\n    const localStoreImpl = debugCast(localStore);\n    localStoreImpl.queryEngine.indexAutoCreationEnabled = isEnabled;\n}\nfunction localStoreDeleteAllFieldIndexes(localStore) {\n    const localStoreImpl = debugCast(localStore);\n    const indexManager = localStoreImpl.indexManager;\n    return localStoreImpl.persistence.runTransaction('Delete All Indexes', 'readwrite', transaction => indexManager.deleteAllFieldIndexes(transaction));\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A tracker to keep a record of important details during database local query\n * execution.\n */\nclass QueryContext {\n    constructor() {\n        /**\n         * Counts the number of documents passed through during local query execution.\n         */\n        this._documentReadCount = 0;\n    }\n    get documentReadCount() {\n        return this._documentReadCount;\n    }\n    incrementDocumentReadCount(amount) {\n        this._documentReadCount += amount;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_INDEX_AUTO_CREATION_MIN_COLLECTION_SIZE = 100;\n/**\n * This cost represents the evaluation result of\n * (([index, docKey] + [docKey, docContent]) per document in the result set)\n * / ([docKey, docContent] per documents in full collection scan) coming from\n * experiment [enter PR experiment URL here].\n */\nfunction getDefaultRelativeIndexReadCostPerDocument() {\n    // These values were derived from an experiment where several members of the\n    // Firestore SDK team ran a performance test in various environments.\n    // Googlers can see b/299284287 for details.\n    if (isSafari()) {\n        return 8;\n    }\n    else if (getAndroidVersion(getUA()) > 0) {\n        return 6;\n    }\n    else {\n        return 4;\n    }\n}\n/**\n * The Firestore query engine.\n *\n * Firestore queries can be executed in three modes. The Query Engine determines\n * what mode to use based on what data is persisted. The mode only determines\n * the runtime complexity of the query - the result set is equivalent across all\n * implementations.\n *\n * The Query engine will use indexed-based execution if a user has configured\n * any index that can be used to execute query (via `setIndexConfiguration()`).\n * Otherwise, the engine will try to optimize the query by re-using a previously\n * persisted query result. If that is not possible, the query will be executed\n * via a full collection scan.\n *\n * Index-based execution is the default when available. The query engine\n * supports partial indexed execution and merges the result from the index\n * lookup with documents that have not yet been indexed. The index evaluation\n * matches the backend's format and as such, the SDK can use indexing for all\n * queries that the backend supports.\n *\n * If no index exists, the query engine tries to take advantage of the target\n * document mapping in the TargetCache. These mappings exists for all queries\n * that have been synced with the backend at least once and allow the query\n * engine to only read documents that previously matched a query plus any\n * documents that were edited after the query was last listened to.\n *\n * There are some cases when this optimization is not guaranteed to produce\n * the same results as full collection scans. In these cases, query\n * processing falls back to full scans. These cases are:\n *\n * - Limit queries where a document that matched the query previously no longer\n *   matches the query.\n *\n * - Limit queries where a document edit may cause the document to sort below\n *   another document that is in the local cache.\n *\n * - Queries that have never been CURRENT or free of limbo documents.\n */\nclass QueryEngine {\n    constructor() {\n        this.initialized = false;\n        this.indexAutoCreationEnabled = false;\n        /**\n         * SDK only decides whether it should create index when collection size is\n         * larger than this.\n         */\n        this.indexAutoCreationMinCollectionSize = DEFAULT_INDEX_AUTO_CREATION_MIN_COLLECTION_SIZE;\n        this.relativeIndexReadCostPerDocument = getDefaultRelativeIndexReadCostPerDocument();\n    }\n    /** Sets the document view to query against. */\n    initialize(localDocuments, indexManager) {\n        this.localDocumentsView = localDocuments;\n        this.indexManager = indexManager;\n        this.initialized = true;\n    }\n    /** Returns all local documents matching the specified query. */\n    getDocumentsMatchingQuery(transaction, query, lastLimboFreeSnapshotVersion, remoteKeys) {\n        // Stores the result from executing the query; using this object is more\n        // convenient than passing the result between steps of the persistence\n        // transaction and improves readability comparatively.\n        const queryResult = { result: null };\n        return this.performQueryUsingIndex(transaction, query)\n            .next(result => {\n            queryResult.result = result;\n        })\n            .next(() => {\n            if (queryResult.result) {\n                return;\n            }\n            return this.performQueryUsingRemoteKeys(transaction, query, remoteKeys, lastLimboFreeSnapshotVersion).next(result => {\n                queryResult.result = result;\n            });\n        })\n            .next(() => {\n            if (queryResult.result) {\n                return;\n            }\n            const context = new QueryContext();\n            return this.executeFullCollectionScan(transaction, query, context).next(result => {\n                queryResult.result = result;\n                if (this.indexAutoCreationEnabled) {\n                    return this.createCacheIndexes(transaction, query, context, result.size);\n                }\n            });\n        })\n            .next(() => queryResult.result);\n    }\n    createCacheIndexes(transaction, query, context, resultSize) {\n        if (context.documentReadCount < this.indexAutoCreationMinCollectionSize) {\n            if (getLogLevel() <= LogLevel.DEBUG) {\n                logDebug('QueryEngine', 'SDK will not create cache indexes for query:', stringifyQuery(query), 'since it only creates cache indexes for collection contains', 'more than or equal to', this.indexAutoCreationMinCollectionSize, 'documents');\n            }\n            return PersistencePromise.resolve();\n        }\n        if (getLogLevel() <= LogLevel.DEBUG) {\n            logDebug('QueryEngine', 'Query:', stringifyQuery(query), 'scans', context.documentReadCount, 'local documents and returns', resultSize, 'documents as results.');\n        }\n        if (context.documentReadCount >\n            this.relativeIndexReadCostPerDocument * resultSize) {\n            if (getLogLevel() <= LogLevel.DEBUG) {\n                logDebug('QueryEngine', 'The SDK decides to create cache indexes for query:', stringifyQuery(query), 'as using cache indexes may help improve performance.');\n            }\n            return this.indexManager.createTargetIndexes(transaction, queryToTarget(query));\n        }\n        return PersistencePromise.resolve();\n    }\n    /**\n     * Performs an indexed query that evaluates the query based on a collection's\n     * persisted index values. Returns `null` if an index is not available.\n     */\n    performQueryUsingIndex(transaction, query) {\n        if (queryMatchesAllDocuments(query)) {\n            // Queries that match all documents don't benefit from using\n            // key-based lookups. It is more efficient to scan all documents in a\n            // collection, rather than to perform individual lookups.\n            return PersistencePromise.resolve(null);\n        }\n        let target = queryToTarget(query);\n        return this.indexManager\n            .getIndexType(transaction, target)\n            .next(indexType => {\n            if (indexType === 0 /* IndexType.NONE */) {\n                // The target cannot be served from any index.\n                return null;\n            }\n            if (query.limit !== null && indexType === 1 /* IndexType.PARTIAL */) {\n                // We cannot apply a limit for targets that are served using a partial\n                // index. If a partial index will be used to serve the target, the\n                // query may return a superset of documents that match the target\n                // (e.g. if the index doesn't include all the target's filters), or\n                // may return the correct set of documents in the wrong order (e.g. if\n                // the index doesn't include a segment for one of the orderBys).\n                // Therefore, a limit should not be applied in such cases.\n                query = queryWithLimit(query, null, \"F\" /* LimitType.First */);\n                target = queryToTarget(query);\n            }\n            return this.indexManager\n                .getDocumentsMatchingTarget(transaction, target)\n                .next(keys => {\n                const sortedKeys = documentKeySet(...keys);\n                return this.localDocumentsView\n                    .getDocuments(transaction, sortedKeys)\n                    .next(indexedDocuments => {\n                    return this.indexManager\n                        .getMinOffset(transaction, target)\n                        .next(offset => {\n                        const previousResults = this.applyQuery(query, indexedDocuments);\n                        if (this.needsRefill(query, previousResults, sortedKeys, offset.readTime)) {\n                            // A limit query whose boundaries change due to local\n                            // edits can be re-run against the cache by excluding the\n                            // limit. This ensures that all documents that match the\n                            // query's filters are included in the result set. The SDK\n                            // can then apply the limit once all local edits are\n                            // incorporated.\n                            return this.performQueryUsingIndex(transaction, queryWithLimit(query, null, \"F\" /* LimitType.First */));\n                        }\n                        return this.appendRemainingResults(transaction, previousResults, query, offset);\n                    });\n                });\n            });\n        });\n    }\n    /**\n     * Performs a query based on the target's persisted query mapping. Returns\n     * `null` if the mapping is not available or cannot be used.\n     */\n    performQueryUsingRemoteKeys(transaction, query, remoteKeys, lastLimboFreeSnapshotVersion) {\n        if (queryMatchesAllDocuments(query)) {\n            // Queries that match all documents don't benefit from using\n            // key-based lookups. It is more efficient to scan all documents in a\n            // collection, rather than to perform individual lookups.\n            return PersistencePromise.resolve(null);\n        }\n        // Queries that have never seen a snapshot without limbo free documents\n        // should also be run as a full collection scan.\n        if (lastLimboFreeSnapshotVersion.isEqual(SnapshotVersion.min())) {\n            return PersistencePromise.resolve(null);\n        }\n        return this.localDocumentsView.getDocuments(transaction, remoteKeys).next(documents => {\n            const previousResults = this.applyQuery(query, documents);\n            if (this.needsRefill(query, previousResults, remoteKeys, lastLimboFreeSnapshotVersion)) {\n                return PersistencePromise.resolve(null);\n            }\n            if (getLogLevel() <= LogLevel.DEBUG) {\n                logDebug('QueryEngine', 'Re-using previous result from %s to execute query: %s', lastLimboFreeSnapshotVersion.toString(), stringifyQuery(query));\n            }\n            // Retrieve all results for documents that were updated since the last\n            // limbo-document free remote snapshot.\n            return this.appendRemainingResults(transaction, previousResults, query, newIndexOffsetSuccessorFromReadTime(lastLimboFreeSnapshotVersion, INITIAL_LARGEST_BATCH_ID)).next(results => results);\n        });\n    }\n    /** Applies the query filter and sorting to the provided documents.  */\n    applyQuery(query, documents) {\n        // Sort the documents and re-apply the query filter since previously\n        // matching documents do not necessarily still match the query.\n        let queryResults = new SortedSet(newQueryComparator(query));\n        documents.forEach((_, maybeDoc) => {\n            if (queryMatches(query, maybeDoc)) {\n                queryResults = queryResults.add(maybeDoc);\n            }\n        });\n        return queryResults;\n    }\n    /**\n     * Determines if a limit query needs to be refilled from cache, making it\n     * ineligible for index-free execution.\n     *\n     * @param query - The query.\n     * @param sortedPreviousResults - The documents that matched the query when it\n     * was last synchronized, sorted by the query's comparator.\n     * @param remoteKeys - The document keys that matched the query at the last\n     * snapshot.\n     * @param limboFreeSnapshotVersion - The version of the snapshot when the\n     * query was last synchronized.\n     */\n    needsRefill(query, sortedPreviousResults, remoteKeys, limboFreeSnapshotVersion) {\n        if (query.limit === null) {\n            // Queries without limits do not need to be refilled.\n            return false;\n        }\n        if (remoteKeys.size !== sortedPreviousResults.size) {\n            // The query needs to be refilled if a previously matching document no\n            // longer matches.\n            return true;\n        }\n        // Limit queries are not eligible for index-free query execution if there is\n        // a potential that an older document from cache now sorts before a document\n        // that was previously part of the limit. This, however, can only happen if\n        // the document at the edge of the limit goes out of limit.\n        // If a document that is not the limit boundary sorts differently,\n        // the boundary of the limit itself did not change and documents from cache\n        // will continue to be \"rejected\" by this boundary. Therefore, we can ignore\n        // any modifications that don't affect the last document.\n        const docAtLimitEdge = query.limitType === \"F\" /* LimitType.First */\n            ? sortedPreviousResults.last()\n            : sortedPreviousResults.first();\n        if (!docAtLimitEdge) {\n            // We don't need to refill the query if there were already no documents.\n            return false;\n        }\n        return (docAtLimitEdge.hasPendingWrites ||\n            docAtLimitEdge.version.compareTo(limboFreeSnapshotVersion) > 0);\n    }\n    executeFullCollectionScan(transaction, query, context) {\n        if (getLogLevel() <= LogLevel.DEBUG) {\n            logDebug('QueryEngine', 'Using full collection scan to execute query:', stringifyQuery(query));\n        }\n        return this.localDocumentsView.getDocumentsMatchingQuery(transaction, query, IndexOffset.min(), context);\n    }\n    /**\n     * Combines the results from an indexed execution with the remaining documents\n     * that have not yet been indexed.\n     */\n    appendRemainingResults(transaction, indexedResults, query, offset) {\n        // Retrieve all results for documents that were updated since the offset.\n        return this.localDocumentsView\n            .getDocumentsMatchingQuery(transaction, query, offset)\n            .next(remainingResults => {\n            // Merge with existing results\n            indexedResults.forEach(d => {\n                remainingResults = remainingResults.insert(d.key, d);\n            });\n            return remainingResults;\n        });\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The format of the LocalStorage key that stores the client state is:\n//     firestore_clients_<persistence_prefix>_<instance_key>\nconst CLIENT_STATE_KEY_PREFIX = 'firestore_clients';\n/** Assembles the key for a client state in WebStorage */\nfunction createWebStorageClientStateKey(persistenceKey, clientId) {\n    return `${CLIENT_STATE_KEY_PREFIX}_${persistenceKey}_${clientId}`;\n}\n// The format of the WebStorage key that stores the mutation state is:\n//     firestore_mutations_<persistence_prefix>_<batch_id>\n//     (for unauthenticated users)\n// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>\n//\n// 'user_uid' is last to avoid needing to escape '_' characters that it might\n// contain.\nconst MUTATION_BATCH_KEY_PREFIX = 'firestore_mutations';\n/** Assembles the key for a mutation batch in WebStorage */\nfunction createWebStorageMutationBatchKey(persistenceKey, user, batchId) {\n    let mutationKey = `${MUTATION_BATCH_KEY_PREFIX}_${persistenceKey}_${batchId}`;\n    if (user.isAuthenticated()) {\n        mutationKey += `_${user.uid}`;\n    }\n    return mutationKey;\n}\n// The format of the WebStorage key that stores a query target's metadata is:\n//     firestore_targets_<persistence_prefix>_<target_id>\nconst QUERY_TARGET_KEY_PREFIX = 'firestore_targets';\n/** Assembles the key for a query state in WebStorage */\nfunction createWebStorageQueryTargetMetadataKey(persistenceKey, targetId) {\n    return `${QUERY_TARGET_KEY_PREFIX}_${persistenceKey}_${targetId}`;\n}\n// The WebStorage prefix that stores the primary tab's online state. The\n// format of the key is:\n//     firestore_online_state_<persistence_prefix>\nconst ONLINE_STATE_KEY_PREFIX = 'firestore_online_state';\n/** Assembles the key for the online state of the primary tab. */\nfunction createWebStorageOnlineStateKey(persistenceKey) {\n    return `${ONLINE_STATE_KEY_PREFIX}_${persistenceKey}`;\n}\n// The WebStorage prefix that plays as a event to indicate the remote documents\n// might have changed due to some secondary tabs loading a bundle.\n// format of the key is:\n//     firestore_bundle_loaded_v2_<persistenceKey>\n// The version ending with \"v2\" stores the list of modified collection groups.\nconst BUNDLE_LOADED_KEY_PREFIX = 'firestore_bundle_loaded_v2';\nfunction createBundleLoadedKey(persistenceKey) {\n    return `${BUNDLE_LOADED_KEY_PREFIX}_${persistenceKey}`;\n}\n// The WebStorage key prefix for the key that stores the last sequence number allocated. The key\n// looks like 'firestore_sequence_number_<persistence_prefix>'.\nconst SEQUENCE_NUMBER_KEY_PREFIX = 'firestore_sequence_number';\n/** Assembles the key for the current sequence number. */\nfunction createWebStorageSequenceNumberKey(persistenceKey) {\n    return `${SEQUENCE_NUMBER_KEY_PREFIX}_${persistenceKey}`;\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$a = 'SharedClientState';\n/**\n * Holds the state of a mutation batch, including its user ID, batch ID and\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\n */\n// Visible for testing\nclass MutationMetadata {\n    constructor(user, batchId, state, error) {\n        this.user = user;\n        this.batchId = batchId;\n        this.state = state;\n        this.error = error;\n    }\n    /**\n     * Parses a MutationMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */\n    static fromWebStorageEntry(user, batchId, value) {\n        const mutationBatch = JSON.parse(value);\n        let validData = typeof mutationBatch === 'object' &&\n            ['pending', 'acknowledged', 'rejected'].indexOf(mutationBatch.state) !==\n                -1 &&\n            (mutationBatch.error === undefined ||\n                typeof mutationBatch.error === 'object');\n        let firestoreError = undefined;\n        if (validData && mutationBatch.error) {\n            validData =\n                typeof mutationBatch.error.message === 'string' &&\n                    typeof mutationBatch.error.code === 'string';\n            if (validData) {\n                firestoreError = new FirestoreError(mutationBatch.error.code, mutationBatch.error.message);\n            }\n        }\n        if (validData) {\n            return new MutationMetadata(user, batchId, mutationBatch.state, firestoreError);\n        }\n        else {\n            logError(LOG_TAG$a, `Failed to parse mutation state for ID '${batchId}': ${value}`);\n            return null;\n        }\n    }\n    toWebStorageJSON() {\n        const batchMetadata = {\n            state: this.state,\n            updateTimeMs: Date.now() // Modify the existing value to trigger update.\n        };\n        if (this.error) {\n            batchMetadata.error = {\n                code: this.error.code,\n                message: this.error.message\n            };\n        }\n        return JSON.stringify(batchMetadata);\n    }\n}\n/**\n * Holds the state of a query target, including its target ID and whether the\n * target is 'not-current', 'current' or 'rejected'.\n */\n// Visible for testing\nclass QueryTargetMetadata {\n    constructor(targetId, state, error) {\n        this.targetId = targetId;\n        this.state = state;\n        this.error = error;\n    }\n    /**\n     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */\n    static fromWebStorageEntry(targetId, value) {\n        const targetState = JSON.parse(value);\n        let validData = typeof targetState === 'object' &&\n            ['not-current', 'current', 'rejected'].indexOf(targetState.state) !==\n                -1 &&\n            (targetState.error === undefined ||\n                typeof targetState.error === 'object');\n        let firestoreError = undefined;\n        if (validData && targetState.error) {\n            validData =\n                typeof targetState.error.message === 'string' &&\n                    typeof targetState.error.code === 'string';\n            if (validData) {\n                firestoreError = new FirestoreError(targetState.error.code, targetState.error.message);\n            }\n        }\n        if (validData) {\n            return new QueryTargetMetadata(targetId, targetState.state, firestoreError);\n        }\n        else {\n            logError(LOG_TAG$a, `Failed to parse target state for ID '${targetId}': ${value}`);\n            return null;\n        }\n    }\n    toWebStorageJSON() {\n        const targetState = {\n            state: this.state,\n            updateTimeMs: Date.now() // Modify the existing value to trigger update.\n        };\n        if (this.error) {\n            targetState.error = {\n                code: this.error.code,\n                message: this.error.message\n            };\n        }\n        return JSON.stringify(targetState);\n    }\n}\n/**\n * This class represents the immutable ClientState for a client read from\n * WebStorage, containing the list of active query targets.\n */\nclass RemoteClientState {\n    constructor(clientId, activeTargetIds) {\n        this.clientId = clientId;\n        this.activeTargetIds = activeTargetIds;\n    }\n    /**\n     * Parses a RemoteClientState from the JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */\n    static fromWebStorageEntry(clientId, value) {\n        const clientState = JSON.parse(value);\n        let validData = typeof clientState === 'object' &&\n            clientState.activeTargetIds instanceof Array;\n        let activeTargetIdsSet = targetIdSet();\n        for (let i = 0; validData && i < clientState.activeTargetIds.length; ++i) {\n            validData = isSafeInteger(clientState.activeTargetIds[i]);\n            activeTargetIdsSet = activeTargetIdsSet.add(clientState.activeTargetIds[i]);\n        }\n        if (validData) {\n            return new RemoteClientState(clientId, activeTargetIdsSet);\n        }\n        else {\n            logError(LOG_TAG$a, `Failed to parse client data for instance '${clientId}': ${value}`);\n            return null;\n        }\n    }\n}\n/**\n * This class represents the online state for all clients participating in\n * multi-tab. The online state is only written to by the primary client, and\n * used in secondary clients to update their query views.\n */\nclass SharedOnlineState {\n    constructor(clientId, onlineState) {\n        this.clientId = clientId;\n        this.onlineState = onlineState;\n    }\n    /**\n     * Parses a SharedOnlineState from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */\n    static fromWebStorageEntry(value) {\n        const onlineState = JSON.parse(value);\n        const validData = typeof onlineState === 'object' &&\n            ['Unknown', 'Online', 'Offline'].indexOf(onlineState.onlineState) !==\n                -1 &&\n            typeof onlineState.clientId === 'string';\n        if (validData) {\n            return new SharedOnlineState(onlineState.clientId, onlineState.onlineState);\n        }\n        else {\n            logError(LOG_TAG$a, `Failed to parse online state: ${value}`);\n            return null;\n        }\n    }\n}\n/**\n * Metadata state of the local client. Unlike `RemoteClientState`, this class is\n * mutable and keeps track of all pending mutations, which allows us to\n * update the range of pending mutation batch IDs as new mutations are added or\n * removed.\n *\n * The data in `LocalClientState` is not read from WebStorage and instead\n * updated via its instance methods. The updated state can be serialized via\n * `toWebStorageJSON()`.\n */\n// Visible for testing.\nclass LocalClientState {\n    constructor() {\n        this.activeTargetIds = targetIdSet();\n    }\n    addQueryTarget(targetId) {\n        this.activeTargetIds = this.activeTargetIds.add(targetId);\n    }\n    removeQueryTarget(targetId) {\n        this.activeTargetIds = this.activeTargetIds.delete(targetId);\n    }\n    /**\n     * Converts this entry into a JSON-encoded format we can use for WebStorage.\n     * Does not encode `clientId` as it is part of the key in WebStorage.\n     */\n    toWebStorageJSON() {\n        const data = {\n            activeTargetIds: this.activeTargetIds.toArray(),\n            updateTimeMs: Date.now() // Modify the existing value to trigger update.\n        };\n        return JSON.stringify(data);\n    }\n}\n/**\n * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the\n * backing store for the SharedClientState. It keeps track of all active\n * clients and supports modifications of the local client's data.\n */\nclass WebStorageSharedClientState {\n    constructor(window, queue, persistenceKey, localClientId, initialUser) {\n        this.window = window;\n        this.queue = queue;\n        this.persistenceKey = persistenceKey;\n        this.localClientId = localClientId;\n        this.syncEngine = null;\n        this.onlineStateHandler = null;\n        this.sequenceNumberHandler = null;\n        this.storageListener = this.handleWebStorageEvent.bind(this);\n        this.activeClients = new SortedMap(primitiveComparator);\n        this.started = false;\n        /**\n         * Captures WebStorage events that occur before `start()` is called. These\n         * events are replayed once `WebStorageSharedClientState` is started.\n         */\n        this.earlyEvents = [];\n        // Escape the special characters mentioned here:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n        const escapedPersistenceKey = persistenceKey.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        this.storage = this.window.localStorage;\n        this.currentUser = initialUser;\n        this.localClientStorageKey = createWebStorageClientStateKey(this.persistenceKey, this.localClientId);\n        this.sequenceNumberKey = createWebStorageSequenceNumberKey(this.persistenceKey);\n        this.activeClients = this.activeClients.insert(this.localClientId, new LocalClientState());\n        this.clientStateKeyRe = new RegExp(`^${CLIENT_STATE_KEY_PREFIX}_${escapedPersistenceKey}_([^_]*)$`);\n        this.mutationBatchKeyRe = new RegExp(`^${MUTATION_BATCH_KEY_PREFIX}_${escapedPersistenceKey}_(\\\\d+)(?:_(.*))?$`);\n        this.queryTargetKeyRe = new RegExp(`^${QUERY_TARGET_KEY_PREFIX}_${escapedPersistenceKey}_(\\\\d+)$`);\n        this.onlineStateKey = createWebStorageOnlineStateKey(this.persistenceKey);\n        this.bundleLoadedKey = createBundleLoadedKey(this.persistenceKey);\n        // Rather than adding the storage observer during start(), we add the\n        // storage observer during initialization. This ensures that we collect\n        // events before other components populate their initial state (during their\n        // respective start() calls). Otherwise, we might for example miss a\n        // mutation that is added after LocalStore's start() processed the existing\n        // mutations but before we observe WebStorage events.\n        this.window.addEventListener('storage', this.storageListener);\n    }\n    /** Returns 'true' if WebStorage is available in the current environment. */\n    static isAvailable(window) {\n        return !!(window && window.localStorage);\n    }\n    async start() {\n        // Retrieve the list of existing clients to backfill the data in\n        // SharedClientState.\n        const existingClients = await this.syncEngine.getActiveClients();\n        for (const clientId of existingClients) {\n            if (clientId === this.localClientId) {\n                continue;\n            }\n            const storageItem = this.getItem(createWebStorageClientStateKey(this.persistenceKey, clientId));\n            if (storageItem) {\n                const clientState = RemoteClientState.fromWebStorageEntry(clientId, storageItem);\n                if (clientState) {\n                    this.activeClients = this.activeClients.insert(clientState.clientId, clientState);\n                }\n            }\n        }\n        this.persistClientState();\n        // Check if there is an existing online state and call the callback handler\n        // if applicable.\n        const onlineStateJSON = this.storage.getItem(this.onlineStateKey);\n        if (onlineStateJSON) {\n            const onlineState = this.fromWebStorageOnlineState(onlineStateJSON);\n            if (onlineState) {\n                this.handleOnlineStateEvent(onlineState);\n            }\n        }\n        for (const event of this.earlyEvents) {\n            this.handleWebStorageEvent(event);\n        }\n        this.earlyEvents = [];\n        // Register a window unload hook to remove the client metadata entry from\n        // WebStorage even if `shutdown()` was not called.\n        this.window.addEventListener('pagehide', () => this.shutdown());\n        this.started = true;\n    }\n    writeSequenceNumber(sequenceNumber) {\n        this.setItem(this.sequenceNumberKey, JSON.stringify(sequenceNumber));\n    }\n    getAllActiveQueryTargets() {\n        return this.extractActiveQueryTargets(this.activeClients);\n    }\n    isActiveQueryTarget(targetId) {\n        let found = false;\n        this.activeClients.forEach((key, value) => {\n            if (value.activeTargetIds.has(targetId)) {\n                found = true;\n            }\n        });\n        return found;\n    }\n    addPendingMutation(batchId) {\n        this.persistMutationState(batchId, 'pending');\n    }\n    updateMutationState(batchId, state, error) {\n        this.persistMutationState(batchId, state, error);\n        // Once a final mutation result is observed by other clients, they no longer\n        // access the mutation's metadata entry. Since WebStorage replays events\n        // in order, it is safe to delete the entry right after updating it.\n        this.removeMutationState(batchId);\n    }\n    addLocalQueryTarget(targetId, addToActiveTargetIds = true) {\n        let queryState = 'not-current';\n        // Lookup an existing query state if the target ID was already registered\n        // by another tab\n        if (this.isActiveQueryTarget(targetId)) {\n            const storageItem = this.storage.getItem(createWebStorageQueryTargetMetadataKey(this.persistenceKey, targetId));\n            if (storageItem) {\n                const metadata = QueryTargetMetadata.fromWebStorageEntry(targetId, storageItem);\n                if (metadata) {\n                    queryState = metadata.state;\n                }\n            }\n        }\n        // If the query is listening to cache only, the target ID should not be registered with the\n        // local Firestore client as an active watch target.\n        if (addToActiveTargetIds) {\n            this.localClientState.addQueryTarget(targetId);\n        }\n        this.persistClientState();\n        return queryState;\n    }\n    removeLocalQueryTarget(targetId) {\n        this.localClientState.removeQueryTarget(targetId);\n        this.persistClientState();\n    }\n    isLocalQueryTarget(targetId) {\n        return this.localClientState.activeTargetIds.has(targetId);\n    }\n    clearQueryState(targetId) {\n        this.removeItem(createWebStorageQueryTargetMetadataKey(this.persistenceKey, targetId));\n    }\n    updateQueryState(targetId, state, error) {\n        this.persistQueryTargetState(targetId, state, error);\n    }\n    handleUserChange(user, removedBatchIds, addedBatchIds) {\n        removedBatchIds.forEach(batchId => {\n            this.removeMutationState(batchId);\n        });\n        this.currentUser = user;\n        addedBatchIds.forEach(batchId => {\n            this.addPendingMutation(batchId);\n        });\n    }\n    setOnlineState(onlineState) {\n        this.persistOnlineState(onlineState);\n    }\n    notifyBundleLoaded(collectionGroups) {\n        this.persistBundleLoadedState(collectionGroups);\n    }\n    shutdown() {\n        if (this.started) {\n            this.window.removeEventListener('storage', this.storageListener);\n            this.removeItem(this.localClientStorageKey);\n            this.started = false;\n        }\n    }\n    getItem(key) {\n        const value = this.storage.getItem(key);\n        logDebug(LOG_TAG$a, 'READ', key, value);\n        return value;\n    }\n    setItem(key, value) {\n        logDebug(LOG_TAG$a, 'SET', key, value);\n        this.storage.setItem(key, value);\n    }\n    removeItem(key) {\n        logDebug(LOG_TAG$a, 'REMOVE', key);\n        this.storage.removeItem(key);\n    }\n    handleWebStorageEvent(event) {\n        // Note: The function is typed to take Event to be interface-compatible with\n        // `Window.addEventListener`.\n        const storageEvent = event;\n        if (storageEvent.storageArea === this.storage) {\n            logDebug(LOG_TAG$a, 'EVENT', storageEvent.key, storageEvent.newValue);\n            if (storageEvent.key === this.localClientStorageKey) {\n                logError('Received WebStorage notification for local change. Another client might have ' +\n                    'garbage-collected our state');\n                return;\n            }\n            this.queue.enqueueRetryable(async () => {\n                if (!this.started) {\n                    this.earlyEvents.push(storageEvent);\n                    return;\n                }\n                if (storageEvent.key === null) {\n                    return;\n                }\n                if (this.clientStateKeyRe.test(storageEvent.key)) {\n                    if (storageEvent.newValue != null) {\n                        const clientState = this.fromWebStorageClientState(storageEvent.key, storageEvent.newValue);\n                        if (clientState) {\n                            return this.handleClientStateEvent(clientState.clientId, clientState);\n                        }\n                    }\n                    else {\n                        const clientId = this.fromWebStorageClientStateKey(storageEvent.key);\n                        return this.handleClientStateEvent(clientId, null);\n                    }\n                }\n                else if (this.mutationBatchKeyRe.test(storageEvent.key)) {\n                    if (storageEvent.newValue !== null) {\n                        const mutationMetadata = this.fromWebStorageMutationMetadata(storageEvent.key, storageEvent.newValue);\n                        if (mutationMetadata) {\n                            return this.handleMutationBatchEvent(mutationMetadata);\n                        }\n                    }\n                }\n                else if (this.queryTargetKeyRe.test(storageEvent.key)) {\n                    if (storageEvent.newValue !== null) {\n                        const queryTargetMetadata = this.fromWebStorageQueryTargetMetadata(storageEvent.key, storageEvent.newValue);\n                        if (queryTargetMetadata) {\n                            return this.handleQueryTargetEvent(queryTargetMetadata);\n                        }\n                    }\n                }\n                else if (storageEvent.key === this.onlineStateKey) {\n                    if (storageEvent.newValue !== null) {\n                        const onlineState = this.fromWebStorageOnlineState(storageEvent.newValue);\n                        if (onlineState) {\n                            return this.handleOnlineStateEvent(onlineState);\n                        }\n                    }\n                }\n                else if (storageEvent.key === this.sequenceNumberKey) {\n                    const sequenceNumber = fromWebStorageSequenceNumber(storageEvent.newValue);\n                    if (sequenceNumber !== ListenSequence.INVALID) {\n                        this.sequenceNumberHandler(sequenceNumber);\n                    }\n                }\n                else if (storageEvent.key === this.bundleLoadedKey) {\n                    const collectionGroups = this.fromWebStoreBundleLoadedState(storageEvent.newValue);\n                    await Promise.all(collectionGroups.map(cg => this.syncEngine.synchronizeWithChangedDocuments(cg)));\n                }\n            });\n        }\n    }\n    get localClientState() {\n        return this.activeClients.get(this.localClientId);\n    }\n    persistClientState() {\n        this.setItem(this.localClientStorageKey, this.localClientState.toWebStorageJSON());\n    }\n    persistMutationState(batchId, state, error) {\n        const mutationState = new MutationMetadata(this.currentUser, batchId, state, error);\n        const mutationKey = createWebStorageMutationBatchKey(this.persistenceKey, this.currentUser, batchId);\n        this.setItem(mutationKey, mutationState.toWebStorageJSON());\n    }\n    removeMutationState(batchId) {\n        const mutationKey = createWebStorageMutationBatchKey(this.persistenceKey, this.currentUser, batchId);\n        this.removeItem(mutationKey);\n    }\n    persistOnlineState(onlineState) {\n        const entry = {\n            clientId: this.localClientId,\n            onlineState\n        };\n        this.storage.setItem(this.onlineStateKey, JSON.stringify(entry));\n    }\n    persistQueryTargetState(targetId, state, error) {\n        const targetKey = createWebStorageQueryTargetMetadataKey(this.persistenceKey, targetId);\n        const targetMetadata = new QueryTargetMetadata(targetId, state, error);\n        this.setItem(targetKey, targetMetadata.toWebStorageJSON());\n    }\n    persistBundleLoadedState(collectionGroups) {\n        const json = JSON.stringify(Array.from(collectionGroups));\n        this.setItem(this.bundleLoadedKey, json);\n    }\n    /**\n     * Parses a client state key in WebStorage. Returns null if the key does not\n     * match the expected key format.\n     */\n    fromWebStorageClientStateKey(key) {\n        const match = this.clientStateKeyRe.exec(key);\n        return match ? match[1] : null;\n    }\n    /**\n     * Parses a client state in WebStorage. Returns 'null' if the value could not\n     * be parsed.\n     */\n    fromWebStorageClientState(key, value) {\n        const clientId = this.fromWebStorageClientStateKey(key);\n        return RemoteClientState.fromWebStorageEntry(clientId, value);\n    }\n    /**\n     * Parses a mutation batch state in WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n    fromWebStorageMutationMetadata(key, value) {\n        const match = this.mutationBatchKeyRe.exec(key);\n        const batchId = Number(match[1]);\n        const userId = match[2] !== undefined ? match[2] : null;\n        return MutationMetadata.fromWebStorageEntry(new User(userId), batchId, value);\n    }\n    /**\n     * Parses a query target state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n    fromWebStorageQueryTargetMetadata(key, value) {\n        const match = this.queryTargetKeyRe.exec(key);\n        const targetId = Number(match[1]);\n        return QueryTargetMetadata.fromWebStorageEntry(targetId, value);\n    }\n    /**\n     * Parses an online state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n    fromWebStorageOnlineState(value) {\n        return SharedOnlineState.fromWebStorageEntry(value);\n    }\n    fromWebStoreBundleLoadedState(value) {\n        return JSON.parse(value);\n    }\n    async handleMutationBatchEvent(mutationBatch) {\n        if (mutationBatch.user.uid !== this.currentUser.uid) {\n            logDebug(LOG_TAG$a, `Ignoring mutation for non-active user ${mutationBatch.user.uid}`);\n            return;\n        }\n        return this.syncEngine.applyBatchState(mutationBatch.batchId, mutationBatch.state, mutationBatch.error);\n    }\n    handleQueryTargetEvent(targetMetadata) {\n        return this.syncEngine.applyTargetState(targetMetadata.targetId, targetMetadata.state, targetMetadata.error);\n    }\n    handleClientStateEvent(clientId, clientState) {\n        const updatedClients = clientState\n            ? this.activeClients.insert(clientId, clientState)\n            : this.activeClients.remove(clientId);\n        const existingTargets = this.extractActiveQueryTargets(this.activeClients);\n        const newTargets = this.extractActiveQueryTargets(updatedClients);\n        const addedTargets = [];\n        const removedTargets = [];\n        newTargets.forEach(targetId => {\n            if (!existingTargets.has(targetId)) {\n                addedTargets.push(targetId);\n            }\n        });\n        existingTargets.forEach(targetId => {\n            if (!newTargets.has(targetId)) {\n                removedTargets.push(targetId);\n            }\n        });\n        return this.syncEngine.applyActiveTargetsChange(addedTargets, removedTargets).then(() => {\n            this.activeClients = updatedClients;\n        });\n    }\n    handleOnlineStateEvent(onlineState) {\n        // We check whether the client that wrote this online state is still active\n        // by comparing its client ID to the list of clients kept active in\n        // IndexedDb. If a client does not update their IndexedDb client state\n        // within 5 seconds, it is considered inactive and we don't emit an online\n        // state event.\n        if (this.activeClients.get(onlineState.clientId)) {\n            this.onlineStateHandler(onlineState.onlineState);\n        }\n    }\n    extractActiveQueryTargets(clients) {\n        let activeTargets = targetIdSet();\n        clients.forEach((kev, value) => {\n            activeTargets = activeTargets.unionWith(value.activeTargetIds);\n        });\n        return activeTargets;\n    }\n}\nfunction fromWebStorageSequenceNumber(seqString) {\n    let sequenceNumber = ListenSequence.INVALID;\n    if (seqString != null) {\n        try {\n            const parsed = JSON.parse(seqString);\n            hardAssert(typeof parsed === 'number', 0x77ac, { seqString });\n            sequenceNumber = parsed;\n        }\n        catch (e) {\n            logError(LOG_TAG$a, 'Failed to read sequence number from WebStorage', e);\n        }\n    }\n    return sequenceNumber;\n}\n/**\n * `MemorySharedClientState` is a simple implementation of SharedClientState for\n * clients using memory persistence. The state in this class remains fully\n * isolated and no synchronization is performed.\n */\nclass MemorySharedClientState {\n    constructor() {\n        this.localState = new LocalClientState();\n        this.queryState = {};\n        this.onlineStateHandler = null;\n        this.sequenceNumberHandler = null;\n    }\n    addPendingMutation(batchId) {\n        // No op.\n    }\n    updateMutationState(batchId, state, error) {\n        // No op.\n    }\n    addLocalQueryTarget(targetId, addToActiveTargetIds = true) {\n        if (addToActiveTargetIds) {\n            this.localState.addQueryTarget(targetId);\n        }\n        return this.queryState[targetId] || 'not-current';\n    }\n    updateQueryState(targetId, state, error) {\n        this.queryState[targetId] = state;\n    }\n    removeLocalQueryTarget(targetId) {\n        this.localState.removeQueryTarget(targetId);\n    }\n    isLocalQueryTarget(targetId) {\n        return this.localState.activeTargetIds.has(targetId);\n    }\n    clearQueryState(targetId) {\n        delete this.queryState[targetId];\n    }\n    getAllActiveQueryTargets() {\n        return this.localState.activeTargetIds;\n    }\n    isActiveQueryTarget(targetId) {\n        return this.localState.activeTargetIds.has(targetId);\n    }\n    start() {\n        this.localState = new LocalClientState();\n        return Promise.resolve();\n    }\n    handleUserChange(user, removedBatchIds, addedBatchIds) {\n        // No op.\n    }\n    setOnlineState(onlineState) {\n        // No op.\n    }\n    shutdown() { }\n    writeSequenceNumber(sequenceNumber) { }\n    notifyBundleLoaded(collectionGroups) {\n        // No op.\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass NoopConnectivityMonitor {\n    addCallback(callback) {\n        // No-op.\n    }\n    shutdown() {\n        // No-op.\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nclass StreamBridge {\n    constructor(args) {\n        this.sendFn = args.sendFn;\n        this.closeFn = args.closeFn;\n    }\n    onConnected(callback) {\n        this.wrappedOnConnected = callback;\n    }\n    onOpen(callback) {\n        this.wrappedOnOpen = callback;\n    }\n    onClose(callback) {\n        this.wrappedOnClose = callback;\n    }\n    onMessage(callback) {\n        this.wrappedOnMessage = callback;\n    }\n    close() {\n        this.closeFn();\n    }\n    send(msg) {\n        this.sendFn(msg);\n    }\n    callOnConnected() {\n        this.wrappedOnConnected();\n    }\n    callOnOpen() {\n        this.wrappedOnOpen();\n    }\n    callOnClose(err) {\n        this.wrappedOnClose(err);\n    }\n    callOnMessage(msg) {\n        this.wrappedOnMessage(msg);\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */\nlet lastUniqueDebugId = null;\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\nfunction generateInitialUniqueDebugId() {\n    const minResult = 0x10000000;\n    const maxResult = 0x90000000;\n    const resultRange = maxResult - minResult;\n    const resultOffset = Math.round(resultRange * Math.random());\n    return minResult + resultOffset;\n}\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction generateUniqueDebugId() {\n    if (lastUniqueDebugId === null) {\n        lastUniqueDebugId = generateInitialUniqueDebugId();\n    }\n    else {\n        lastUniqueDebugId++;\n    }\n    return '0x' + lastUniqueDebugId.toString(16);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * Utilities for dealing with node.js-style APIs. See nodePromise for more\n * details.\n */\n/**\n * Creates a node-style callback that resolves or rejects a new Promise. The\n * callback is passed to the given action which can then use the callback as\n * a parameter to a node-style function.\n *\n * The intent is to directly bridge a node-style function (which takes a\n * callback) into a Promise without manually converting between the node-style\n * callback and the promise at each call.\n *\n * In effect it allows you to convert:\n *\n * @example\n * new Promise((resolve: (value?: fs.Stats) => void,\n *              reject: (error?: any) => void) => {\n *   fs.stat(path, (error?: any, stat?: fs.Stats) => {\n *     if (error) {\n *       reject(error);\n *     } else {\n *       resolve(stat);\n *     }\n *   });\n * });\n *\n * Into\n * @example\n * nodePromise((callback: NodeCallback<fs.Stats>) => {\n *   fs.stat(path, callback);\n * });\n *\n * @param action - a function that takes a node-style callback as an argument\n *     and then uses that callback to invoke some node-style API.\n * @returns a new Promise which will be rejected if the callback is given the\n *     first Error parameter or will resolve to the value given otherwise.\n */\nfunction nodePromise(action) {\n    return new Promise((resolve, reject) => {\n        action((error, value) => {\n            if (error) {\n                reject(error);\n            }\n            else {\n                resolve(value);\n            }\n        });\n    });\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO: Fetch runtime version from grpc-js/package.json instead\n// when there's a cleaner way to dynamic require JSON in both Node ESM and CJS\nconst grpcVersion = '1.9.15';\nconst LOG_TAG$9 = 'GrpcConnection';\nconst X_GOOG_API_CLIENT_VALUE = `gl-node/${process.versions.node} fire/${SDK_VERSION} grpc/${grpcVersion}`;\nfunction createMetadata(databasePath, authToken, appCheckToken, appId) {\n    hardAssert(authToken === null || authToken.type === 'OAuth', 0x9048);\n    const metadata = new grpc.Metadata();\n    if (authToken) {\n        authToken.headers.forEach((value, key) => metadata.set(key, value));\n    }\n    if (appCheckToken) {\n        appCheckToken.headers.forEach((value, key) => metadata.set(key, value));\n    }\n    if (appId) {\n        metadata.set('X-Firebase-GMPID', appId);\n    }\n    metadata.set('X-Goog-Api-Client', X_GOOG_API_CLIENT_VALUE);\n    // These headers are used to improve routing and project isolation by the\n    // backend.\n    // TODO(b/199767712): We are keeping 'Google-Cloud-Resource-Prefix' until Emulators can be\n    // released with cl/428820046. Currently blocked because Emulators are now built with Java\n    // 11 from Google3.\n    metadata.set('Google-Cloud-Resource-Prefix', databasePath);\n    metadata.set('x-goog-request-params', databasePath);\n    return metadata;\n}\n/**\n * A Connection implemented by GRPC-Node.\n */\nclass GrpcConnection {\n    get shouldResourcePathBeIncludedInRequest() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` ignore their `path` arguments, and expect\n        // the \"path\" to be part of the given `request`.\n        return true;\n    }\n    constructor(protos, databaseInfo) {\n        this.databaseInfo = databaseInfo;\n        // We cache stubs for the most-recently-used token.\n        this.cachedStub = null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.firestore = protos['google']['firestore']['v1'];\n        this.databasePath = `projects/${databaseInfo.databaseId.projectId}/databases/${databaseInfo.databaseId.database}`;\n    }\n    ensureActiveStub() {\n        if (!this.cachedStub) {\n            logDebug(LOG_TAG$9, 'Creating Firestore stub.');\n            const credentials = this.databaseInfo.ssl\n                ? grpc.credentials.createSsl()\n                : grpc.credentials.createInsecure();\n            this.cachedStub = new this.firestore.Firestore(this.databaseInfo.host, credentials);\n        }\n        return this.cachedStub;\n    }\n    invokeRPC(rpcName, path, request, authToken, appCheckToken) {\n        const streamId = generateUniqueDebugId();\n        const stub = this.ensureActiveStub();\n        const metadata = createMetadata(this.databasePath, authToken, appCheckToken, this.databaseInfo.appId);\n        const jsonRequest = Object.assign({ database: this.databasePath }, request);\n        return nodePromise((callback) => {\n            logDebug(LOG_TAG$9, `RPC '${rpcName}' ${streamId} invoked with request:`, request);\n            return stub[rpcName](jsonRequest, metadata, (grpcError, value) => {\n                if (grpcError) {\n                    logDebug(LOG_TAG$9, `RPC '${rpcName}' ${streamId} failed with error:`, grpcError);\n                    callback(new FirestoreError(mapCodeFromRpcCode(grpcError.code), grpcError.message));\n                }\n                else {\n                    logDebug(LOG_TAG$9, `RPC '${rpcName}' ${streamId} completed with response:`, value);\n                    callback(undefined, value);\n                }\n            });\n        });\n    }\n    invokeStreamingRPC(rpcName, path, request, authToken, appCheckToken, expectedResponseCount) {\n        const streamId = generateUniqueDebugId();\n        const results = [];\n        const responseDeferred = new Deferred();\n        logDebug(LOG_TAG$9, `RPC '${rpcName}' ${streamId} invoked (streaming) with request:`, request);\n        const stub = this.ensureActiveStub();\n        const metadata = createMetadata(this.databasePath, authToken, appCheckToken, this.databaseInfo.appId);\n        const jsonRequest = Object.assign(Object.assign({}, request), { database: this.databasePath });\n        const stream = stub[rpcName](jsonRequest, metadata);\n        let callbackFired = false;\n        stream.on('data', (response) => {\n            logDebug(LOG_TAG$9, `RPC ${rpcName} ${streamId} received result:`, response);\n            results.push(response);\n            if (expectedResponseCount !== undefined &&\n                results.length === expectedResponseCount) {\n                callbackFired = true;\n                responseDeferred.resolve(results);\n            }\n        });\n        stream.on('end', () => {\n            logDebug(LOG_TAG$9, `RPC '${rpcName}' ${streamId} completed.`);\n            if (!callbackFired) {\n                callbackFired = true;\n                responseDeferred.resolve(results);\n            }\n        });\n        stream.on('error', (grpcError) => {\n            logDebug(LOG_TAG$9, `RPC '${rpcName}' ${streamId} failed with error:`, grpcError);\n            const code = mapCodeFromRpcCode(grpcError.code);\n            responseDeferred.reject(new FirestoreError(code, grpcError.message));\n        });\n        return responseDeferred.promise;\n    }\n    // TODO(mikelehen): This \"method\" is a monster. Should be refactored.\n    openStream(rpcName, authToken, appCheckToken) {\n        const streamId = generateUniqueDebugId();\n        const stub = this.ensureActiveStub();\n        const metadata = createMetadata(this.databasePath, authToken, appCheckToken, this.databaseInfo.appId);\n        const grpcStream = stub[rpcName](metadata);\n        let closed = false;\n        const close = (err) => {\n            if (!closed) {\n                closed = true;\n                stream.callOnClose(err);\n                grpcStream.end();\n            }\n        };\n        const stream = new StreamBridge({\n            sendFn: (msg) => {\n                if (!closed) {\n                    logDebug(LOG_TAG$9, `RPC '${rpcName}' stream ${streamId} sending:`, msg);\n                    try {\n                        grpcStream.write(msg);\n                    }\n                    catch (e) {\n                        // This probably means we didn't conform to the proto.  Make sure to\n                        // log the message we sent.\n                        logError('Failure sending:', msg);\n                        logError('Error:', e);\n                        throw e;\n                    }\n                }\n                else {\n                    logDebug(LOG_TAG$9, `RPC '${rpcName}' stream ${streamId} ` +\n                        'not sending because gRPC stream is closed:', msg);\n                }\n            },\n            closeFn: () => {\n                logDebug(LOG_TAG$9, `RPC '${rpcName}' stream ${streamId} closed locally via close().`);\n                close();\n            }\n        });\n        let onConnectedSent = false;\n        grpcStream.on('data', (msg) => {\n            if (!closed) {\n                logDebug(LOG_TAG$9, `RPC '${rpcName}' stream ${streamId} received:`, msg);\n                // Emulate the \"onConnected\" event that WebChannelConnection sends.\n                if (!onConnectedSent) {\n                    stream.callOnConnected();\n                    onConnectedSent = true;\n                }\n                stream.callOnMessage(msg);\n            }\n        });\n        grpcStream.on('end', () => {\n            logDebug(LOG_TAG$9, `RPC '${rpcName}' stream ${streamId} ended.`);\n            close();\n        });\n        grpcStream.on('error', (grpcError) => {\n            if (!closed) {\n                logWarn(LOG_TAG$9, `RPC '${rpcName}' stream ${streamId} error. Code:`, grpcError.code, 'Message:', grpcError.message);\n                const code = mapCodeFromRpcCode(grpcError.code);\n                close(new FirestoreError(code, grpcError.message));\n            }\n        });\n        logDebug(LOG_TAG$9, `Opening RPC '${rpcName}' stream ${streamId} ` +\n            `to ${this.databaseInfo.host}`);\n        // TODO(dimond): Since grpc has no explicit open status (or does it?) we\n        // simulate an onOpen in the next loop after the stream had it's listeners\n        // registered\n        setTimeout(() => {\n            stream.callOnOpen();\n        }, 0);\n        return stream;\n    }\n    /**\n     * Closes and cleans up any resources associated with the GrpcConnection.\n     * If a gRPC client has been generated for this connection, the gRPC client\n     * is closed. Failure to call terminate on a GrpcConnection can result\n     * in leaked resources of the gRPC client.\n     */\n    terminate() {\n        if (this.cachedStub) {\n            this.cachedStub.close();\n            this.cachedStub = undefined;\n        }\n    }\n}\n\nconst nested = {\n\tgoogle: {\n\t\tnested: {\n\t\t\tprotobuf: {\n\t\t\t\toptions: {\n\t\t\t\t\tcsharp_namespace: \"Google.Protobuf.WellKnownTypes\",\n\t\t\t\t\tgo_package: \"github.com/golang/protobuf/ptypes/wrappers\",\n\t\t\t\t\tjava_package: \"com.google.protobuf\",\n\t\t\t\t\tjava_outer_classname: \"WrappersProto\",\n\t\t\t\t\tjava_multiple_files: true,\n\t\t\t\t\tobjc_class_prefix: \"GPB\",\n\t\t\t\t\tcc_enable_arenas: true,\n\t\t\t\t\toptimize_for: \"SPEED\"\n\t\t\t\t},\n\t\t\t\tnested: {\n\t\t\t\t\tTimestamp: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tseconds: {\n\t\t\t\t\t\t\t\ttype: \"int64\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnanos: {\n\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tFileDescriptorSet: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"FileDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tFileDescriptorProto: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"package\": {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdependency: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpublicDependency: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\tid: 10,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tpacked: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tweakDependency: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\tid: 11,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tpacked: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmessageType: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"DescriptorProto\",\n\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tenumType: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"EnumDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tservice: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"ServiceDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\textension: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"FieldDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"FileOptions\",\n\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsourceCodeInfo: {\n\t\t\t\t\t\t\t\ttype: \"SourceCodeInfo\",\n\t\t\t\t\t\t\t\tid: 9\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsyntax: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 12\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tDescriptorProto: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"FieldDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\textension: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"FieldDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnestedType: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"DescriptorProto\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tenumType: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"EnumDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\textensionRange: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"ExtensionRange\",\n\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toneofDecl: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"OneofDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"MessageOptions\",\n\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treservedRange: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"ReservedRange\",\n\t\t\t\t\t\t\t\tid: 9\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treservedName: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 10\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\tExtensionRange: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tstart: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tend: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tReservedRange: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tstart: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tend: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tFieldDescriptorProto: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnumber: {\n\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\ttype: \"Label\",\n\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: \"Type\",\n\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttypeName: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\textendee: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefaultValue: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toneofIndex: {\n\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\tid: 9\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjsonName: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 10\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"FieldOptions\",\n\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\tType: {\n\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\tTYPE_DOUBLE: 1,\n\t\t\t\t\t\t\t\t\tTYPE_FLOAT: 2,\n\t\t\t\t\t\t\t\t\tTYPE_INT64: 3,\n\t\t\t\t\t\t\t\t\tTYPE_UINT64: 4,\n\t\t\t\t\t\t\t\t\tTYPE_INT32: 5,\n\t\t\t\t\t\t\t\t\tTYPE_FIXED64: 6,\n\t\t\t\t\t\t\t\t\tTYPE_FIXED32: 7,\n\t\t\t\t\t\t\t\t\tTYPE_BOOL: 8,\n\t\t\t\t\t\t\t\t\tTYPE_STRING: 9,\n\t\t\t\t\t\t\t\t\tTYPE_GROUP: 10,\n\t\t\t\t\t\t\t\t\tTYPE_MESSAGE: 11,\n\t\t\t\t\t\t\t\t\tTYPE_BYTES: 12,\n\t\t\t\t\t\t\t\t\tTYPE_UINT32: 13,\n\t\t\t\t\t\t\t\t\tTYPE_ENUM: 14,\n\t\t\t\t\t\t\t\t\tTYPE_SFIXED32: 15,\n\t\t\t\t\t\t\t\t\tTYPE_SFIXED64: 16,\n\t\t\t\t\t\t\t\t\tTYPE_SINT32: 17,\n\t\t\t\t\t\t\t\t\tTYPE_SINT64: 18\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tLabel: {\n\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\tLABEL_OPTIONAL: 1,\n\t\t\t\t\t\t\t\t\tLABEL_REQUIRED: 2,\n\t\t\t\t\t\t\t\t\tLABEL_REPEATED: 3\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tOneofDescriptorProto: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"OneofOptions\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tEnumDescriptorProto: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"EnumValueDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"EnumOptions\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tEnumValueDescriptorProto: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnumber: {\n\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"EnumValueOptions\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tServiceDescriptorProto: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmethod: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"MethodDescriptorProto\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"ServiceOptions\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tMethodDescriptorProto: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tinputType: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toutputType: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"MethodOptions\",\n\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tclientStreaming: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tserverStreaming: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tFileOptions: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tjavaPackage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjavaOuterClassname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjavaMultipleFiles: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 10\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjavaGenerateEqualsAndHash: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 20,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdeprecated: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjavaStringCheckUtf8: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 27\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptimizeFor: {\n\t\t\t\t\t\t\t\ttype: \"OptimizeMode\",\n\t\t\t\t\t\t\t\tid: 9,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\"default\": \"SPEED\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgoPackage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 11\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tccGenericServices: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 16\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjavaGenericServices: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 17\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpyGenericServices: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 18\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdeprecated: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 23\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tccEnableArenas: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 31\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tobjcClassPrefix: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 36\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcsharpNamespace: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 37\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuninterpretedOption: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"UninterpretedOption\",\n\t\t\t\t\t\t\t\tid: 999\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\textensions: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t536870911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\treserved: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t38,\n\t\t\t\t\t\t\t\t38\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\tOptimizeMode: {\n\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\tSPEED: 1,\n\t\t\t\t\t\t\t\t\tCODE_SIZE: 2,\n\t\t\t\t\t\t\t\t\tLITE_RUNTIME: 3\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tMessageOptions: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tmessageSetWireFormat: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnoStandardDescriptorAccessor: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdeprecated: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmapEntry: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuninterpretedOption: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"UninterpretedOption\",\n\t\t\t\t\t\t\t\tid: 999\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\textensions: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t536870911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\treserved: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t8\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tFieldOptions: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tctype: {\n\t\t\t\t\t\t\t\ttype: \"CType\",\n\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\"default\": \"STRING\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpacked: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tjstype: {\n\t\t\t\t\t\t\t\ttype: \"JSType\",\n\t\t\t\t\t\t\t\tid: 6,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\"default\": \"JS_NORMAL\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlazy: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdeprecated: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tweak: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 10\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuninterpretedOption: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"UninterpretedOption\",\n\t\t\t\t\t\t\t\tid: 999\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\textensions: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t536870911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\treserved: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\t\t4\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\tCType: {\n\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\tSTRING: 0,\n\t\t\t\t\t\t\t\t\tCORD: 1,\n\t\t\t\t\t\t\t\t\tSTRING_PIECE: 2\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tJSType: {\n\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\tJS_NORMAL: 0,\n\t\t\t\t\t\t\t\t\tJS_STRING: 1,\n\t\t\t\t\t\t\t\t\tJS_NUMBER: 2\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tOneofOptions: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tuninterpretedOption: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"UninterpretedOption\",\n\t\t\t\t\t\t\t\tid: 999\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\textensions: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t536870911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tEnumOptions: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tallowAlias: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdeprecated: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuninterpretedOption: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"UninterpretedOption\",\n\t\t\t\t\t\t\t\tid: 999\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\textensions: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t536870911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tEnumValueOptions: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tdeprecated: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuninterpretedOption: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"UninterpretedOption\",\n\t\t\t\t\t\t\t\tid: 999\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\textensions: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t536870911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tServiceOptions: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tdeprecated: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 33\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuninterpretedOption: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"UninterpretedOption\",\n\t\t\t\t\t\t\t\tid: 999\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\textensions: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t536870911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tMethodOptions: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tdeprecated: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 33\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuninterpretedOption: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"UninterpretedOption\",\n\t\t\t\t\t\t\t\tid: 999\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\textensions: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t536870911\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tUninterpretedOption: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"NamePart\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifierValue: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpositiveIntValue: {\n\t\t\t\t\t\t\t\ttype: \"uint64\",\n\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnegativeIntValue: {\n\t\t\t\t\t\t\t\ttype: \"int64\",\n\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdoubleValue: {\n\t\t\t\t\t\t\t\ttype: \"double\",\n\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstringValue: {\n\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\taggregateValue: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\tNamePart: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tnamePart: {\n\t\t\t\t\t\t\t\t\t\trule: \"required\",\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tisExtension: {\n\t\t\t\t\t\t\t\t\t\trule: \"required\",\n\t\t\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tSourceCodeInfo: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"Location\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\tLocation: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tspan: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tleadingComments: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttrailingComments: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tleadingDetachedComments: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tGeneratedCodeInfo: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tannotation: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"Annotation\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\tAnnotation: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsourceFile: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbegin: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tend: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tStruct: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\tkeyType: \"string\",\n\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tValue: {\n\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\tkind: {\n\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\"nullValue\",\n\t\t\t\t\t\t\t\t\t\"numberValue\",\n\t\t\t\t\t\t\t\t\t\"stringValue\",\n\t\t\t\t\t\t\t\t\t\"boolValue\",\n\t\t\t\t\t\t\t\t\t\"structValue\",\n\t\t\t\t\t\t\t\t\t\"listValue\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tnullValue: {\n\t\t\t\t\t\t\t\ttype: \"NullValue\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnumberValue: {\n\t\t\t\t\t\t\t\ttype: \"double\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstringValue: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tboolValue: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstructValue: {\n\t\t\t\t\t\t\t\ttype: \"Struct\",\n\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlistValue: {\n\t\t\t\t\t\t\t\ttype: \"ListValue\",\n\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tNullValue: {\n\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\tNULL_VALUE: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tListValue: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tEmpty: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tDoubleValue: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"double\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tFloatValue: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"float\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tInt64Value: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"int64\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tUInt64Value: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"uint64\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tInt32Value: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tUInt32Value: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"uint32\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tBoolValue: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tStringValue: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tBytesValue: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tAny: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\ttypeUrl: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tfirestore: {\n\t\t\t\tnested: {\n\t\t\t\t\tv1: {\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tcsharp_namespace: \"Google.Cloud.Firestore.V1\",\n\t\t\t\t\t\t\tgo_package: \"google.golang.org/genproto/googleapis/firestore/v1;firestore\",\n\t\t\t\t\t\t\tjava_multiple_files: true,\n\t\t\t\t\t\t\tjava_outer_classname: \"WriteProto\",\n\t\t\t\t\t\t\tjava_package: \"com.google.firestore.v1\",\n\t\t\t\t\t\t\tobjc_class_prefix: \"GCFS\",\n\t\t\t\t\t\t\tphp_namespace: \"Google\\\\Cloud\\\\Firestore\\\\V1\",\n\t\t\t\t\t\t\truby_package: \"Google::Cloud::Firestore::V1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\tAggregationResult: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\taggregateFields: {\n\t\t\t\t\t\t\t\t\t\tkeyType: \"string\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBitSequence: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tbitmap: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpadding: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBloomFilter: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tbits: {\n\t\t\t\t\t\t\t\t\t\ttype: \"BitSequence\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\thashCount: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tDocumentMask: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tfieldPaths: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tPrecondition: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tconditionType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"exists\",\n\t\t\t\t\t\t\t\t\t\t\t\"updateTime\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\texists: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tupdateTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tTransactionOptions: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tmode: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"readOnly\",\n\t\t\t\t\t\t\t\t\t\t\t\"readWrite\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\treadOnly: {\n\t\t\t\t\t\t\t\t\t\ttype: \"ReadOnly\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadWrite: {\n\t\t\t\t\t\t\t\t\t\ttype: \"ReadWrite\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\tReadWrite: {\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tretryTransaction: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tReadOnly: {\n\t\t\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\t\t\tconsistencySelector: {\n\t\t\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"readTime\"\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tDocument: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tkeyType: \"string\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcreateTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tupdateTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tValue: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tvalueType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"nullValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"booleanValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"integerValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"doubleValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"timestampValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"stringValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"bytesValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"referenceValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"geoPointValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"arrayValue\",\n\t\t\t\t\t\t\t\t\t\t\t\"mapValue\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tnullValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.NullValue\",\n\t\t\t\t\t\t\t\t\t\tid: 11\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbooleanValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tintegerValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int64\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdoubleValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"double\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttimestampValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 10\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstringValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 17\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbytesValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 18\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treferenceValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tgeoPointValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.type.LatLng\",\n\t\t\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tarrayValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"ArrayValue\",\n\t\t\t\t\t\t\t\t\t\tid: 9\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmapValue: {\n\t\t\t\t\t\t\t\t\t\ttype: \"MapValue\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tArrayValue: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tMapValue: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tkeyType: \"string\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tFirestore: {\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\"(google.api.default_host)\": \"firestore.googleapis.com\",\n\t\t\t\t\t\t\t\t\t\"(google.api.oauth_scopes)\": \"https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/datastore\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmethods: {\n\t\t\t\t\t\t\t\t\tGetDocument: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"GetDocumentRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"Document\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).get\": \"/v1/{name=projects/*/databases/*/documents/*/**}\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tget: \"/v1/{name=projects/*/databases/*/documents/*/**}\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tListDocuments: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"ListDocumentsRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"ListDocumentsResponse\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).get\": \"/v1/{parent=projects/*/databases/*/documents/*/**}/{collection_id}\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tget: \"/v1/{parent=projects/*/databases/*/documents/*/**}/{collection_id}\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tUpdateDocument: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"UpdateDocumentRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"Document\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).patch\": \"/v1/{document.name=projects/*/databases/*/documents/*/**}\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"document\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"document,update_mask\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpatch: \"/v1/{document.name=projects/*/databases/*/documents/*/**}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"document\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"document,update_mask\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tDeleteDocument: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"DeleteDocumentRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"google.protobuf.Empty\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).delete\": \"/v1/{name=projects/*/databases/*/documents/*/**}\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"name\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"delete\": \"/v1/{name=projects/*/databases/*/documents/*/**}\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"name\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tBatchGetDocuments: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"BatchGetDocumentsRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"BatchGetDocumentsResponse\",\n\t\t\t\t\t\t\t\t\t\tresponseStream: true,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{database=projects/*/databases/*}/documents:batchGet\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{database=projects/*/databases/*}/documents:batchGet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tBeginTransaction: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"BeginTransactionRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"BeginTransactionResponse\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{database=projects/*/databases/*}/documents:beginTransaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"database\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{database=projects/*/databases/*}/documents:beginTransaction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"database\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tCommit: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"CommitRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"CommitResponse\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{database=projects/*/databases/*}/documents:commit\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"database,writes\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{database=projects/*/databases/*}/documents:commit\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"database,writes\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tRollback: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"RollbackRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"google.protobuf.Empty\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{database=projects/*/databases/*}/documents:rollback\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"database,transaction\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{database=projects/*/databases/*}/documents:rollback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"database,transaction\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tRunQuery: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"RunQueryRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"RunQueryResponse\",\n\t\t\t\t\t\t\t\t\t\tresponseStream: true,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{parent=projects/*/databases/*/documents}:runQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).additional_bindings.post\": \"/v1/{parent=projects/*/databases/*/documents/*/**}:runQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).additional_bindings.body\": \"*\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents}:runQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tadditional_bindings: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents/*/**}:runQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tRunAggregationQuery: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"RunAggregationQueryRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"RunAggregationQueryResponse\",\n\t\t\t\t\t\t\t\t\t\tresponseStream: true,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{parent=projects/*/databases/*/documents}:runAggregationQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).additional_bindings.post\": \"/v1/{parent=projects/*/databases/*/documents/*/**}:runAggregationQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).additional_bindings.body\": \"*\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents}:runAggregationQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tadditional_bindings: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents/*/**}:runAggregationQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tPartitionQuery: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"PartitionQueryRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"PartitionQueryResponse\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{parent=projects/*/databases/*/documents}:partitionQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).additional_bindings.post\": \"/v1/{parent=projects/*/databases/*/documents/*/**}:partitionQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).additional_bindings.body\": \"*\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents}:partitionQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tadditional_bindings: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents/*/**}:partitionQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tWrite: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"WriteRequest\",\n\t\t\t\t\t\t\t\t\t\trequestStream: true,\n\t\t\t\t\t\t\t\t\t\tresponseType: \"WriteResponse\",\n\t\t\t\t\t\t\t\t\t\tresponseStream: true,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{database=projects/*/databases/*}/documents:write\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{database=projects/*/databases/*}/documents:write\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tListen: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"ListenRequest\",\n\t\t\t\t\t\t\t\t\t\trequestStream: true,\n\t\t\t\t\t\t\t\t\t\tresponseType: \"ListenResponse\",\n\t\t\t\t\t\t\t\t\t\tresponseStream: true,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{database=projects/*/databases/*}/documents:listen\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{database=projects/*/databases/*}/documents:listen\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tListCollectionIds: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"ListCollectionIdsRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"ListCollectionIdsResponse\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{parent=projects/*/databases/*/documents}:listCollectionIds\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).additional_bindings.post\": \"/v1/{parent=projects/*/databases/*/documents/*/**}:listCollectionIds\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).additional_bindings.body\": \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"parent\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents}:listCollectionIds\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tadditional_bindings: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents/*/**}:listCollectionIds\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.method_signature)\": \"parent\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tBatchWrite: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"BatchWriteRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"BatchWriteResponse\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{database=projects/*/databases/*}/documents:batchWrite\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"*\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{database=projects/*/databases/*}/documents:batchWrite\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"*\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tCreateDocument: {\n\t\t\t\t\t\t\t\t\t\trequestType: \"CreateDocumentRequest\",\n\t\t\t\t\t\t\t\t\t\tresponseType: \"Document\",\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).post\": \"/v1/{parent=projects/*/databases/*/documents/**}/{collection_id}\",\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http).body\": \"document\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tparsedOptions: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"(google.api.http)\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpost: \"/v1/{parent=projects/*/databases/*/documents/**}/{collection_id}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: \"document\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tGetDocumentRequest: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tconsistencySelector: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"transaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"readTime\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmask: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentMask\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tListDocumentsRequest: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tconsistencySelector: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"transaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"readTime\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tparent: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcollectionId: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpageSize: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpageToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\torderBy: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmask: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentMask\",\n\t\t\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 10\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tshowMissing: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\t\t\tid: 12\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tListDocumentsResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdocuments: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Document\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnextPageToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCreateDocumentRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tparent: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcollectionId: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdocumentId: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Document\",\n\t\t\t\t\t\t\t\t\t\tid: 4,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmask: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentMask\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tUpdateDocumentRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Document\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tupdateMask: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentMask\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmask: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentMask\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcurrentDocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Precondition\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tDeleteDocumentRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcurrentDocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Precondition\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBatchGetDocumentsRequest: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tconsistencySelector: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"transaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"newTransaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"readTime\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdatabase: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdocuments: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmask: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentMask\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnewTransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"TransactionOptions\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBatchGetDocumentsResponse: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tresult: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"found\",\n\t\t\t\t\t\t\t\t\t\t\t\"missing\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tfound: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Document\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmissing: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBeginTransactionRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdatabase: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\ttype: \"TransactionOptions\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBeginTransactionResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCommitRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdatabase: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\twrites: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Write\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCommitResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\twriteResults: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"WriteResult\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcommitTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tRollbackRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdatabase: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tRunQueryRequest: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tqueryType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"structuredQuery\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tconsistencySelector: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"transaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"newTransaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"readTime\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tparent: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstructuredQuery: {\n\t\t\t\t\t\t\t\t\t\ttype: \"StructuredQuery\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnewTransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"TransactionOptions\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tRunQueryResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Document\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tskippedResults: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tRunAggregationQueryRequest: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tqueryType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"structuredAggregationQuery\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tconsistencySelector: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"transaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"newTransaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"readTime\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tparent: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstructuredAggregationQuery: {\n\t\t\t\t\t\t\t\t\t\ttype: \"StructuredAggregationQuery\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnewTransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"TransactionOptions\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tRunAggregationQueryResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tresult: {\n\t\t\t\t\t\t\t\t\t\ttype: \"AggregationResult\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransaction: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tPartitionQueryRequest: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tqueryType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"structuredQuery\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tparent: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstructuredQuery: {\n\t\t\t\t\t\t\t\t\t\ttype: \"StructuredQuery\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpartitionCount: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int64\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpageToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpageSize: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tPartitionQueryResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tpartitions: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Cursor\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnextPageToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tWriteRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdatabase: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstreamId: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\twrites: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Write\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstreamToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\t\t\tkeyType: \"string\",\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tWriteResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tstreamId: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstreamToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\twriteResults: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"WriteResult\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcommitTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tListenRequest: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\ttargetChange: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"addTarget\",\n\t\t\t\t\t\t\t\t\t\t\t\"removeTarget\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdatabase: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\taddTarget: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Target\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tremoveTarget: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\t\t\tkeyType: \"string\",\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tListenResponse: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tresponseType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"targetChange\",\n\t\t\t\t\t\t\t\t\t\t\t\"documentChange\",\n\t\t\t\t\t\t\t\t\t\t\t\"documentDelete\",\n\t\t\t\t\t\t\t\t\t\t\t\"documentRemove\",\n\t\t\t\t\t\t\t\t\t\t\t\"filter\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\ttargetChange: {\n\t\t\t\t\t\t\t\t\t\ttype: \"TargetChange\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdocumentChange: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentChange\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdocumentDelete: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentDelete\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdocumentRemove: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentRemove\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfilter: {\n\t\t\t\t\t\t\t\t\t\ttype: \"ExistenceFilter\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tTarget: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\ttargetType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"query\",\n\t\t\t\t\t\t\t\t\t\t\t\"documents\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresumeType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"resumeToken\",\n\t\t\t\t\t\t\t\t\t\t\t\"readTime\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\t\t\t\ttype: \"QueryTarget\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdocuments: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentsTarget\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresumeToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 11\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttargetId: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tonce: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\texpectedCount: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Int32Value\",\n\t\t\t\t\t\t\t\t\t\tid: 12\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\tDocumentsTarget: {\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tdocuments: {\n\t\t\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tQueryTarget: {\n\t\t\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\t\t\tqueryType: {\n\t\t\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"structuredQuery\"\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tparent: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tstructuredQuery: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"StructuredQuery\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tTargetChange: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\ttargetChangeType: {\n\t\t\t\t\t\t\t\t\t\ttype: \"TargetChangeType\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttargetIds: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcause: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.rpc.Status\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresumeToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bytes\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\tTargetChangeType: {\n\t\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\t\tNO_CHANGE: 0,\n\t\t\t\t\t\t\t\t\t\t\tADD: 1,\n\t\t\t\t\t\t\t\t\t\t\tREMOVE: 2,\n\t\t\t\t\t\t\t\t\t\t\tCURRENT: 3,\n\t\t\t\t\t\t\t\t\t\t\tRESET: 4\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tListCollectionIdsRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tparent: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpageSize: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpageToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tListCollectionIdsResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tcollectionIds: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnextPageToken: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBatchWriteRequest: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdatabase: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\"(google.api.field_behavior)\": \"REQUIRED\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\twrites: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Write\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\t\t\tkeyType: \"string\",\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBatchWriteResponse: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\twriteResults: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"WriteResult\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstatus: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"google.rpc.Status\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tStructuredQuery: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Projection\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"CollectionSelector\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Filter\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\torderBy: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Order\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tstartAt: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Cursor\",\n\t\t\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tendAt: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Cursor\",\n\t\t\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\toffset: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tlimit: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Int32Value\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\tCollectionSelector: {\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tcollectionId: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tallDescendants: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tFilter: {\n\t\t\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\t\t\tfilterType: {\n\t\t\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"compositeFilter\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"fieldFilter\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"unaryFilter\"\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tcompositeFilter: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"CompositeFilter\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tfieldFilter: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"FieldFilter\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tunaryFilter: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"UnaryFilter\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tCompositeFilter: {\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\top: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Operator\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Filter\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\t\t\tOperator: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tOPERATOR_UNSPECIFIED: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\tAND: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\tOR: 2\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tFieldFilter: {\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"FieldReference\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\top: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Operator\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\t\t\tOperator: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tOPERATOR_UNSPECIFIED: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\tLESS_THAN: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\tLESS_THAN_OR_EQUAL: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t\tGREATER_THAN: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\tGREATER_THAN_OR_EQUAL: 4,\n\t\t\t\t\t\t\t\t\t\t\t\t\tEQUAL: 5,\n\t\t\t\t\t\t\t\t\t\t\t\t\tNOT_EQUAL: 6,\n\t\t\t\t\t\t\t\t\t\t\t\t\tARRAY_CONTAINS: 7,\n\t\t\t\t\t\t\t\t\t\t\t\t\tIN: 8,\n\t\t\t\t\t\t\t\t\t\t\t\t\tARRAY_CONTAINS_ANY: 9,\n\t\t\t\t\t\t\t\t\t\t\t\t\tNOT_IN: 10\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tUnaryFilter: {\n\t\t\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\t\t\toperandType: {\n\t\t\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"field\"\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\top: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Operator\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"FieldReference\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\t\t\tOperator: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tOPERATOR_UNSPECIFIED: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\tIS_NAN: 2,\n\t\t\t\t\t\t\t\t\t\t\t\t\tIS_NULL: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\tIS_NOT_NAN: 4,\n\t\t\t\t\t\t\t\t\t\t\t\t\tIS_NOT_NULL: 5\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tOrder: {\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"FieldReference\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tdirection: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Direction\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tFieldReference: {\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tfieldPath: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tProjection: {\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"FieldReference\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tDirection: {\n\t\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\t\tDIRECTION_UNSPECIFIED: 0,\n\t\t\t\t\t\t\t\t\t\t\tASCENDING: 1,\n\t\t\t\t\t\t\t\t\t\t\tDESCENDING: 2\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tStructuredAggregationQuery: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\tqueryType: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"structuredQuery\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tstructuredQuery: {\n\t\t\t\t\t\t\t\t\t\ttype: \"StructuredQuery\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\taggregations: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Aggregation\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\tAggregation: {\n\t\t\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\t\t\toperator: {\n\t\t\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"count\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"sum\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"avg\"\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tcount: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Count\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tsum: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Sum\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tavg: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Avg\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\talias: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\t\t\tCount: {\n\t\t\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tupTo: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Int64Value\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tSum: {\n\t\t\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"FieldReference\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tAvg: {\n\t\t\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"FieldReference\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCursor: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbefore: {\n\t\t\t\t\t\t\t\t\t\ttype: \"bool\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tWrite: {\n\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\toperation: {\n\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\"update\",\n\t\t\t\t\t\t\t\t\t\t\t\"delete\",\n\t\t\t\t\t\t\t\t\t\t\t\"verify\",\n\t\t\t\t\t\t\t\t\t\t\t\"transform\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tupdate: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Document\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"delete\": {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tverify: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransform: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentTransform\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tupdateMask: {\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentMask\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tupdateTransforms: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"DocumentTransform.FieldTransform\",\n\t\t\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcurrentDocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Precondition\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tDocumentTransform: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfieldTransforms: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"FieldTransform\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\tFieldTransform: {\n\t\t\t\t\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\t\t\t\t\ttransformType: {\n\t\t\t\t\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"setToServerValue\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"increment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"maximum\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"minimum\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"appendMissingElements\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"removeAllFromArray\"\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\t\tfieldPath: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tsetToServerValue: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"ServerValue\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tincrement: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tmaximum: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tminimum: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tappendMissingElements: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"ArrayValue\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tremoveAllFromArray: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"ArrayValue\",\n\t\t\t\t\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnested: {\n\t\t\t\t\t\t\t\t\t\t\tServerValue: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tSERVER_VALUE_UNSPECIFIED: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\tREQUEST_TIME: 1\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tWriteResult: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tupdateTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransformResults: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"Value\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tDocumentChange: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"Document\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttargetIds: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tremovedTargetIds: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tDocumentDelete: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tremovedTargetIds: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tDocumentRemove: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tremovedTargetIds: {\n\t\t\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\treadTime: {\n\t\t\t\t\t\t\t\t\t\ttype: \"google.protobuf.Timestamp\",\n\t\t\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tExistenceFilter: {\n\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\ttargetId: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcount: {\n\t\t\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tunchangedNames: {\n\t\t\t\t\t\t\t\t\t\ttype: \"BloomFilter\",\n\t\t\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tapi: {\n\t\t\t\toptions: {\n\t\t\t\t\tgo_package: \"google.golang.org/genproto/googleapis/api/annotations;annotations\",\n\t\t\t\t\tjava_multiple_files: true,\n\t\t\t\t\tjava_outer_classname: \"HttpProto\",\n\t\t\t\t\tjava_package: \"com.google.api\",\n\t\t\t\t\tobjc_class_prefix: \"GAPI\",\n\t\t\t\t\tcc_enable_arenas: true\n\t\t\t\t},\n\t\t\t\tnested: {\n\t\t\t\t\thttp: {\n\t\t\t\t\t\ttype: \"HttpRule\",\n\t\t\t\t\t\tid: 72295728,\n\t\t\t\t\t\textend: \"google.protobuf.MethodOptions\"\n\t\t\t\t\t},\n\t\t\t\t\tHttp: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\trules: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"HttpRule\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tHttpRule: {\n\t\t\t\t\t\toneofs: {\n\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\toneof: [\n\t\t\t\t\t\t\t\t\t\"get\",\n\t\t\t\t\t\t\t\t\t\"put\",\n\t\t\t\t\t\t\t\t\t\"post\",\n\t\t\t\t\t\t\t\t\t\"delete\",\n\t\t\t\t\t\t\t\t\t\"patch\",\n\t\t\t\t\t\t\t\t\t\"custom\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tget: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tput: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpost: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 4\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"delete\": {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 5\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpatch: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 6\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcustom: {\n\t\t\t\t\t\t\t\ttype: \"CustomHttpPattern\",\n\t\t\t\t\t\t\t\tid: 8\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tselector: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 7\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tadditionalBindings: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"HttpRule\",\n\t\t\t\t\t\t\t\tid: 11\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tCustomHttpPattern: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tkind: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tmethodSignature: {\n\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 1051,\n\t\t\t\t\t\textend: \"google.protobuf.MethodOptions\"\n\t\t\t\t\t},\n\t\t\t\t\tdefaultHost: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 1049,\n\t\t\t\t\t\textend: \"google.protobuf.ServiceOptions\"\n\t\t\t\t\t},\n\t\t\t\t\toauthScopes: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tid: 1050,\n\t\t\t\t\t\textend: \"google.protobuf.ServiceOptions\"\n\t\t\t\t\t},\n\t\t\t\t\tfieldBehavior: {\n\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\ttype: \"google.api.FieldBehavior\",\n\t\t\t\t\t\tid: 1052,\n\t\t\t\t\t\textend: \"google.protobuf.FieldOptions\"\n\t\t\t\t\t},\n\t\t\t\t\tFieldBehavior: {\n\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\tFIELD_BEHAVIOR_UNSPECIFIED: 0,\n\t\t\t\t\t\t\tOPTIONAL: 1,\n\t\t\t\t\t\t\tREQUIRED: 2,\n\t\t\t\t\t\t\tOUTPUT_ONLY: 3,\n\t\t\t\t\t\t\tINPUT_ONLY: 4,\n\t\t\t\t\t\t\tIMMUTABLE: 5,\n\t\t\t\t\t\t\tUNORDERED_LIST: 6,\n\t\t\t\t\t\t\tNON_EMPTY_DEFAULT: 7\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\ttype: {\n\t\t\t\toptions: {\n\t\t\t\t\tcc_enable_arenas: true,\n\t\t\t\t\tgo_package: \"google.golang.org/genproto/googleapis/type/latlng;latlng\",\n\t\t\t\t\tjava_multiple_files: true,\n\t\t\t\t\tjava_outer_classname: \"LatLngProto\",\n\t\t\t\t\tjava_package: \"com.google.type\",\n\t\t\t\t\tobjc_class_prefix: \"GTP\"\n\t\t\t\t},\n\t\t\t\tnested: {\n\t\t\t\t\tLatLng: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tlatitude: {\n\t\t\t\t\t\t\t\ttype: \"double\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlongitude: {\n\t\t\t\t\t\t\t\ttype: \"double\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\trpc: {\n\t\t\t\toptions: {\n\t\t\t\t\tcc_enable_arenas: true,\n\t\t\t\t\tgo_package: \"google.golang.org/genproto/googleapis/rpc/status;status\",\n\t\t\t\t\tjava_multiple_files: true,\n\t\t\t\t\tjava_outer_classname: \"StatusProto\",\n\t\t\t\t\tjava_package: \"com.google.rpc\",\n\t\t\t\t\tobjc_class_prefix: \"RPC\"\n\t\t\t\t},\n\t\t\t\tnested: {\n\t\t\t\t\tStatus: {\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tcode: {\n\t\t\t\t\t\t\t\ttype: \"int32\",\n\t\t\t\t\t\t\t\tid: 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tid: 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdetails: {\n\t\t\t\t\t\t\t\trule: \"repeated\",\n\t\t\t\t\t\t\t\ttype: \"google.protobuf.Any\",\n\t\t\t\t\t\t\t\tid: 3\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\nvar protos = {\n\tnested: nested\n};\n\nvar protos$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  nested: nested,\n  'default': protos\n});\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used by tests so we can match @grpc/proto-loader behavior. */\nconst protoLoaderOptions = {\n    longs: String,\n    enums: String,\n    defaults: true,\n    oneofs: false\n};\n/**\n * Loads the protocol buffer definitions for Firestore.\n *\n * @returns The GrpcObject representing our protos.\n */\nfunction loadProtos() {\n    const packageDefinition = protoLoader.fromJSON(protos$1, protoLoaderOptions);\n    return grpc.loadPackageDefinition(packageDefinition);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Loads the GRPC stack */\nfunction newConnection(databaseInfo) {\n    const protos = loadProtos();\n    return new GrpcConnection(protos, databaseInfo);\n}\n/** Return the Platform-specific connectivity monitor. */\nfunction newConnectivityMonitor() {\n    return new NoopConnectivityMonitor();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'window' implementation or null if not available. */\nfunction getWindow() {\n    if (process.env.USE_MOCK_PERSISTENCE === 'YES') {\n        // eslint-disable-next-line no-restricted-globals\n        return window;\n    }\n    return null;\n}\n/** The Platform's 'document' implementation or null if not available. */\nfunction getDocument() {\n    return null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction newSerializer(databaseId) {\n    return new JsonProtoSerializer(databaseId, /* useProto3Json= */ false);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$8 = 'ExponentialBackoff';\n/**\n * Initial backoff time in milliseconds after an error.\n * Set to 1s according to https://cloud.google.com/apis/design/errors.\n */\nconst DEFAULT_BACKOFF_INITIAL_DELAY_MS = 1000;\nconst DEFAULT_BACKOFF_FACTOR = 1.5;\n/** Maximum backoff time in milliseconds */\nconst DEFAULT_BACKOFF_MAX_DELAY_MS = 60 * 1000;\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass ExponentialBackoff {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    queue, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    timerId, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    initialDelayMs = DEFAULT_BACKOFF_INITIAL_DELAY_MS, \n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */\n    backoffFactor = DEFAULT_BACKOFF_FACTOR, \n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */\n    maxDelayMs = DEFAULT_BACKOFF_MAX_DELAY_MS) {\n        this.queue = queue;\n        this.timerId = timerId;\n        this.initialDelayMs = initialDelayMs;\n        this.backoffFactor = backoffFactor;\n        this.maxDelayMs = maxDelayMs;\n        this.currentBaseMs = 0;\n        this.timerPromise = null;\n        /** The last backoff attempt, as epoch milliseconds. */\n        this.lastAttemptTime = Date.now();\n        this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */\n    reset() {\n        this.currentBaseMs = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n    resetToMax() {\n        this.currentBaseMs = this.maxDelayMs;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n    backoffAndRun(op) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const desiredDelayWithJitterMs = Math.floor(this.currentBaseMs + this.jitterDelayMs());\n        // Guard against lastAttemptTime being in the future due to a clock change.\n        const delaySoFarMs = Math.max(0, Date.now() - this.lastAttemptTime);\n        // Guard against the backoff delay already being past.\n        const remainingDelayMs = Math.max(0, desiredDelayWithJitterMs - delaySoFarMs);\n        if (remainingDelayMs > 0) {\n            logDebug(LOG_TAG$8, `Backing off for ${remainingDelayMs} ms ` +\n                `(base delay: ${this.currentBaseMs} ms, ` +\n                `delay with jitter: ${desiredDelayWithJitterMs} ms, ` +\n                `last attempt: ${delaySoFarMs} ms ago)`);\n        }\n        this.timerPromise = this.queue.enqueueAfterDelay(this.timerId, remainingDelayMs, () => {\n            this.lastAttemptTime = Date.now();\n            return op();\n        });\n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.currentBaseMs *= this.backoffFactor;\n        if (this.currentBaseMs < this.initialDelayMs) {\n            this.currentBaseMs = this.initialDelayMs;\n        }\n        if (this.currentBaseMs > this.maxDelayMs) {\n            this.currentBaseMs = this.maxDelayMs;\n        }\n    }\n    skipBackoff() {\n        if (this.timerPromise !== null) {\n            this.timerPromise.skipDelay();\n            this.timerPromise = null;\n        }\n    }\n    cancel() {\n        if (this.timerPromise !== null) {\n            this.timerPromise.cancel();\n            this.timerPromise = null;\n        }\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n    jitterDelayMs() {\n        return (Math.random() - 0.5) * this.currentBaseMs;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$7 = 'PersistentStream';\n/** The time a stream stays open after it is marked idle. */\nconst IDLE_TIMEOUT_MS = 60 * 1000;\n/** The time a stream stays open until we consider it healthy. */\nconst HEALTHY_TIMEOUT_MS = 10 * 1000;\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *   - Closing idle streams after 60 seconds of inactivity\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be start()ed before messages can\n * be sent and received. The PersistentStream will call the onOpen() function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a start() fail, PersistentStream will call the registered onClose()\n * listener with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\nclass PersistentStream {\n    constructor(queue, connectionTimerId, idleTimerId, healthTimerId, connection, authCredentialsProvider, appCheckCredentialsProvider, listener) {\n        this.queue = queue;\n        this.idleTimerId = idleTimerId;\n        this.healthTimerId = healthTimerId;\n        this.connection = connection;\n        this.authCredentialsProvider = authCredentialsProvider;\n        this.appCheckCredentialsProvider = appCheckCredentialsProvider;\n        this.listener = listener;\n        this.state = 0 /* PersistentStreamState.Initial */;\n        /**\n         * A close count that's incremented every time the stream is closed; used by\n         * getCloseGuardedDispatcher() to invalidate callbacks that happen after\n         * close.\n         */\n        this.closeCount = 0;\n        this.idleTimer = null;\n        this.healthCheck = null;\n        this.stream = null;\n        /**\n         * Count of response messages received.\n         */\n        this.responseCount = 0;\n        this.backoff = new ExponentialBackoff(queue, connectionTimerId);\n    }\n    /**\n     * Returns true if start() has been called and no error has occurred. True\n     * indicates the stream is open or in the process of opening (which\n     * encompasses respecting backoff, getting auth tokens, and starting the\n     * actual RPC). Use isOpen() to determine if the stream is open and ready for\n     * outbound requests.\n     */\n    isStarted() {\n        return (this.state === 1 /* PersistentStreamState.Starting */ ||\n            this.state === 5 /* PersistentStreamState.Backoff */ ||\n            this.isOpen());\n    }\n    /**\n     * Returns true if the underlying RPC is open (the onOpen() listener has been\n     * called) and the stream is ready for outbound requests.\n     */\n    isOpen() {\n        return (this.state === 2 /* PersistentStreamState.Open */ ||\n            this.state === 3 /* PersistentStreamState.Healthy */);\n    }\n    /**\n     * Starts the RPC. Only allowed if isStarted() returns false. The stream is\n     * not immediately ready for use: onOpen() will be invoked when the RPC is\n     * ready for outbound requests, at which point isOpen() will return true.\n     *\n     * When start returns, isStarted() will return true.\n     */\n    start() {\n        this.responseCount = 0;\n        if (this.state === 4 /* PersistentStreamState.Error */) {\n            this.performBackoff();\n            return;\n        }\n        this.auth();\n    }\n    /**\n     * Stops the RPC. This call is idempotent and allowed regardless of the\n     * current isStarted() state.\n     *\n     * When stop returns, isStarted() and isOpen() will both return false.\n     */\n    async stop() {\n        if (this.isStarted()) {\n            await this.close(0 /* PersistentStreamState.Initial */);\n        }\n    }\n    /**\n     * After an error the stream will usually back off on the next attempt to\n     * start it. If the error warrants an immediate restart of the stream, the\n     * sender can use this to indicate that the receiver should not back off.\n     *\n     * Each error will call the onClose() listener. That function can decide to\n     * inhibit backoff if required.\n     */\n    inhibitBackoff() {\n        this.state = 0 /* PersistentStreamState.Initial */;\n        this.backoff.reset();\n    }\n    /**\n     * Marks this stream as idle. If no further actions are performed on the\n     * stream for one minute, the stream will automatically close itself and\n     * notify the stream's onClose() handler with Status.OK. The stream will then\n     * be in a !isStarted() state, requiring the caller to start the stream again\n     * before further use.\n     *\n     * Only streams that are in state 'Open' can be marked idle, as all other\n     * states imply pending network operations.\n     */\n    markIdle() {\n        // Starts the idle time if we are in state 'Open' and are not yet already\n        // running a timer (in which case the previous idle timeout still applies).\n        if (this.isOpen() && this.idleTimer === null) {\n            this.idleTimer = this.queue.enqueueAfterDelay(this.idleTimerId, IDLE_TIMEOUT_MS, () => this.handleIdleCloseTimer());\n        }\n    }\n    /** Sends a message to the underlying stream. */\n    sendRequest(msg) {\n        this.cancelIdleCheck();\n        this.stream.send(msg);\n    }\n    /** Called by the idle timer when the stream should close due to inactivity. */\n    async handleIdleCloseTimer() {\n        if (this.isOpen()) {\n            // When timing out an idle stream there's no reason to force the stream into backoff when\n            // it restarts so set the stream state to Initial instead of Error.\n            return this.close(0 /* PersistentStreamState.Initial */);\n        }\n    }\n    /** Marks the stream as active again. */\n    cancelIdleCheck() {\n        if (this.idleTimer) {\n            this.idleTimer.cancel();\n            this.idleTimer = null;\n        }\n    }\n    /** Cancels the health check delayed operation. */\n    cancelHealthCheck() {\n        if (this.healthCheck) {\n            this.healthCheck.cancel();\n            this.healthCheck = null;\n        }\n    }\n    /**\n     * Closes the stream and cleans up as necessary:\n     *\n     * * closes the underlying GRPC stream;\n     * * calls the onClose handler with the given 'error';\n     * * sets internal stream state to 'finalState';\n     * * adjusts the backoff timer based on the error\n     *\n     * A new stream can be opened by calling start().\n     *\n     * @param finalState - the intended state of the stream after closing.\n     * @param error - the error the connection was closed with.\n     */\n    async close(finalState, error) {\n        // Cancel any outstanding timers (they're guaranteed not to execute).\n        this.cancelIdleCheck();\n        this.cancelHealthCheck();\n        this.backoff.cancel();\n        // Invalidates any stream-related callbacks (e.g. from auth or the\n        // underlying stream), guaranteeing they won't execute.\n        this.closeCount++;\n        if (finalState !== 4 /* PersistentStreamState.Error */) {\n            // If this is an intentional close ensure we don't delay our next connection attempt.\n            this.backoff.reset();\n        }\n        else if (error && error.code === Code.RESOURCE_EXHAUSTED) {\n            // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n            logError(error.toString());\n            logError('Using maximum backoff delay to prevent overloading the backend.');\n            this.backoff.resetToMax();\n        }\n        else if (error &&\n            error.code === Code.UNAUTHENTICATED &&\n            this.state !== 3 /* PersistentStreamState.Healthy */) {\n            // \"unauthenticated\" error means the token was rejected. This should rarely\n            // happen since both Auth and AppCheck ensure a sufficient TTL when we\n            // request a token. If a user manually resets their system clock this can\n            // fail, however. In this case, we should get a Code.UNAUTHENTICATED error\n            // before we received the first message and we need to invalidate the token\n            // to ensure that we fetch a new token.\n            this.authCredentialsProvider.invalidateToken();\n            this.appCheckCredentialsProvider.invalidateToken();\n        }\n        // Clean up the underlying stream because we are no longer interested in events.\n        if (this.stream !== null) {\n            this.tearDown();\n            this.stream.close();\n            this.stream = null;\n        }\n        // This state must be assigned before calling onClose() to allow the callback to\n        // inhibit backoff or otherwise manipulate the state in its non-started state.\n        this.state = finalState;\n        // Notify the listener that the stream closed.\n        await this.listener.onClose(error);\n    }\n    /**\n     * Can be overridden to perform additional cleanup before the stream is closed.\n     * Calling super.tearDown() is not required.\n     */\n    tearDown() { }\n    auth() {\n        this.state = 1 /* PersistentStreamState.Starting */;\n        const dispatchIfNotClosed = this.getCloseGuardedDispatcher(this.closeCount);\n        // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n        const closeCount = this.closeCount;\n        Promise.all([\n            this.authCredentialsProvider.getToken(),\n            this.appCheckCredentialsProvider.getToken()\n        ]).then(([authToken, appCheckToken]) => {\n            // Stream can be stopped while waiting for authentication.\n            // TODO(mikelehen): We really should just use dispatchIfNotClosed\n            // and let this dispatch onto the queue, but that opened a spec test can\n            // of worms that I don't want to deal with in this PR.\n            if (this.closeCount === closeCount) {\n                // Normally we'd have to schedule the callback on the AsyncQueue.\n                // However, the following calls are safe to be called outside the\n                // AsyncQueue since they don't chain asynchronous calls\n                this.startStream(authToken, appCheckToken);\n            }\n        }, (error) => {\n            dispatchIfNotClosed(() => {\n                const rpcError = new FirestoreError(Code.UNKNOWN, 'Fetching auth token failed: ' + error.message);\n                return this.handleStreamClose(rpcError);\n            });\n        });\n    }\n    startStream(authToken, appCheckToken) {\n        const dispatchIfNotClosed = this.getCloseGuardedDispatcher(this.closeCount);\n        this.stream = this.startRpc(authToken, appCheckToken);\n        this.stream.onConnected(() => {\n            dispatchIfNotClosed(() => this.listener.onConnected());\n        });\n        this.stream.onOpen(() => {\n            dispatchIfNotClosed(() => {\n                this.state = 2 /* PersistentStreamState.Open */;\n                this.healthCheck = this.queue.enqueueAfterDelay(this.healthTimerId, HEALTHY_TIMEOUT_MS, () => {\n                    if (this.isOpen()) {\n                        this.state = 3 /* PersistentStreamState.Healthy */;\n                    }\n                    return Promise.resolve();\n                });\n                return this.listener.onOpen();\n            });\n        });\n        this.stream.onClose((error) => {\n            dispatchIfNotClosed(() => {\n                return this.handleStreamClose(error);\n            });\n        });\n        this.stream.onMessage((msg) => {\n            dispatchIfNotClosed(() => {\n                if (++this.responseCount === 1) {\n                    return this.onFirst(msg);\n                }\n                else {\n                    return this.onNext(msg);\n                }\n            });\n        });\n    }\n    performBackoff() {\n        this.state = 5 /* PersistentStreamState.Backoff */;\n        this.backoff.backoffAndRun(async () => {\n            this.state = 0 /* PersistentStreamState.Initial */;\n            this.start();\n        });\n    }\n    // Visible for tests\n    handleStreamClose(error) {\n        logDebug(LOG_TAG$7, `close with error: ${error}`);\n        this.stream = null;\n        // In theory the stream could close cleanly, however, in our current model\n        // we never expect this to happen because if we stop a stream ourselves,\n        // this callback will never be called. To prevent cases where we retry\n        // without a backoff accidentally, we set the stream to error in all cases.\n        return this.close(4 /* PersistentStreamState.Error */, error);\n    }\n    /**\n     * Returns a \"dispatcher\" function that dispatches operations onto the\n     * AsyncQueue but only runs them if closeCount remains unchanged. This allows\n     * us to turn auth / stream callbacks into no-ops if the stream is closed /\n     * re-opened, etc.\n     */\n    getCloseGuardedDispatcher(startCloseCount) {\n        return (fn) => {\n            this.queue.enqueueAndForget(() => {\n                if (this.closeCount === startCloseCount) {\n                    return fn();\n                }\n                else {\n                    logDebug(LOG_TAG$7, 'stream callback skipped by getCloseGuardedDispatcher.');\n                    return Promise.resolve();\n                }\n            });\n        };\n    }\n}\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the onOpen() listener, any number of\n * listen() and unlisten() calls can be made to control what changes will be\n * sent from the server for ListenResponses.\n */\nclass PersistentListenStream extends PersistentStream {\n    constructor(queue, connection, authCredentials, appCheckCredentials, serializer, listener) {\n        super(queue, \"listen_stream_connection_backoff\" /* TimerId.ListenStreamConnectionBackoff */, \"listen_stream_idle\" /* TimerId.ListenStreamIdle */, \"health_check_timeout\" /* TimerId.HealthCheckTimeout */, connection, authCredentials, appCheckCredentials, listener);\n        this.serializer = serializer;\n    }\n    startRpc(authToken, appCheckToken) {\n        return this.connection.openStream('Listen', authToken, appCheckToken);\n    }\n    onFirst(watchChangeProto) {\n        return this.onNext(watchChangeProto);\n    }\n    onNext(watchChangeProto) {\n        // A successful response means the stream is healthy\n        this.backoff.reset();\n        const watchChange = fromWatchChange(this.serializer, watchChangeProto);\n        const snapshot = versionFromListenResponse(watchChangeProto);\n        return this.listener.onWatchChange(watchChange, snapshot);\n    }\n    /**\n     * Registers interest in the results of the given target. If the target\n     * includes a resumeToken it will be included in the request. Results that\n     * affect the target will be streamed back as WatchChange messages that\n     * reference the targetId.\n     */\n    watch(targetData) {\n        const request = {};\n        request.database = getEncodedDatabaseId(this.serializer);\n        request.addTarget = toTarget(this.serializer, targetData);\n        const labels = toListenRequestLabels(this.serializer, targetData);\n        if (labels) {\n            request.labels = labels;\n        }\n        this.sendRequest(request);\n    }\n    /**\n     * Unregisters interest in the results of the target associated with the\n     * given targetId.\n     */\n    unwatch(targetId) {\n        const request = {};\n        request.database = getEncodedDatabaseId(this.serializer);\n        request.removeTarget = targetId;\n        this.sendRequest(request);\n    }\n}\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */\nclass PersistentWriteStream extends PersistentStream {\n    constructor(queue, connection, authCredentials, appCheckCredentials, serializer, listener) {\n        super(queue, \"write_stream_connection_backoff\" /* TimerId.WriteStreamConnectionBackoff */, \"write_stream_idle\" /* TimerId.WriteStreamIdle */, \"health_check_timeout\" /* TimerId.HealthCheckTimeout */, connection, authCredentials, appCheckCredentials, listener);\n        this.serializer = serializer;\n    }\n    /**\n     * Tracks whether or not a handshake has been successfully exchanged and\n     * the stream is ready to accept mutations.\n     */\n    get handshakeComplete() {\n        return this.responseCount > 0;\n    }\n    // Override of PersistentStream.start\n    start() {\n        this.lastStreamToken = undefined;\n        super.start();\n    }\n    tearDown() {\n        if (this.handshakeComplete) {\n            this.writeMutations([]);\n        }\n    }\n    startRpc(authToken, appCheckToken) {\n        return this.connection.openStream('Write', authToken, appCheckToken);\n    }\n    onFirst(responseProto) {\n        // Always capture the last stream token.\n        hardAssert(!!responseProto.streamToken, 0x7a5a);\n        this.lastStreamToken = responseProto.streamToken;\n        // The first response is always the handshake response\n        hardAssert(!responseProto.writeResults || responseProto.writeResults.length === 0, 0xda08);\n        return this.listener.onHandshakeComplete();\n    }\n    onNext(responseProto) {\n        // Always capture the last stream token.\n        hardAssert(!!responseProto.streamToken, 0x3186);\n        this.lastStreamToken = responseProto.streamToken;\n        // A successful first write response means the stream is healthy,\n        // Note, that we could consider a successful handshake healthy, however,\n        // the write itself might be causing an error we want to back off from.\n        this.backoff.reset();\n        const results = fromWriteResults(responseProto.writeResults, responseProto.commitTime);\n        const commitVersion = fromVersion(responseProto.commitTime);\n        return this.listener.onMutationResult(commitVersion, results);\n    }\n    /**\n     * Sends an initial streamToken to the server, performing the handshake\n     * required to make the StreamingWrite RPC work. Subsequent\n     * calls should wait until onHandshakeComplete was called.\n     */\n    writeHandshake() {\n        // TODO(dimond): Support stream resumption. We intentionally do not set the\n        // stream token on the handshake, ignoring any stream token we might have.\n        const request = {};\n        request.database = getEncodedDatabaseId(this.serializer);\n        this.sendRequest(request);\n    }\n    /** Sends a group of mutations to the Firestore backend to apply. */\n    writeMutations(mutations) {\n        const request = {\n            streamToken: this.lastStreamToken,\n            writes: mutations.map(mutation => toMutation(this.serializer, mutation))\n        };\n        this.sendRequest(request);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\nclass Datastore {\n}\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass DatastoreImpl extends Datastore {\n    constructor(authCredentials, appCheckCredentials, connection, serializer) {\n        super();\n        this.authCredentials = authCredentials;\n        this.appCheckCredentials = appCheckCredentials;\n        this.connection = connection;\n        this.serializer = serializer;\n        this.terminated = false;\n    }\n    verifyInitialized() {\n        if (this.terminated) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'The client has already been terminated.');\n        }\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */\n    invokeRPC(rpcName, databaseId, resourcePath, request) {\n        this.verifyInitialized();\n        return Promise.all([\n            this.authCredentials.getToken(),\n            this.appCheckCredentials.getToken()\n        ])\n            .then(([authToken, appCheckToken]) => {\n            return this.connection.invokeRPC(rpcName, toResourcePath(databaseId, resourcePath), request, authToken, appCheckToken);\n        })\n            .catch((error) => {\n            if (error.name === 'FirebaseError') {\n                if (error.code === Code.UNAUTHENTICATED) {\n                    this.authCredentials.invalidateToken();\n                    this.appCheckCredentials.invalidateToken();\n                }\n                throw error;\n            }\n            else {\n                throw new FirestoreError(Code.UNKNOWN, error.toString());\n            }\n        });\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n    invokeStreamingRPC(rpcName, databaseId, resourcePath, request, expectedResponseCount) {\n        this.verifyInitialized();\n        return Promise.all([\n            this.authCredentials.getToken(),\n            this.appCheckCredentials.getToken()\n        ])\n            .then(([authToken, appCheckToken]) => {\n            return this.connection.invokeStreamingRPC(rpcName, toResourcePath(databaseId, resourcePath), request, authToken, appCheckToken, expectedResponseCount);\n        })\n            .catch((error) => {\n            if (error.name === 'FirebaseError') {\n                if (error.code === Code.UNAUTHENTICATED) {\n                    this.authCredentials.invalidateToken();\n                    this.appCheckCredentials.invalidateToken();\n                }\n                throw error;\n            }\n            else {\n                throw new FirestoreError(Code.UNKNOWN, error.toString());\n            }\n        });\n    }\n    terminate() {\n        this.terminated = true;\n        this.connection.terminate();\n    }\n}\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nfunction newDatastore(authCredentials, appCheckCredentials, connection, serializer) {\n    return new DatastoreImpl(authCredentials, appCheckCredentials, connection, serializer);\n}\nasync function invokeCommitRpc(datastore, mutations) {\n    const datastoreImpl = debugCast(datastore);\n    const request = {\n        writes: mutations.map(m => toMutation(datastoreImpl.serializer, m))\n    };\n    await datastoreImpl.invokeRPC('Commit', datastoreImpl.serializer.databaseId, ResourcePath.emptyPath(), request);\n}\nasync function invokeBatchGetDocumentsRpc(datastore, keys) {\n    const datastoreImpl = debugCast(datastore);\n    const request = {\n        documents: keys.map(k => toName(datastoreImpl.serializer, k))\n    };\n    const response = await datastoreImpl.invokeStreamingRPC('BatchGetDocuments', datastoreImpl.serializer.databaseId, ResourcePath.emptyPath(), request, keys.length);\n    const docs = new Map();\n    response.forEach(proto => {\n        const doc = fromBatchGetDocumentsResponse(datastoreImpl.serializer, proto);\n        docs.set(doc.key.toString(), doc);\n    });\n    const result = [];\n    keys.forEach(key => {\n        const doc = docs.get(key.toString());\n        hardAssert(!!doc, 0xd7c2, {\n            key\n        });\n        result.push(doc);\n    });\n    return result;\n}\nasync function invokeRunAggregationQueryRpc(datastore, query, aggregates) {\n    var _a;\n    const datastoreImpl = debugCast(datastore);\n    const { request, aliasMap, parent } = toRunAggregationQueryRequest(datastoreImpl.serializer, queryToAggregateTarget(query), aggregates);\n    if (!datastoreImpl.connection.shouldResourcePathBeIncludedInRequest) {\n        delete request.parent;\n    }\n    const response = await datastoreImpl.invokeStreamingRPC('RunAggregationQuery', datastoreImpl.serializer.databaseId, parent, request, \n    /*expectedResponseCount=*/ 1);\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n    const filteredResult = response.filter(proto => !!proto.result);\n    hardAssert(filteredResult.length === 1, 0xfcd7);\n    // Remap the short-form aliases that were sent to the server\n    // to the client-side aliases. Users will access the results\n    // using the client-side alias.\n    const unmappedAggregateFields = (_a = filteredResult[0].result) === null || _a === void 0 ? void 0 : _a.aggregateFields;\n    const remappedFields = Object.keys(unmappedAggregateFields).reduce((accumulator, key) => {\n        accumulator[aliasMap[key]] = unmappedAggregateFields[key];\n        return accumulator;\n    }, {});\n    return remappedFields;\n}\nfunction newPersistentWriteStream(datastore, queue, listener) {\n    const datastoreImpl = debugCast(datastore);\n    datastoreImpl.verifyInitialized();\n    return new PersistentWriteStream(queue, datastoreImpl.connection, datastoreImpl.authCredentials, datastoreImpl.appCheckCredentials, datastoreImpl.serializer, listener);\n}\nfunction newPersistentWatchStream(datastore, queue, listener) {\n    const datastoreImpl = debugCast(datastore);\n    datastoreImpl.verifyInitialized();\n    return new PersistentListenStream(queue, datastoreImpl.connection, datastoreImpl.authCredentials, datastoreImpl.appCheckCredentials, datastoreImpl.serializer, listener);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$6 = 'OnlineStateTracker';\n// To deal with transient failures, we allow multiple stream attempts before\n// giving up and transitioning from OnlineState.Unknown to Offline.\n// TODO(mikelehen): This used to be set to 2 as a mitigation for b/66228394.\n// @jdimond thinks that bug is sufficiently fixed so that we can set this back\n// to 1. If that works okay, we could potentially remove this logic entirely.\nconst MAX_WATCH_STREAM_FAILURES = 1;\n// To deal with stream attempts that don't succeed or fail in a timely manner,\n// we have a timeout for OnlineState to reach Online or Offline.\n// If the timeout is reached, we transition to Offline rather than waiting\n// indefinitely.\nconst ONLINE_STATE_TIMEOUT_MS = 10 * 1000;\n/**\n * A component used by the RemoteStore to track the OnlineState (that is,\n * whether or not the client as a whole should be considered to be online or\n * offline), implementing the appropriate heuristics.\n *\n * In particular, when the client is trying to connect to the backend, we\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\n * a connection to succeed. If we have too many failures or the timeout elapses,\n * then we set the OnlineState to Offline, and the client will behave as if\n * it is offline (get()s will return cached data, etc.).\n */\nclass OnlineStateTracker {\n    constructor(asyncQueue, onlineStateHandler) {\n        this.asyncQueue = asyncQueue;\n        this.onlineStateHandler = onlineStateHandler;\n        /** The current OnlineState. */\n        this.state = \"Unknown\" /* OnlineState.Unknown */;\n        /**\n         * A count of consecutive failures to open the stream. If it reaches the\n         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\n         * Offline.\n         */\n        this.watchStreamFailures = 0;\n        /**\n         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\n         * transition from OnlineState.Unknown to OnlineState.Offline without waiting\n         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\n         */\n        this.onlineStateTimer = null;\n        /**\n         * Whether the client should log a warning message if it fails to connect to\n         * the backend (initially true, cleared after a successful stream, or if we've\n         * logged the message already).\n         */\n        this.shouldWarnClientIsOffline = true;\n    }\n    /**\n     * Called by RemoteStore when a watch stream is started (including on each\n     * backoff attempt).\n     *\n     * If this is the first attempt, it sets the OnlineState to Unknown and starts\n     * the onlineStateTimer.\n     */\n    handleWatchStreamStart() {\n        if (this.watchStreamFailures === 0) {\n            this.setAndBroadcast(\"Unknown\" /* OnlineState.Unknown */);\n            this.onlineStateTimer = this.asyncQueue.enqueueAfterDelay(\"online_state_timeout\" /* TimerId.OnlineStateTimeout */, ONLINE_STATE_TIMEOUT_MS, () => {\n                this.onlineStateTimer = null;\n                this.logClientOfflineWarningIfNecessary(`Backend didn't respond within ${ONLINE_STATE_TIMEOUT_MS / 1000} ` +\n                    `seconds.`);\n                this.setAndBroadcast(\"Offline\" /* OnlineState.Offline */);\n                // NOTE: handleWatchStreamFailure() will continue to increment\n                // watchStreamFailures even though we are already marked Offline,\n                // but this is non-harmful.\n                return Promise.resolve();\n            });\n        }\n    }\n    /**\n     * Updates our OnlineState as appropriate after the watch stream reports a\n     * failure. The first failure moves us to the 'Unknown' state. We then may\n     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\n     * actually transition to the 'Offline' state.\n     */\n    handleWatchStreamFailure(error) {\n        if (this.state === \"Online\" /* OnlineState.Online */) {\n            this.setAndBroadcast(\"Unknown\" /* OnlineState.Unknown */);\n        }\n        else {\n            this.watchStreamFailures++;\n            if (this.watchStreamFailures >= MAX_WATCH_STREAM_FAILURES) {\n                this.clearOnlineStateTimer();\n                this.logClientOfflineWarningIfNecessary(`Connection failed ${MAX_WATCH_STREAM_FAILURES} ` +\n                    `times. Most recent error: ${error.toString()}`);\n                this.setAndBroadcast(\"Offline\" /* OnlineState.Offline */);\n            }\n        }\n    }\n    /**\n     * Explicitly sets the OnlineState to the specified state.\n     *\n     * Note that this resets our timers / failure counters, etc. used by our\n     * Offline heuristics, so must not be used in place of\n     * handleWatchStreamStart() and handleWatchStreamFailure().\n     */\n    set(newState) {\n        this.clearOnlineStateTimer();\n        this.watchStreamFailures = 0;\n        if (newState === \"Online\" /* OnlineState.Online */) {\n            // We've connected to watch at least once. Don't warn the developer\n            // about being offline going forward.\n            this.shouldWarnClientIsOffline = false;\n        }\n        this.setAndBroadcast(newState);\n    }\n    setAndBroadcast(newState) {\n        if (newState !== this.state) {\n            this.state = newState;\n            this.onlineStateHandler(newState);\n        }\n    }\n    logClientOfflineWarningIfNecessary(details) {\n        const message = `Could not reach Cloud Firestore backend. ${details}\\n` +\n            `This typically indicates that your device does not have a healthy ` +\n            `Internet connection at the moment. The client will operate in offline ` +\n            `mode until it is able to successfully connect to the backend.`;\n        if (this.shouldWarnClientIsOffline) {\n            logError(message);\n            this.shouldWarnClientIsOffline = false;\n        }\n        else {\n            logDebug(LOG_TAG$6, message);\n        }\n    }\n    clearOnlineStateTimer() {\n        if (this.onlineStateTimer !== null) {\n            this.onlineStateTimer.cancel();\n            this.onlineStateTimer = null;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$5 = 'RemoteStore';\n// TODO(b/35853402): Negotiate this with the stream.\nconst MAX_PENDING_WRITES = 10;\nclass RemoteStoreImpl {\n    constructor(\n    /**\n     * The local store, used to fill the write pipeline with outbound mutations.\n     */\n    localStore, \n    /** The client-side proxy for interacting with the backend. */\n    datastore, asyncQueue, onlineStateHandler, connectivityMonitor) {\n        this.localStore = localStore;\n        this.datastore = datastore;\n        this.asyncQueue = asyncQueue;\n        this.remoteSyncer = {};\n        /**\n         * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\n         * LocalStore via fillWritePipeline() and have or will send to the write\n         * stream.\n         *\n         * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\n         * restart the write stream. When the stream is established the writes in the\n         * pipeline will be sent in order.\n         *\n         * Writes remain in writePipeline until they are acknowledged by the backend\n         * and thus will automatically be re-sent if the stream is interrupted /\n         * restarted before they're acknowledged.\n         *\n         * Write responses from the backend are linked to their originating request\n         * purely based on order, and so we can just shift() writes from the front of\n         * the writePipeline as we receive responses.\n         */\n        this.writePipeline = [];\n        /**\n         * A mapping of watched targets that the client cares about tracking and the\n         * user has explicitly called a 'listen' for this target.\n         *\n         * These targets may or may not have been sent to or acknowledged by the\n         * server. On re-establishing the listen stream, these targets should be sent\n         * to the server. The targets removed with unlistens are removed eagerly\n         * without waiting for confirmation from the listen stream.\n         */\n        this.listenTargets = new Map();\n        /**\n         * A set of reasons for why the RemoteStore may be offline. If empty, the\n         * RemoteStore may start its network connections.\n         */\n        this.offlineCauses = new Set();\n        /**\n         * Event handlers that get called when the network is disabled or enabled.\n         *\n         * PORTING NOTE: These functions are used on the Web client to create the\n         * underlying streams (to support tree-shakeable streams). On Android and iOS,\n         * the streams are created during construction of RemoteStore.\n         */\n        this.onNetworkStatusChange = [];\n        this.connectivityMonitor = connectivityMonitor;\n        this.connectivityMonitor.addCallback((_) => {\n            asyncQueue.enqueueAndForget(async () => {\n                // Porting Note: Unlike iOS, `restartNetwork()` is called even when the\n                // network becomes unreachable as we don't have any other way to tear\n                // down our streams.\n                if (canUseNetwork(this)) {\n                    logDebug(LOG_TAG$5, 'Restarting streams for network reachability change.');\n                    await restartNetwork(this);\n                }\n            });\n        });\n        this.onlineStateTracker = new OnlineStateTracker(asyncQueue, onlineStateHandler);\n    }\n}\nfunction newRemoteStore(localStore, datastore, asyncQueue, onlineStateHandler, connectivityMonitor) {\n    return new RemoteStoreImpl(localStore, datastore, asyncQueue, onlineStateHandler, connectivityMonitor);\n}\n/** Re-enables the network. Idempotent. */\nfunction remoteStoreEnableNetwork(remoteStore) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    remoteStoreImpl.offlineCauses.delete(0 /* OfflineCause.UserDisabled */);\n    return enableNetworkInternal(remoteStoreImpl);\n}\nasync function enableNetworkInternal(remoteStoreImpl) {\n    if (canUseNetwork(remoteStoreImpl)) {\n        for (const networkStatusHandler of remoteStoreImpl.onNetworkStatusChange) {\n            await networkStatusHandler(/* enabled= */ true);\n        }\n    }\n}\n/**\n * Temporarily disables the network. The network can be re-enabled using\n * enableNetwork().\n */\nasync function remoteStoreDisableNetwork(remoteStore) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    remoteStoreImpl.offlineCauses.add(0 /* OfflineCause.UserDisabled */);\n    await disableNetworkInternal(remoteStoreImpl);\n    // Set the OnlineState to Offline so get()s return from cache, etc.\n    remoteStoreImpl.onlineStateTracker.set(\"Offline\" /* OnlineState.Offline */);\n}\nasync function disableNetworkInternal(remoteStoreImpl) {\n    for (const networkStatusHandler of remoteStoreImpl.onNetworkStatusChange) {\n        await networkStatusHandler(/* enabled= */ false);\n    }\n}\nasync function remoteStoreShutdown(remoteStore) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    logDebug(LOG_TAG$5, 'RemoteStore shutting down.');\n    remoteStoreImpl.offlineCauses.add(5 /* OfflineCause.Shutdown */);\n    await disableNetworkInternal(remoteStoreImpl);\n    remoteStoreImpl.connectivityMonitor.shutdown();\n    // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n    // triggering spurious listener events with cached data, etc.\n    remoteStoreImpl.onlineStateTracker.set(\"Unknown\" /* OnlineState.Unknown */);\n}\n/**\n * Starts new listen for the given target. Uses resume token if provided. It\n * is a no-op if the target of given `TargetData` is already being listened to.\n */\nfunction remoteStoreListen(remoteStore, targetData) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    if (remoteStoreImpl.listenTargets.has(targetData.targetId)) {\n        return;\n    }\n    // Mark this as something the client is currently listening for.\n    remoteStoreImpl.listenTargets.set(targetData.targetId, targetData);\n    if (shouldStartWatchStream(remoteStoreImpl)) {\n        // The listen will be sent in onWatchStreamOpen\n        startWatchStream(remoteStoreImpl);\n    }\n    else if (ensureWatchStream(remoteStoreImpl).isOpen()) {\n        sendWatchRequest(remoteStoreImpl, targetData);\n    }\n}\n/**\n * Removes the listen from server. It is a no-op if the given target id is\n * not being listened to.\n */\nfunction remoteStoreUnlisten(remoteStore, targetId) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    const watchStream = ensureWatchStream(remoteStoreImpl);\n    remoteStoreImpl.listenTargets.delete(targetId);\n    if (watchStream.isOpen()) {\n        sendUnwatchRequest(remoteStoreImpl, targetId);\n    }\n    if (remoteStoreImpl.listenTargets.size === 0) {\n        if (watchStream.isOpen()) {\n            watchStream.markIdle();\n        }\n        else if (canUseNetwork(remoteStoreImpl)) {\n            // Revert to OnlineState.Unknown if the watch stream is not open and we\n            // have no listeners, since without any listens to send we cannot\n            // confirm if the stream is healthy and upgrade to OnlineState.Online.\n            remoteStoreImpl.onlineStateTracker.set(\"Unknown\" /* OnlineState.Unknown */);\n        }\n    }\n}\n/**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the ack to process any messages from this target.\n */\nfunction sendWatchRequest(remoteStoreImpl, targetData) {\n    remoteStoreImpl.watchChangeAggregator.recordPendingTargetRequest(targetData.targetId);\n    if (targetData.resumeToken.approximateByteSize() > 0 ||\n        targetData.snapshotVersion.compareTo(SnapshotVersion.min()) > 0) {\n        const expectedCount = remoteStoreImpl.remoteSyncer.getRemoteKeysForTarget(targetData.targetId).size;\n        targetData = targetData.withExpectedCount(expectedCount);\n    }\n    ensureWatchStream(remoteStoreImpl).watch(targetData);\n}\n/**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the removal on the server before we process any\n * messages from this target.\n */\nfunction sendUnwatchRequest(remoteStoreImpl, targetId) {\n    remoteStoreImpl.watchChangeAggregator.recordPendingTargetRequest(targetId);\n    ensureWatchStream(remoteStoreImpl).unwatch(targetId);\n}\nfunction startWatchStream(remoteStoreImpl) {\n    remoteStoreImpl.watchChangeAggregator = new WatchChangeAggregator({\n        getRemoteKeysForTarget: targetId => remoteStoreImpl.remoteSyncer.getRemoteKeysForTarget(targetId),\n        getTargetDataForTarget: targetId => remoteStoreImpl.listenTargets.get(targetId) || null,\n        getDatabaseId: () => remoteStoreImpl.datastore.serializer.databaseId\n    });\n    ensureWatchStream(remoteStoreImpl).start();\n    remoteStoreImpl.onlineStateTracker.handleWatchStreamStart();\n}\n/**\n * Returns whether the watch stream should be started because it's necessary\n * and has not yet been started.\n */\nfunction shouldStartWatchStream(remoteStoreImpl) {\n    return (canUseNetwork(remoteStoreImpl) &&\n        !ensureWatchStream(remoteStoreImpl).isStarted() &&\n        remoteStoreImpl.listenTargets.size > 0);\n}\nfunction canUseNetwork(remoteStore) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    return remoteStoreImpl.offlineCauses.size === 0;\n}\nfunction cleanUpWatchStreamState(remoteStoreImpl) {\n    remoteStoreImpl.watchChangeAggregator = undefined;\n}\nasync function onWatchStreamConnected(remoteStoreImpl) {\n    // Mark the client as online since we got a \"connected\" notification.\n    remoteStoreImpl.onlineStateTracker.set(\"Online\" /* OnlineState.Online */);\n}\nasync function onWatchStreamOpen(remoteStoreImpl) {\n    remoteStoreImpl.listenTargets.forEach((targetData, targetId) => {\n        sendWatchRequest(remoteStoreImpl, targetData);\n    });\n}\nasync function onWatchStreamClose(remoteStoreImpl, error) {\n    cleanUpWatchStreamState(remoteStoreImpl);\n    // If we still need the watch stream, retry the connection.\n    if (shouldStartWatchStream(remoteStoreImpl)) {\n        remoteStoreImpl.onlineStateTracker.handleWatchStreamFailure(error);\n        startWatchStream(remoteStoreImpl);\n    }\n    else {\n        // No need to restart watch stream because there are no active targets.\n        // The online state is set to unknown because there is no active attempt\n        // at establishing a connection\n        remoteStoreImpl.onlineStateTracker.set(\"Unknown\" /* OnlineState.Unknown */);\n    }\n}\nasync function onWatchStreamChange(remoteStoreImpl, watchChange, snapshotVersion) {\n    // Mark the client as online since we got a message from the server\n    remoteStoreImpl.onlineStateTracker.set(\"Online\" /* OnlineState.Online */);\n    if (watchChange instanceof WatchTargetChange &&\n        watchChange.state === 2 /* WatchTargetChangeState.Removed */ &&\n        watchChange.cause) {\n        // There was an error on a target, don't wait for a consistent snapshot\n        // to raise events\n        try {\n            await handleTargetError(remoteStoreImpl, watchChange);\n        }\n        catch (e) {\n            logDebug(LOG_TAG$5, 'Failed to remove targets %s: %s ', watchChange.targetIds.join(','), e);\n            await disableNetworkUntilRecovery(remoteStoreImpl, e);\n        }\n        return;\n    }\n    if (watchChange instanceof DocumentWatchChange) {\n        remoteStoreImpl.watchChangeAggregator.handleDocumentChange(watchChange);\n    }\n    else if (watchChange instanceof ExistenceFilterChange) {\n        remoteStoreImpl.watchChangeAggregator.handleExistenceFilter(watchChange);\n    }\n    else {\n        remoteStoreImpl.watchChangeAggregator.handleTargetChange(watchChange);\n    }\n    if (!snapshotVersion.isEqual(SnapshotVersion.min())) {\n        try {\n            const lastRemoteSnapshotVersion = await localStoreGetLastRemoteSnapshotVersion(remoteStoreImpl.localStore);\n            if (snapshotVersion.compareTo(lastRemoteSnapshotVersion) >= 0) {\n                // We have received a target change with a global snapshot if the snapshot\n                // version is not equal to SnapshotVersion.min().\n                await raiseWatchSnapshot(remoteStoreImpl, snapshotVersion);\n            }\n        }\n        catch (e) {\n            logDebug(LOG_TAG$5, 'Failed to raise snapshot:', e);\n            await disableNetworkUntilRecovery(remoteStoreImpl, e);\n        }\n    }\n}\n/**\n * Recovery logic for IndexedDB errors that takes the network offline until\n * `op` succeeds. Retries are scheduled with backoff using\n * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is\n * validated via a generic operation.\n *\n * The returned Promise is resolved once the network is disabled and before\n * any retry attempt.\n */\nasync function disableNetworkUntilRecovery(remoteStoreImpl, e, op) {\n    if (isIndexedDbTransactionError(e)) {\n        remoteStoreImpl.offlineCauses.add(1 /* OfflineCause.IndexedDbFailed */);\n        // Disable network and raise offline snapshots\n        await disableNetworkInternal(remoteStoreImpl);\n        remoteStoreImpl.onlineStateTracker.set(\"Offline\" /* OnlineState.Offline */);\n        if (!op) {\n            // Use a simple read operation to determine if IndexedDB recovered.\n            // Ideally, we would expose a health check directly on SimpleDb, but\n            // RemoteStore only has access to persistence through LocalStore.\n            op = () => localStoreGetLastRemoteSnapshotVersion(remoteStoreImpl.localStore);\n        }\n        // Probe IndexedDB periodically and re-enable network\n        remoteStoreImpl.asyncQueue.enqueueRetryable(async () => {\n            logDebug(LOG_TAG$5, 'Retrying IndexedDB access');\n            await op();\n            remoteStoreImpl.offlineCauses.delete(1 /* OfflineCause.IndexedDbFailed */);\n            await enableNetworkInternal(remoteStoreImpl);\n        });\n    }\n    else {\n        throw e;\n    }\n}\n/**\n * Executes `op`. If `op` fails, takes the network offline until `op`\n * succeeds. Returns after the first attempt.\n */\nfunction executeWithRecovery(remoteStoreImpl, op) {\n    return op().catch(e => disableNetworkUntilRecovery(remoteStoreImpl, e, op));\n}\n/**\n * Takes a batch of changes from the Datastore, repackages them as a\n * RemoteEvent, and passes that on to the listener, which is typically the\n * SyncEngine.\n */\nfunction raiseWatchSnapshot(remoteStoreImpl, snapshotVersion) {\n    const remoteEvent = remoteStoreImpl.watchChangeAggregator.createRemoteEvent(snapshotVersion);\n    // Update in-memory resume tokens. LocalStore will update the\n    // persistent view of these when applying the completed RemoteEvent.\n    remoteEvent.targetChanges.forEach((change, targetId) => {\n        if (change.resumeToken.approximateByteSize() > 0) {\n            const targetData = remoteStoreImpl.listenTargets.get(targetId);\n            // A watched target might have been removed already.\n            if (targetData) {\n                remoteStoreImpl.listenTargets.set(targetId, targetData.withResumeToken(change.resumeToken, snapshotVersion));\n            }\n        }\n    });\n    // Re-establish listens for the targets that have been invalidated by\n    // existence filter mismatches.\n    remoteEvent.targetMismatches.forEach((targetId, targetPurpose) => {\n        const targetData = remoteStoreImpl.listenTargets.get(targetId);\n        if (!targetData) {\n            // A watched target might have been removed already.\n            return;\n        }\n        // Clear the resume token for the target, since we're in a known mismatch\n        // state.\n        remoteStoreImpl.listenTargets.set(targetId, targetData.withResumeToken(ByteString.EMPTY_BYTE_STRING, targetData.snapshotVersion));\n        // Cause a hard reset by unwatching and rewatching immediately, but\n        // deliberately don't send a resume token so that we get a full update.\n        sendUnwatchRequest(remoteStoreImpl, targetId);\n        // Mark the target we send as being on behalf of an existence filter\n        // mismatch, but don't actually retain that in listenTargets. This ensures\n        // that we flag the first re-listen this way without impacting future\n        // listens of this target (that might happen e.g. on reconnect).\n        const requestTargetData = new TargetData(targetData.target, targetId, targetPurpose, targetData.sequenceNumber);\n        sendWatchRequest(remoteStoreImpl, requestTargetData);\n    });\n    return remoteStoreImpl.remoteSyncer.applyRemoteEvent(remoteEvent);\n}\n/** Handles an error on a target */\nasync function handleTargetError(remoteStoreImpl, watchChange) {\n    const error = watchChange.cause;\n    for (const targetId of watchChange.targetIds) {\n        // A watched target might have been removed already.\n        if (remoteStoreImpl.listenTargets.has(targetId)) {\n            await remoteStoreImpl.remoteSyncer.rejectListen(targetId, error);\n            remoteStoreImpl.listenTargets.delete(targetId);\n            remoteStoreImpl.watchChangeAggregator.removeTarget(targetId);\n        }\n    }\n}\n/**\n * Attempts to fill our write pipeline with writes from the LocalStore.\n *\n * Called internally to bootstrap or refill the write pipeline and by\n * SyncEngine whenever there are new mutations to process.\n *\n * Starts the write stream if necessary.\n */\nasync function fillWritePipeline(remoteStore) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    const writeStream = ensureWriteStream(remoteStoreImpl);\n    let lastBatchIdRetrieved = remoteStoreImpl.writePipeline.length > 0\n        ? remoteStoreImpl.writePipeline[remoteStoreImpl.writePipeline.length - 1]\n            .batchId\n        : BATCHID_UNKNOWN;\n    while (canAddToWritePipeline(remoteStoreImpl)) {\n        try {\n            const batch = await localStoreGetNextMutationBatch(remoteStoreImpl.localStore, lastBatchIdRetrieved);\n            if (batch === null) {\n                if (remoteStoreImpl.writePipeline.length === 0) {\n                    writeStream.markIdle();\n                }\n                break;\n            }\n            else {\n                lastBatchIdRetrieved = batch.batchId;\n                addToWritePipeline(remoteStoreImpl, batch);\n            }\n        }\n        catch (e) {\n            await disableNetworkUntilRecovery(remoteStoreImpl, e);\n        }\n    }\n    if (shouldStartWriteStream(remoteStoreImpl)) {\n        startWriteStream(remoteStoreImpl);\n    }\n}\n/**\n * Returns true if we can add to the write pipeline (i.e. the network is\n * enabled and the write pipeline is not full).\n */\nfunction canAddToWritePipeline(remoteStoreImpl) {\n    return (canUseNetwork(remoteStoreImpl) &&\n        remoteStoreImpl.writePipeline.length < MAX_PENDING_WRITES);\n}\n/**\n * Queues additional writes to be sent to the write stream, sending them\n * immediately if the write stream is established.\n */\nfunction addToWritePipeline(remoteStoreImpl, batch) {\n    remoteStoreImpl.writePipeline.push(batch);\n    const writeStream = ensureWriteStream(remoteStoreImpl);\n    if (writeStream.isOpen() && writeStream.handshakeComplete) {\n        writeStream.writeMutations(batch.mutations);\n    }\n}\nfunction shouldStartWriteStream(remoteStoreImpl) {\n    return (canUseNetwork(remoteStoreImpl) &&\n        !ensureWriteStream(remoteStoreImpl).isStarted() &&\n        remoteStoreImpl.writePipeline.length > 0);\n}\nfunction startWriteStream(remoteStoreImpl) {\n    ensureWriteStream(remoteStoreImpl).start();\n}\nasync function onWriteStreamOpen(remoteStoreImpl) {\n    ensureWriteStream(remoteStoreImpl).writeHandshake();\n}\nasync function onWriteHandshakeComplete(remoteStoreImpl) {\n    const writeStream = ensureWriteStream(remoteStoreImpl);\n    // Send the write pipeline now that the stream is established.\n    for (const batch of remoteStoreImpl.writePipeline) {\n        writeStream.writeMutations(batch.mutations);\n    }\n}\nasync function onMutationResult(remoteStoreImpl, commitVersion, results) {\n    const batch = remoteStoreImpl.writePipeline.shift();\n    const success = MutationBatchResult.from(batch, commitVersion, results);\n    await executeWithRecovery(remoteStoreImpl, () => remoteStoreImpl.remoteSyncer.applySuccessfulWrite(success));\n    // It's possible that with the completion of this mutation another\n    // slot has freed up.\n    await fillWritePipeline(remoteStoreImpl);\n}\nasync function onWriteStreamClose(remoteStoreImpl, error) {\n    // If the write stream closed after the write handshake completes, a write\n    // operation failed and we fail the pending operation.\n    if (error && ensureWriteStream(remoteStoreImpl).handshakeComplete) {\n        // This error affects the actual write.\n        await handleWriteError(remoteStoreImpl, error);\n    }\n    // The write stream might have been started by refilling the write\n    // pipeline for failed writes\n    if (shouldStartWriteStream(remoteStoreImpl)) {\n        startWriteStream(remoteStoreImpl);\n    }\n}\nasync function handleWriteError(remoteStoreImpl, error) {\n    // Only handle permanent errors here. If it's transient, just let the retry\n    // logic kick in.\n    if (isPermanentWriteError(error.code)) {\n        // This was a permanent error, the request itself was the problem\n        // so it's not going to succeed if we resend it.\n        const batch = remoteStoreImpl.writePipeline.shift();\n        // In this case it's also unlikely that the server itself is melting\n        // down -- this was just a bad request so inhibit backoff on the next\n        // restart.\n        ensureWriteStream(remoteStoreImpl).inhibitBackoff();\n        await executeWithRecovery(remoteStoreImpl, () => remoteStoreImpl.remoteSyncer.rejectFailedWrite(batch.batchId, error));\n        // It's possible that with the completion of this mutation\n        // another slot has freed up.\n        await fillWritePipeline(remoteStoreImpl);\n    }\n}\nasync function restartNetwork(remoteStore) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    remoteStoreImpl.offlineCauses.add(4 /* OfflineCause.ConnectivityChange */);\n    await disableNetworkInternal(remoteStoreImpl);\n    remoteStoreImpl.onlineStateTracker.set(\"Unknown\" /* OnlineState.Unknown */);\n    remoteStoreImpl.offlineCauses.delete(4 /* OfflineCause.ConnectivityChange */);\n    await enableNetworkInternal(remoteStoreImpl);\n}\nasync function remoteStoreHandleCredentialChange(remoteStore, user) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    remoteStoreImpl.asyncQueue.verifyOperationInProgress();\n    logDebug(LOG_TAG$5, 'RemoteStore received new credentials');\n    const usesNetwork = canUseNetwork(remoteStoreImpl);\n    // Tear down and re-create our network streams. This will ensure we get a\n    // fresh auth token for the new user and re-fill the write pipeline with\n    // new mutations from the LocalStore (since mutations are per-user).\n    remoteStoreImpl.offlineCauses.add(3 /* OfflineCause.CredentialChange */);\n    await disableNetworkInternal(remoteStoreImpl);\n    if (usesNetwork) {\n        // Don't set the network status to Unknown if we are offline.\n        remoteStoreImpl.onlineStateTracker.set(\"Unknown\" /* OnlineState.Unknown */);\n    }\n    await remoteStoreImpl.remoteSyncer.handleCredentialChange(user);\n    remoteStoreImpl.offlineCauses.delete(3 /* OfflineCause.CredentialChange */);\n    await enableNetworkInternal(remoteStoreImpl);\n}\n/**\n * Toggles the network state when the client gains or loses its primary lease.\n */\nasync function remoteStoreApplyPrimaryState(remoteStore, isPrimary) {\n    const remoteStoreImpl = debugCast(remoteStore);\n    if (isPrimary) {\n        remoteStoreImpl.offlineCauses.delete(2 /* OfflineCause.IsSecondary */);\n        await enableNetworkInternal(remoteStoreImpl);\n    }\n    else if (!isPrimary) {\n        remoteStoreImpl.offlineCauses.add(2 /* OfflineCause.IsSecondary */);\n        await disableNetworkInternal(remoteStoreImpl);\n        remoteStoreImpl.onlineStateTracker.set(\"Unknown\" /* OnlineState.Unknown */);\n    }\n}\n/**\n * If not yet initialized, registers the WatchStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */\nfunction ensureWatchStream(remoteStoreImpl) {\n    if (!remoteStoreImpl.watchStream) {\n        // Create stream (but note that it is not started yet).\n        remoteStoreImpl.watchStream = newPersistentWatchStream(remoteStoreImpl.datastore, remoteStoreImpl.asyncQueue, {\n            onConnected: onWatchStreamConnected.bind(null, remoteStoreImpl),\n            onOpen: onWatchStreamOpen.bind(null, remoteStoreImpl),\n            onClose: onWatchStreamClose.bind(null, remoteStoreImpl),\n            onWatchChange: onWatchStreamChange.bind(null, remoteStoreImpl)\n        });\n        remoteStoreImpl.onNetworkStatusChange.push(async (enabled) => {\n            if (enabled) {\n                remoteStoreImpl.watchStream.inhibitBackoff();\n                if (shouldStartWatchStream(remoteStoreImpl)) {\n                    startWatchStream(remoteStoreImpl);\n                }\n                else {\n                    remoteStoreImpl.onlineStateTracker.set(\"Unknown\" /* OnlineState.Unknown */);\n                }\n            }\n            else {\n                await remoteStoreImpl.watchStream.stop();\n                cleanUpWatchStreamState(remoteStoreImpl);\n            }\n        });\n    }\n    return remoteStoreImpl.watchStream;\n}\n/**\n * If not yet initialized, registers the WriteStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */\nfunction ensureWriteStream(remoteStoreImpl) {\n    if (!remoteStoreImpl.writeStream) {\n        // Create stream (but note that it is not started yet).\n        remoteStoreImpl.writeStream = newPersistentWriteStream(remoteStoreImpl.datastore, remoteStoreImpl.asyncQueue, {\n            onConnected: () => Promise.resolve(),\n            onOpen: onWriteStreamOpen.bind(null, remoteStoreImpl),\n            onClose: onWriteStreamClose.bind(null, remoteStoreImpl),\n            onHandshakeComplete: onWriteHandshakeComplete.bind(null, remoteStoreImpl),\n            onMutationResult: onMutationResult.bind(null, remoteStoreImpl)\n        });\n        remoteStoreImpl.onNetworkStatusChange.push(async (enabled) => {\n            if (enabled) {\n                remoteStoreImpl.writeStream.inhibitBackoff();\n                // This will start the write stream if necessary.\n                await fillWritePipeline(remoteStoreImpl);\n            }\n            else {\n                await remoteStoreImpl.writeStream.stop();\n                if (remoteStoreImpl.writePipeline.length > 0) {\n                    logDebug(LOG_TAG$5, `Stopping write stream with ${remoteStoreImpl.writePipeline.length} pending writes`);\n                    remoteStoreImpl.writePipeline = [];\n                }\n            }\n        });\n    }\n    return remoteStoreImpl.writeStream;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$4 = 'AsyncQueue';\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nclass DelayedOperation {\n    constructor(asyncQueue, timerId, targetTimeMs, op, removalCallback) {\n        this.asyncQueue = asyncQueue;\n        this.timerId = timerId;\n        this.targetTimeMs = targetTimeMs;\n        this.op = op;\n        this.removalCallback = removalCallback;\n        this.deferred = new Deferred();\n        this.then = this.deferred.promise.then.bind(this.deferred.promise);\n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch(err => { });\n    }\n    get promise() {\n        return this.deferred.promise;\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */\n    static createAndSchedule(asyncQueue, timerId, delayMs, op, removalCallback) {\n        const targetTime = Date.now() + delayMs;\n        const delayedOp = new DelayedOperation(asyncQueue, timerId, targetTime, op, removalCallback);\n        delayedOp.start(delayMs);\n        return delayedOp;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    start(delayMs) {\n        this.timerHandle = setTimeout(() => this.handleDelayElapsed(), delayMs);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n    cancel(reason) {\n        if (this.timerHandle !== null) {\n            this.clearTimeout();\n            this.deferred.reject(new FirestoreError(Code.CANCELLED, 'Operation cancelled' + (reason ? ': ' + reason : '')));\n        }\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget(() => {\n            if (this.timerHandle !== null) {\n                this.clearTimeout();\n                return this.op().then(result => {\n                    return this.deferred.resolve(result);\n                });\n            }\n            else {\n                return Promise.resolve();\n            }\n        });\n    }\n    clearTimeout() {\n        if (this.timerHandle !== null) {\n            this.removalCallback(this);\n            clearTimeout(this.timerHandle);\n            this.timerHandle = null;\n        }\n    }\n}\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */\nfunction wrapInUserErrorIfRecoverable(e, msg) {\n    logError(LOG_TAG$4, `${msg}: ${e}`);\n    if (isIndexedDbTransactionError(e)) {\n        return new FirestoreError(Code.UNAVAILABLE, `${msg}: ${e}`);\n    }\n    else {\n        throw e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */\nclass DocumentSet {\n    /**\n     * Returns an empty copy of the existing DocumentSet, using the same\n     * comparator.\n     */\n    static emptySet(oldSet) {\n        return new DocumentSet(oldSet.comparator);\n    }\n    /** The default ordering is by key if the comparator is omitted */\n    constructor(comp) {\n        // We are adding document key comparator to the end as it's the only\n        // guaranteed unique property of a document.\n        if (comp) {\n            this.comparator = (d1, d2) => comp(d1, d2) || DocumentKey.comparator(d1.key, d2.key);\n        }\n        else {\n            this.comparator = (d1, d2) => DocumentKey.comparator(d1.key, d2.key);\n        }\n        this.keyedMap = documentMap();\n        this.sortedSet = new SortedMap(this.comparator);\n    }\n    has(key) {\n        return this.keyedMap.get(key) != null;\n    }\n    get(key) {\n        return this.keyedMap.get(key);\n    }\n    first() {\n        return this.sortedSet.minKey();\n    }\n    last() {\n        return this.sortedSet.maxKey();\n    }\n    isEmpty() {\n        return this.sortedSet.isEmpty();\n    }\n    /**\n     * Returns the index of the provided key in the document set, or -1 if the\n     * document key is not present in the set;\n     */\n    indexOf(key) {\n        const doc = this.keyedMap.get(key);\n        return doc ? this.sortedSet.indexOf(doc) : -1;\n    }\n    get size() {\n        return this.sortedSet.size;\n    }\n    /** Iterates documents in order defined by \"comparator\" */\n    forEach(cb) {\n        this.sortedSet.inorderTraversal((k, v) => {\n            cb(k);\n            return false;\n        });\n    }\n    /** Inserts or updates a document with the same key */\n    add(doc) {\n        // First remove the element if we have it.\n        const set = this.delete(doc.key);\n        return set.copy(set.keyedMap.insert(doc.key, doc), set.sortedSet.insert(doc, null));\n    }\n    /** Deletes a document with a given key */\n    delete(key) {\n        const doc = this.get(key);\n        if (!doc) {\n            return this;\n        }\n        return this.copy(this.keyedMap.remove(key), this.sortedSet.remove(doc));\n    }\n    isEqual(other) {\n        if (!(other instanceof DocumentSet)) {\n            return false;\n        }\n        if (this.size !== other.size) {\n            return false;\n        }\n        const thisIt = this.sortedSet.getIterator();\n        const otherIt = other.sortedSet.getIterator();\n        while (thisIt.hasNext()) {\n            const thisDoc = thisIt.getNext().key;\n            const otherDoc = otherIt.getNext().key;\n            if (!thisDoc.isEqual(otherDoc)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    toString() {\n        const docStrings = [];\n        this.forEach(doc => {\n            docStrings.push(doc.toString());\n        });\n        if (docStrings.length === 0) {\n            return 'DocumentSet ()';\n        }\n        else {\n            return 'DocumentSet (\\n  ' + docStrings.join('  \\n') + '\\n)';\n        }\n    }\n    copy(keyedMap, sortedSet) {\n        const newSet = new DocumentSet();\n        newSet.comparator = this.comparator;\n        newSet.keyedMap = keyedMap;\n        newSet.sortedSet = sortedSet;\n        return newSet;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */\nclass DocumentChangeSet {\n    constructor() {\n        this.changeMap = new SortedMap(DocumentKey.comparator);\n    }\n    track(change) {\n        const key = change.doc.key;\n        const oldChange = this.changeMap.get(key);\n        if (!oldChange) {\n            this.changeMap = this.changeMap.insert(key, change);\n            return;\n        }\n        // Merge the new change with the existing change.\n        if (change.type !== 0 /* ChangeType.Added */ &&\n            oldChange.type === 3 /* ChangeType.Metadata */) {\n            this.changeMap = this.changeMap.insert(key, change);\n        }\n        else if (change.type === 3 /* ChangeType.Metadata */ &&\n            oldChange.type !== 1 /* ChangeType.Removed */) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: oldChange.type,\n                doc: change.doc\n            });\n        }\n        else if (change.type === 2 /* ChangeType.Modified */ &&\n            oldChange.type === 2 /* ChangeType.Modified */) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: 2 /* ChangeType.Modified */,\n                doc: change.doc\n            });\n        }\n        else if (change.type === 2 /* ChangeType.Modified */ &&\n            oldChange.type === 0 /* ChangeType.Added */) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: 0 /* ChangeType.Added */,\n                doc: change.doc\n            });\n        }\n        else if (change.type === 1 /* ChangeType.Removed */ &&\n            oldChange.type === 0 /* ChangeType.Added */) {\n            this.changeMap = this.changeMap.remove(key);\n        }\n        else if (change.type === 1 /* ChangeType.Removed */ &&\n            oldChange.type === 2 /* ChangeType.Modified */) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: 1 /* ChangeType.Removed */,\n                doc: oldChange.doc\n            });\n        }\n        else if (change.type === 0 /* ChangeType.Added */ &&\n            oldChange.type === 1 /* ChangeType.Removed */) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: 2 /* ChangeType.Modified */,\n                doc: change.doc\n            });\n        }\n        else {\n            // This includes these cases, which don't make sense:\n            // Added->Added\n            // Removed->Removed\n            // Modified->Added\n            // Removed->Modified\n            // Metadata->Added\n            // Removed->Metadata\n            fail(0xf76d, {\n                change,\n                oldChange\n            });\n        }\n    }\n    getChanges() {\n        const changes = [];\n        this.changeMap.inorderTraversal((key, change) => {\n            changes.push(change);\n        });\n        return changes;\n    }\n}\nclass ViewSnapshot {\n    constructor(query, docs, oldDocs, docChanges, mutatedKeys, fromCache, syncStateChanged, excludesMetadataChanges, hasCachedResults) {\n        this.query = query;\n        this.docs = docs;\n        this.oldDocs = oldDocs;\n        this.docChanges = docChanges;\n        this.mutatedKeys = mutatedKeys;\n        this.fromCache = fromCache;\n        this.syncStateChanged = syncStateChanged;\n        this.excludesMetadataChanges = excludesMetadataChanges;\n        this.hasCachedResults = hasCachedResults;\n    }\n    /** Returns a view snapshot as if all documents in the snapshot were added. */\n    static fromInitialDocuments(query, documents, mutatedKeys, fromCache, hasCachedResults) {\n        const changes = [];\n        documents.forEach(doc => {\n            changes.push({ type: 0 /* ChangeType.Added */, doc });\n        });\n        return new ViewSnapshot(query, documents, DocumentSet.emptySet(documents), changes, mutatedKeys, fromCache, \n        /* syncStateChanged= */ true, \n        /* excludesMetadataChanges= */ false, hasCachedResults);\n    }\n    get hasPendingWrites() {\n        return !this.mutatedKeys.isEmpty();\n    }\n    isEqual(other) {\n        if (this.fromCache !== other.fromCache ||\n            this.hasCachedResults !== other.hasCachedResults ||\n            this.syncStateChanged !== other.syncStateChanged ||\n            !this.mutatedKeys.isEqual(other.mutatedKeys) ||\n            !queryEquals(this.query, other.query) ||\n            !this.docs.isEqual(other.docs) ||\n            !this.oldDocs.isEqual(other.oldDocs)) {\n            return false;\n        }\n        const changes = this.docChanges;\n        const otherChanges = other.docChanges;\n        if (changes.length !== otherChanges.length) {\n            return false;\n        }\n        for (let i = 0; i < changes.length; i++) {\n            if (changes[i].type !== otherChanges[i].type ||\n                !changes[i].doc.isEqual(otherChanges[i].doc)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */\nclass QueryListenersInfo {\n    constructor() {\n        this.viewSnap = undefined;\n        this.listeners = [];\n    }\n    // Helper methods that checks if the query has listeners that listening to remote store\n    hasRemoteListeners() {\n        return this.listeners.some(listener => listener.listensToRemoteStore());\n    }\n}\nfunction newEventManager() {\n    return new EventManagerImpl();\n}\nclass EventManagerImpl {\n    constructor() {\n        this.queries = newQueriesObjectMap();\n        this.onlineState = \"Unknown\" /* OnlineState.Unknown */;\n        this.snapshotsInSyncListeners = new Set();\n    }\n    terminate() {\n        errorAllTargets(this, new FirestoreError(Code.ABORTED, 'Firestore shutting down'));\n    }\n}\nfunction newQueriesObjectMap() {\n    return new ObjectMap(q => canonifyQuery(q), queryEquals);\n}\nasync function eventManagerListen(eventManager, listener) {\n    const eventManagerImpl = debugCast(eventManager);\n    let listenerAction = 3 /* ListenerSetupAction.NoActionRequired */;\n    const query = listener.query;\n    let queryInfo = eventManagerImpl.queries.get(query);\n    if (!queryInfo) {\n        queryInfo = new QueryListenersInfo();\n        listenerAction = listener.listensToRemoteStore()\n            ? 0 /* ListenerSetupAction.InitializeLocalListenAndRequireWatchConnection */\n            : 1 /* ListenerSetupAction.InitializeLocalListenOnly */;\n    }\n    else if (!queryInfo.hasRemoteListeners() &&\n        listener.listensToRemoteStore()) {\n        // Query has been listening to local cache, and tries to add a new listener sourced from watch.\n        listenerAction = 2 /* ListenerSetupAction.RequireWatchConnectionOnly */;\n    }\n    try {\n        switch (listenerAction) {\n            case 0 /* ListenerSetupAction.InitializeLocalListenAndRequireWatchConnection */:\n                queryInfo.viewSnap = await eventManagerImpl.onListen(query, \n                /** enableRemoteListen= */ true);\n                break;\n            case 1 /* ListenerSetupAction.InitializeLocalListenOnly */:\n                queryInfo.viewSnap = await eventManagerImpl.onListen(query, \n                /** enableRemoteListen= */ false);\n                break;\n            case 2 /* ListenerSetupAction.RequireWatchConnectionOnly */:\n                await eventManagerImpl.onFirstRemoteStoreListen(query);\n                break;\n            default:\n                break;\n        }\n    }\n    catch (e) {\n        const firestoreError = wrapInUserErrorIfRecoverable(e, `Initialization of query '${stringifyQuery(listener.query)}' failed`);\n        listener.onError(firestoreError);\n        return;\n    }\n    eventManagerImpl.queries.set(query, queryInfo);\n    queryInfo.listeners.push(listener);\n    // Run global snapshot listeners if a consistent snapshot has been emitted.\n    listener.applyOnlineStateChange(eventManagerImpl.onlineState);\n    if (queryInfo.viewSnap) {\n        const raisedEvent = listener.onViewSnapshot(queryInfo.viewSnap);\n        if (raisedEvent) {\n            raiseSnapshotsInSyncEvent(eventManagerImpl);\n        }\n    }\n}\nasync function eventManagerUnlisten(eventManager, listener) {\n    const eventManagerImpl = debugCast(eventManager);\n    const query = listener.query;\n    let listenerAction = 3 /* ListenerRemovalAction.NoActionRequired */;\n    const queryInfo = eventManagerImpl.queries.get(query);\n    if (queryInfo) {\n        const i = queryInfo.listeners.indexOf(listener);\n        if (i >= 0) {\n            queryInfo.listeners.splice(i, 1);\n            if (queryInfo.listeners.length === 0) {\n                listenerAction = listener.listensToRemoteStore()\n                    ? 0 /* ListenerRemovalAction.TerminateLocalListenAndRequireWatchDisconnection */\n                    : 1 /* ListenerRemovalAction.TerminateLocalListenOnly */;\n            }\n            else if (!queryInfo.hasRemoteListeners() &&\n                listener.listensToRemoteStore()) {\n                // The removed listener is the last one that sourced from watch.\n                listenerAction = 2 /* ListenerRemovalAction.RequireWatchDisconnectionOnly */;\n            }\n        }\n    }\n    switch (listenerAction) {\n        case 0 /* ListenerRemovalAction.TerminateLocalListenAndRequireWatchDisconnection */:\n            eventManagerImpl.queries.delete(query);\n            return eventManagerImpl.onUnlisten(query, \n            /** disableRemoteListen= */ true);\n        case 1 /* ListenerRemovalAction.TerminateLocalListenOnly */:\n            eventManagerImpl.queries.delete(query);\n            return eventManagerImpl.onUnlisten(query, \n            /** disableRemoteListen= */ false);\n        case 2 /* ListenerRemovalAction.RequireWatchDisconnectionOnly */:\n            return eventManagerImpl.onLastRemoteStoreUnlisten(query);\n        default:\n            return;\n    }\n}\nfunction eventManagerOnWatchChange(eventManager, viewSnaps) {\n    const eventManagerImpl = debugCast(eventManager);\n    let raisedEvent = false;\n    for (const viewSnap of viewSnaps) {\n        const query = viewSnap.query;\n        const queryInfo = eventManagerImpl.queries.get(query);\n        if (queryInfo) {\n            for (const listener of queryInfo.listeners) {\n                if (listener.onViewSnapshot(viewSnap)) {\n                    raisedEvent = true;\n                }\n            }\n            queryInfo.viewSnap = viewSnap;\n        }\n    }\n    if (raisedEvent) {\n        raiseSnapshotsInSyncEvent(eventManagerImpl);\n    }\n}\nfunction eventManagerOnWatchError(eventManager, query, error) {\n    const eventManagerImpl = debugCast(eventManager);\n    const queryInfo = eventManagerImpl.queries.get(query);\n    if (queryInfo) {\n        for (const listener of queryInfo.listeners) {\n            listener.onError(error);\n        }\n    }\n    // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n    // after an error.\n    eventManagerImpl.queries.delete(query);\n}\nfunction eventManagerOnOnlineStateChange(eventManager, onlineState) {\n    const eventManagerImpl = debugCast(eventManager);\n    eventManagerImpl.onlineState = onlineState;\n    let raisedEvent = false;\n    eventManagerImpl.queries.forEach((_, queryInfo) => {\n        for (const listener of queryInfo.listeners) {\n            // Run global snapshot listeners if a consistent snapshot has been emitted.\n            if (listener.applyOnlineStateChange(onlineState)) {\n                raisedEvent = true;\n            }\n        }\n    });\n    if (raisedEvent) {\n        raiseSnapshotsInSyncEvent(eventManagerImpl);\n    }\n}\nfunction addSnapshotsInSyncListener(eventManager, observer) {\n    const eventManagerImpl = debugCast(eventManager);\n    eventManagerImpl.snapshotsInSyncListeners.add(observer);\n    // Immediately fire an initial event, indicating all existing listeners\n    // are in-sync.\n    observer.next();\n}\nfunction removeSnapshotsInSyncListener(eventManager, observer) {\n    const eventManagerImpl = debugCast(eventManager);\n    eventManagerImpl.snapshotsInSyncListeners.delete(observer);\n}\nfunction errorAllTargets(eventManager, error) {\n    const eventManagerImpl = debugCast(eventManager);\n    const queries = eventManagerImpl.queries;\n    // Prevent further access by clearing ObjectMap.\n    eventManagerImpl.queries = newQueriesObjectMap();\n    queries.forEach((_, queryInfo) => {\n        for (const listener of queryInfo.listeners) {\n            listener.onError(error);\n        }\n    });\n}\n// Call all global snapshot listeners that have been set.\nfunction raiseSnapshotsInSyncEvent(eventManagerImpl) {\n    eventManagerImpl.snapshotsInSyncListeners.forEach(observer => {\n        observer.next();\n    });\n}\nvar ListenerDataSource;\n(function (ListenerDataSource) {\n    /** Listen to both cache and server changes */\n    ListenerDataSource[\"Default\"] = \"default\";\n    /** Listen to changes in cache only */\n    ListenerDataSource[\"Cache\"] = \"cache\";\n})(ListenerDataSource || (ListenerDataSource = {}));\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */\nclass QueryListener {\n    constructor(query, queryObserver, options) {\n        this.query = query;\n        this.queryObserver = queryObserver;\n        /**\n         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n         * observer. This flag is set to true once we've actually raised an event.\n         */\n        this.raisedInitialEvent = false;\n        this.snap = null;\n        this.onlineState = \"Unknown\" /* OnlineState.Unknown */;\n        this.options = options || {};\n    }\n    /**\n     * Applies the new ViewSnapshot to this listener, raising a user-facing event\n     * if applicable (depending on what changed, whether the user has opted into\n     * metadata-only changes, etc.). Returns true if a user-facing event was\n     * indeed raised.\n     */\n    onViewSnapshot(snap) {\n        if (!this.options.includeMetadataChanges) {\n            // Remove the metadata only changes.\n            const docChanges = [];\n            for (const docChange of snap.docChanges) {\n                if (docChange.type !== 3 /* ChangeType.Metadata */) {\n                    docChanges.push(docChange);\n                }\n            }\n            snap = new ViewSnapshot(snap.query, snap.docs, snap.oldDocs, docChanges, snap.mutatedKeys, snap.fromCache, snap.syncStateChanged, \n            /* excludesMetadataChanges= */ true, snap.hasCachedResults);\n        }\n        let raisedEvent = false;\n        if (!this.raisedInitialEvent) {\n            if (this.shouldRaiseInitialEvent(snap, this.onlineState)) {\n                this.raiseInitialEvent(snap);\n                raisedEvent = true;\n            }\n        }\n        else if (this.shouldRaiseEvent(snap)) {\n            this.queryObserver.next(snap);\n            raisedEvent = true;\n        }\n        this.snap = snap;\n        return raisedEvent;\n    }\n    onError(error) {\n        this.queryObserver.error(error);\n    }\n    /** Returns whether a snapshot was raised. */\n    applyOnlineStateChange(onlineState) {\n        this.onlineState = onlineState;\n        let raisedEvent = false;\n        if (this.snap &&\n            !this.raisedInitialEvent &&\n            this.shouldRaiseInitialEvent(this.snap, onlineState)) {\n            this.raiseInitialEvent(this.snap);\n            raisedEvent = true;\n        }\n        return raisedEvent;\n    }\n    shouldRaiseInitialEvent(snap, onlineState) {\n        // Always raise the first event when we're synced\n        if (!snap.fromCache) {\n            return true;\n        }\n        // Always raise event if listening to cache\n        if (!this.listensToRemoteStore()) {\n            return true;\n        }\n        // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n        // or Online if we wait long enough).\n        const maybeOnline = onlineState !== \"Offline\" /* OnlineState.Offline */;\n        // Don't raise the event if we're online, aren't synced yet (checked\n        // above) and are waiting for a sync.\n        if (this.options.waitForSyncWhenOnline && maybeOnline) {\n            return false;\n        }\n        // Raise data from cache if we have any documents, have cached results before,\n        // or we are offline.\n        return (!snap.docs.isEmpty() ||\n            snap.hasCachedResults ||\n            onlineState === \"Offline\" /* OnlineState.Offline */);\n    }\n    shouldRaiseEvent(snap) {\n        // We don't need to handle includeDocumentMetadataChanges here because\n        // the Metadata only changes have already been stripped out if needed.\n        // At this point the only changes we will see are the ones we should\n        // propagate.\n        if (snap.docChanges.length > 0) {\n            return true;\n        }\n        const hasPendingWritesChanged = this.snap && this.snap.hasPendingWrites !== snap.hasPendingWrites;\n        if (snap.syncStateChanged || hasPendingWritesChanged) {\n            return this.options.includeMetadataChanges === true;\n        }\n        // Generally we should have hit one of the cases above, but it's possible\n        // to get here if there were only metadata docChanges and they got\n        // stripped out.\n        return false;\n    }\n    raiseInitialEvent(snap) {\n        snap = ViewSnapshot.fromInitialDocuments(snap.query, snap.docs, snap.mutatedKeys, snap.fromCache, snap.hasCachedResults);\n        this.raisedInitialEvent = true;\n        this.queryObserver.next(snap);\n    }\n    listensToRemoteStore() {\n        return this.options.source !== ListenerDataSource.Cache;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nclass LocalViewChanges {\n    constructor(targetId, fromCache, addedKeys, removedKeys) {\n        this.targetId = targetId;\n        this.fromCache = fromCache;\n        this.addedKeys = addedKeys;\n        this.removedKeys = removedKeys;\n    }\n    static fromSnapshot(targetId, viewSnapshot) {\n        let addedKeys = documentKeySet();\n        let removedKeys = documentKeySet();\n        for (const docChange of viewSnapshot.docChanges) {\n            switch (docChange.type) {\n                case 0 /* ChangeType.Added */:\n                    addedKeys = addedKeys.add(docChange.doc.key);\n                    break;\n                case 1 /* ChangeType.Removed */:\n                    removedKeys = removedKeys.add(docChange.doc.key);\n                    break;\n                // do nothing\n            }\n        }\n        return new LocalViewChanges(targetId, viewSnapshot.fromCache, addedKeys, removedKeys);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Helper to convert objects from bundles to model objects in the SDK.\n */\nclass BundleConverterImpl {\n    constructor(serializer) {\n        this.serializer = serializer;\n    }\n    toDocumentKey(name) {\n        return fromName(this.serializer, name);\n    }\n    /**\n     * Converts a BundleDocument to a MutableDocument.\n     */\n    toMutableDocument(bundledDoc) {\n        if (bundledDoc.metadata.exists) {\n            return fromDocument(this.serializer, bundledDoc.document, false);\n        }\n        else {\n            return MutableDocument.newNoDocument(this.toDocumentKey(bundledDoc.metadata.name), this.toSnapshotVersion(bundledDoc.metadata.readTime));\n        }\n    }\n    toSnapshotVersion(time) {\n        return fromVersion(time);\n    }\n}\n/**\n * A class to process the elements from a bundle, and optionally load them into local\n * storage and provide progress update while loading.\n */\nclass BundleLoader {\n    constructor(bundleMetadata, serializer) {\n        this.bundleMetadata = bundleMetadata;\n        this.serializer = serializer;\n        /** Batched queries to be saved into storage */\n        this._queries = [];\n        /** Batched documents to be saved into storage */\n        this._documents = [];\n        /** The collection groups affected by this bundle. */\n        this.collectionGroups = new Set();\n        this.progress = bundleInitialProgress(bundleMetadata);\n    }\n    /**\n     * Returns the named queries that have been parsed from the SizeBundleElements added by\n     * calling {@link adSizedElement}.\n     */\n    get queries() {\n        return this._queries;\n    }\n    /**\n     * Returns the BundledDocuments that have been parsed from the SizeBundleElements added by\n     * calling {@link addSizedElement}.\n     */\n    get documents() {\n        return this._documents;\n    }\n    /**\n     * Adds an element from the bundle to the loader.\n     *\n     * Returns a new progress if adding the element leads to a new progress,\n     * otherwise returns null.\n     */\n    addSizedElement(element) {\n        this.progress.bytesLoaded += element.byteLength;\n        let documentsLoaded = this.progress.documentsLoaded;\n        if (element.payload.namedQuery) {\n            this._queries.push(element.payload.namedQuery);\n        }\n        else if (element.payload.documentMetadata) {\n            this._documents.push({ metadata: element.payload.documentMetadata });\n            if (!element.payload.documentMetadata.exists) {\n                ++documentsLoaded;\n            }\n            const path = ResourcePath.fromString(element.payload.documentMetadata.name);\n            this.collectionGroups.add(path.get(path.length - 2));\n        }\n        else if (element.payload.document) {\n            this._documents[this._documents.length - 1].document =\n                element.payload.document;\n            ++documentsLoaded;\n        }\n        if (documentsLoaded !== this.progress.documentsLoaded) {\n            this.progress.documentsLoaded = documentsLoaded;\n            return Object.assign({}, this.progress);\n        }\n        return null;\n    }\n    getQueryDocumentMapping(documents) {\n        const queryDocumentMap = new Map();\n        const bundleConverter = new BundleConverterImpl(this.serializer);\n        for (const bundleDoc of documents) {\n            if (bundleDoc.metadata.queries) {\n                const documentKey = bundleConverter.toDocumentKey(bundleDoc.metadata.name);\n                for (const queryName of bundleDoc.metadata.queries) {\n                    const documentKeys = (queryDocumentMap.get(queryName) || documentKeySet()).add(documentKey);\n                    queryDocumentMap.set(queryName, documentKeys);\n                }\n            }\n        }\n        return queryDocumentMap;\n    }\n    /**\n     * Update the progress to 'Success' and return the updated progress.\n     */\n    async completeAndStoreAsync(localStore) {\n        const changedDocs = await localStoreApplyBundledDocuments(localStore, new BundleConverterImpl(this.serializer), this._documents, this.bundleMetadata.id);\n        const queryDocumentMap = this.getQueryDocumentMapping(this.documents);\n        for (const q of this._queries) {\n            await localStoreSaveNamedQuery(localStore, q, queryDocumentMap.get(q.name));\n        }\n        this.progress.taskState = 'Success';\n        return {\n            progress: this.progress,\n            changedCollectionGroups: this.collectionGroups,\n            changedDocs\n        };\n    }\n}\n/**\n * Returns a `LoadBundleTaskProgress` representing the initial progress of\n * loading a bundle.\n */\nfunction bundleInitialProgress(metadata) {\n    return {\n        taskState: 'Running',\n        documentsLoaded: 0,\n        bytesLoaded: 0,\n        totalDocuments: metadata.totalDocuments,\n        totalBytes: metadata.totalBytes\n    };\n}\n/**\n * Returns a `LoadBundleTaskProgress` representing the progress that the loading\n * has succeeded.\n */\nfunction bundleSuccessProgress(metadata) {\n    return {\n        taskState: 'Success',\n        documentsLoaded: metadata.totalDocuments,\n        bytesLoaded: metadata.totalBytes,\n        totalDocuments: metadata.totalDocuments,\n        totalBytes: metadata.totalBytes\n    };\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass AddedLimboDocument {\n    constructor(key) {\n        this.key = key;\n    }\n}\nclass RemovedLimboDocument {\n    constructor(key) {\n        this.key = key;\n    }\n}\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */\nclass View {\n    constructor(query, \n    /** Documents included in the remote target */\n    _syncedDocuments) {\n        this.query = query;\n        this._syncedDocuments = _syncedDocuments;\n        this.syncState = null;\n        this.hasCachedResults = false;\n        /**\n         * A flag whether the view is current with the backend. A view is considered\n         * current after it has seen the current flag from the backend and did not\n         * lose consistency within the watch stream (e.g. because of an existence\n         * filter mismatch).\n         */\n        this.current = false;\n        /** Documents in the view but not in the remote target */\n        this.limboDocuments = documentKeySet();\n        /** Document Keys that have local changes */\n        this.mutatedKeys = documentKeySet();\n        this.docComparator = newQueryComparator(query);\n        this.documentSet = new DocumentSet(this.docComparator);\n    }\n    /**\n     * The set of remote documents that the server has told us belongs to the target associated with\n     * this view.\n     */\n    get syncedDocuments() {\n        return this._syncedDocuments;\n    }\n    /**\n     * Iterates over a set of doc changes, applies the query limit, and computes\n     * what the new results should be, what the changes were, and whether we may\n     * need to go back to the local cache for more results. Does not make any\n     * changes to the view.\n     * @param docChanges - The doc changes to apply to this view.\n     * @param previousChanges - If this is being called with a refill, then start\n     *        with this set of docs and changes instead of the current view.\n     * @returns a new set of docs, changes, and refill flag.\n     */\n    computeDocChanges(docChanges, previousChanges) {\n        const changeSet = previousChanges\n            ? previousChanges.changeSet\n            : new DocumentChangeSet();\n        const oldDocumentSet = previousChanges\n            ? previousChanges.documentSet\n            : this.documentSet;\n        let newMutatedKeys = previousChanges\n            ? previousChanges.mutatedKeys\n            : this.mutatedKeys;\n        let newDocumentSet = oldDocumentSet;\n        let needsRefill = false;\n        // Track the last doc in a (full) limit. This is necessary, because some\n        // update (a delete, or an update moving a doc past the old limit) might\n        // mean there is some other document in the local cache that either should\n        // come (1) between the old last limit doc and the new last document, in the\n        // case of updates, or (2) after the new last document, in the case of\n        // deletes. So we keep this doc at the old limit to compare the updates to.\n        //\n        // Note that this should never get used in a refill (when previousChanges is\n        // set), because there will only be adds -- no deletes or updates.\n        const lastDocInLimit = this.query.limitType === \"F\" /* LimitType.First */ &&\n            oldDocumentSet.size === this.query.limit\n            ? oldDocumentSet.last()\n            : null;\n        const firstDocInLimit = this.query.limitType === \"L\" /* LimitType.Last */ &&\n            oldDocumentSet.size === this.query.limit\n            ? oldDocumentSet.first()\n            : null;\n        docChanges.inorderTraversal((key, entry) => {\n            const oldDoc = oldDocumentSet.get(key);\n            const newDoc = queryMatches(this.query, entry) ? entry : null;\n            const oldDocHadPendingMutations = oldDoc\n                ? this.mutatedKeys.has(oldDoc.key)\n                : false;\n            const newDocHasPendingMutations = newDoc\n                ? newDoc.hasLocalMutations ||\n                    // We only consider committed mutations for documents that were\n                    // mutated during the lifetime of the view.\n                    (this.mutatedKeys.has(newDoc.key) && newDoc.hasCommittedMutations)\n                : false;\n            let changeApplied = false;\n            // Calculate change\n            if (oldDoc && newDoc) {\n                const docsEqual = oldDoc.data.isEqual(newDoc.data);\n                if (!docsEqual) {\n                    if (!this.shouldWaitForSyncedDocument(oldDoc, newDoc)) {\n                        changeSet.track({\n                            type: 2 /* ChangeType.Modified */,\n                            doc: newDoc\n                        });\n                        changeApplied = true;\n                        if ((lastDocInLimit &&\n                            this.docComparator(newDoc, lastDocInLimit) > 0) ||\n                            (firstDocInLimit &&\n                                this.docComparator(newDoc, firstDocInLimit) < 0)) {\n                            // This doc moved from inside the limit to outside the limit.\n                            // That means there may be some other doc in the local cache\n                            // that should be included instead.\n                            needsRefill = true;\n                        }\n                    }\n                }\n                else if (oldDocHadPendingMutations !== newDocHasPendingMutations) {\n                    changeSet.track({ type: 3 /* ChangeType.Metadata */, doc: newDoc });\n                    changeApplied = true;\n                }\n            }\n            else if (!oldDoc && newDoc) {\n                changeSet.track({ type: 0 /* ChangeType.Added */, doc: newDoc });\n                changeApplied = true;\n            }\n            else if (oldDoc && !newDoc) {\n                changeSet.track({ type: 1 /* ChangeType.Removed */, doc: oldDoc });\n                changeApplied = true;\n                if (lastDocInLimit || firstDocInLimit) {\n                    // A doc was removed from a full limit query. We'll need to\n                    // requery from the local cache to see if we know about some other\n                    // doc that should be in the results.\n                    needsRefill = true;\n                }\n            }\n            if (changeApplied) {\n                if (newDoc) {\n                    newDocumentSet = newDocumentSet.add(newDoc);\n                    if (newDocHasPendingMutations) {\n                        newMutatedKeys = newMutatedKeys.add(key);\n                    }\n                    else {\n                        newMutatedKeys = newMutatedKeys.delete(key);\n                    }\n                }\n                else {\n                    newDocumentSet = newDocumentSet.delete(key);\n                    newMutatedKeys = newMutatedKeys.delete(key);\n                }\n            }\n        });\n        // Drop documents out to meet limit/limitToLast requirement.\n        if (this.query.limit !== null) {\n            while (newDocumentSet.size > this.query.limit) {\n                const oldDoc = this.query.limitType === \"F\" /* LimitType.First */\n                    ? newDocumentSet.last()\n                    : newDocumentSet.first();\n                newDocumentSet = newDocumentSet.delete(oldDoc.key);\n                newMutatedKeys = newMutatedKeys.delete(oldDoc.key);\n                changeSet.track({ type: 1 /* ChangeType.Removed */, doc: oldDoc });\n            }\n        }\n        return {\n            documentSet: newDocumentSet,\n            changeSet,\n            needsRefill,\n            mutatedKeys: newMutatedKeys\n        };\n    }\n    shouldWaitForSyncedDocument(oldDoc, newDoc) {\n        // We suppress the initial change event for documents that were modified as\n        // part of a write acknowledgment (e.g. when the value of a server transform\n        // is applied) as Watch will send us the same document again.\n        // By suppressing the event, we only raise two user visible events (one with\n        // `hasPendingWrites` and the final state of the document) instead of three\n        // (one with `hasPendingWrites`, the modified document with\n        // `hasPendingWrites` and the final state of the document).\n        return (oldDoc.hasLocalMutations &&\n            newDoc.hasCommittedMutations &&\n            !newDoc.hasLocalMutations);\n    }\n    /**\n     * Updates the view with the given ViewDocumentChanges and optionally updates\n     * limbo docs and sync state from the provided target change.\n     * @param docChanges - The set of changes to make to the view's docs.\n     * @param limboResolutionEnabled - Whether to update limbo documents based on\n     *        this change.\n     * @param targetChange - A target change to apply for computing limbo docs and\n     *        sync state.\n     * @param targetIsPendingReset - Whether the target is pending to reset due to\n     *        existence filter mismatch. If not explicitly specified, it is treated\n     *        equivalently to `false`.\n     * @returns A new ViewChange with the given docs, changes, and sync state.\n     */\n    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n    applyChanges(docChanges, limboResolutionEnabled, targetChange, targetIsPendingReset) {\n        const oldDocs = this.documentSet;\n        this.documentSet = docChanges.documentSet;\n        this.mutatedKeys = docChanges.mutatedKeys;\n        // Sort changes based on type and query comparator\n        const changes = docChanges.changeSet.getChanges();\n        changes.sort((c1, c2) => {\n            return (compareChangeType(c1.type, c2.type) ||\n                this.docComparator(c1.doc, c2.doc));\n        });\n        this.applyTargetChange(targetChange);\n        targetIsPendingReset = targetIsPendingReset !== null && targetIsPendingReset !== void 0 ? targetIsPendingReset : false;\n        const limboChanges = limboResolutionEnabled && !targetIsPendingReset\n            ? this.updateLimboDocuments()\n            : [];\n        // We are at synced state if there is no limbo docs are waiting to be resolved, view is current\n        // with the backend, and the query is not pending to reset due to existence filter mismatch.\n        const synced = this.limboDocuments.size === 0 && this.current && !targetIsPendingReset;\n        const newSyncState = synced ? 1 /* SyncState.Synced */ : 0 /* SyncState.Local */;\n        const syncStateChanged = newSyncState !== this.syncState;\n        this.syncState = newSyncState;\n        if (changes.length === 0 && !syncStateChanged) {\n            // no changes\n            return { limboChanges };\n        }\n        else {\n            const snap = new ViewSnapshot(this.query, docChanges.documentSet, oldDocs, changes, docChanges.mutatedKeys, newSyncState === 0 /* SyncState.Local */, syncStateChanged, \n            /* excludesMetadataChanges= */ false, targetChange\n                ? targetChange.resumeToken.approximateByteSize() > 0\n                : false);\n            return {\n                snapshot: snap,\n                limboChanges\n            };\n        }\n    }\n    /**\n     * Applies an OnlineState change to the view, potentially generating a\n     * ViewChange if the view's syncState changes as a result.\n     */\n    applyOnlineStateChange(onlineState) {\n        if (this.current && onlineState === \"Offline\" /* OnlineState.Offline */) {\n            // If we're offline, set `current` to false and then call applyChanges()\n            // to refresh our syncState and generate a ViewChange as appropriate. We\n            // are guaranteed to get a new TargetChange that sets `current` back to\n            // true once the client is back online.\n            this.current = false;\n            return this.applyChanges({\n                documentSet: this.documentSet,\n                changeSet: new DocumentChangeSet(),\n                mutatedKeys: this.mutatedKeys,\n                needsRefill: false\n            }, \n            /* limboResolutionEnabled= */ false);\n        }\n        else {\n            // No effect, just return a no-op ViewChange.\n            return { limboChanges: [] };\n        }\n    }\n    /**\n     * Returns whether the doc for the given key should be in limbo.\n     */\n    shouldBeInLimbo(key) {\n        // If the remote end says it's part of this query, it's not in limbo.\n        if (this._syncedDocuments.has(key)) {\n            return false;\n        }\n        // The local store doesn't think it's a result, so it shouldn't be in limbo.\n        if (!this.documentSet.has(key)) {\n            return false;\n        }\n        // If there are local changes to the doc, they might explain why the server\n        // doesn't know that it's part of the query. So don't put it in limbo.\n        // TODO(klimt): Ideally, we would only consider changes that might actually\n        // affect this specific query.\n        if (this.documentSet.get(key).hasLocalMutations) {\n            return false;\n        }\n        // Everything else is in limbo.\n        return true;\n    }\n    /**\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\n     * Returns the list of changes to which docs are in limbo.\n     */\n    applyTargetChange(targetChange) {\n        if (targetChange) {\n            targetChange.addedDocuments.forEach(key => (this._syncedDocuments = this._syncedDocuments.add(key)));\n            targetChange.modifiedDocuments.forEach(key => {\n            });\n            targetChange.removedDocuments.forEach(key => (this._syncedDocuments = this._syncedDocuments.delete(key)));\n            this.current = targetChange.current;\n        }\n    }\n    updateLimboDocuments() {\n        // We can only determine limbo documents when we're in-sync with the server.\n        if (!this.current) {\n            return [];\n        }\n        // TODO(klimt): Do this incrementally so that it's not quadratic when\n        // updating many documents.\n        const oldLimboDocuments = this.limboDocuments;\n        this.limboDocuments = documentKeySet();\n        this.documentSet.forEach(doc => {\n            if (this.shouldBeInLimbo(doc.key)) {\n                this.limboDocuments = this.limboDocuments.add(doc.key);\n            }\n        });\n        // Diff the new limbo docs with the old limbo docs.\n        const changes = [];\n        oldLimboDocuments.forEach(key => {\n            if (!this.limboDocuments.has(key)) {\n                changes.push(new RemovedLimboDocument(key));\n            }\n        });\n        this.limboDocuments.forEach(key => {\n            if (!oldLimboDocuments.has(key)) {\n                changes.push(new AddedLimboDocument(key));\n            }\n        });\n        return changes;\n    }\n    /**\n     * Update the in-memory state of the current view with the state read from\n     * persistence.\n     *\n     * We update the query view whenever a client's primary status changes:\n     * - When a client transitions from primary to secondary, it can miss\n     *   LocalStorage updates and its query views may temporarily not be\n     *   synchronized with the state on disk.\n     * - For secondary to primary transitions, the client needs to update the list\n     *   of `syncedDocuments` since secondary clients update their query views\n     *   based purely on synthesized RemoteEvents.\n     *\n     * @param queryResult.documents - The documents that match the query according\n     * to the LocalStore.\n     * @param queryResult.remoteKeys - The keys of the documents that match the\n     * query according to the backend.\n     *\n     * @returns The ViewChange that resulted from this synchronization.\n     */\n    // PORTING NOTE: Multi-tab only.\n    synchronizeWithPersistedState(queryResult) {\n        this._syncedDocuments = queryResult.remoteKeys;\n        this.limboDocuments = documentKeySet();\n        const docChanges = this.computeDocChanges(queryResult.documents);\n        return this.applyChanges(docChanges, /* limboResolutionEnabled= */ true);\n    }\n    /**\n     * Returns a view snapshot as if this query was just listened to. Contains\n     * a document add for every existing document and the `fromCache` and\n     * `hasPendingWrites` status of the already established view.\n     */\n    // PORTING NOTE: Multi-tab only.\n    computeInitialSnapshot() {\n        return ViewSnapshot.fromInitialDocuments(this.query, this.documentSet, this.mutatedKeys, this.syncState === 0 /* SyncState.Local */, this.hasCachedResults);\n    }\n}\nfunction compareChangeType(c1, c2) {\n    const order = (change) => {\n        switch (change) {\n            case 0 /* ChangeType.Added */:\n                return 1;\n            case 2 /* ChangeType.Modified */:\n                return 2;\n            case 3 /* ChangeType.Metadata */:\n                // A metadata change is converted to a modified change at the public\n                // api layer.  Since we sort by document key and then change type,\n                // metadata and modified changes must be sorted equivalently.\n                return 2;\n            case 1 /* ChangeType.Removed */:\n                return 0;\n            default:\n                return fail(0x4f35, { change });\n        }\n    };\n    return order(c1) - order(c2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$3 = 'SyncEngine';\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\nclass QueryView {\n    constructor(\n    /**\n     * The query itself.\n     */\n    query, \n    /**\n     * The target number created by the client that is used in the watch\n     * stream to identify this query.\n     */\n    targetId, \n    /**\n     * The view is responsible for computing the final merged truth of what\n     * docs are in the query. It gets notified of local and remote changes,\n     * and applies the query filters and limits to determine the most correct\n     * possible results.\n     */\n    view) {\n        this.query = query;\n        this.targetId = targetId;\n        this.view = view;\n    }\n}\n/** Tracks a limbo resolution. */\nclass LimboResolution {\n    constructor(key) {\n        this.key = key;\n        /**\n         * Set to true once we've received a document. This is used in\n         * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\n         * decide whether it needs to manufacture a delete event for the target once\n         * the target is CURRENT.\n         */\n        this.receivedDocument = false;\n    }\n}\n/**\n * An implementation of `SyncEngine` coordinating with other parts of SDK.\n *\n * The parts of SyncEngine that act as a callback to RemoteStore need to be\n * registered individually. This is done in `syncEngineWrite()` and\n * `syncEngineListen()` (as well as `applyPrimaryState()`) as these methods\n * serve as entry points to RemoteStore's functionality.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass SyncEngineImpl {\n    constructor(localStore, remoteStore, eventManager, \n    // PORTING NOTE: Manages state synchronization in multi-tab environments.\n    sharedClientState, currentUser, maxConcurrentLimboResolutions) {\n        this.localStore = localStore;\n        this.remoteStore = remoteStore;\n        this.eventManager = eventManager;\n        this.sharedClientState = sharedClientState;\n        this.currentUser = currentUser;\n        this.maxConcurrentLimboResolutions = maxConcurrentLimboResolutions;\n        this.syncEngineListener = {};\n        this.queryViewsByQuery = new ObjectMap(q => canonifyQuery(q), queryEquals);\n        this.queriesByTarget = new Map();\n        /**\n         * The keys of documents that are in limbo for which we haven't yet started a\n         * limbo resolution query. The strings in this set are the result of calling\n         * `key.path.canonicalString()` where `key` is a `DocumentKey` object.\n         *\n         * The `Set` type was chosen because it provides efficient lookup and removal\n         * of arbitrary elements and it also maintains insertion order, providing the\n         * desired queue-like FIFO semantics.\n         */\n        this.enqueuedLimboResolutions = new Set();\n        /**\n         * Keeps track of the target ID for each document that is in limbo with an\n         * active target.\n         */\n        this.activeLimboTargetsByKey = new SortedMap(DocumentKey.comparator);\n        /**\n         * Keeps track of the information about an active limbo resolution for each\n         * active target ID that was started for the purpose of limbo resolution.\n         */\n        this.activeLimboResolutionsByTarget = new Map();\n        this.limboDocumentRefs = new ReferenceSet();\n        /** Stores user completion handlers, indexed by User and BatchId. */\n        this.mutationUserCallbacks = {};\n        /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n        this.pendingWritesCallbacks = new Map();\n        this.limboTargetIdGenerator = TargetIdGenerator.forSyncEngine();\n        this.onlineState = \"Unknown\" /* OnlineState.Unknown */;\n        // The primary state is set to `true` or `false` immediately after Firestore\n        // startup. In the interim, a client should only be considered primary if\n        // `isPrimary` is true.\n        this._isPrimaryClient = undefined;\n    }\n    get isPrimaryClient() {\n        return this._isPrimaryClient === true;\n    }\n}\nfunction newSyncEngine(localStore, remoteStore, eventManager, \n// PORTING NOTE: Manages state synchronization in multi-tab environments.\nsharedClientState, currentUser, maxConcurrentLimboResolutions, isPrimary) {\n    const syncEngine = new SyncEngineImpl(localStore, remoteStore, eventManager, sharedClientState, currentUser, maxConcurrentLimboResolutions);\n    if (isPrimary) {\n        syncEngine._isPrimaryClient = true;\n    }\n    return syncEngine;\n}\n/**\n * Initiates the new listen, resolves promise when listen enqueued to the\n * server. All the subsequent view snapshots or errors are sent to the\n * subscribed handlers. Returns the initial snapshot.\n */\nasync function syncEngineListen(syncEngine, query, shouldListenToRemote = true) {\n    const syncEngineImpl = ensureWatchCallbacks(syncEngine);\n    let viewSnapshot;\n    const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n    if (queryView) {\n        // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n        // already exists when EventManager calls us for the first time. This\n        // happens when the primary tab is already listening to this query on\n        // behalf of another tab and the user of the primary also starts listening\n        // to the query. EventManager will not have an assigned target ID in this\n        // case and calls `listen` to obtain this ID.\n        syncEngineImpl.sharedClientState.addLocalQueryTarget(queryView.targetId);\n        viewSnapshot = queryView.view.computeInitialSnapshot();\n    }\n    else {\n        viewSnapshot = await allocateTargetAndMaybeListen(syncEngineImpl, query, shouldListenToRemote, \n        /** shouldInitializeView= */ true);\n    }\n    return viewSnapshot;\n}\n/** Query has been listening to the cache, and tries to initiate the remote store listen */\nasync function triggerRemoteStoreListen(syncEngine, query) {\n    const syncEngineImpl = ensureWatchCallbacks(syncEngine);\n    await allocateTargetAndMaybeListen(syncEngineImpl, query, \n    /** shouldListenToRemote= */ true, \n    /** shouldInitializeView= */ false);\n}\nasync function allocateTargetAndMaybeListen(syncEngineImpl, query, shouldListenToRemote, shouldInitializeView) {\n    const targetData = await localStoreAllocateTarget(syncEngineImpl.localStore, queryToTarget(query));\n    const targetId = targetData.targetId;\n    // PORTING NOTE: When the query is listening to cache only, we skip sending it over to Watch by\n    // not registering it in shared client state, and directly calculate initial snapshots and\n    // subsequent updates from cache. Otherwise, register the target ID with local Firestore client\n    // as active watch target.\n    const status = syncEngineImpl.sharedClientState.addLocalQueryTarget(targetId, \n    /* addToActiveTargetIds= */ shouldListenToRemote);\n    let viewSnapshot;\n    if (shouldInitializeView) {\n        viewSnapshot = await initializeViewAndComputeSnapshot(syncEngineImpl, query, targetId, status === 'current', targetData.resumeToken);\n    }\n    if (syncEngineImpl.isPrimaryClient && shouldListenToRemote) {\n        remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n    }\n    return viewSnapshot;\n}\n/**\n * Registers a view for a previously unknown query and computes its initial\n * snapshot.\n */\nasync function initializeViewAndComputeSnapshot(syncEngineImpl, query, targetId, current, resumeToken) {\n    // PORTING NOTE: On Web only, we inject the code that registers new Limbo\n    // targets based on view changes. This allows us to only depend on Limbo\n    // changes when user code includes queries.\n    syncEngineImpl.applyDocChanges = (queryView, changes, remoteEvent) => applyDocChanges(syncEngineImpl, queryView, changes, remoteEvent);\n    const queryResult = await localStoreExecuteQuery(syncEngineImpl.localStore, query, \n    /* usePreviousResults= */ true);\n    const view = new View(query, queryResult.remoteKeys);\n    const viewDocChanges = view.computeDocChanges(queryResult.documents);\n    const synthesizedTargetChange = TargetChange.createSynthesizedTargetChangeForCurrentChange(targetId, current && syncEngineImpl.onlineState !== \"Offline\" /* OnlineState.Offline */, resumeToken);\n    const viewChange = view.applyChanges(viewDocChanges, \n    /* limboResolutionEnabled= */ syncEngineImpl.isPrimaryClient, synthesizedTargetChange);\n    updateTrackedLimbos(syncEngineImpl, targetId, viewChange.limboChanges);\n    const data = new QueryView(query, targetId, view);\n    syncEngineImpl.queryViewsByQuery.set(query, data);\n    if (syncEngineImpl.queriesByTarget.has(targetId)) {\n        syncEngineImpl.queriesByTarget.get(targetId).push(query);\n    }\n    else {\n        syncEngineImpl.queriesByTarget.set(targetId, [query]);\n    }\n    return viewChange.snapshot;\n}\n/** Stops listening to the query. */\nasync function syncEngineUnlisten(syncEngine, query, shouldUnlistenToRemote) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n    // Only clean up the query view and target if this is the only query mapped\n    // to the target.\n    const queries = syncEngineImpl.queriesByTarget.get(queryView.targetId);\n    if (queries.length > 1) {\n        syncEngineImpl.queriesByTarget.set(queryView.targetId, queries.filter(q => !queryEquals(q, query)));\n        syncEngineImpl.queryViewsByQuery.delete(query);\n        return;\n    }\n    // No other queries are mapped to the target, clean up the query and the target.\n    if (syncEngineImpl.isPrimaryClient) {\n        // We need to remove the local query target first to allow us to verify\n        // whether any other client is still interested in this target.\n        syncEngineImpl.sharedClientState.removeLocalQueryTarget(queryView.targetId);\n        const targetRemainsActive = syncEngineImpl.sharedClientState.isActiveQueryTarget(queryView.targetId);\n        if (!targetRemainsActive) {\n            await localStoreReleaseTarget(syncEngineImpl.localStore, queryView.targetId, \n            /*keepPersistedTargetData=*/ false)\n                .then(() => {\n                syncEngineImpl.sharedClientState.clearQueryState(queryView.targetId);\n                if (shouldUnlistenToRemote) {\n                    remoteStoreUnlisten(syncEngineImpl.remoteStore, queryView.targetId);\n                }\n                removeAndCleanupTarget(syncEngineImpl, queryView.targetId);\n            })\n                .catch(ignoreIfPrimaryLeaseLoss);\n        }\n    }\n    else {\n        removeAndCleanupTarget(syncEngineImpl, queryView.targetId);\n        await localStoreReleaseTarget(syncEngineImpl.localStore, queryView.targetId, \n        /*keepPersistedTargetData=*/ true);\n    }\n}\n/** Unlistens to the remote store while still listening to the cache. */\nasync function triggerRemoteStoreUnlisten(syncEngine, query) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n    const queries = syncEngineImpl.queriesByTarget.get(queryView.targetId);\n    if (syncEngineImpl.isPrimaryClient && queries.length === 1) {\n        // PORTING NOTE: Unregister the target ID with local Firestore client as\n        // watch target.\n        syncEngineImpl.sharedClientState.removeLocalQueryTarget(queryView.targetId);\n        remoteStoreUnlisten(syncEngineImpl.remoteStore, queryView.targetId);\n    }\n}\n/**\n * Initiates the write of local mutation batch which involves adding the\n * writes to the mutation queue, notifying the remote store about new\n * mutations and raising events for any changes this write caused.\n *\n * The promise returned by this call is resolved when the above steps\n * have completed, *not* when the write was acked by the backend. The\n * userCallback is resolved once the write was acked/rejected by the\n * backend (or failed locally for any other reason).\n */\nasync function syncEngineWrite(syncEngine, batch, userCallback) {\n    const syncEngineImpl = syncEngineEnsureWriteCallbacks(syncEngine);\n    try {\n        const result = await localStoreWriteLocally(syncEngineImpl.localStore, batch);\n        syncEngineImpl.sharedClientState.addPendingMutation(result.batchId);\n        addMutationCallback(syncEngineImpl, result.batchId, userCallback);\n        await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, result.changes);\n        await fillWritePipeline(syncEngineImpl.remoteStore);\n    }\n    catch (e) {\n        // If we can't persist the mutation, we reject the user callback and\n        // don't send the mutation. The user can then retry the write.\n        const error = wrapInUserErrorIfRecoverable(e, `Failed to persist write`);\n        userCallback.reject(error);\n    }\n}\n/**\n * Applies one remote event to the sync engine, notifying any views of the\n * changes, and releasing any pending mutation batches that would become\n * visible because of the snapshot version the remote event contains.\n */\nasync function syncEngineApplyRemoteEvent(syncEngine, remoteEvent) {\n    const syncEngineImpl = debugCast(syncEngine);\n    try {\n        const changes = await localStoreApplyRemoteEventToLocalCache(syncEngineImpl.localStore, remoteEvent);\n        // Update `receivedDocument` as appropriate for any limbo targets.\n        remoteEvent.targetChanges.forEach((targetChange, targetId) => {\n            const limboResolution = syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n            if (limboResolution) {\n                // Since this is a limbo resolution lookup, it's for a single document\n                // and it could be added, modified, or removed, but not a combination.\n                hardAssert(targetChange.addedDocuments.size +\n                    targetChange.modifiedDocuments.size +\n                    targetChange.removedDocuments.size <=\n                    1, 0x5858);\n                if (targetChange.addedDocuments.size > 0) {\n                    limboResolution.receivedDocument = true;\n                }\n                else if (targetChange.modifiedDocuments.size > 0) {\n                    hardAssert(limboResolution.receivedDocument, 0x390f);\n                }\n                else if (targetChange.removedDocuments.size > 0) {\n                    hardAssert(limboResolution.receivedDocument, 0xa4f3);\n                    limboResolution.receivedDocument = false;\n                }\n                else {\n                    // This was probably just a CURRENT targetChange or similar.\n                }\n            }\n        });\n        await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes, remoteEvent);\n    }\n    catch (error) {\n        await ignoreIfPrimaryLeaseLoss(error);\n    }\n}\n/**\n * Applies an OnlineState change to the sync engine and notifies any views of\n * the change.\n */\nfunction syncEngineApplyOnlineStateChange(syncEngine, onlineState, source) {\n    const syncEngineImpl = debugCast(syncEngine);\n    // If we are the secondary client, we explicitly ignore the remote store's\n    // online state (the local client may go offline, even though the primary\n    // tab remains online) and only apply the primary tab's online state from\n    // SharedClientState.\n    if ((syncEngineImpl.isPrimaryClient &&\n        source === 0 /* OnlineStateSource.RemoteStore */) ||\n        (!syncEngineImpl.isPrimaryClient &&\n            source === 1 /* OnlineStateSource.SharedClientState */)) {\n        const newViewSnapshots = [];\n        syncEngineImpl.queryViewsByQuery.forEach((query, queryView) => {\n            const viewChange = queryView.view.applyOnlineStateChange(onlineState);\n            if (viewChange.snapshot) {\n                newViewSnapshots.push(viewChange.snapshot);\n            }\n        });\n        eventManagerOnOnlineStateChange(syncEngineImpl.eventManager, onlineState);\n        if (newViewSnapshots.length) {\n            syncEngineImpl.syncEngineListener.onWatchChange(newViewSnapshots);\n        }\n        syncEngineImpl.onlineState = onlineState;\n        if (syncEngineImpl.isPrimaryClient) {\n            syncEngineImpl.sharedClientState.setOnlineState(onlineState);\n        }\n    }\n}\n/**\n * Rejects the listen for the given targetID. This can be triggered by the\n * backend for any active target.\n *\n * @param syncEngine - The sync engine implementation.\n * @param targetId - The targetID corresponds to one previously initiated by the\n * user as part of TargetData passed to listen() on RemoteStore.\n * @param err - A description of the condition that has forced the rejection.\n * Nearly always this will be an indication that the user is no longer\n * authorized to see the data matching the target.\n */\nasync function syncEngineRejectListen(syncEngine, targetId, err) {\n    const syncEngineImpl = debugCast(syncEngine);\n    // PORTING NOTE: Multi-tab only.\n    syncEngineImpl.sharedClientState.updateQueryState(targetId, 'rejected', err);\n    const limboResolution = syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n    const limboKey = limboResolution && limboResolution.key;\n    if (limboKey) {\n        // TODO(klimt): We really only should do the following on permission\n        // denied errors, but we don't have the cause code here.\n        // It's a limbo doc. Create a synthetic event saying it was deleted.\n        // This is kind of a hack. Ideally, we would have a method in the local\n        // store to purge a document. However, it would be tricky to keep all of\n        // the local store's invariants with another method.\n        let documentUpdates = new SortedMap(DocumentKey.comparator);\n        // TODO(b/217189216): This limbo document should ideally have a read time,\n        // so that it is picked up by any read-time based scans. The backend,\n        // however, does not send a read time for target removals.\n        documentUpdates = documentUpdates.insert(limboKey, MutableDocument.newNoDocument(limboKey, SnapshotVersion.min()));\n        const resolvedLimboDocuments = documentKeySet().add(limboKey);\n        const event = new RemoteEvent(SnapshotVersion.min(), \n        /* targetChanges= */ new Map(), \n        /* targetMismatches= */ new SortedMap(primitiveComparator), documentUpdates, resolvedLimboDocuments);\n        await syncEngineApplyRemoteEvent(syncEngineImpl, event);\n        // Since this query failed, we won't want to manually unlisten to it.\n        // We only remove it from bookkeeping after we successfully applied the\n        // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to\n        // this query when the RemoteStore restarts the Watch stream, which should\n        // re-trigger the target failure.\n        syncEngineImpl.activeLimboTargetsByKey =\n            syncEngineImpl.activeLimboTargetsByKey.remove(limboKey);\n        syncEngineImpl.activeLimboResolutionsByTarget.delete(targetId);\n        pumpEnqueuedLimboResolutions(syncEngineImpl);\n    }\n    else {\n        await localStoreReleaseTarget(syncEngineImpl.localStore, targetId, \n        /* keepPersistedTargetData */ false)\n            .then(() => removeAndCleanupTarget(syncEngineImpl, targetId, err))\n            .catch(ignoreIfPrimaryLeaseLoss);\n    }\n}\nasync function syncEngineApplySuccessfulWrite(syncEngine, mutationBatchResult) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const batchId = mutationBatchResult.batch.batchId;\n    try {\n        const changes = await localStoreAcknowledgeBatch(syncEngineImpl.localStore, mutationBatchResult);\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught\n        // up), so we raise user callbacks first so that they consistently happen\n        // before listen events.\n        processUserCallback(syncEngineImpl, batchId, /*error=*/ null);\n        triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n        syncEngineImpl.sharedClientState.updateMutationState(batchId, 'acknowledged');\n        await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes);\n    }\n    catch (error) {\n        await ignoreIfPrimaryLeaseLoss(error);\n    }\n}\nasync function syncEngineRejectFailedWrite(syncEngine, batchId, error) {\n    const syncEngineImpl = debugCast(syncEngine);\n    try {\n        const changes = await localStoreRejectBatch(syncEngineImpl.localStore, batchId);\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught up),\n        // so we raise user callbacks first so that they consistently happen before\n        // listen events.\n        processUserCallback(syncEngineImpl, batchId, error);\n        triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n        syncEngineImpl.sharedClientState.updateMutationState(batchId, 'rejected', error);\n        await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes);\n    }\n    catch (error) {\n        await ignoreIfPrimaryLeaseLoss(error);\n    }\n}\n/**\n * Registers a user callback that resolves when all pending mutations at the moment of calling\n * are acknowledged .\n */\nasync function syncEngineRegisterPendingWritesCallback(syncEngine, callback) {\n    const syncEngineImpl = debugCast(syncEngine);\n    if (!canUseNetwork(syncEngineImpl.remoteStore)) {\n        logDebug(LOG_TAG$3, 'The network is disabled. The task returned by ' +\n            \"'awaitPendingWrites()' will not complete until the network is enabled.\");\n    }\n    try {\n        const highestBatchId = await localStoreGetHighestUnacknowledgedBatchId(syncEngineImpl.localStore);\n        if (highestBatchId === BATCHID_UNKNOWN) {\n            // Trigger the callback right away if there is no pending writes at the moment.\n            callback.resolve();\n            return;\n        }\n        const callbacks = syncEngineImpl.pendingWritesCallbacks.get(highestBatchId) || [];\n        callbacks.push(callback);\n        syncEngineImpl.pendingWritesCallbacks.set(highestBatchId, callbacks);\n    }\n    catch (e) {\n        const firestoreError = wrapInUserErrorIfRecoverable(e, 'Initialization of waitForPendingWrites() operation failed');\n        callback.reject(firestoreError);\n    }\n}\n/**\n * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\n * if there are any.\n */\nfunction triggerPendingWritesCallbacks(syncEngineImpl, batchId) {\n    (syncEngineImpl.pendingWritesCallbacks.get(batchId) || []).forEach(callback => {\n        callback.resolve();\n    });\n    syncEngineImpl.pendingWritesCallbacks.delete(batchId);\n}\n/** Reject all outstanding callbacks waiting for pending writes to complete. */\nfunction rejectOutstandingPendingWritesCallbacks(syncEngineImpl, errorMessage) {\n    syncEngineImpl.pendingWritesCallbacks.forEach(callbacks => {\n        callbacks.forEach(callback => {\n            callback.reject(new FirestoreError(Code.CANCELLED, errorMessage));\n        });\n    });\n    syncEngineImpl.pendingWritesCallbacks.clear();\n}\nfunction addMutationCallback(syncEngineImpl, batchId, callback) {\n    let newCallbacks = syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()];\n    if (!newCallbacks) {\n        newCallbacks = new SortedMap(primitiveComparator);\n    }\n    newCallbacks = newCallbacks.insert(batchId, callback);\n    syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()] =\n        newCallbacks;\n}\n/**\n * Resolves or rejects the user callback for the given batch and then discards\n * it.\n */\nfunction processUserCallback(syncEngine, batchId, error) {\n    const syncEngineImpl = debugCast(syncEngine);\n    let newCallbacks = syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()];\n    // NOTE: Mutations restored from persistence won't have callbacks, so it's\n    // okay for there to be no callback for this ID.\n    if (newCallbacks) {\n        const callback = newCallbacks.get(batchId);\n        if (callback) {\n            if (error) {\n                callback.reject(error);\n            }\n            else {\n                callback.resolve();\n            }\n            newCallbacks = newCallbacks.remove(batchId);\n        }\n        syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()] =\n            newCallbacks;\n    }\n}\nfunction removeAndCleanupTarget(syncEngineImpl, targetId, error = null) {\n    syncEngineImpl.sharedClientState.removeLocalQueryTarget(targetId);\n    for (const query of syncEngineImpl.queriesByTarget.get(targetId)) {\n        syncEngineImpl.queryViewsByQuery.delete(query);\n        if (error) {\n            syncEngineImpl.syncEngineListener.onWatchError(query, error);\n        }\n    }\n    syncEngineImpl.queriesByTarget.delete(targetId);\n    if (syncEngineImpl.isPrimaryClient) {\n        const limboKeys = syncEngineImpl.limboDocumentRefs.removeReferencesForId(targetId);\n        limboKeys.forEach(limboKey => {\n            const isReferenced = syncEngineImpl.limboDocumentRefs.containsKey(limboKey);\n            if (!isReferenced) {\n                // We removed the last reference for this key\n                removeLimboTarget(syncEngineImpl, limboKey);\n            }\n        });\n    }\n}\nfunction removeLimboTarget(syncEngineImpl, key) {\n    syncEngineImpl.enqueuedLimboResolutions.delete(key.path.canonicalString());\n    // It's possible that the target already got removed because the query failed. In that case,\n    // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n    const limboTargetId = syncEngineImpl.activeLimboTargetsByKey.get(key);\n    if (limboTargetId === null) {\n        // This target already got removed, because the query failed.\n        return;\n    }\n    remoteStoreUnlisten(syncEngineImpl.remoteStore, limboTargetId);\n    syncEngineImpl.activeLimboTargetsByKey =\n        syncEngineImpl.activeLimboTargetsByKey.remove(key);\n    syncEngineImpl.activeLimboResolutionsByTarget.delete(limboTargetId);\n    pumpEnqueuedLimboResolutions(syncEngineImpl);\n}\nfunction updateTrackedLimbos(syncEngineImpl, targetId, limboChanges) {\n    for (const limboChange of limboChanges) {\n        if (limboChange instanceof AddedLimboDocument) {\n            syncEngineImpl.limboDocumentRefs.addReference(limboChange.key, targetId);\n            trackLimboChange(syncEngineImpl, limboChange);\n        }\n        else if (limboChange instanceof RemovedLimboDocument) {\n            logDebug(LOG_TAG$3, 'Document no longer in limbo: ' + limboChange.key);\n            syncEngineImpl.limboDocumentRefs.removeReference(limboChange.key, targetId);\n            const isReferenced = syncEngineImpl.limboDocumentRefs.containsKey(limboChange.key);\n            if (!isReferenced) {\n                // We removed the last reference for this key\n                removeLimboTarget(syncEngineImpl, limboChange.key);\n            }\n        }\n        else {\n            fail(0x4d4f, { limboChange });\n        }\n    }\n}\nfunction trackLimboChange(syncEngineImpl, limboChange) {\n    const key = limboChange.key;\n    const keyString = key.path.canonicalString();\n    if (!syncEngineImpl.activeLimboTargetsByKey.get(key) &&\n        !syncEngineImpl.enqueuedLimboResolutions.has(keyString)) {\n        logDebug(LOG_TAG$3, 'New document in limbo: ' + key);\n        syncEngineImpl.enqueuedLimboResolutions.add(keyString);\n        pumpEnqueuedLimboResolutions(syncEngineImpl);\n    }\n}\n/**\n * Starts listens for documents in limbo that are enqueued for resolution,\n * subject to a maximum number of concurrent resolutions.\n *\n * Without bounding the number of concurrent resolutions, the server can fail\n * with \"resource exhausted\" errors which can lead to pathological client\n * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.\n */\nfunction pumpEnqueuedLimboResolutions(syncEngineImpl) {\n    while (syncEngineImpl.enqueuedLimboResolutions.size > 0 &&\n        syncEngineImpl.activeLimboTargetsByKey.size <\n            syncEngineImpl.maxConcurrentLimboResolutions) {\n        const keyString = syncEngineImpl.enqueuedLimboResolutions\n            .values()\n            .next().value;\n        syncEngineImpl.enqueuedLimboResolutions.delete(keyString);\n        const key = new DocumentKey(ResourcePath.fromString(keyString));\n        const limboTargetId = syncEngineImpl.limboTargetIdGenerator.next();\n        syncEngineImpl.activeLimboResolutionsByTarget.set(limboTargetId, new LimboResolution(key));\n        syncEngineImpl.activeLimboTargetsByKey =\n            syncEngineImpl.activeLimboTargetsByKey.insert(key, limboTargetId);\n        remoteStoreListen(syncEngineImpl.remoteStore, new TargetData(queryToTarget(newQueryForPath(key.path)), limboTargetId, \"TargetPurposeLimboResolution\" /* TargetPurpose.LimboResolution */, ListenSequence.INVALID));\n    }\n}\nasync function syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngine, changes, remoteEvent) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const newSnaps = [];\n    const docChangesInAllViews = [];\n    const queriesProcessed = [];\n    if (syncEngineImpl.queryViewsByQuery.isEmpty()) {\n        // Return early since `onWatchChange()` might not have been assigned yet.\n        return;\n    }\n    syncEngineImpl.queryViewsByQuery.forEach((_, queryView) => {\n        queriesProcessed.push(syncEngineImpl\n            .applyDocChanges(queryView, changes, remoteEvent)\n            .then(viewSnapshot => {\n            var _a;\n            // If there are changes, or we are handling a global snapshot, notify\n            // secondary clients to update query state.\n            if (viewSnapshot || remoteEvent) {\n                if (syncEngineImpl.isPrimaryClient) {\n                    // Query state is set to `current` if:\n                    // - There is a view change and it is up-to-date, or,\n                    // - There is a global snapshot, the Target is current, and no changes to be resolved\n                    const isCurrent = viewSnapshot\n                        ? !viewSnapshot.fromCache\n                        : (_a = remoteEvent === null || remoteEvent === void 0 ? void 0 : remoteEvent.targetChanges.get(queryView.targetId)) === null || _a === void 0 ? void 0 : _a.current;\n                    syncEngineImpl.sharedClientState.updateQueryState(queryView.targetId, isCurrent ? 'current' : 'not-current');\n                }\n            }\n            // Update views if there are actual changes.\n            if (!!viewSnapshot) {\n                newSnaps.push(viewSnapshot);\n                const docChanges = LocalViewChanges.fromSnapshot(queryView.targetId, viewSnapshot);\n                docChangesInAllViews.push(docChanges);\n            }\n        }));\n    });\n    await Promise.all(queriesProcessed);\n    syncEngineImpl.syncEngineListener.onWatchChange(newSnaps);\n    await localStoreNotifyLocalViewChanges(syncEngineImpl.localStore, docChangesInAllViews);\n}\nasync function applyDocChanges(syncEngineImpl, queryView, changes, remoteEvent) {\n    let viewDocChanges = queryView.view.computeDocChanges(changes);\n    if (viewDocChanges.needsRefill) {\n        // The query has a limit and some docs were removed, so we need\n        // to re-run the query against the local store to make sure we\n        // didn't lose any good docs that had been past the limit.\n        viewDocChanges = await localStoreExecuteQuery(syncEngineImpl.localStore, queryView.query, \n        /* usePreviousResults= */ false).then(({ documents }) => {\n            return queryView.view.computeDocChanges(documents, viewDocChanges);\n        });\n    }\n    const targetChange = remoteEvent && remoteEvent.targetChanges.get(queryView.targetId);\n    const targetIsPendingReset = remoteEvent && remoteEvent.targetMismatches.get(queryView.targetId) != null;\n    const viewChange = queryView.view.applyChanges(viewDocChanges, \n    /* limboResolutionEnabled= */ syncEngineImpl.isPrimaryClient, targetChange, targetIsPendingReset);\n    updateTrackedLimbos(syncEngineImpl, queryView.targetId, viewChange.limboChanges);\n    return viewChange.snapshot;\n}\nasync function syncEngineHandleCredentialChange(syncEngine, user) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const userChanged = !syncEngineImpl.currentUser.isEqual(user);\n    if (userChanged) {\n        logDebug(LOG_TAG$3, 'User change. New user:', user.toKey());\n        const result = await localStoreHandleUserChange(syncEngineImpl.localStore, user);\n        syncEngineImpl.currentUser = user;\n        // Fails tasks waiting for pending writes requested by previous user.\n        rejectOutstandingPendingWritesCallbacks(syncEngineImpl, \"'waitForPendingWrites' promise is rejected due to a user change.\");\n        // TODO(b/114226417): Consider calling this only in the primary tab.\n        syncEngineImpl.sharedClientState.handleUserChange(user, result.removedBatchIds, result.addedBatchIds);\n        await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, result.affectedDocuments);\n    }\n}\nfunction syncEngineGetRemoteKeysForTarget(syncEngine, targetId) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const limboResolution = syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n    if (limboResolution && limboResolution.receivedDocument) {\n        return documentKeySet().add(limboResolution.key);\n    }\n    else {\n        let keySet = documentKeySet();\n        const queries = syncEngineImpl.queriesByTarget.get(targetId);\n        if (!queries) {\n            return keySet;\n        }\n        for (const query of queries) {\n            const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n            keySet = keySet.unionWith(queryView.view.syncedDocuments);\n        }\n        return keySet;\n    }\n}\n/**\n * Reconcile the list of synced documents in an existing view with those\n * from persistence.\n */\nasync function synchronizeViewAndComputeSnapshot(syncEngine, queryView) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const queryResult = await localStoreExecuteQuery(syncEngineImpl.localStore, queryView.query, \n    /* usePreviousResults= */ true);\n    const viewSnapshot = queryView.view.synchronizeWithPersistedState(queryResult);\n    if (syncEngineImpl.isPrimaryClient) {\n        updateTrackedLimbos(syncEngineImpl, queryView.targetId, viewSnapshot.limboChanges);\n    }\n    return viewSnapshot;\n}\n/**\n * Retrieves newly changed documents from remote document cache and raises\n * snapshots if needed.\n */\n// PORTING NOTE: Multi-Tab only.\nasync function syncEngineSynchronizeWithChangedDocuments(syncEngine, collectionGroup) {\n    const syncEngineImpl = debugCast(syncEngine);\n    return localStoreGetNewDocumentChanges(syncEngineImpl.localStore, collectionGroup).then(changes => syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes));\n}\n/** Applies a mutation state to an existing batch.  */\n// PORTING NOTE: Multi-Tab only.\nasync function syncEngineApplyBatchState(syncEngine, batchId, batchState, error) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const documents = await localStoreLookupMutationDocuments(syncEngineImpl.localStore, batchId);\n    if (documents === null) {\n        // A throttled tab may not have seen the mutation before it was completed\n        // and removed from the mutation queue, in which case we won't have cached\n        // the affected documents. In this case we can safely ignore the update\n        // since that means we didn't apply the mutation locally at all (if we\n        // had, we would have cached the affected documents), and so we will just\n        // see any resulting document changes via normal remote document updates\n        // as applicable.\n        logDebug(LOG_TAG$3, 'Cannot apply mutation batch with id: ' + batchId);\n        return;\n    }\n    if (batchState === 'pending') {\n        // If we are the primary client, we need to send this write to the\n        // backend. Secondary clients will ignore these writes since their remote\n        // connection is disabled.\n        await fillWritePipeline(syncEngineImpl.remoteStore);\n    }\n    else if (batchState === 'acknowledged' || batchState === 'rejected') {\n        // NOTE: Both these methods are no-ops for batches that originated from\n        // other clients.\n        processUserCallback(syncEngineImpl, batchId, error ? error : null);\n        triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n        localStoreRemoveCachedMutationBatchMetadata(syncEngineImpl.localStore, batchId);\n    }\n    else {\n        fail(0x1a40, `Unknown batchState`, { batchState });\n    }\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, documents);\n}\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nasync function syncEngineApplyPrimaryState(syncEngine, isPrimary) {\n    const syncEngineImpl = debugCast(syncEngine);\n    ensureWatchCallbacks(syncEngineImpl);\n    syncEngineEnsureWriteCallbacks(syncEngineImpl);\n    if (isPrimary === true && syncEngineImpl._isPrimaryClient !== true) {\n        // Secondary tabs only maintain Views for their local listeners and the\n        // Views internal state may not be 100% populated (in particular\n        // secondary tabs don't track syncedDocuments, the set of documents the\n        // server considers to be in the target). So when a secondary becomes\n        // primary, we need to need to make sure that all views for all targets\n        // match the state on disk.\n        const activeTargets = syncEngineImpl.sharedClientState.getAllActiveQueryTargets();\n        const activeQueries = await synchronizeQueryViewsAndRaiseSnapshots(syncEngineImpl, activeTargets.toArray());\n        syncEngineImpl._isPrimaryClient = true;\n        await remoteStoreApplyPrimaryState(syncEngineImpl.remoteStore, true);\n        for (const targetData of activeQueries) {\n            remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n        }\n    }\n    else if (isPrimary === false && syncEngineImpl._isPrimaryClient !== false) {\n        const activeTargets = [];\n        let p = Promise.resolve();\n        syncEngineImpl.queriesByTarget.forEach((_, targetId) => {\n            if (syncEngineImpl.sharedClientState.isLocalQueryTarget(targetId)) {\n                activeTargets.push(targetId);\n            }\n            else {\n                p = p.then(() => {\n                    removeAndCleanupTarget(syncEngineImpl, targetId);\n                    return localStoreReleaseTarget(syncEngineImpl.localStore, targetId, \n                    /*keepPersistedTargetData=*/ true);\n                });\n            }\n            remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n        });\n        await p;\n        await synchronizeQueryViewsAndRaiseSnapshots(syncEngineImpl, activeTargets);\n        resetLimboDocuments(syncEngineImpl);\n        syncEngineImpl._isPrimaryClient = false;\n        await remoteStoreApplyPrimaryState(syncEngineImpl.remoteStore, false);\n    }\n}\n// PORTING NOTE: Multi-Tab only.\nfunction resetLimboDocuments(syncEngine) {\n    const syncEngineImpl = debugCast(syncEngine);\n    syncEngineImpl.activeLimboResolutionsByTarget.forEach((_, targetId) => {\n        remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n    });\n    syncEngineImpl.limboDocumentRefs.removeAllReferences();\n    syncEngineImpl.activeLimboResolutionsByTarget = new Map();\n    syncEngineImpl.activeLimboTargetsByKey = new SortedMap(DocumentKey.comparator);\n}\n/**\n * Reconcile the query views of the provided query targets with the state from\n * persistence. Raises snapshots for any changes that affect the local\n * client and returns the updated state of all target's query data.\n *\n * @param syncEngine - The sync engine implementation\n * @param targets - the list of targets with views that need to be recomputed\n * @param transitionToPrimary - `true` iff the tab transitions from a secondary\n * tab to a primary tab\n */\n// PORTING NOTE: Multi-Tab only.\nasync function synchronizeQueryViewsAndRaiseSnapshots(syncEngine, targets, transitionToPrimary) {\n    const syncEngineImpl = debugCast(syncEngine);\n    const activeQueries = [];\n    const newViewSnapshots = [];\n    for (const targetId of targets) {\n        let targetData;\n        const queries = syncEngineImpl.queriesByTarget.get(targetId);\n        if (queries && queries.length !== 0) {\n            // For queries that have a local View, we fetch their current state\n            // from LocalStore (as the resume token and the snapshot version\n            // might have changed) and reconcile their views with the persisted\n            // state (the list of syncedDocuments may have gotten out of sync).\n            targetData = await localStoreAllocateTarget(syncEngineImpl.localStore, queryToTarget(queries[0]));\n            for (const query of queries) {\n                const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n                const viewChange = await synchronizeViewAndComputeSnapshot(syncEngineImpl, queryView);\n                if (viewChange.snapshot) {\n                    newViewSnapshots.push(viewChange.snapshot);\n                }\n            }\n        }\n        else {\n            // For queries that never executed on this client, we need to\n            // allocate the target in LocalStore and initialize a new View.\n            const target = await localStoreGetCachedTarget(syncEngineImpl.localStore, targetId);\n            targetData = await localStoreAllocateTarget(syncEngineImpl.localStore, target);\n            await initializeViewAndComputeSnapshot(syncEngineImpl, synthesizeTargetToQuery(target), targetId, \n            /*current=*/ false, targetData.resumeToken);\n        }\n        activeQueries.push(targetData);\n    }\n    syncEngineImpl.syncEngineListener.onWatchChange(newViewSnapshots);\n    return activeQueries;\n}\n/**\n * Creates a `Query` object from the specified `Target`. There is no way to\n * obtain the original `Query`, so we synthesize a `Query` from the `Target`\n * object.\n *\n * The synthesized result might be different from the original `Query`, but\n * since the synthesized `Query` should return the same results as the\n * original one (only the presentation of results might differ), the potential\n * difference will not cause issues.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction synthesizeTargetToQuery(target) {\n    return newQuery(target.path, target.collectionGroup, target.orderBy, target.filters, target.limit, \"F\" /* LimitType.First */, target.startAt, target.endAt);\n}\n/** Returns the IDs of the clients that are currently active. */\n// PORTING NOTE: Multi-Tab only.\nfunction syncEngineGetActiveClients(syncEngine) {\n    const syncEngineImpl = debugCast(syncEngine);\n    return localStoreGetActiveClients(syncEngineImpl.localStore);\n}\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nasync function syncEngineApplyTargetState(syncEngine, targetId, state, error) {\n    const syncEngineImpl = debugCast(syncEngine);\n    if (syncEngineImpl._isPrimaryClient) {\n        // If we receive a target state notification via WebStorage, we are\n        // either already secondary or another tab has taken the primary lease.\n        logDebug(LOG_TAG$3, 'Ignoring unexpected query state notification.');\n        return;\n    }\n    const query = syncEngineImpl.queriesByTarget.get(targetId);\n    if (query && query.length > 0) {\n        switch (state) {\n            case 'current':\n            case 'not-current': {\n                const changes = await localStoreGetNewDocumentChanges(syncEngineImpl.localStore, queryCollectionGroup(query[0]));\n                const synthesizedRemoteEvent = RemoteEvent.createSynthesizedRemoteEventForCurrentChange(targetId, state === 'current', ByteString.EMPTY_BYTE_STRING);\n                await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes, synthesizedRemoteEvent);\n                break;\n            }\n            case 'rejected': {\n                await localStoreReleaseTarget(syncEngineImpl.localStore, targetId, \n                /* keepPersistedTargetData */ true);\n                removeAndCleanupTarget(syncEngineImpl, targetId, error);\n                break;\n            }\n            default:\n                fail(0xfa9b, state);\n        }\n    }\n}\n/** Adds or removes Watch targets for queries from different tabs. */\nasync function syncEngineApplyActiveTargetsChange(syncEngine, added, removed) {\n    const syncEngineImpl = ensureWatchCallbacks(syncEngine);\n    if (!syncEngineImpl._isPrimaryClient) {\n        return;\n    }\n    for (const targetId of added) {\n        // A target is already listening to remote store if it is already registered to\n        // sharedClientState.\n        const targetAlreadyListeningToRemoteStore = syncEngineImpl.queriesByTarget.has(targetId) &&\n            syncEngineImpl.sharedClientState.isActiveQueryTarget(targetId);\n        if (targetAlreadyListeningToRemoteStore) {\n            logDebug(LOG_TAG$3, 'Adding an already active target ' + targetId);\n            continue;\n        }\n        const target = await localStoreGetCachedTarget(syncEngineImpl.localStore, targetId);\n        const targetData = await localStoreAllocateTarget(syncEngineImpl.localStore, target);\n        await initializeViewAndComputeSnapshot(syncEngineImpl, synthesizeTargetToQuery(target), targetData.targetId, \n        /*current=*/ false, targetData.resumeToken);\n        remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n    }\n    for (const targetId of removed) {\n        // Check that the target is still active since the target might have been\n        // removed if it has been rejected by the backend.\n        if (!syncEngineImpl.queriesByTarget.has(targetId)) {\n            continue;\n        }\n        // Release queries that are still active.\n        await localStoreReleaseTarget(syncEngineImpl.localStore, targetId, \n        /* keepPersistedTargetData */ false)\n            .then(() => {\n            remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n            removeAndCleanupTarget(syncEngineImpl, targetId);\n        })\n            .catch(ignoreIfPrimaryLeaseLoss);\n    }\n}\nfunction ensureWatchCallbacks(syncEngine) {\n    const syncEngineImpl = debugCast(syncEngine);\n    syncEngineImpl.remoteStore.remoteSyncer.applyRemoteEvent =\n        syncEngineApplyRemoteEvent.bind(null, syncEngineImpl);\n    syncEngineImpl.remoteStore.remoteSyncer.getRemoteKeysForTarget =\n        syncEngineGetRemoteKeysForTarget.bind(null, syncEngineImpl);\n    syncEngineImpl.remoteStore.remoteSyncer.rejectListen =\n        syncEngineRejectListen.bind(null, syncEngineImpl);\n    syncEngineImpl.syncEngineListener.onWatchChange =\n        eventManagerOnWatchChange.bind(null, syncEngineImpl.eventManager);\n    syncEngineImpl.syncEngineListener.onWatchError =\n        eventManagerOnWatchError.bind(null, syncEngineImpl.eventManager);\n    return syncEngineImpl;\n}\nfunction syncEngineEnsureWriteCallbacks(syncEngine) {\n    const syncEngineImpl = debugCast(syncEngine);\n    syncEngineImpl.remoteStore.remoteSyncer.applySuccessfulWrite =\n        syncEngineApplySuccessfulWrite.bind(null, syncEngineImpl);\n    syncEngineImpl.remoteStore.remoteSyncer.rejectFailedWrite =\n        syncEngineRejectFailedWrite.bind(null, syncEngineImpl);\n    return syncEngineImpl;\n}\n/**\n * Loads a Firestore bundle into the SDK. The returned promise resolves when\n * the bundle finished loading.\n *\n * @param syncEngine - SyncEngine to use.\n * @param bundleReader - Bundle to load into the SDK.\n * @param task - LoadBundleTask used to update the loading progress to public API.\n */\nfunction syncEngineLoadBundle(syncEngine, bundleReader, task) {\n    const syncEngineImpl = debugCast(syncEngine);\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    loadBundleImpl(syncEngineImpl, bundleReader, task).then(collectionGroups => {\n        syncEngineImpl.sharedClientState.notifyBundleLoaded(collectionGroups);\n    });\n}\n/** Loads a bundle and returns the list of affected collection groups. */\nasync function loadBundleImpl(syncEngine, reader, task) {\n    try {\n        const metadata = await reader.getMetadata();\n        const skip = await localStoreHasNewerBundle(syncEngine.localStore, metadata);\n        if (skip) {\n            await reader.close();\n            task._completeWith(bundleSuccessProgress(metadata));\n            return Promise.resolve(new Set());\n        }\n        task._updateProgress(bundleInitialProgress(metadata));\n        const loader = new BundleLoader(metadata, reader.serializer);\n        let element = await reader.nextElement();\n        while (element) {\n            ;\n            const progress = await loader.addSizedElement(element);\n            if (progress) {\n                task._updateProgress(progress);\n            }\n            element = await reader.nextElement();\n        }\n        const result = await loader.completeAndStoreAsync(syncEngine.localStore);\n        await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngine, result.changedDocs, \n        /* remoteEvent */ undefined);\n        // Save metadata, so loading the same bundle will skip.\n        await localStoreSaveBundle(syncEngine.localStore, metadata);\n        task._completeWith(result.progress);\n        return Promise.resolve(result.changedCollectionGroups);\n    }\n    catch (e) {\n        logWarn(LOG_TAG$3, `Loading bundle failed with ${e}`);\n        task._failWith(e);\n        return Promise.resolve(new Set());\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides all components needed for Firestore with in-memory persistence.\n * Uses EagerGC garbage collection.\n */\nclass MemoryOfflineComponentProvider {\n    constructor() {\n        this.kind = 'memory';\n        this.synchronizeTabs = false;\n    }\n    async initialize(cfg) {\n        this.serializer = newSerializer(cfg.databaseInfo.databaseId);\n        this.sharedClientState = this.createSharedClientState(cfg);\n        this.persistence = this.createPersistence(cfg);\n        await this.persistence.start();\n        this.localStore = this.createLocalStore(cfg);\n        this.gcScheduler = this.createGarbageCollectionScheduler(cfg, this.localStore);\n        this.indexBackfillerScheduler = this.createIndexBackfillerScheduler(cfg, this.localStore);\n    }\n    createGarbageCollectionScheduler(cfg, localStore) {\n        return null;\n    }\n    createIndexBackfillerScheduler(cfg, localStore) {\n        return null;\n    }\n    createLocalStore(cfg) {\n        return newLocalStore(this.persistence, new QueryEngine(), cfg.initialUser, this.serializer);\n    }\n    createPersistence(cfg) {\n        return new MemoryPersistence(MemoryEagerDelegate.factory, this.serializer);\n    }\n    createSharedClientState(cfg) {\n        return new MemorySharedClientState();\n    }\n    async terminate() {\n        var _a, _b;\n        (_a = this.gcScheduler) === null || _a === void 0 ? void 0 : _a.stop();\n        (_b = this.indexBackfillerScheduler) === null || _b === void 0 ? void 0 : _b.stop();\n        this.sharedClientState.shutdown();\n        await this.persistence.shutdown();\n    }\n}\nMemoryOfflineComponentProvider.provider = {\n    build: () => new MemoryOfflineComponentProvider()\n};\nclass LruGcMemoryOfflineComponentProvider extends MemoryOfflineComponentProvider {\n    constructor(cacheSizeBytes) {\n        super();\n        this.cacheSizeBytes = cacheSizeBytes;\n    }\n    createGarbageCollectionScheduler(cfg, localStore) {\n        hardAssert(this.persistence.referenceDelegate instanceof MemoryLruDelegate, 0xb743);\n        const garbageCollector = this.persistence.referenceDelegate.garbageCollector;\n        return new LruScheduler(garbageCollector, cfg.asyncQueue, localStore);\n    }\n    createPersistence(cfg) {\n        const lruParams = this.cacheSizeBytes !== undefined\n            ? LruParams.withCacheSize(this.cacheSizeBytes)\n            : LruParams.DEFAULT;\n        return new MemoryPersistence(p => MemoryLruDelegate.factory(p, lruParams), this.serializer);\n    }\n}\n/**\n * Provides all components needed for Firestore with IndexedDB persistence.\n */\nclass IndexedDbOfflineComponentProvider extends MemoryOfflineComponentProvider {\n    constructor(onlineComponentProvider, cacheSizeBytes, forceOwnership) {\n        super();\n        this.onlineComponentProvider = onlineComponentProvider;\n        this.cacheSizeBytes = cacheSizeBytes;\n        this.forceOwnership = forceOwnership;\n        this.kind = 'persistent';\n        this.synchronizeTabs = false;\n    }\n    async initialize(cfg) {\n        await super.initialize(cfg);\n        await this.onlineComponentProvider.initialize(this, cfg);\n        // Enqueue writes from a previous session\n        await syncEngineEnsureWriteCallbacks(this.onlineComponentProvider.syncEngine);\n        await fillWritePipeline(this.onlineComponentProvider.remoteStore);\n        // NOTE: This will immediately call the listener, so we make sure to\n        // set it after localStore / remoteStore are started.\n        await this.persistence.setPrimaryStateListener(() => {\n            if (this.gcScheduler && !this.gcScheduler.started) {\n                this.gcScheduler.start();\n            }\n            if (this.indexBackfillerScheduler &&\n                !this.indexBackfillerScheduler.started) {\n                this.indexBackfillerScheduler.start();\n            }\n            return Promise.resolve();\n        });\n    }\n    createLocalStore(cfg) {\n        return newLocalStore(this.persistence, new QueryEngine(), cfg.initialUser, this.serializer);\n    }\n    createGarbageCollectionScheduler(cfg, localStore) {\n        const garbageCollector = this.persistence.referenceDelegate.garbageCollector;\n        return new LruScheduler(garbageCollector, cfg.asyncQueue, localStore);\n    }\n    createIndexBackfillerScheduler(cfg, localStore) {\n        const indexBackfiller = new IndexBackfiller(localStore, this.persistence);\n        return new IndexBackfillerScheduler(cfg.asyncQueue, indexBackfiller);\n    }\n    createPersistence(cfg) {\n        const persistenceKey = indexedDbStoragePrefix(cfg.databaseInfo.databaseId, cfg.databaseInfo.persistenceKey);\n        const lruParams = this.cacheSizeBytes !== undefined\n            ? LruParams.withCacheSize(this.cacheSizeBytes)\n            : LruParams.DEFAULT;\n        return new IndexedDbPersistence(this.synchronizeTabs, persistenceKey, cfg.clientId, lruParams, cfg.asyncQueue, getWindow(), getDocument(), this.serializer, this.sharedClientState, !!this.forceOwnership);\n    }\n    createSharedClientState(cfg) {\n        return new MemorySharedClientState();\n    }\n}\n/**\n * Provides all components needed for Firestore with multi-tab IndexedDB\n * persistence.\n *\n * In the legacy client, this provider is used to provide both multi-tab and\n * non-multi-tab persistence since we cannot tell at build time whether\n * `synchronizeTabs` will be enabled.\n */\nclass MultiTabOfflineComponentProvider extends IndexedDbOfflineComponentProvider {\n    constructor(onlineComponentProvider, cacheSizeBytes) {\n        super(onlineComponentProvider, cacheSizeBytes, /* forceOwnership= */ false);\n        this.onlineComponentProvider = onlineComponentProvider;\n        this.cacheSizeBytes = cacheSizeBytes;\n        this.synchronizeTabs = true;\n    }\n    async initialize(cfg) {\n        await super.initialize(cfg);\n        const syncEngine = this.onlineComponentProvider.syncEngine;\n        if (this.sharedClientState instanceof WebStorageSharedClientState) {\n            this.sharedClientState.syncEngine = {\n                applyBatchState: syncEngineApplyBatchState.bind(null, syncEngine),\n                applyTargetState: syncEngineApplyTargetState.bind(null, syncEngine),\n                applyActiveTargetsChange: syncEngineApplyActiveTargetsChange.bind(null, syncEngine),\n                getActiveClients: syncEngineGetActiveClients.bind(null, syncEngine),\n                synchronizeWithChangedDocuments: syncEngineSynchronizeWithChangedDocuments.bind(null, syncEngine)\n            };\n            await this.sharedClientState.start();\n        }\n        // NOTE: This will immediately call the listener, so we make sure to\n        // set it after localStore / remoteStore are started.\n        await this.persistence.setPrimaryStateListener(async (isPrimary) => {\n            await syncEngineApplyPrimaryState(this.onlineComponentProvider.syncEngine, isPrimary);\n            if (this.gcScheduler) {\n                if (isPrimary && !this.gcScheduler.started) {\n                    this.gcScheduler.start();\n                }\n                else if (!isPrimary) {\n                    this.gcScheduler.stop();\n                }\n            }\n            if (this.indexBackfillerScheduler) {\n                if (isPrimary && !this.indexBackfillerScheduler.started) {\n                    this.indexBackfillerScheduler.start();\n                }\n                else if (!isPrimary) {\n                    this.indexBackfillerScheduler.stop();\n                }\n            }\n        });\n    }\n    createSharedClientState(cfg) {\n        const window = getWindow();\n        if (!WebStorageSharedClientState.isAvailable(window)) {\n            throw new FirestoreError(Code.UNIMPLEMENTED, 'IndexedDB persistence is only available on platforms that support LocalStorage.');\n        }\n        const persistenceKey = indexedDbStoragePrefix(cfg.databaseInfo.databaseId, cfg.databaseInfo.persistenceKey);\n        return new WebStorageSharedClientState(window, cfg.asyncQueue, persistenceKey, cfg.clientId, cfg.initialUser);\n    }\n}\n/**\n * Initializes and wires the components that are needed to interface with the\n * network.\n */\nclass OnlineComponentProvider {\n    async initialize(offlineComponentProvider, cfg) {\n        if (this.localStore) {\n            // OnlineComponentProvider may get initialized multiple times if\n            // multi-tab persistence is used.\n            return;\n        }\n        this.localStore = offlineComponentProvider.localStore;\n        this.sharedClientState = offlineComponentProvider.sharedClientState;\n        this.datastore = this.createDatastore(cfg);\n        this.remoteStore = this.createRemoteStore(cfg);\n        this.eventManager = this.createEventManager(cfg);\n        this.syncEngine = this.createSyncEngine(cfg, \n        /* startAsPrimary=*/ !offlineComponentProvider.synchronizeTabs);\n        this.sharedClientState.onlineStateHandler = onlineState => syncEngineApplyOnlineStateChange(this.syncEngine, onlineState, 1 /* OnlineStateSource.SharedClientState */);\n        this.remoteStore.remoteSyncer.handleCredentialChange =\n            syncEngineHandleCredentialChange.bind(null, this.syncEngine);\n        await remoteStoreApplyPrimaryState(this.remoteStore, this.syncEngine.isPrimaryClient);\n    }\n    createEventManager(cfg) {\n        return newEventManager();\n    }\n    createDatastore(cfg) {\n        const serializer = newSerializer(cfg.databaseInfo.databaseId);\n        const connection = newConnection(cfg.databaseInfo);\n        return newDatastore(cfg.authCredentials, cfg.appCheckCredentials, connection, serializer);\n    }\n    createRemoteStore(cfg) {\n        return newRemoteStore(this.localStore, this.datastore, cfg.asyncQueue, onlineState => syncEngineApplyOnlineStateChange(this.syncEngine, onlineState, 0 /* OnlineStateSource.RemoteStore */), newConnectivityMonitor());\n    }\n    createSyncEngine(cfg, startAsPrimary) {\n        return newSyncEngine(this.localStore, this.remoteStore, this.eventManager, this.sharedClientState, cfg.initialUser, cfg.maxConcurrentLimboResolutions, startAsPrimary);\n    }\n    async terminate() {\n        var _a, _b;\n        await remoteStoreShutdown(this.remoteStore);\n        (_a = this.datastore) === null || _a === void 0 ? void 0 : _a.terminate();\n        (_b = this.eventManager) === null || _b === void 0 ? void 0 : _b.terminate();\n    }\n}\nOnlineComponentProvider.provider = {\n    build: () => new OnlineComponentProvider()\n};\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * How many bytes to read each time when `ReadableStreamReader.read()` is\n * called. Only applicable for byte streams that we control (e.g. those backed\n * by an UInt8Array).\n */\nconst DEFAULT_BYTES_PER_READ = 10240;\n/**\n * Builds a `ByteStreamReader` from a UInt8Array.\n * @param source - The data source to use.\n * @param bytesPerRead - How many bytes each `read()` from the returned reader\n *        will read.\n */\nfunction toByteStreamReaderHelper(source, bytesPerRead = DEFAULT_BYTES_PER_READ) {\n    let readFrom = 0;\n    // The TypeScript definition for ReadableStreamReader changed. We use\n    // `any` here to allow this code to compile with different versions.\n    // See https://github.com/microsoft/TypeScript/issues/42970\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const reader = {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        async read() {\n            if (readFrom < source.byteLength) {\n                const result = {\n                    value: source.slice(readFrom, readFrom + bytesPerRead),\n                    done: false\n                };\n                readFrom += bytesPerRead;\n                return result;\n            }\n            return { done: true };\n        },\n        async cancel() { },\n        releaseLock() { },\n        closed: Promise.resolve()\n    };\n    return reader;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * On Node, only supported data source is a `Uint8Array` for now.\n */\nfunction toByteStreamReader(source, bytesPerRead) {\n    if (!(source instanceof Uint8Array)) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `NodePlatform.toByteStreamReader expects source to be Uint8Array, got ${valueDescription(source)}`);\n    }\n    return toByteStreamReaderHelper(source, bytesPerRead);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\nclass AsyncObserver {\n    constructor(observer) {\n        this.observer = observer;\n        /**\n         * When set to true, will not raise future events. Necessary to deal with\n         * async detachment of listener.\n         */\n        this.muted = false;\n    }\n    next(value) {\n        if (this.muted) {\n            return;\n        }\n        if (this.observer.next) {\n            this.scheduleEvent(this.observer.next, value);\n        }\n    }\n    error(error) {\n        if (this.muted) {\n            return;\n        }\n        if (this.observer.error) {\n            this.scheduleEvent(this.observer.error, error);\n        }\n        else {\n            logError('Uncaught Error in snapshot listener:', error.toString());\n        }\n    }\n    mute() {\n        this.muted = true;\n    }\n    scheduleEvent(eventHandler, event) {\n        setTimeout(() => {\n            if (!this.muted) {\n                eventHandler(event);\n            }\n        }, 0);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A complete element in the bundle stream, together with the byte length it\n * occupies in the stream.\n */\nclass SizedBundleElement {\n    constructor(payload, \n    // How many bytes this element takes to store in the bundle.\n    byteLength) {\n        this.payload = payload;\n        this.byteLength = byteLength;\n    }\n    isBundleMetadata() {\n        return 'metadata' in this.payload;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A class representing a bundle.\n *\n * Takes a bundle stream or buffer, and presents abstractions to read bundled\n * elements out of the underlying content.\n */\nclass BundleReaderImpl {\n    constructor(\n    /** The reader to read from underlying binary bundle data source. */\n    reader, serializer) {\n        this.reader = reader;\n        this.serializer = serializer;\n        /** Cached bundle metadata. */\n        this.metadata = new Deferred();\n        /**\n         * Internal buffer to hold bundle content, accumulating incomplete element\n         * content.\n         */\n        this.buffer = new Uint8Array();\n        this.textDecoder = newTextDecoder();\n        // Read the metadata (which is the first element).\n        this.nextElementImpl().then(element => {\n            if (element && element.isBundleMetadata()) {\n                this.metadata.resolve(element.payload.metadata);\n            }\n            else {\n                this.metadata.reject(new Error(`The first element of the bundle is not a metadata, it is\n             ${JSON.stringify(element === null || element === void 0 ? void 0 : element.payload)}`));\n            }\n        }, error => this.metadata.reject(error));\n    }\n    close() {\n        return this.reader.cancel();\n    }\n    async getMetadata() {\n        return this.metadata.promise;\n    }\n    async nextElement() {\n        // Makes sure metadata is read before proceeding.\n        await this.getMetadata();\n        return this.nextElementImpl();\n    }\n    /**\n     * Reads from the head of internal buffer, and pulling more data from\n     * underlying stream if a complete element cannot be found, until an\n     * element(including the prefixed length and the JSON string) is found.\n     *\n     * Once a complete element is read, it is dropped from internal buffer.\n     *\n     * Returns either the bundled element, or null if we have reached the end of\n     * the stream.\n     */\n    async nextElementImpl() {\n        const lengthBuffer = await this.readLength();\n        if (lengthBuffer === null) {\n            return null;\n        }\n        const lengthString = this.textDecoder.decode(lengthBuffer);\n        const length = Number(lengthString);\n        if (isNaN(length)) {\n            this.raiseError(`length string (${lengthString}) is not valid number`);\n        }\n        const jsonString = await this.readJsonString(length);\n        return new SizedBundleElement(JSON.parse(jsonString), lengthBuffer.length + length);\n    }\n    /** First index of '{' from the underlying buffer. */\n    indexOfOpenBracket() {\n        return this.buffer.findIndex(v => v === '{'.charCodeAt(0));\n    }\n    /**\n     * Reads from the beginning of the internal buffer, until the first '{', and\n     * return the content.\n     *\n     * If reached end of the stream, returns a null.\n     */\n    async readLength() {\n        while (this.indexOfOpenBracket() < 0) {\n            const done = await this.pullMoreDataToBuffer();\n            if (done) {\n                break;\n            }\n        }\n        // Broke out of the loop because underlying stream is closed, and there\n        // happens to be no more data to process.\n        if (this.buffer.length === 0) {\n            return null;\n        }\n        const position = this.indexOfOpenBracket();\n        // Broke out of the loop because underlying stream is closed, but still\n        // cannot find an open bracket.\n        if (position < 0) {\n            this.raiseError('Reached the end of bundle when a length string is expected.');\n        }\n        const result = this.buffer.slice(0, position);\n        // Update the internal buffer to drop the read length.\n        this.buffer = this.buffer.slice(position);\n        return result;\n    }\n    /**\n     * Reads from a specified position from the internal buffer, for a specified\n     * number of bytes, pulling more data from the underlying stream if needed.\n     *\n     * Returns a string decoded from the read bytes.\n     */\n    async readJsonString(length) {\n        while (this.buffer.length < length) {\n            const done = await this.pullMoreDataToBuffer();\n            if (done) {\n                this.raiseError('Reached the end of bundle when more is expected.');\n            }\n        }\n        const result = this.textDecoder.decode(this.buffer.slice(0, length));\n        // Update the internal buffer to drop the read json string.\n        this.buffer = this.buffer.slice(length);\n        return result;\n    }\n    raiseError(message) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.reader.cancel();\n        throw new Error(`Invalid bundle format: ${message}`);\n    }\n    /**\n     * Pulls more data from underlying stream to internal buffer.\n     * Returns a boolean indicating whether the stream is finished.\n     */\n    async pullMoreDataToBuffer() {\n        const result = await this.reader.read();\n        if (!result.done) {\n            const newBuffer = new Uint8Array(this.buffer.length + result.value.length);\n            newBuffer.set(this.buffer);\n            newBuffer.set(result.value, this.buffer.length);\n            this.buffer = newBuffer;\n        }\n        return result.done;\n    }\n}\nfunction newBundleReader(reader, serializer) {\n    return new BundleReaderImpl(reader, serializer);\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A class that can parse a bundle form the string serialization of a bundle.\n */\nclass BundleReaderSyncImpl {\n    constructor(bundleData, serializer) {\n        this.bundleData = bundleData;\n        this.serializer = serializer;\n        this.cursor = 0;\n        this.elements = [];\n        let element = this.nextElement();\n        if (element && element.isBundleMetadata()) {\n            this.metadata = element;\n        }\n        else {\n            throw new Error(`The first element of the bundle is not a metadata object, it is\n         ${JSON.stringify(element === null || element === void 0 ? void 0 : element.payload)}`);\n        }\n        do {\n            element = this.nextElement();\n            if (element !== null) {\n                this.elements.push(element);\n            }\n        } while (element !== null);\n    }\n    /* Returns the parsed metadata of the bundle. */\n    getMetadata() {\n        return this.metadata;\n    }\n    /* Returns the DocumentSnapshot or NamedQuery elements of the bundle. */\n    getElements() {\n        return this.elements;\n    }\n    /**\n     * Parses the next element of the bundle.\n     *\n     * @returns a SizedBundleElement representation of the next element in the bundle, or null if\n     * no more elements exist.\n     */\n    nextElement() {\n        if (this.cursor === this.bundleData.length) {\n            return null;\n        }\n        const length = this.readLength();\n        const jsonString = this.readJsonString(length);\n        return new SizedBundleElement(JSON.parse(jsonString), length);\n    }\n    /**\n     * Reads from a specified position from the bundleData string, for a specified\n     * number of bytes.\n     *\n     * @param length how many characters to read.\n     * @returns a string parsed from the bundle.\n     */\n    readJsonString(length) {\n        if (this.cursor + length > this.bundleData.length) {\n            throw new FirestoreError(Code.INTERNAL, 'Reached the end of bundle when more is expected.');\n        }\n        const result = this.bundleData.slice(this.cursor, (this.cursor += length));\n        return result;\n    }\n    /**\n     * Reads from the current cursor until the first '{'.\n     *\n     * @returns  A string to integer represention of the parsed value.\n     * @throws An {@link Error} if the cursor has reached the end of the stream, since lengths\n     * prefix bundle objects.\n     */\n    readLength() {\n        const startIndex = this.cursor;\n        let curIndex = this.cursor;\n        while (curIndex < this.bundleData.length) {\n            if (this.bundleData[curIndex] === '{') {\n                if (curIndex === startIndex) {\n                    throw new Error('First character is a bracket and not a number');\n                }\n                this.cursor = curIndex;\n                return Number(this.bundleData.slice(startIndex, curIndex));\n            }\n            curIndex++;\n        }\n        throw new Error('Reached the end of bundle when more is expected.');\n    }\n}\n/**\n *  Creates an instance of BundleReader without exposing the BundleReaderSyncImpl class type.\n */\nfunction newBundleReaderSync(bundleData, serializer) {\n    return new BundleReaderSyncImpl(bundleData, serializer);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nclass Transaction$2 {\n    constructor(datastore) {\n        this.datastore = datastore;\n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map();\n        this.mutations = [];\n        this.committed = false;\n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastTransactionError = null;\n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set();\n    }\n    async lookup(keys) {\n        this.ensureCommitNotCalled();\n        if (this.mutations.length > 0) {\n            this.lastTransactionError = new FirestoreError(Code.INVALID_ARGUMENT, 'Firestore transactions require all reads to be executed before all writes.');\n            throw this.lastTransactionError;\n        }\n        const docs = await invokeBatchGetDocumentsRpc(this.datastore, keys);\n        docs.forEach(doc => this.recordVersion(doc));\n        return docs;\n    }\n    set(key, data) {\n        this.write(data.toMutation(key, this.precondition(key)));\n        this.writtenDocs.add(key.toString());\n    }\n    update(key, data) {\n        try {\n            this.write(data.toMutation(key, this.preconditionForUpdate(key)));\n        }\n        catch (e) {\n            this.lastTransactionError = e;\n        }\n        this.writtenDocs.add(key.toString());\n    }\n    delete(key) {\n        this.write(new DeleteMutation(key, this.precondition(key)));\n        this.writtenDocs.add(key.toString());\n    }\n    async commit() {\n        this.ensureCommitNotCalled();\n        if (this.lastTransactionError) {\n            throw this.lastTransactionError;\n        }\n        const unwritten = this.readVersions;\n        // For each mutation, note that the doc was written.\n        this.mutations.forEach(mutation => {\n            unwritten.delete(mutation.key.toString());\n        });\n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        unwritten.forEach((_, path) => {\n            const key = DocumentKey.fromPath(path);\n            this.mutations.push(new VerifyMutation(key, this.precondition(key)));\n        });\n        await invokeCommitRpc(this.datastore, this.mutations);\n        this.committed = true;\n    }\n    recordVersion(doc) {\n        let docVersion;\n        if (doc.isFoundDocument()) {\n            docVersion = doc.version;\n        }\n        else if (doc.isNoDocument()) {\n            // Represent a deleted doc using SnapshotVersion.min().\n            docVersion = SnapshotVersion.min();\n        }\n        else {\n            throw fail(0xc542, {\n                documentName: doc.constructor.name\n            });\n        }\n        const existingVersion = this.readVersions.get(doc.key.toString());\n        if (existingVersion) {\n            if (!docVersion.isEqual(existingVersion)) {\n                // This transaction will fail no matter what.\n                throw new FirestoreError(Code.ABORTED, 'Document version changed between two reads.');\n            }\n        }\n        else {\n            this.readVersions.set(doc.key.toString(), docVersion);\n        }\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n    precondition(key) {\n        const version = this.readVersions.get(key.toString());\n        if (!this.writtenDocs.has(key.toString()) && version) {\n            if (version.isEqual(SnapshotVersion.min())) {\n                return Precondition.exists(false);\n            }\n            else {\n                return Precondition.updateTime(version);\n            }\n        }\n        else {\n            return Precondition.none();\n        }\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n    preconditionForUpdate(key) {\n        const version = this.readVersions.get(key.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n        if (!this.writtenDocs.has(key.toString()) && version) {\n            if (version.isEqual(SnapshotVersion.min())) {\n                // The document doesn't exist, so fail the transaction.\n                // This has to be validated locally because you can't send a\n                // precondition that a document does not exist without changing the\n                // semantics of the backend write to be an insert. This is the reverse\n                // of what we want, since we want to assert that the document doesn't\n                // exist but then send the update and have it fail. Since we can't\n                // express that to the backend, we have to validate locally.\n                // Note: this can change once we can send separate verify writes in the\n                // transaction.\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Can't update a document that doesn't exist.\");\n            }\n            // Document exists, base precondition on document update time.\n            return Precondition.updateTime(version);\n        }\n        else {\n            // Document was not read, so we just use the preconditions for a blind\n            // update.\n            return Precondition.exists(true);\n        }\n    }\n    write(mutation) {\n        this.ensureCommitNotCalled();\n        this.mutations.push(mutation);\n    }\n    ensureCommitNotCalled() {\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass TransactionRunner {\n    constructor(asyncQueue, datastore, options, updateFunction, deferred) {\n        this.asyncQueue = asyncQueue;\n        this.datastore = datastore;\n        this.options = options;\n        this.updateFunction = updateFunction;\n        this.deferred = deferred;\n        this.attemptsRemaining = options.maxAttempts;\n        this.backoff = new ExponentialBackoff(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */\n    run() {\n        this.attemptsRemaining -= 1;\n        this.runWithBackOff();\n    }\n    runWithBackOff() {\n        this.backoff.backoffAndRun(async () => {\n            const transaction = new Transaction$2(this.datastore);\n            const userPromise = this.tryRunUpdateFunction(transaction);\n            if (userPromise) {\n                userPromise\n                    .then(result => {\n                    this.asyncQueue.enqueueAndForget(() => {\n                        return transaction\n                            .commit()\n                            .then(() => {\n                            this.deferred.resolve(result);\n                        })\n                            .catch(commitError => {\n                            this.handleTransactionError(commitError);\n                        });\n                    });\n                })\n                    .catch(userPromiseError => {\n                    this.handleTransactionError(userPromiseError);\n                });\n            }\n        });\n    }\n    tryRunUpdateFunction(transaction) {\n        try {\n            const userPromise = this.updateFunction(transaction);\n            if (isNullOrUndefined(userPromise) ||\n                !userPromise.catch ||\n                !userPromise.then) {\n                this.deferred.reject(Error('Transaction callback must return a Promise'));\n                return null;\n            }\n            return userPromise;\n        }\n        catch (error) {\n            // Do not retry errors thrown by user provided updateFunction.\n            this.deferred.reject(error);\n            return null;\n        }\n    }\n    handleTransactionError(error) {\n        if (this.attemptsRemaining > 0 && this.isRetryableTransactionError(error)) {\n            this.attemptsRemaining -= 1;\n            this.asyncQueue.enqueueAndForget(() => {\n                this.runWithBackOff();\n                return Promise.resolve();\n            });\n        }\n        else {\n            this.deferred.reject(error);\n        }\n    }\n    isRetryableTransactionError(error) {\n        if (error.name === 'FirebaseError') {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const code = error.code;\n            return (code === 'aborted' ||\n                code === 'failed-precondition' ||\n                code === 'already-exists' ||\n                !isPermanentError(code));\n        }\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$2 = 'FirestoreClient';\nconst MAX_CONCURRENT_LIMBO_RESOLUTIONS = 100;\n/** DOMException error code constants. */\nconst DOM_EXCEPTION_INVALID_STATE = 11;\nconst DOM_EXCEPTION_ABORTED = 20;\nconst DOM_EXCEPTION_QUOTA_EXCEEDED = 22;\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the //\n * pieces of the client SDK architecture. It is responsible for creating the //\n * async queue that is shared by all of the other components in the system. //\n */\nclass FirestoreClient {\n    constructor(authCredentials, appCheckCredentials, \n    /**\n     * Asynchronous queue responsible for all of our internal processing. When\n     * we get incoming work from the user (via public API) or the network\n     * (incoming GRPC messages), we should always schedule onto this queue.\n     * This ensures all of our work is properly serialized (e.g. we don't\n     * start processing a new operation while the previous one is waiting for\n     * an async I/O to complete).\n     */\n    asyncQueue, databaseInfo, componentProvider) {\n        this.authCredentials = authCredentials;\n        this.appCheckCredentials = appCheckCredentials;\n        this.asyncQueue = asyncQueue;\n        this.databaseInfo = databaseInfo;\n        this.user = User.UNAUTHENTICATED;\n        this.clientId = AutoId.newId();\n        this.authCredentialListener = () => Promise.resolve();\n        this.appCheckCredentialListener = () => Promise.resolve();\n        this._uninitializedComponentsProvider = componentProvider;\n        this.authCredentials.start(asyncQueue, async (user) => {\n            logDebug(LOG_TAG$2, 'Received user=', user.uid);\n            await this.authCredentialListener(user);\n            this.user = user;\n        });\n        this.appCheckCredentials.start(asyncQueue, newAppCheckToken => {\n            logDebug(LOG_TAG$2, 'Received new app check token=', newAppCheckToken);\n            return this.appCheckCredentialListener(newAppCheckToken, this.user);\n        });\n    }\n    get configuration() {\n        return {\n            asyncQueue: this.asyncQueue,\n            databaseInfo: this.databaseInfo,\n            clientId: this.clientId,\n            authCredentials: this.authCredentials,\n            appCheckCredentials: this.appCheckCredentials,\n            initialUser: this.user,\n            maxConcurrentLimboResolutions: MAX_CONCURRENT_LIMBO_RESOLUTIONS\n        };\n    }\n    setCredentialChangeListener(listener) {\n        this.authCredentialListener = listener;\n    }\n    setAppCheckTokenChangeListener(listener) {\n        this.appCheckCredentialListener = listener;\n    }\n    terminate() {\n        this.asyncQueue.enterRestrictedMode();\n        const deferred = new Deferred();\n        this.asyncQueue.enqueueAndForgetEvenWhileRestricted(async () => {\n            try {\n                if (this._onlineComponents) {\n                    await this._onlineComponents.terminate();\n                }\n                if (this._offlineComponents) {\n                    await this._offlineComponents.terminate();\n                }\n                // The credentials provider must be terminated after shutting down the\n                // RemoteStore as it will prevent the RemoteStore from retrieving auth\n                // tokens.\n                this.authCredentials.shutdown();\n                this.appCheckCredentials.shutdown();\n                deferred.resolve();\n            }\n            catch (e) {\n                const firestoreError = wrapInUserErrorIfRecoverable(e, `Failed to shutdown persistence`);\n                deferred.reject(firestoreError);\n            }\n        });\n        return deferred.promise;\n    }\n}\nasync function setOfflineComponentProvider(client, offlineComponentProvider) {\n    client.asyncQueue.verifyOperationInProgress();\n    logDebug(LOG_TAG$2, 'Initializing OfflineComponentProvider');\n    const configuration = client.configuration;\n    await offlineComponentProvider.initialize(configuration);\n    let currentUser = configuration.initialUser;\n    client.setCredentialChangeListener(async (user) => {\n        if (!currentUser.isEqual(user)) {\n            await localStoreHandleUserChange(offlineComponentProvider.localStore, user);\n            currentUser = user;\n        }\n    });\n    offlineComponentProvider.persistence.setDatabaseDeletedListener(() => {\n        logWarn('Terminating Firestore due to IndexedDb database deletion');\n        client\n            .terminate()\n            .then(() => {\n            logDebug('Terminating Firestore due to IndexedDb database deletion ' +\n                'completed successfully');\n        })\n            .catch(error => {\n            logWarn('Terminating Firestore due to IndexedDb database deletion failed', error);\n        });\n    });\n    client._offlineComponents = offlineComponentProvider;\n}\nasync function setOnlineComponentProvider(client, onlineComponentProvider) {\n    client.asyncQueue.verifyOperationInProgress();\n    const offlineComponents = await ensureOfflineComponents(client);\n    logDebug(LOG_TAG$2, 'Initializing OnlineComponentProvider');\n    await onlineComponentProvider.initialize(offlineComponents, client.configuration);\n    // The CredentialChangeListener of the online component provider takes\n    // precedence over the offline component provider.\n    client.setCredentialChangeListener(user => remoteStoreHandleCredentialChange(onlineComponentProvider.remoteStore, user));\n    client.setAppCheckTokenChangeListener((_, user) => remoteStoreHandleCredentialChange(onlineComponentProvider.remoteStore, user));\n    client._onlineComponents = onlineComponentProvider;\n}\n/**\n * Decides whether the provided error allows us to gracefully disable\n * persistence (as opposed to crashing the client).\n */\nfunction canFallbackFromIndexedDbError(error) {\n    if (error.name === 'FirebaseError') {\n        return (error.code === Code.FAILED_PRECONDITION ||\n            error.code === Code.UNIMPLEMENTED);\n    }\n    else if (typeof DOMException !== 'undefined' &&\n        error instanceof DOMException) {\n        // There are a few known circumstances where we can open IndexedDb but\n        // trying to read/write will fail (e.g. quota exceeded). For\n        // well-understood cases, we attempt to detect these and then gracefully\n        // fall back to memory persistence.\n        // NOTE: Rather than continue to add to this list, we could decide to\n        // always fall back, with the risk that we might accidentally hide errors\n        // representing actual SDK bugs.\n        return (\n        // When the browser is out of quota we could get either quota exceeded\n        // or an aborted error depending on whether the error happened during\n        // schema migration.\n        error.code === DOM_EXCEPTION_QUOTA_EXCEEDED ||\n            error.code === DOM_EXCEPTION_ABORTED ||\n            // Firefox Private Browsing mode disables IndexedDb and returns\n            // INVALID_STATE for any usage.\n            error.code === DOM_EXCEPTION_INVALID_STATE);\n    }\n    return true;\n}\nasync function ensureOfflineComponents(client) {\n    if (!client._offlineComponents) {\n        if (client._uninitializedComponentsProvider) {\n            logDebug(LOG_TAG$2, 'Using user provided OfflineComponentProvider');\n            try {\n                await setOfflineComponentProvider(client, client._uninitializedComponentsProvider._offline);\n            }\n            catch (e) {\n                const error = e;\n                if (!canFallbackFromIndexedDbError(error)) {\n                    throw error;\n                }\n                logWarn('Error using user provided cache. Falling back to ' +\n                    'memory cache: ' +\n                    error);\n                await setOfflineComponentProvider(client, new MemoryOfflineComponentProvider());\n            }\n        }\n        else {\n            logDebug(LOG_TAG$2, 'Using default OfflineComponentProvider');\n            await setOfflineComponentProvider(client, new LruGcMemoryOfflineComponentProvider(undefined));\n        }\n    }\n    return client._offlineComponents;\n}\nasync function ensureOnlineComponents(client) {\n    if (!client._onlineComponents) {\n        if (client._uninitializedComponentsProvider) {\n            logDebug(LOG_TAG$2, 'Using user provided OnlineComponentProvider');\n            await setOnlineComponentProvider(client, client._uninitializedComponentsProvider._online);\n        }\n        else {\n            logDebug(LOG_TAG$2, 'Using default OnlineComponentProvider');\n            await setOnlineComponentProvider(client, new OnlineComponentProvider());\n        }\n    }\n    return client._onlineComponents;\n}\nfunction getPersistence(client) {\n    return ensureOfflineComponents(client).then(c => c.persistence);\n}\nfunction getLocalStore(client) {\n    return ensureOfflineComponents(client).then(c => c.localStore);\n}\nfunction getRemoteStore(client) {\n    return ensureOnlineComponents(client).then(c => c.remoteStore);\n}\nfunction getSyncEngine(client) {\n    return ensureOnlineComponents(client).then(c => c.syncEngine);\n}\nfunction getDatastore(client) {\n    return ensureOnlineComponents(client).then(c => c.datastore);\n}\nasync function getEventManager(client) {\n    const onlineComponentProvider = await ensureOnlineComponents(client);\n    const eventManager = onlineComponentProvider.eventManager;\n    eventManager.onListen = syncEngineListen.bind(null, onlineComponentProvider.syncEngine);\n    eventManager.onUnlisten = syncEngineUnlisten.bind(null, onlineComponentProvider.syncEngine);\n    eventManager.onFirstRemoteStoreListen = triggerRemoteStoreListen.bind(null, onlineComponentProvider.syncEngine);\n    eventManager.onLastRemoteStoreUnlisten = triggerRemoteStoreUnlisten.bind(null, onlineComponentProvider.syncEngine);\n    return eventManager;\n}\n/** Enables the network connection and re-enqueues all pending operations. */\nfunction firestoreClientEnableNetwork(client) {\n    return client.asyncQueue.enqueue(async () => {\n        const persistence = await getPersistence(client);\n        const remoteStore = await getRemoteStore(client);\n        persistence.setNetworkEnabled(true);\n        return remoteStoreEnableNetwork(remoteStore);\n    });\n}\n/** Disables the network connection. Pending operations will not complete. */\nfunction firestoreClientDisableNetwork(client) {\n    return client.asyncQueue.enqueue(async () => {\n        const persistence = await getPersistence(client);\n        const remoteStore = await getRemoteStore(client);\n        persistence.setNetworkEnabled(false);\n        return remoteStoreDisableNetwork(remoteStore);\n    });\n}\n/**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */\nfunction firestoreClientWaitForPendingWrites(client) {\n    const deferred = new Deferred();\n    client.asyncQueue.enqueueAndForget(async () => {\n        const syncEngine = await getSyncEngine(client);\n        return syncEngineRegisterPendingWritesCallback(syncEngine, deferred);\n    });\n    return deferred.promise;\n}\nfunction firestoreClientListen(client, query, options, observer) {\n    const wrappedObserver = new AsyncObserver(observer);\n    const listener = new QueryListener(query, wrappedObserver, options);\n    client.asyncQueue.enqueueAndForget(async () => {\n        const eventManager = await getEventManager(client);\n        return eventManagerListen(eventManager, listener);\n    });\n    return () => {\n        wrappedObserver.mute();\n        client.asyncQueue.enqueueAndForget(async () => {\n            const eventManager = await getEventManager(client);\n            return eventManagerUnlisten(eventManager, listener);\n        });\n    };\n}\nfunction firestoreClientGetDocumentFromLocalCache(client, docKey) {\n    const deferred = new Deferred();\n    client.asyncQueue.enqueueAndForget(async () => {\n        const localStore = await getLocalStore(client);\n        return readDocumentFromCache(localStore, docKey, deferred);\n    });\n    return deferred.promise;\n}\nfunction firestoreClientGetDocumentViaSnapshotListener(client, key, options = {}) {\n    const deferred = new Deferred();\n    client.asyncQueue.enqueueAndForget(async () => {\n        const eventManager = await getEventManager(client);\n        return readDocumentViaSnapshotListener(eventManager, client.asyncQueue, key, options, deferred);\n    });\n    return deferred.promise;\n}\nfunction firestoreClientGetDocumentsFromLocalCache(client, query) {\n    const deferred = new Deferred();\n    client.asyncQueue.enqueueAndForget(async () => {\n        const localStore = await getLocalStore(client);\n        return executeQueryFromCache(localStore, query, deferred);\n    });\n    return deferred.promise;\n}\nfunction firestoreClientGetDocumentsViaSnapshotListener(client, query, options = {}) {\n    const deferred = new Deferred();\n    client.asyncQueue.enqueueAndForget(async () => {\n        const eventManager = await getEventManager(client);\n        return executeQueryViaSnapshotListener(eventManager, client.asyncQueue, query, options, deferred);\n    });\n    return deferred.promise;\n}\nfunction firestoreClientRunAggregateQuery(client, query, aggregates) {\n    const deferred = new Deferred();\n    client.asyncQueue.enqueueAndForget(async () => {\n        // Implement and call executeAggregateQueryViaSnapshotListener, similar\n        // to the implementation in firestoreClientGetDocumentsViaSnapshotListener\n        // above\n        try {\n            // TODO(b/277628384): check `canUseNetwork()` and handle multi-tab.\n            const datastore = await getDatastore(client);\n            deferred.resolve(invokeRunAggregationQueryRpc(datastore, query, aggregates));\n        }\n        catch (e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n}\nfunction firestoreClientWrite(client, mutations) {\n    const deferred = new Deferred();\n    client.asyncQueue.enqueueAndForget(async () => {\n        const syncEngine = await getSyncEngine(client);\n        return syncEngineWrite(syncEngine, mutations, deferred);\n    });\n    return deferred.promise;\n}\nfunction firestoreClientAddSnapshotsInSyncListener(client, observer) {\n    const wrappedObserver = new AsyncObserver(observer);\n    client.asyncQueue.enqueueAndForget(async () => {\n        const eventManager = await getEventManager(client);\n        return addSnapshotsInSyncListener(eventManager, wrappedObserver);\n    });\n    return () => {\n        wrappedObserver.mute();\n        client.asyncQueue.enqueueAndForget(async () => {\n            const eventManager = await getEventManager(client);\n            return removeSnapshotsInSyncListener(eventManager, wrappedObserver);\n        });\n    };\n}\n/**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */\nfunction firestoreClientTransaction(client, updateFunction, options) {\n    const deferred = new Deferred();\n    client.asyncQueue.enqueueAndForget(async () => {\n        const datastore = await getDatastore(client);\n        new TransactionRunner(client.asyncQueue, datastore, options, updateFunction, deferred).run();\n    });\n    return deferred.promise;\n}\nasync function readDocumentFromCache(localStore, docKey, result) {\n    try {\n        const document = await localStoreReadDocument(localStore, docKey);\n        if (document.isFoundDocument()) {\n            result.resolve(document);\n        }\n        else if (document.isNoDocument()) {\n            result.resolve(null);\n        }\n        else {\n            result.reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get document from cache. (However, this document may ' +\n                \"exist on the server. Run again without setting 'source' in \" +\n                'the GetOptions to attempt to retrieve the document from the ' +\n                'server.)'));\n        }\n    }\n    catch (e) {\n        const firestoreError = wrapInUserErrorIfRecoverable(e, `Failed to get document '${docKey} from cache`);\n        result.reject(firestoreError);\n    }\n}\n/**\n * Retrieves a latency-compensated document from the backend via a\n * SnapshotListener.\n */\nfunction readDocumentViaSnapshotListener(eventManager, asyncQueue, key, options, result) {\n    const wrappedObserver = new AsyncObserver({\n        next: (snap) => {\n            // Mute and remove query first before passing event to user to avoid\n            // user actions affecting the now stale query.\n            wrappedObserver.mute();\n            asyncQueue.enqueueAndForget(() => eventManagerUnlisten(eventManager, listener));\n            const exists = snap.docs.has(key);\n            if (!exists && snap.fromCache) {\n                // TODO(dimond): If we're online and the document doesn't\n                // exist then we resolve with a doc.exists set to false. If\n                // we're offline however, we reject the Promise in this\n                // case. Two options: 1) Cache the negative response from\n                // the server so we can deliver that even when you're\n                // offline 2) Actually reject the Promise in the online case\n                // if the document doesn't exist.\n                result.reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get document because the client is offline.'));\n            }\n            else if (exists &&\n                snap.fromCache &&\n                options &&\n                options.source === 'server') {\n                result.reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get document from server. (However, this ' +\n                    'document does exist in the local cache. Run again ' +\n                    'without setting source to \"server\" to ' +\n                    'retrieve the cached document.)'));\n            }\n            else {\n                result.resolve(snap);\n            }\n        },\n        error: e => result.reject(e)\n    });\n    const listener = new QueryListener(newQueryForPath(key.path), wrappedObserver, {\n        includeMetadataChanges: true,\n        waitForSyncWhenOnline: true\n    });\n    return eventManagerListen(eventManager, listener);\n}\nasync function executeQueryFromCache(localStore, query, result) {\n    try {\n        const queryResult = await localStoreExecuteQuery(localStore, query, \n        /* usePreviousResults= */ true);\n        const view = new View(query, queryResult.remoteKeys);\n        const viewDocChanges = view.computeDocChanges(queryResult.documents);\n        const viewChange = view.applyChanges(viewDocChanges, \n        /* limboResolutionEnabled= */ false);\n        result.resolve(viewChange.snapshot);\n    }\n    catch (e) {\n        const firestoreError = wrapInUserErrorIfRecoverable(e, `Failed to execute query '${query} against cache`);\n        result.reject(firestoreError);\n    }\n}\n/**\n * Retrieves a latency-compensated query snapshot from the backend via a\n * SnapshotListener.\n */\nfunction executeQueryViaSnapshotListener(eventManager, asyncQueue, query, options, result) {\n    const wrappedObserver = new AsyncObserver({\n        next: snapshot => {\n            // Mute and remove query first before passing event to user to avoid\n            // user actions affecting the now stale query.\n            wrappedObserver.mute();\n            asyncQueue.enqueueAndForget(() => eventManagerUnlisten(eventManager, listener));\n            if (snapshot.fromCache && options.source === 'server') {\n                result.reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get documents from server. (However, these ' +\n                    'documents may exist in the local cache. Run again ' +\n                    'without setting source to \"server\" to ' +\n                    'retrieve the cached documents.)'));\n            }\n            else {\n                result.resolve(snapshot);\n            }\n        },\n        error: e => result.reject(e)\n    });\n    const listener = new QueryListener(query, wrappedObserver, {\n        includeMetadataChanges: true,\n        waitForSyncWhenOnline: true\n    });\n    return eventManagerListen(eventManager, listener);\n}\nfunction firestoreClientLoadBundle(client, databaseId, data, resultTask) {\n    const reader = createBundleReader(data, newSerializer(databaseId));\n    client.asyncQueue.enqueueAndForget(async () => {\n        syncEngineLoadBundle(await getSyncEngine(client), reader, resultTask);\n    });\n}\nfunction firestoreClientGetNamedQuery(client, queryName) {\n    return client.asyncQueue.enqueue(async () => localStoreGetNamedQuery(await getLocalStore(client), queryName));\n}\nfunction createBundleReader(data, serializer) {\n    let content;\n    if (typeof data === 'string') {\n        content = newTextEncoder().encode(data);\n    }\n    else {\n        content = data;\n    }\n    return newBundleReader(toByteStreamReader(content), serializer);\n}\nfunction createBundleReaderSync(bundleData, serializer) {\n    return newBundleReaderSync(bundleData, serializer);\n}\nfunction firestoreClientSetIndexConfiguration(client, indexes) {\n    return client.asyncQueue.enqueue(async () => {\n        return localStoreConfigureFieldIndexes(await getLocalStore(client), indexes);\n    });\n}\nfunction firestoreClientSetPersistentCacheIndexAutoCreationEnabled(client, isEnabled) {\n    return client.asyncQueue.enqueue(async () => {\n        return localStoreSetIndexAutoCreationEnabled(await getLocalStore(client), isEnabled);\n    });\n}\nfunction firestoreClientDeleteAllFieldIndexes(client) {\n    return client.asyncQueue.enqueue(async () => {\n        return localStoreDeleteAllFieldIndexes(await getLocalStore(client));\n    });\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\nfunction longPollingOptionsEqual(options1, options2) {\n    return options1.timeoutSeconds === options2.timeoutSeconds;\n}\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nfunction cloneLongPollingOptions(options) {\n    const clone = {};\n    if (options.timeoutSeconds !== undefined) {\n        clone.timeoutSeconds = options.timeoutSeconds;\n    }\n    return clone;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG$1 = 'ComponentProvider';\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\nconst datastoreInstances = new Map();\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\nfunction removeComponents(firestore) {\n    const datastore = datastoreInstances.get(firestore);\n    if (datastore) {\n        logDebug(LOG_TAG$1, 'Removing Datastore');\n        datastoreInstances.delete(firestore);\n        datastore.terminate();\n    }\n}\nfunction makeDatabaseInfo(databaseId, appId, persistenceKey, settings) {\n    return new DatabaseInfo(databaseId, appId, persistenceKey, settings.host, settings.ssl, settings.experimentalForceLongPolling, settings.experimentalAutoDetectLongPolling, cloneLongPollingOptions(settings.experimentalLongPollingOptions), settings.useFetchStreams, settings.isUsingEmulator);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// settings() defaults:\nconst DEFAULT_HOST = 'firestore.googleapis.com';\nconst DEFAULT_SSL = true;\n// The minimum long-polling timeout is hardcoded on the server. The value here\n// should be kept in sync with the value used by the server, as the server will\n// silently ignore a value below the minimum and fall back to the default.\n// Googlers see b/266868871 for relevant discussion.\nconst MIN_LONG_POLLING_TIMEOUT_SECONDS = 5;\n// No maximum long-polling timeout is configured in the server, and defaults to\n// 30 seconds, which is what Watch appears to use.\n// Googlers see b/266868871 for relevant discussion.\nconst MAX_LONG_POLLING_TIMEOUT_SECONDS = 30;\n// Whether long-polling auto-detected is enabled by default.\nconst DEFAULT_AUTO_DETECT_LONG_POLLING = true;\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass FirestoreSettingsImpl {\n    constructor(settings) {\n        var _a, _b;\n        if (settings.host === undefined) {\n            if (settings.ssl !== undefined) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n            }\n            this.host = DEFAULT_HOST;\n            this.ssl = DEFAULT_SSL;\n        }\n        else {\n            this.host = settings.host;\n            this.ssl = (_a = settings.ssl) !== null && _a !== void 0 ? _a : DEFAULT_SSL;\n        }\n        this.isUsingEmulator = settings.emulatorOptions !== undefined;\n        this.credentials = settings.credentials;\n        this.ignoreUndefinedProperties = !!settings.ignoreUndefinedProperties;\n        this.localCache = settings.localCache;\n        if (settings.cacheSizeBytes === undefined) {\n            this.cacheSizeBytes = LRU_DEFAULT_CACHE_SIZE_BYTES;\n        }\n        else {\n            if (settings.cacheSizeBytes !== LRU_COLLECTION_DISABLED &&\n                settings.cacheSizeBytes < LRU_MINIMUM_CACHE_SIZE_BYTES) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `cacheSizeBytes must be at least ${LRU_MINIMUM_CACHE_SIZE_BYTES}`);\n            }\n            else {\n                this.cacheSizeBytes = settings.cacheSizeBytes;\n            }\n        }\n        validateIsNotUsedTogether('experimentalForceLongPolling', settings.experimentalForceLongPolling, 'experimentalAutoDetectLongPolling', settings.experimentalAutoDetectLongPolling);\n        this.experimentalForceLongPolling = !!settings.experimentalForceLongPolling;\n        if (this.experimentalForceLongPolling) {\n            this.experimentalAutoDetectLongPolling = false;\n        }\n        else if (settings.experimentalAutoDetectLongPolling === undefined) {\n            this.experimentalAutoDetectLongPolling = DEFAULT_AUTO_DETECT_LONG_POLLING;\n        }\n        else {\n            // For backwards compatibility, coerce the value to boolean even though\n            // the TypeScript compiler has narrowed the type to boolean already.\n            // noinspection PointlessBooleanExpressionJS\n            this.experimentalAutoDetectLongPolling =\n                !!settings.experimentalAutoDetectLongPolling;\n        }\n        this.experimentalLongPollingOptions = cloneLongPollingOptions((_b = settings.experimentalLongPollingOptions) !== null && _b !== void 0 ? _b : {});\n        validateLongPollingOptions(this.experimentalLongPollingOptions);\n        this.useFetchStreams = !!settings.useFetchStreams;\n    }\n    isEqual(other) {\n        return (this.host === other.host &&\n            this.ssl === other.ssl &&\n            this.credentials === other.credentials &&\n            this.cacheSizeBytes === other.cacheSizeBytes &&\n            this.experimentalForceLongPolling ===\n                other.experimentalForceLongPolling &&\n            this.experimentalAutoDetectLongPolling ===\n                other.experimentalAutoDetectLongPolling &&\n            longPollingOptionsEqual(this.experimentalLongPollingOptions, other.experimentalLongPollingOptions) &&\n            this.ignoreUndefinedProperties === other.ignoreUndefinedProperties &&\n            this.useFetchStreams === other.useFetchStreams);\n    }\n}\nfunction validateLongPollingOptions(options) {\n    if (options.timeoutSeconds !== undefined) {\n        if (isNaN(options.timeoutSeconds)) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `invalid long polling timeout: ` +\n                `${options.timeoutSeconds} (must not be NaN)`);\n        }\n        if (options.timeoutSeconds < MIN_LONG_POLLING_TIMEOUT_SECONDS) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `invalid long polling timeout: ${options.timeoutSeconds} ` +\n                `(minimum allowed value is ${MIN_LONG_POLLING_TIMEOUT_SECONDS})`);\n        }\n        if (options.timeoutSeconds > MAX_LONG_POLLING_TIMEOUT_SECONDS) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `invalid long polling timeout: ${options.timeoutSeconds} ` +\n                `(maximum allowed value is ${MAX_LONG_POLLING_TIMEOUT_SECONDS})`);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nclass Firestore$1 {\n    /** @hideconstructor */\n    constructor(_authCredentials, _appCheckCredentials, _databaseId, _app) {\n        this._authCredentials = _authCredentials;\n        this._appCheckCredentials = _appCheckCredentials;\n        this._databaseId = _databaseId;\n        this._app = _app;\n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = 'firestore-lite';\n        this._persistenceKey = '(lite)';\n        this._settings = new FirestoreSettingsImpl({});\n        this._settingsFrozen = false;\n        this._emulatorOptions = {};\n        // A task that is assigned when the terminate() is invoked and resolved when\n        // all components have shut down. Otherwise, Firestore is not terminated,\n        // which can mean either the FirestoreClient is in the process of starting,\n        // or restarting.\n        this._terminateTask = 'notTerminated';\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */\n    get app() {\n        if (!this._app) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\n                'not available');\n        }\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return this._terminateTask !== 'notTerminated';\n    }\n    _setSettings(settings) {\n        if (this._settingsFrozen) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'Firestore has already been started and its settings can no longer ' +\n                'be changed. You can only modify settings before calling any other ' +\n                'methods on a Firestore object.');\n        }\n        this._settings = new FirestoreSettingsImpl(settings);\n        this._emulatorOptions = settings.emulatorOptions || {};\n        if (settings.credentials !== undefined) {\n            this._authCredentials = makeAuthCredentialsProvider(settings.credentials);\n        }\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _getEmulatorOptions() {\n        return this._emulatorOptions;\n    }\n    _freezeSettings() {\n        this._settingsFrozen = true;\n        return this._settings;\n    }\n    _delete() {\n        // The `_terminateTask` must be assigned future that completes when\n        // terminate is complete. The existence of this future puts SDK in state\n        // that will not accept further API interaction.\n        if (this._terminateTask === 'notTerminated') {\n            this._terminateTask = this._terminate();\n        }\n        return this._terminateTask;\n    }\n    async _restart() {\n        // The `_terminateTask` must equal 'notTerminated' after restart to\n        // signal that client is in a state that accepts API calls.\n        if (this._terminateTask === 'notTerminated') {\n            await this._terminate();\n        }\n        else {\n            this._terminateTask = 'notTerminated';\n        }\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */\n    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n    _terminate() {\n        removeComponents(this);\n        return Promise.resolve();\n    }\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\nfunction connectFirestoreEmulator(firestore, host, port, options = {}) {\n    var _a;\n    firestore = cast(firestore, Firestore$1);\n    const useSsl = isCloudWorkstation(host);\n    const settings = firestore._getSettings();\n    const existingConfig = Object.assign(Object.assign({}, settings), { emulatorOptions: firestore._getEmulatorOptions() });\n    const newHostSetting = `${host}:${port}`;\n    if (useSsl) {\n        void pingServer(`https://${newHostSetting}`);\n        updateEmulatorBanner('Firestore', true);\n    }\n    if (settings.host !== DEFAULT_HOST && settings.host !== newHostSetting) {\n        logWarn('Host has been set in both settings() and connectFirestoreEmulator(), emulator host ' +\n            'will be used.');\n    }\n    const newConfig = Object.assign(Object.assign({}, settings), { host: newHostSetting, ssl: useSsl, emulatorOptions: options });\n    // No-op if the new configuration matches the current configuration. This supports SSR\n    // enviornments which might call `connectFirestoreEmulator` multiple times as a standard practice.\n    if (deepEqual(newConfig, existingConfig)) {\n        return;\n    }\n    firestore._setSettings(newConfig);\n    if (options.mockUserToken) {\n        let token;\n        let user;\n        if (typeof options.mockUserToken === 'string') {\n            token = options.mockUserToken;\n            user = User.MOCK_USER;\n        }\n        else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            token = createMockUserToken(options.mockUserToken, (_a = firestore._app) === null || _a === void 0 ? void 0 : _a.options.projectId);\n            const uid = options.mockUserToken.sub || options.mockUserToken.user_id;\n            if (!uid) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            }\n            user = new User(uid);\n        }\n        firestore._authCredentials = new EmulatorAuthCredentialsProvider(new OAuthToken(token, user));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\nclass Query {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(firestore, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    converter, _query) {\n        this.converter = converter;\n        this._query = _query;\n        /** The type of this Firestore reference. */\n        this.type = 'query';\n        this.firestore = firestore;\n    }\n    withConverter(converter) {\n        return new Query(this.firestore, converter, this._query);\n    }\n}\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass DocumentReference {\n    /** @hideconstructor */\n    constructor(firestore, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    converter, _key) {\n        this.converter = converter;\n        this._key = _key;\n        /** The type of this Firestore reference. */\n        this.type = 'document';\n        this.firestore = firestore;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */\n    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */\n    get parent() {\n        return new CollectionReference(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(converter) {\n        return new DocumentReference(this.firestore, converter, this._key);\n    }\n    /**\n     * Returns a JSON-serializable representation of this `DocumentReference` instance.\n     *\n     * @returns a JSON representation of this object.\n     */\n    toJSON() {\n        return {\n            type: DocumentReference._jsonSchemaVersion,\n            referencePath: this._key.toString()\n        };\n    }\n    static fromJSON(firestore, json, converter) {\n        if (validateJSON(json, DocumentReference._jsonSchema)) {\n            return new DocumentReference(firestore, converter ? converter : null, new DocumentKey(ResourcePath.fromString(json.referencePath)));\n        }\n    }\n}\nDocumentReference._jsonSchemaVersion = 'firestore/documentReference/1.0';\nDocumentReference._jsonSchema = {\n    type: property('string', DocumentReference._jsonSchemaVersion),\n    referencePath: property('string')\n};\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */\nclass CollectionReference extends Query {\n    /** @hideconstructor */\n    constructor(firestore, converter, _path) {\n        super(firestore, converter, newQueryForPath(_path));\n        this._path = _path;\n        /** The type of this Firestore reference. */\n        this.type = 'collection';\n    }\n    /** The collection's identifier. */\n    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */\n    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */\n    get parent() {\n        const parentPath = this._path.popLast();\n        if (parentPath.isEmpty()) {\n            return null;\n        }\n        else {\n            return new DocumentReference(this.firestore, \n            /* converter= */ null, new DocumentKey(parentPath));\n        }\n    }\n    withConverter(converter) {\n        return new CollectionReference(this.firestore, converter, this._path);\n    }\n}\nfunction collection(parent, path, ...pathSegments) {\n    parent = getModularInstance(parent);\n    validateNonEmptyArgument('collection', 'path', path);\n    if (parent instanceof Firestore$1) {\n        const absolutePath = ResourcePath.fromString(path, ...pathSegments);\n        validateCollectionPath(absolutePath);\n        return new CollectionReference(parent, /* converter= */ null, absolutePath);\n    }\n    else {\n        if (!(parent instanceof DocumentReference) &&\n            !(parent instanceof CollectionReference)) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Expected first argument to collection() to be a CollectionReference, ' +\n                'a DocumentReference or FirebaseFirestore');\n        }\n        const absolutePath = parent._path.child(ResourcePath.fromString(path, ...pathSegments));\n        validateCollectionPath(absolutePath);\n        return new CollectionReference(parent.firestore, \n        /* converter= */ null, absolutePath);\n    }\n}\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\nfunction collectionGroup(firestore, collectionId) {\n    firestore = cast(firestore, Firestore$1);\n    validateNonEmptyArgument('collectionGroup', 'collection id', collectionId);\n    if (collectionId.indexOf('/') >= 0) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid collection ID '${collectionId}' passed to function ` +\n            `collectionGroup(). Collection IDs must not contain '/'.`);\n    }\n    return new Query(firestore, \n    /* converter= */ null, newQueryForCollectionGroup(collectionId));\n}\nfunction doc(parent, path, ...pathSegments) {\n    parent = getModularInstance(parent);\n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    if (arguments.length === 1) {\n        path = AutoId.newId();\n    }\n    validateNonEmptyArgument('doc', 'path', path);\n    if (parent instanceof Firestore$1) {\n        const absolutePath = ResourcePath.fromString(path, ...pathSegments);\n        validateDocumentPath(absolutePath);\n        return new DocumentReference(parent, \n        /* converter= */ null, new DocumentKey(absolutePath));\n    }\n    else {\n        if (!(parent instanceof DocumentReference) &&\n            !(parent instanceof CollectionReference)) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Expected first argument to collection() to be a CollectionReference, ' +\n                'a DocumentReference or FirebaseFirestore');\n        }\n        const absolutePath = parent._path.child(ResourcePath.fromString(path, ...pathSegments));\n        validateDocumentPath(absolutePath);\n        return new DocumentReference(parent.firestore, parent instanceof CollectionReference ? parent.converter : null, new DocumentKey(absolutePath));\n    }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction refEqual(left, right) {\n    left = getModularInstance(left);\n    right = getModularInstance(right);\n    if ((left instanceof DocumentReference ||\n        left instanceof CollectionReference) &&\n        (right instanceof DocumentReference || right instanceof CollectionReference)) {\n        return (left.firestore === right.firestore &&\n            left.path === right.path &&\n            left.converter === right.converter);\n    }\n    return false;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nfunction queryEqual(left, right) {\n    left = getModularInstance(left);\n    right = getModularInstance(right);\n    if (left instanceof Query && right instanceof Query) {\n        return (left.firestore === right.firestore &&\n            queryEquals(left._query, right._query) &&\n            left.converter === right.converter);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LOG_TAG = 'AsyncQueue';\nclass AsyncQueueImpl {\n    constructor(tail = Promise.resolve()) {\n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.retryableOps = [];\n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this._isShuttingDown = false;\n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.delayedOperations = [];\n        // visible for testing\n        this.failure = null;\n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.operationInProgress = false;\n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.skipNonRestrictedTasks = false;\n        // List of TimerIds to fast-forward delays for.\n        this.timerIdsToSkip = [];\n        // Backoff timer used to schedule retries for retryable operations\n        this.backoff = new ExponentialBackoff(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */);\n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.visibilityHandler = () => {\n            this.backoff.skipBackoff();\n        };\n        this.tail = tail;\n    }\n    get isShuttingDown() {\n        return this._isShuttingDown;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n    enqueueAndForget(op) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(op);\n    }\n    enqueueAndForgetEvenWhileRestricted(op) {\n        this.verifyNotFailed();\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueueInternal(op);\n    }\n    enterRestrictedMode(purgeExistingTasks) {\n        if (!this._isShuttingDown) {\n            this._isShuttingDown = true;\n            this.skipNonRestrictedTasks = purgeExistingTasks || false;\n        }\n    }\n    enqueue(op) {\n        this.verifyNotFailed();\n        if (this._isShuttingDown) {\n            // Return a Promise which never resolves.\n            return new Promise(() => { });\n        }\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n        const task = new Deferred();\n        return this.enqueueInternal(() => {\n            if (this._isShuttingDown && this.skipNonRestrictedTasks) {\n                // We do not resolve 'task'\n                return Promise.resolve();\n            }\n            op().then(task.resolve, task.reject);\n            return task.promise;\n        }).then(() => task.promise);\n    }\n    enqueueRetryable(op) {\n        this.enqueueAndForget(() => {\n            this.retryableOps.push(op);\n            return this.retryNextOp();\n        });\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n    async retryNextOp() {\n        if (this.retryableOps.length === 0) {\n            return;\n        }\n        try {\n            await this.retryableOps[0]();\n            this.retryableOps.shift();\n            this.backoff.reset();\n        }\n        catch (e) {\n            if (isIndexedDbTransactionError(e)) {\n                logDebug(LOG_TAG, 'Operation failed with retryable error: ' + e);\n            }\n            else {\n                throw e; // Failure will be handled by AsyncQueue\n            }\n        }\n        if (this.retryableOps.length > 0) {\n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.backoff.backoffAndRun(() => this.retryNextOp());\n        }\n    }\n    enqueueInternal(op) {\n        const newTail = this.tail.then(() => {\n            this.operationInProgress = true;\n            return op()\n                .catch((error) => {\n                this.failure = error;\n                this.operationInProgress = false;\n                const message = getMessageOrStack(error);\n                logError('INTERNAL UNHANDLED ERROR: ', message);\n                // Re-throw the error so that this.tail becomes a rejected Promise and\n                // all further attempts to chain (via .then) will just short-circuit\n                // and return the rejected Promise.\n                throw error;\n            })\n                .then(result => {\n                this.operationInProgress = false;\n                return result;\n            });\n        });\n        this.tail = newTail;\n        return newTail;\n    }\n    enqueueAfterDelay(timerId, delayMs, op) {\n        this.verifyNotFailed();\n        // Fast-forward delays for timerIds that have been overridden.\n        if (this.timerIdsToSkip.indexOf(timerId) > -1) {\n            delayMs = 0;\n        }\n        const delayedOp = DelayedOperation.createAndSchedule(this, timerId, delayMs, op, removedOp => this.removeDelayedOperation(removedOp));\n        this.delayedOperations.push(delayedOp);\n        return delayedOp;\n    }\n    verifyNotFailed() {\n        if (this.failure) {\n            fail(0xb815, {\n                messageOrStack: getMessageOrStack(this.failure)\n            });\n        }\n    }\n    verifyOperationInProgress() {\n    }\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n    async drain() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let currentTail;\n        do {\n            currentTail = this.tail;\n            await currentTail;\n        } while (currentTail !== this.tail);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n    containsDelayedOperation(timerId) {\n        for (const op of this.delayedOperations) {\n            if (op.timerId === timerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n    runAllDelayedOperationsUntil(lastTimerId) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.drain().then(() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n            this.delayedOperations.sort((a, b) => a.targetTimeMs - b.targetTimeMs);\n            for (const op of this.delayedOperations) {\n                op.skipDelay();\n                if (lastTimerId !== \"all\" /* TimerId.All */ && op.timerId === lastTimerId) {\n                    break;\n                }\n            }\n            return this.drain();\n        });\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n    skipDelaysForTimerId(timerId) {\n        this.timerIdsToSkip.push(timerId);\n    }\n    /** Called once a DelayedOperation is run or canceled. */\n    removeDelayedOperation(op) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const index = this.delayedOperations.indexOf(op);\n        /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n        this.delayedOperations.splice(index, 1);\n    }\n}\n/**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\nfunction getMessageOrStack(error) {\n    let message = error.message || '';\n    if (error.stack) {\n        if (error.stack.includes(error.message)) {\n            message = error.stack;\n        }\n        else {\n            message = error.message + '\\n' + error.stack;\n        }\n    }\n    return message;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents the task of loading a Firestore bundle. It provides progress of bundle\n * loading, as well as task completion and error events.\n *\n * The API is compatible with `Promise<LoadBundleTaskProgress>`.\n */\nclass LoadBundleTask {\n    constructor() {\n        this._progressObserver = {};\n        this._taskCompletionResolver = new Deferred();\n        this._lastProgress = {\n            taskState: 'Running',\n            totalBytes: 0,\n            totalDocuments: 0,\n            bytesLoaded: 0,\n            documentsLoaded: 0\n        };\n    }\n    /**\n     * Registers functions to listen to bundle loading progress events.\n     * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur\n     *   each time a Firestore document is loaded from the bundle.\n     * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the\n     *   error, and there should be no more updates after this.\n     * @param complete - Called when the loading task is complete.\n     */\n    onProgress(next, error, complete) {\n        this._progressObserver = {\n            next,\n            error,\n            complete\n        };\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.\n     *\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */\n    catch(onRejected) {\n        return this._taskCompletionResolver.promise.catch(onRejected);\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.\n     *\n     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.\n     *   The update will always have its `taskState` set to `\"Success\"`.\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */\n    then(onFulfilled, onRejected) {\n        return this._taskCompletionResolver.promise.then(onFulfilled, onRejected);\n    }\n    /**\n     * Notifies all observers that bundle loading has completed, with a provided\n     * `LoadBundleTaskProgress` object.\n     *\n     * @private\n     */\n    _completeWith(progress) {\n        this._updateProgress(progress);\n        if (this._progressObserver.complete) {\n            this._progressObserver.complete();\n        }\n        this._taskCompletionResolver.resolve(progress);\n    }\n    /**\n     * Notifies all observers that bundle loading has failed, with a provided\n     * `Error` as the reason.\n     *\n     * @private\n     */\n    _failWith(error) {\n        this._lastProgress.taskState = 'Error';\n        if (this._progressObserver.next) {\n            this._progressObserver.next(this._lastProgress);\n        }\n        if (this._progressObserver.error) {\n            this._progressObserver.error(error);\n        }\n        this._taskCompletionResolver.reject(error);\n    }\n    /**\n     * Notifies a progress update of loading a bundle.\n     * @param progress - The new progress.\n     *\n     * @private\n     */\n    _updateProgress(progress) {\n        this._lastProgress = progress;\n        if (this._progressObserver.next) {\n            this._progressObserver.next(progress);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Constant used to indicate the LRU garbage collection should be disabled.\n * Set this value as the `cacheSizeBytes` on the settings passed to the\n * {@link Firestore} instance.\n */\nconst CACHE_SIZE_UNLIMITED = LRU_COLLECTION_DISABLED;\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nclass Firestore extends Firestore$1 {\n    /** @hideconstructor */\n    constructor(authCredentialsProvider, appCheckCredentialsProvider, databaseId, app) {\n        super(authCredentialsProvider, appCheckCredentialsProvider, databaseId, app);\n        /**\n         * Whether it's a {@link Firestore} or Firestore Lite instance.\n         */\n        this.type = 'firestore';\n        this._queue = new AsyncQueueImpl();\n        this._persistenceKey = (app === null || app === void 0 ? void 0 : app.name) || '[DEFAULT]';\n    }\n    async _terminate() {\n        if (this._firestoreClient) {\n            const terminate = this._firestoreClient.terminate();\n            this._queue = new AsyncQueueImpl(terminate);\n            this._firestoreClient = undefined;\n            await terminate;\n        }\n    }\n}\n/**\n * Initializes a new instance of {@link Firestore} with the provided settings.\n * Can only be called before any other function, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will\n * be associated.\n * @param settings - A settings object to configure the {@link Firestore} instance.\n * @param databaseId - The name of the database.\n * @returns A newly initialized {@link Firestore} instance.\n */\nfunction initializeFirestore(app, settings, databaseId) {\n    if (!databaseId) {\n        databaseId = DEFAULT_DATABASE_NAME;\n    }\n    const provider = _getProvider(app, 'firestore');\n    if (provider.isInitialized(databaseId)) {\n        const existingInstance = provider.getImmediate({\n            identifier: databaseId\n        });\n        const initialSettings = provider.getOptions(databaseId);\n        if (deepEqual(initialSettings, settings)) {\n            return existingInstance;\n        }\n        else {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'initializeFirestore() has already been called with ' +\n                'different options. To avoid this error, call initializeFirestore() with the ' +\n                'same options as when it was originally called, or call getFirestore() to return the' +\n                ' already initialized instance.');\n        }\n    }\n    if (settings.cacheSizeBytes !== undefined &&\n        settings.localCache !== undefined) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `cache and cacheSizeBytes cannot be specified at the same time as cacheSizeBytes will` +\n            `be deprecated. Instead, specify the cache size in the cache object`);\n    }\n    if (settings.cacheSizeBytes !== undefined &&\n        settings.cacheSizeBytes !== CACHE_SIZE_UNLIMITED &&\n        settings.cacheSizeBytes < LRU_MINIMUM_CACHE_SIZE_BYTES) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `cacheSizeBytes must be at least ${LRU_MINIMUM_CACHE_SIZE_BYTES}`);\n    }\n    // Workaround to get cookies in Firebase Studio\n    if (settings.host && isCloudWorkstation(settings.host)) {\n        void pingServer(settings.host);\n    }\n    return provider.initialize({\n        options: settings,\n        instanceIdentifier: databaseId\n    });\n}\nfunction getFirestore(appOrDatabaseId, optionalDatabaseId) {\n    const app = typeof appOrDatabaseId === 'object' ? appOrDatabaseId : getApp();\n    const databaseId = typeof appOrDatabaseId === 'string'\n        ? appOrDatabaseId\n        : optionalDatabaseId || DEFAULT_DATABASE_NAME;\n    const db = _getProvider(app, 'firestore').getImmediate({\n        identifier: databaseId\n    });\n    if (!db._initialized) {\n        const emulator = getDefaultEmulatorHostnameAndPort('firestore');\n        if (emulator) {\n            connectFirestoreEmulator(db, ...emulator);\n        }\n    }\n    return db;\n}\n/**\n * @internal\n */\nfunction ensureFirestoreConfigured(firestore) {\n    if (firestore._terminated) {\n        throw new FirestoreError(Code.FAILED_PRECONDITION, 'The client has already been terminated.');\n    }\n    if (!firestore._firestoreClient) {\n        configureFirestore(firestore);\n    }\n    return firestore._firestoreClient;\n}\nfunction configureFirestore(firestore) {\n    var _a, _b, _c;\n    const settings = firestore._freezeSettings();\n    const databaseInfo = makeDatabaseInfo(firestore._databaseId, ((_a = firestore._app) === null || _a === void 0 ? void 0 : _a.options.appId) || '', firestore._persistenceKey, settings);\n    if (!firestore._componentsProvider) {\n        if (((_b = settings.localCache) === null || _b === void 0 ? void 0 : _b._offlineComponentProvider) &&\n            ((_c = settings.localCache) === null || _c === void 0 ? void 0 : _c._onlineComponentProvider)) {\n            firestore._componentsProvider = {\n                _offline: settings.localCache._offlineComponentProvider,\n                _online: settings.localCache._onlineComponentProvider\n            };\n        }\n    }\n    firestore._firestoreClient = new FirestoreClient(firestore._authCredentials, firestore._appCheckCredentials, firestore._queue, databaseInfo, firestore._componentsProvider &&\n        buildComponentProvider(firestore._componentsProvider));\n}\nfunction buildComponentProvider(componentsProvider) {\n    const online = componentsProvider === null || componentsProvider === void 0 ? void 0 : componentsProvider._online.build();\n    return {\n        _offline: componentsProvider === null || componentsProvider === void 0 ? void 0 : componentsProvider._offline.build(online),\n        _online: online\n    };\n}\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * On failure, `enableIndexedDbPersistence()` will reject the promise or\n * throw an exception. There are several reasons why this can fail, which can be\n * identified by the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline persistence\n *     implementation.\n *\n * Note that even after a failure, the {@link Firestore} instance will remain\n * usable, however offline persistence will be disabled.\n *\n * Note: `enableIndexedDbPersistence()` must be called before any other functions\n * (other than {@link initializeFirestore}, {@link (getFirestore:1)} or\n * {@link clearIndexedDbPersistence}.\n *\n * Persistence cannot be used in a Node.js environment.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A `Promise` that represents successfully enabling persistent storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.localCache` to an instance of `PersistentLocalCache` to\n * turn on IndexedDb cache. Calling this function when `FirestoreSettings.localCache`\n * is already specified will throw an exception.\n */\nfunction enableIndexedDbPersistence(firestore, persistenceSettings) {\n    logWarn('enableIndexedDbPersistence() will be deprecated in the future, ' +\n        'you can use `FirestoreSettings.cache` instead.');\n    const settings = firestore._freezeSettings();\n    setPersistenceProviders(firestore, OnlineComponentProvider.provider, {\n        build: (onlineComponents) => new IndexedDbOfflineComponentProvider(onlineComponents, settings.cacheSizeBytes, persistenceSettings === null || persistenceSettings === void 0 ? void 0 : persistenceSettings.forceOwnership)\n    });\n    return Promise.resolve();\n}\n/**\n * Attempts to enable multi-tab persistent storage, if possible. If enabled\n * across all tabs, all operations share access to local persistence, including\n * shared execution of queries and latency-compensated local document updates\n * across all connected instances.\n *\n * On failure, `enableMultiTabIndexedDbPersistence()` will reject the promise or\n * throw an exception. There are several reasons why this can fail, which can be\n * identified by the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab and\n *     multi-tab is not enabled.\n *   * unimplemented: The browser is incompatible with the offline persistence\n *     implementation.\n *\n * Note that even after a failure, the {@link Firestore} instance will remain\n * usable, however offline persistence will be disabled.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @returns A `Promise` that represents successfully enabling persistent\n * storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.localCache` to an instance of `PersistentLocalCache` to\n * turn on indexeddb cache. Calling this function when `FirestoreSettings.localCache`\n * is already specified will throw an exception.\n */\nasync function enableMultiTabIndexedDbPersistence(firestore) {\n    logWarn('enableMultiTabIndexedDbPersistence() will be deprecated in the future, ' +\n        'you can use `FirestoreSettings.cache` instead.');\n    const settings = firestore._freezeSettings();\n    setPersistenceProviders(firestore, OnlineComponentProvider.provider, {\n        build: (onlineComponents) => new MultiTabOfflineComponentProvider(onlineComponents, settings.cacheSizeBytes)\n    });\n}\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */\nfunction setPersistenceProviders(firestore, onlineComponentProvider, offlineComponentProvider) {\n    firestore = cast(firestore, Firestore);\n    if (firestore._firestoreClient || firestore._terminated) {\n        throw new FirestoreError(Code.FAILED_PRECONDITION, 'Firestore has already been started and persistence can no longer be ' +\n            'enabled. You can only enable persistence before calling any other ' +\n            'methods on a Firestore object.');\n    }\n    if (firestore._componentsProvider || firestore._getSettings().localCache) {\n        throw new FirestoreError(Code.FAILED_PRECONDITION, 'SDK cache is already specified.');\n    }\n    firestore._componentsProvider = {\n        _online: onlineComponentProvider,\n        _offline: offlineComponentProvider\n    };\n    configureFirestore(firestore);\n}\n/**\n * Clears the persistent storage. This includes pending writes and cached\n * documents.\n *\n * Must be called while the {@link Firestore} instance is not started (after the app is\n * terminated or when the app is first initialized). On startup, this function\n * must be called before other functions (other than {@link\n * initializeFirestore} or {@link (getFirestore:1)})). If the {@link Firestore}\n * instance is still running, the promise will be rejected with the error code\n * of `failed-precondition`.\n *\n * Note: `clearIndexedDbPersistence()` is primarily intended to help write\n * reliable tests that use Cloud Firestore. It uses an efficient mechanism for\n * dropping existing data but does not attempt to securely overwrite or\n * otherwise make cached data unrecoverable. For applications that are sensitive\n * to the disclosure of cached data in between user sessions, we strongly\n * recommend not enabling persistence at all.\n *\n * @param firestore - The {@link Firestore} instance to clear persistence for.\n * @returns A `Promise` that is resolved when the persistent storage is\n * cleared. Otherwise, the promise is rejected with an error.\n */\nfunction clearIndexedDbPersistence(firestore) {\n    if (firestore._initialized && !firestore._terminated) {\n        throw new FirestoreError(Code.FAILED_PRECONDITION, 'Persistence can only be cleared before a Firestore instance is ' +\n            'initialized or after it is terminated.');\n    }\n    const deferred = new Deferred();\n    firestore._queue.enqueueAndForgetEvenWhileRestricted(async () => {\n        try {\n            await indexedDbClearPersistence(indexedDbStoragePrefix(firestore._databaseId, firestore._persistenceKey));\n            deferred.resolve();\n        }\n        catch (e) {\n            deferred.reject(e);\n        }\n    });\n    return deferred.promise;\n}\n/**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned promise resolves immediately if there are no outstanding writes.\n * Otherwise, the promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` promises are rejected during user\n * changes.\n *\n * @returns A `Promise` which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */\nfunction waitForPendingWrites(firestore) {\n    firestore = cast(firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientWaitForPendingWrites(client);\n}\n/**\n * Re-enables use of the network for this {@link Firestore} instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A `Promise` that is resolved once the network has been enabled.\n */\nfunction enableNetwork(firestore) {\n    firestore = cast(firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientEnableNetwork(client);\n}\n/**\n * Disables network usage for this instance. It can be re-enabled via {@link\n * enableNetwork}. While the network is disabled, any snapshot listeners,\n * `getDoc()` or `getDocs()` calls will return results from cache, and any write\n * operations will be queued until the network is restored.\n *\n * @returns A `Promise` that is resolved once the network has been disabled.\n */\nfunction disableNetwork(firestore) {\n    firestore = cast(firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientDisableNetwork(client);\n}\n/**\n * Terminates the provided {@link Firestore} instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` function\n * may be used. Any other function will throw a `FirestoreError`.\n *\n * To restart after termination, create a new instance of FirebaseFirestore with\n * {@link (getFirestore:1)}.\n *\n * Termination does not cancel any pending writes, and any promises that are\n * awaiting a response from the server will not be resolved. If you have\n * persistence enabled, the next time you start this instance, it will resume\n * sending these writes to the server.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all\n * of its resources or in combination with `clearIndexedDbPersistence()` to\n * ensure that all local state is destroyed between test runs.\n *\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nfunction terminate(firestore) {\n    _removeServiceInstance(firestore.app, 'firestore', firestore._databaseId.database);\n    return firestore._delete();\n}\n/**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The {@link Firestore} instance to load bundles for.\n * @param bundleData - An object representing the bundle to be loaded. Valid\n * objects are `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @returns A `LoadBundleTask` object, which notifies callers with progress\n * updates, and completion or error events. It can be used as a\n * `Promise<LoadBundleTaskProgress>`.\n */\nfunction loadBundle(firestore, bundleData) {\n    firestore = cast(firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const resultTask = new LoadBundleTask();\n    firestoreClientLoadBundle(client, firestore._databaseId, bundleData, resultTask);\n    return resultTask;\n}\n/**\n * Reads a Firestore {@link Query} from local cache, identified by the given\n * name.\n *\n * The named queries are packaged  into bundles on the server side (along\n * with resulting documents), and loaded to local cache using `loadBundle`. Once\n * in local cache, use this method to extract a {@link Query} by name.\n *\n * @param firestore - The {@link Firestore} instance to read the query from.\n * @param name - The name of the query.\n * @returns A `Promise` that is resolved with the Query or `null`.\n */\nfunction namedQuery(firestore, name) {\n    firestore = cast(firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientGetNamedQuery(client, name).then(namedQuery => {\n        if (!namedQuery) {\n            return null;\n        }\n        return new Query(firestore, null, namedQuery.query);\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction registerFirestore(variant, useFetchStreams = true) {\n    setSDKVersion(SDK_VERSION$1);\n    _registerComponent(new Component('firestore', (container, { instanceIdentifier: databaseId, options: settings }) => {\n        const app = container.getProvider('app').getImmediate();\n        const firestoreInstance = new Firestore(new FirebaseAuthCredentialsProvider(container.getProvider('auth-internal')), new FirebaseAppCheckTokenProvider(app, container.getProvider('app-check-internal')), databaseIdFromApp(app, databaseId), app);\n        settings = Object.assign({ useFetchStreams }, settings);\n        firestoreInstance._setSettings(settings);\n        return firestoreInstance;\n    }, 'PUBLIC').setMultipleInstances(true));\n    registerVersion(name$1, version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n    registerVersion(name$1, version$1, 'esm2017');\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */\nclass AggregateImpl {\n    constructor(alias, aggregateType, fieldPath) {\n        this.alias = alias;\n        this.aggregateType = aggregateType;\n        this.fieldPath = fieldPath;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass AggregateField {\n    /**\n     * Create a new AggregateField<T>\n     * @param aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(aggregateType = 'count', _internalFieldPath) {\n        this._internalFieldPath = _internalFieldPath;\n        /** A type string to uniquely identify instances of this class. */\n        this.type = 'AggregateField';\n        this.aggregateType = aggregateType;\n    }\n}\n/**\n * The results of executing an aggregation query.\n */\nclass AggregateQuerySnapshot {\n    /** @hideconstructor */\n    constructor(query, _userDataWriter, _data) {\n        this._userDataWriter = _userDataWriter;\n        this._data = _data;\n        /** A type string to uniquely identify instances of this class. */\n        this.type = 'AggregateQuerySnapshot';\n        this.query = query;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */\n    data() {\n        return this._userDataWriter.convertObjectMap(this._data);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */\nclass Bytes {\n    /** @hideconstructor */\n    constructor(byteString) {\n        this._byteString = byteString;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */\n    static fromBase64String(base64) {\n        try {\n            return new Bytes(ByteString.fromBase64String(base64));\n        }\n        catch (e) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Failed to construct data from Base64 string: ' + e);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n    static fromUint8Array(array) {\n        return new Bytes(ByteString.fromUint8Array(array));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n    toString() {\n        return 'Bytes(base64: ' + this.toBase64() + ')';\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n    isEqual(other) {\n        return this._byteString.isEqual(other._byteString);\n    }\n    /**\n     * Returns a JSON-serializable representation of this `Bytes` instance.\n     *\n     * @returns a JSON representation of this object.\n     */\n    toJSON() {\n        return {\n            type: Bytes._jsonSchemaVersion,\n            bytes: this.toBase64()\n        };\n    }\n    /**\n     * Builds a `Bytes` instance from a JSON object created by {@link Bytes.toJSON}.\n     *\n     * @param json a JSON object represention of a `Bytes` instance\n     * @returns an instance of {@link Bytes} if the JSON object could be parsed. Throws a\n     * {@link FirestoreError} if an error occurs.\n     */\n    static fromJSON(json) {\n        if (validateJSON(json, Bytes._jsonSchema)) {\n            return Bytes.fromBase64String(json.bytes);\n        }\n    }\n}\nBytes._jsonSchemaVersion = 'firestore/bytes/1.0';\nBytes._jsonSchema = {\n    type: property('string', Bytes._jsonSchemaVersion),\n    bytes: property('string')\n};\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nclass FieldPath {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...fieldNames) {\n        for (let i = 0; i < fieldNames.length; ++i) {\n            if (fieldNames[i].length === 0) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid field name at argument $(i + 1). ` +\n                    'Field names must not be empty.');\n            }\n        }\n        this._internalPath = new FieldPath$1(fieldNames);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */\n    isEqual(other) {\n        return this._internalPath.isEqual(other._internalPath);\n    }\n}\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\nfunction documentId() {\n    return new FieldPath(DOCUMENT_KEY_NAME);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\nclass FieldValue {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(_methodName) {\n        this._methodName = _methodName;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\nclass GeoPoint {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(latitude, longitude) {\n        if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Latitude must be a number between -90 and 90, but was: ' + latitude);\n        }\n        if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Longitude must be a number between -180 and 180, but was: ' + longitude);\n        }\n        this._lat = latitude;\n        this._long = longitude;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */\n    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */\n    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n    isEqual(other) {\n        return this._lat === other._lat && this._long === other._long;\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n    _compareTo(other) {\n        return (primitiveComparator(this._lat, other._lat) ||\n            primitiveComparator(this._long, other._long));\n    }\n    /**\n     * Returns a JSON-serializable representation of this `GeoPoint` instance.\n     *\n     * @returns a JSON representation of this object.\n     */\n    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long,\n            type: GeoPoint._jsonSchemaVersion\n        };\n    }\n    /**\n     * Builds a `GeoPoint` instance from a JSON object created by {@link GeoPoint.toJSON}.\n     *\n     * @param json a JSON object represention of a `GeoPoint` instance\n     * @returns an instance of {@link GeoPoint} if the JSON object could be parsed. Throws a\n     * {@link FirestoreError} if an error occurs.\n     */\n    static fromJSON(json) {\n        if (validateJSON(json, GeoPoint._jsonSchema)) {\n            return new GeoPoint(json.latitude, json.longitude);\n        }\n    }\n}\nGeoPoint._jsonSchemaVersion = 'firestore/geoPoint/1.0';\nGeoPoint._jsonSchema = {\n    type: property('string', GeoPoint._jsonSchemaVersion),\n    latitude: property('number'),\n    longitude: property('number')\n};\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a vector type in Firestore documents.\n * Create an instance with <code>{@link vector}</code>.\n *\n * @class VectorValue\n */\nclass VectorValue {\n    /**\n     * @private\n     * @internal\n     */\n    constructor(values) {\n        // Making a copy of the parameter.\n        this._values = (values || []).map(n => n);\n    }\n    /**\n     * Returns a copy of the raw number array form of the vector.\n     */\n    toArray() {\n        return this._values.map(n => n);\n    }\n    /**\n     * Returns `true` if the two `VectorValue` values have the same raw number arrays, returns `false` otherwise.\n     */\n    isEqual(other) {\n        return isPrimitiveArrayEqual(this._values, other._values);\n    }\n    /**\n     * Returns a JSON-serializable representation of this `VectorValue` instance.\n     *\n     * @returns a JSON representation of this object.\n     */\n    toJSON() {\n        return {\n            type: VectorValue._jsonSchemaVersion,\n            vectorValues: this._values\n        };\n    }\n    /**\n     * Builds a `VectorValue` instance from a JSON object created by {@link VectorValue.toJSON}.\n     *\n     * @param json a JSON object represention of a `VectorValue` instance.\n     * @returns an instance of {@link VectorValue} if the JSON object could be parsed. Throws a\n     * {@link FirestoreError} if an error occurs.\n     */\n    static fromJSON(json) {\n        if (validateJSON(json, VectorValue._jsonSchema)) {\n            if (Array.isArray(json.vectorValues) &&\n                json.vectorValues.every(element => typeof element === 'number')) {\n                return new VectorValue(json.vectorValues);\n            }\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Expected 'vectorValues' field to be a number array\");\n        }\n    }\n}\nVectorValue._jsonSchemaVersion = 'firestore/vectorValue/1.0';\nVectorValue._jsonSchema = {\n    type: property('string', VectorValue._jsonSchemaVersion),\n    vectorValues: property('object')\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst RESERVED_FIELD_REGEX = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\nclass ParsedSetData {\n    constructor(data, fieldMask, fieldTransforms) {\n        this.data = data;\n        this.fieldMask = fieldMask;\n        this.fieldTransforms = fieldTransforms;\n    }\n    toMutation(key, precondition) {\n        if (this.fieldMask !== null) {\n            return new PatchMutation(key, this.data, this.fieldMask, precondition, this.fieldTransforms);\n        }\n        else {\n            return new SetMutation(key, this.data, precondition, this.fieldTransforms);\n        }\n    }\n}\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nclass ParsedUpdateData {\n    constructor(data, \n    // The fieldMask does not include document transforms.\n    fieldMask, fieldTransforms) {\n        this.data = data;\n        this.fieldMask = fieldMask;\n        this.fieldTransforms = fieldTransforms;\n    }\n    toMutation(key, precondition) {\n        return new PatchMutation(key, this.data, this.fieldMask, precondition, this.fieldTransforms);\n    }\n}\nfunction isWrite(dataSource) {\n    switch (dataSource) {\n        case 0 /* UserDataSource.Set */: // fall through\n        case 2 /* UserDataSource.MergeSet */: // fall through\n        case 1 /* UserDataSource.Update */:\n            return true;\n        case 3 /* UserDataSource.Argument */:\n        case 4 /* UserDataSource.ArrayArgument */:\n            return false;\n        default:\n            throw fail(0x9c4b, {\n                dataSource\n            });\n    }\n}\n/** A \"context\" object passed around while parsing user data. */\nclass ParseContextImpl {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(settings, databaseId, serializer, ignoreUndefinedProperties, fieldTransforms, fieldMask) {\n        this.settings = settings;\n        this.databaseId = databaseId;\n        this.serializer = serializer;\n        this.ignoreUndefinedProperties = ignoreUndefinedProperties;\n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        if (fieldTransforms === undefined) {\n            this.validatePath();\n        }\n        this.fieldTransforms = fieldTransforms || [];\n        this.fieldMask = fieldMask || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get dataSource() {\n        return this.settings.dataSource;\n    }\n    /** Returns a new context with the specified settings overwritten. */\n    contextWith(configuration) {\n        return new ParseContextImpl(Object.assign(Object.assign({}, this.settings), configuration), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    childContextForField(field) {\n        var _a;\n        const childPath = (_a = this.path) === null || _a === void 0 ? void 0 : _a.child(field);\n        const context = this.contextWith({ path: childPath, arrayElement: false });\n        context.validatePathSegment(field);\n        return context;\n    }\n    childContextForFieldPath(field) {\n        var _a;\n        const childPath = (_a = this.path) === null || _a === void 0 ? void 0 : _a.child(field);\n        const context = this.contextWith({ path: childPath, arrayElement: false });\n        context.validatePath();\n        return context;\n    }\n    childContextForArray(index) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.contextWith({ path: undefined, arrayElement: true });\n    }\n    createError(reason) {\n        return createError(reason, this.settings.methodName, this.settings.hasConverter || false, this.path, this.settings.targetDoc);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n    contains(fieldPath) {\n        return (this.fieldMask.find(field => fieldPath.isPrefixOf(field)) !== undefined ||\n            this.fieldTransforms.find(transform => fieldPath.isPrefixOf(transform.field)) !== undefined);\n    }\n    validatePath() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (!this.path) {\n            return;\n        }\n        for (let i = 0; i < this.path.length; i++) {\n            this.validatePathSegment(this.path.get(i));\n        }\n    }\n    validatePathSegment(segment) {\n        if (segment.length === 0) {\n            throw this.createError('Document fields must not be empty');\n        }\n        if (isWrite(this.dataSource) && RESERVED_FIELD_REGEX.test(segment)) {\n            throw this.createError('Document fields cannot begin and end with \"__\"');\n        }\n    }\n}\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nclass UserDataReader {\n    constructor(databaseId, ignoreUndefinedProperties, serializer) {\n        this.databaseId = databaseId;\n        this.ignoreUndefinedProperties = ignoreUndefinedProperties;\n        this.serializer = serializer || newSerializer(databaseId);\n    }\n    /** Creates a new top-level parse context. */\n    createContext(dataSource, methodName, targetDoc, hasConverter = false) {\n        return new ParseContextImpl({\n            dataSource,\n            methodName,\n            targetDoc,\n            path: FieldPath$1.emptyPath(),\n            arrayElement: false,\n            hasConverter\n        }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n    }\n}\nfunction newUserDataReader(firestore) {\n    const settings = firestore._freezeSettings();\n    const serializer = newSerializer(firestore._databaseId);\n    return new UserDataReader(firestore._databaseId, !!settings.ignoreUndefinedProperties, serializer);\n}\n/** Parse document data from a set() call. */\nfunction parseSetData(userDataReader, methodName, targetDoc, input, hasConverter, options = {}) {\n    const context = userDataReader.createContext(options.merge || options.mergeFields\n        ? 2 /* UserDataSource.MergeSet */\n        : 0 /* UserDataSource.Set */, methodName, targetDoc, hasConverter);\n    validatePlainObject('Data must be an object, but it was:', context, input);\n    const updateData = parseObject(input, context);\n    let fieldMask;\n    let fieldTransforms;\n    if (options.merge) {\n        fieldMask = new FieldMask(context.fieldMask);\n        fieldTransforms = context.fieldTransforms;\n    }\n    else if (options.mergeFields) {\n        const validatedFieldPaths = [];\n        for (const stringOrFieldPath of options.mergeFields) {\n            const fieldPath = fieldPathFromArgument$1(methodName, stringOrFieldPath, targetDoc);\n            if (!context.contains(fieldPath)) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `Field '${fieldPath}' is specified in your field mask but missing from your input data.`);\n            }\n            if (!fieldMaskContains(validatedFieldPaths, fieldPath)) {\n                validatedFieldPaths.push(fieldPath);\n            }\n        }\n        fieldMask = new FieldMask(validatedFieldPaths);\n        fieldTransforms = context.fieldTransforms.filter(transform => fieldMask.covers(transform.field));\n    }\n    else {\n        fieldMask = null;\n        fieldTransforms = context.fieldTransforms;\n    }\n    return new ParsedSetData(new ObjectValue(updateData), fieldMask, fieldTransforms);\n}\nclass DeleteFieldValueImpl extends FieldValue {\n    _toFieldTransform(context) {\n        if (context.dataSource === 2 /* UserDataSource.MergeSet */) {\n            // No transform to add for a delete, but we need to add it to our\n            // fieldMask so it gets deleted.\n            context.fieldMask.push(context.path);\n        }\n        else if (context.dataSource === 1 /* UserDataSource.Update */) {\n            throw context.createError(`${this._methodName}() can only appear at the top level ` +\n                'of your update data');\n        }\n        else {\n            // We shouldn't encounter delete sentinels for queries or non-merge set() calls.\n            throw context.createError(`${this._methodName}() cannot be used with set() unless you pass ` +\n                '{merge:true}');\n        }\n        return null;\n    }\n    isEqual(other) {\n        return other instanceof DeleteFieldValueImpl;\n    }\n}\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\nfunction createSentinelChildContext(fieldValue, context, arrayElement) {\n    return new ParseContextImpl({\n        dataSource: 3 /* UserDataSource.Argument */,\n        targetDoc: context.settings.targetDoc,\n        methodName: fieldValue._methodName,\n        arrayElement\n    }, context.databaseId, context.serializer, context.ignoreUndefinedProperties);\n}\nclass ServerTimestampFieldValueImpl extends FieldValue {\n    _toFieldTransform(context) {\n        return new FieldTransform(context.path, new ServerTimestampTransform());\n    }\n    isEqual(other) {\n        return other instanceof ServerTimestampFieldValueImpl;\n    }\n}\nclass ArrayUnionFieldValueImpl extends FieldValue {\n    constructor(methodName, _elements) {\n        super(methodName);\n        this._elements = _elements;\n    }\n    _toFieldTransform(context) {\n        const parseContext = createSentinelChildContext(this, context, \n        /*array=*/ true);\n        const parsedElements = this._elements.map(element => parseData(element, parseContext));\n        const arrayUnion = new ArrayUnionTransformOperation(parsedElements);\n        return new FieldTransform(context.path, arrayUnion);\n    }\n    isEqual(other) {\n        return (other instanceof ArrayUnionFieldValueImpl &&\n            deepEqual(this._elements, other._elements));\n    }\n}\nclass ArrayRemoveFieldValueImpl extends FieldValue {\n    constructor(methodName, _elements) {\n        super(methodName);\n        this._elements = _elements;\n    }\n    _toFieldTransform(context) {\n        const parseContext = createSentinelChildContext(this, context, \n        /*array=*/ true);\n        const parsedElements = this._elements.map(element => parseData(element, parseContext));\n        const arrayUnion = new ArrayRemoveTransformOperation(parsedElements);\n        return new FieldTransform(context.path, arrayUnion);\n    }\n    isEqual(other) {\n        return (other instanceof ArrayRemoveFieldValueImpl &&\n            deepEqual(this._elements, other._elements));\n    }\n}\nclass NumericIncrementFieldValueImpl extends FieldValue {\n    constructor(methodName, _operand) {\n        super(methodName);\n        this._operand = _operand;\n    }\n    _toFieldTransform(context) {\n        const numericIncrement = new NumericIncrementTransformOperation(context.serializer, toNumber(context.serializer, this._operand));\n        return new FieldTransform(context.path, numericIncrement);\n    }\n    isEqual(other) {\n        return (other instanceof NumericIncrementFieldValueImpl &&\n            this._operand === other._operand);\n    }\n}\n/** Parse update data from an update() call. */\nfunction parseUpdateData(userDataReader, methodName, targetDoc, input) {\n    const context = userDataReader.createContext(1 /* UserDataSource.Update */, methodName, targetDoc);\n    validatePlainObject('Data must be an object, but it was:', context, input);\n    const fieldMaskPaths = [];\n    const updateData = ObjectValue.empty();\n    forEach(input, (key, value) => {\n        const path = fieldPathFromDotSeparatedString(methodName, key, targetDoc);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n        value = getModularInstance(value);\n        const childContext = context.childContextForFieldPath(path);\n        if (value instanceof DeleteFieldValueImpl) {\n            // Add it to the field mask, but don't add anything to updateData.\n            fieldMaskPaths.push(path);\n        }\n        else {\n            const parsedValue = parseData(value, childContext);\n            if (parsedValue != null) {\n                fieldMaskPaths.push(path);\n                updateData.set(path, parsedValue);\n            }\n        }\n    });\n    const mask = new FieldMask(fieldMaskPaths);\n    return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\nfunction parseUpdateVarargs(userDataReader, methodName, targetDoc, field, value, moreFieldsAndValues) {\n    const context = userDataReader.createContext(1 /* UserDataSource.Update */, methodName, targetDoc);\n    const keys = [fieldPathFromArgument$1(methodName, field, targetDoc)];\n    const values = [value];\n    if (moreFieldsAndValues.length % 2 !== 0) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Function ${methodName}() needs to be called with an even number ` +\n            'of arguments that alternate between field names and values.');\n    }\n    for (let i = 0; i < moreFieldsAndValues.length; i += 2) {\n        keys.push(fieldPathFromArgument$1(methodName, moreFieldsAndValues[i]));\n        values.push(moreFieldsAndValues[i + 1]);\n    }\n    const fieldMaskPaths = [];\n    const updateData = ObjectValue.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let i = keys.length - 1; i >= 0; --i) {\n        if (!fieldMaskContains(fieldMaskPaths, keys[i])) {\n            const path = keys[i];\n            let value = values[i];\n            // For Compat types, we have to \"extract\" the underlying types before\n            // performing validation.\n            value = getModularInstance(value);\n            const childContext = context.childContextForFieldPath(path);\n            if (value instanceof DeleteFieldValueImpl) {\n                // Add it to the field mask, but don't add anything to updateData.\n                fieldMaskPaths.push(path);\n            }\n            else {\n                const parsedValue = parseData(value, childContext);\n                if (parsedValue != null) {\n                    fieldMaskPaths.push(path);\n                    updateData.set(path, parsedValue);\n                }\n            }\n        }\n    }\n    const mask = new FieldMask(fieldMaskPaths);\n    return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\nfunction parseQueryValue(userDataReader, methodName, input, allowArrays = false) {\n    const context = userDataReader.createContext(allowArrays ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */, methodName);\n    const parsed = parseData(input, context);\n    return parsed;\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\nfunction parseData(input, context) {\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    input = getModularInstance(input);\n    if (looksLikeJsonObject(input)) {\n        validatePlainObject('Unsupported field value:', context, input);\n        return parseObject(input, context);\n    }\n    else if (input instanceof FieldValue) {\n        // FieldValues usually parse into transforms (except deleteField())\n        // in which case we do not want to include this field in our parsed data\n        // (as doing so will overwrite the field directly prior to the transform\n        // trying to transform it). So we don't add this location to\n        // context.fieldMask and we return null as our parsing result.\n        parseSentinelFieldValue(input, context);\n        return null;\n    }\n    else if (input === undefined && context.ignoreUndefinedProperties) {\n        // If the input is undefined it can never participate in the fieldMask, so\n        // don't handle this below. If `ignoreUndefinedProperties` is false,\n        // `parseScalarValue` will reject an undefined value.\n        return null;\n    }\n    else {\n        // If context.path is null we are inside an array and we don't support\n        // field mask paths more granular than the top-level array.\n        if (context.path) {\n            context.fieldMask.push(context.path);\n        }\n        if (input instanceof Array) {\n            // TODO(b/34871131): Include the path containing the array in the error\n            // message.\n            // In the case of IN queries, the parsed data is an array (representing\n            // the set of values to be included for the IN query) that may directly\n            // contain additional arrays (each representing an individual field\n            // value), so we disable this validation.\n            if (context.settings.arrayElement &&\n                context.dataSource !== 4 /* UserDataSource.ArrayArgument */) {\n                throw context.createError('Nested arrays are not supported');\n            }\n            return parseArray(input, context);\n        }\n        else {\n            return parseScalarValue(input, context);\n        }\n    }\n}\nfunction parseObject(obj, context) {\n    const fields = {};\n    if (isEmpty(obj)) {\n        // If we encounter an empty object, we explicitly add it to the update\n        // mask to ensure that the server creates a map entry.\n        if (context.path && context.path.length > 0) {\n            context.fieldMask.push(context.path);\n        }\n    }\n    else {\n        forEach(obj, (key, val) => {\n            const parsedValue = parseData(val, context.childContextForField(key));\n            if (parsedValue != null) {\n                fields[key] = parsedValue;\n            }\n        });\n    }\n    return { mapValue: { fields } };\n}\nfunction parseArray(array, context) {\n    const values = [];\n    let entryIndex = 0;\n    for (const entry of array) {\n        let parsedEntry = parseData(entry, context.childContextForArray(entryIndex));\n        if (parsedEntry == null) {\n            // Just include nulls in the array for fields being replaced with a\n            // sentinel.\n            parsedEntry = { nullValue: 'NULL_VALUE' };\n        }\n        values.push(parsedEntry);\n        entryIndex++;\n    }\n    return { arrayValue: { values } };\n}\n/**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\nfunction parseSentinelFieldValue(value, context) {\n    // Sentinels are only supported with writes, and not within arrays.\n    if (!isWrite(context.dataSource)) {\n        throw context.createError(`${value._methodName}() can only be used with update() and set()`);\n    }\n    if (!context.path) {\n        throw context.createError(`${value._methodName}() is not currently supported inside arrays`);\n    }\n    const fieldTransform = value._toFieldTransform(context);\n    if (fieldTransform) {\n        context.fieldTransforms.push(fieldTransform);\n    }\n}\n/**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */\nfunction parseScalarValue(value, context) {\n    value = getModularInstance(value);\n    if (value === null) {\n        return { nullValue: 'NULL_VALUE' };\n    }\n    else if (typeof value === 'number') {\n        return toNumber(context.serializer, value);\n    }\n    else if (typeof value === 'boolean') {\n        return { booleanValue: value };\n    }\n    else if (typeof value === 'string') {\n        return { stringValue: value };\n    }\n    else if (value instanceof Date) {\n        const timestamp = Timestamp.fromDate(value);\n        return {\n            timestampValue: toTimestamp(context.serializer, timestamp)\n        };\n    }\n    else if (value instanceof Timestamp) {\n        // Firestore backend truncates precision down to microseconds. To ensure\n        // offline mode works the same with regards to truncation, perform the\n        // truncation immediately without waiting for the backend to do that.\n        const timestamp = new Timestamp(value.seconds, Math.floor(value.nanoseconds / 1000) * 1000);\n        return {\n            timestampValue: toTimestamp(context.serializer, timestamp)\n        };\n    }\n    else if (value instanceof GeoPoint) {\n        return {\n            geoPointValue: {\n                latitude: value.latitude,\n                longitude: value.longitude\n            }\n        };\n    }\n    else if (value instanceof Bytes) {\n        return { bytesValue: toBytes(context.serializer, value._byteString) };\n    }\n    else if (value instanceof DocumentReference) {\n        const thisDb = context.databaseId;\n        const otherDb = value.firestore._databaseId;\n        if (!otherDb.isEqual(thisDb)) {\n            throw context.createError('Document reference is for database ' +\n                `${otherDb.projectId}/${otherDb.database} but should be ` +\n                `for database ${thisDb.projectId}/${thisDb.database}`);\n        }\n        return {\n            referenceValue: toResourceName(value.firestore._databaseId || context.databaseId, value._key.path)\n        };\n    }\n    else if (value instanceof VectorValue) {\n        return parseVectorValue(value, context);\n    }\n    else {\n        throw context.createError(`Unsupported field value: ${valueDescription(value)}`);\n    }\n}\n/**\n * Creates a new VectorValue proto value (using the internal format).\n */\nfunction parseVectorValue(value, context) {\n    const mapValue = {\n        fields: {\n            [TYPE_KEY]: {\n                stringValue: VECTOR_VALUE_SENTINEL\n            },\n            [VECTOR_MAP_VECTORS_KEY]: {\n                arrayValue: {\n                    values: value.toArray().map(value => {\n                        if (typeof value !== 'number') {\n                            throw context.createError('VectorValues must only contain numeric values.');\n                        }\n                        return toDouble(context.serializer, value);\n                    })\n                }\n            }\n        }\n    };\n    return { mapValue };\n}\n/**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */\nfunction looksLikeJsonObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        !(input instanceof Array) &&\n        !(input instanceof Date) &&\n        !(input instanceof Timestamp) &&\n        !(input instanceof GeoPoint) &&\n        !(input instanceof Bytes) &&\n        !(input instanceof DocumentReference) &&\n        !(input instanceof FieldValue) &&\n        !(input instanceof VectorValue));\n}\nfunction validatePlainObject(message, context, input) {\n    if (!looksLikeJsonObject(input) || !isPlainObject(input)) {\n        const description = valueDescription(input);\n        if (description === 'an object') {\n            // Massage the error if it was an object.\n            throw context.createError(message + ' a custom object');\n        }\n        else {\n            throw context.createError(message + ' ' + description);\n        }\n    }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nfunction fieldPathFromArgument$1(methodName, path, targetDoc) {\n    // If required, replace the FieldPath Compat class with the firestore-exp\n    // FieldPath.\n    path = getModularInstance(path);\n    if (path instanceof FieldPath) {\n        return path._internalPath;\n    }\n    else if (typeof path === 'string') {\n        return fieldPathFromDotSeparatedString(methodName, path);\n    }\n    else {\n        const message = 'Field path arguments must be of type string or ';\n        throw createError(message, methodName, \n        /* hasConverter= */ false, \n        /* path= */ undefined, targetDoc);\n    }\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\nconst FIELD_PATH_RESERVED = new RegExp('[~\\\\*/\\\\[\\\\]]');\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\nfunction fieldPathFromDotSeparatedString(methodName, path, targetDoc) {\n    const found = path.search(FIELD_PATH_RESERVED);\n    if (found >= 0) {\n        throw createError(`Invalid field path (${path}). Paths must not contain ` +\n            `'~', '*', '/', '[', or ']'`, methodName, \n        /* hasConverter= */ false, \n        /* path= */ undefined, targetDoc);\n    }\n    try {\n        return new FieldPath(...path.split('.'))._internalPath;\n    }\n    catch (e) {\n        throw createError(`Invalid field path (${path}). Paths must not be empty, ` +\n            `begin with '.', end with '.', or contain '..'`, methodName, \n        /* hasConverter= */ false, \n        /* path= */ undefined, targetDoc);\n    }\n}\nfunction createError(reason, methodName, hasConverter, path, targetDoc) {\n    const hasPath = path && !path.isEmpty();\n    const hasDocument = targetDoc !== undefined;\n    let message = `Function ${methodName}() called with invalid data`;\n    if (hasConverter) {\n        message += ' (via `toFirestore()`)';\n    }\n    message += '. ';\n    let description = '';\n    if (hasPath || hasDocument) {\n        description += ' (found';\n        if (hasPath) {\n            description += ` in field ${path}`;\n        }\n        if (hasDocument) {\n            description += ` in document ${targetDoc}`;\n        }\n        description += ')';\n    }\n    return new FirestoreError(Code.INVALID_ARGUMENT, message + reason + description);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\nfunction fieldMaskContains(haystack, needle) {\n    return haystack.some(v => v.isEqual(needle));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nclass DocumentSnapshot$1 {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(_firestore, _userDataWriter, _key, _document, _converter) {\n        this._firestore = _firestore;\n        this._userDataWriter = _userDataWriter;\n        this._key = _key;\n        this._document = _document;\n        this._converter = _converter;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */\n    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */\n    get ref() {\n        return new DocumentReference(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n    exists() {\n        return this._document !== null;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n    data() {\n        if (!this._document) {\n            return undefined;\n        }\n        else if (this._converter) {\n            // We only want to use the converter and create a new DocumentSnapshot\n            // if a converter has been provided.\n            const snapshot = new QueryDocumentSnapshot$1(this._firestore, this._userDataWriter, this._key, this._document, \n            /* converter= */ null);\n            return this._converter.fromFirestore(snapshot);\n        }\n        else {\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(fieldPath) {\n        if (this._document) {\n            const value = this._document.data.field(fieldPathFromArgument('DocumentSnapshot.get', fieldPath));\n            if (value !== null) {\n                return this._userDataWriter.convertValue(value);\n            }\n        }\n        return undefined;\n    }\n}\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nclass QueryDocumentSnapshot$1 extends DocumentSnapshot$1 {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\nfunction fieldPathFromArgument(methodName, arg) {\n    if (typeof arg === 'string') {\n        return fieldPathFromDotSeparatedString(methodName, arg);\n    }\n    else if (arg instanceof FieldPath) {\n        return arg._internalPath;\n    }\n    else {\n        return arg._delegate._internalPath;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction validateHasExplicitOrderByForLimitToLast(query) {\n    if (query.limitType === \"L\" /* LimitType.Last */ &&\n        query.explicitOrderBy.length === 0) {\n        throw new FirestoreError(Code.UNIMPLEMENTED, 'limitToLast() queries require specifying at least one orderBy() clause');\n    }\n}\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass AppliableConstraint {\n}\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass QueryConstraint extends AppliableConstraint {\n}\nfunction query(query, queryConstraint, ...additionalQueryConstraints) {\n    let queryConstraints = [];\n    if (queryConstraint instanceof AppliableConstraint) {\n        queryConstraints.push(queryConstraint);\n    }\n    queryConstraints = queryConstraints.concat(additionalQueryConstraints);\n    validateQueryConstraintArray(queryConstraints);\n    for (const constraint of queryConstraints) {\n        query = constraint._apply(query);\n    }\n    return query;\n}\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\nclass QueryFieldFilterConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(_field, _op, _value) {\n        super();\n        this._field = _field;\n        this._op = _op;\n        this._value = _value;\n        /** The type of this query constraint */\n        this.type = 'where';\n    }\n    static _create(_field, _op, _value) {\n        return new QueryFieldFilterConstraint(_field, _op, _value);\n    }\n    _apply(query) {\n        const filter = this._parse(query);\n        validateNewFieldFilter(query._query, filter);\n        return new Query(query.firestore, query.converter, queryWithAddedFilter(query._query, filter));\n    }\n    _parse(query) {\n        const reader = newUserDataReader(query.firestore);\n        const filter = newQueryFilter(query._query, 'where', reader, query.firestore._databaseId, this._field, this._op, this._value);\n        return filter;\n    }\n}\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\nfunction where(fieldPath, opStr, value) {\n    const op = opStr;\n    const field = fieldPathFromArgument('where', fieldPath);\n    return QueryFieldFilterConstraint._create(field, op, value);\n}\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */\nclass QueryCompositeFilterConstraint extends AppliableConstraint {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    type, _queryConstraints) {\n        super();\n        this.type = type;\n        this._queryConstraints = _queryConstraints;\n    }\n    static _create(type, _queryConstraints) {\n        return new QueryCompositeFilterConstraint(type, _queryConstraints);\n    }\n    _parse(query) {\n        const parsedFilters = this._queryConstraints\n            .map(queryConstraint => {\n            return queryConstraint._parse(query);\n        })\n            .filter(parsedFilter => parsedFilter.getFilters().length > 0);\n        if (parsedFilters.length === 1) {\n            return parsedFilters[0];\n        }\n        return CompositeFilter.create(parsedFilters, this._getOperator());\n    }\n    _apply(query) {\n        const parsedFilter = this._parse(query);\n        if (parsedFilter.getFilters().length === 0) {\n            // Return the existing query if not adding any more filters (e.g. an empty\n            // composite filter).\n            return query;\n        }\n        validateNewFilter(query._query, parsedFilter);\n        return new Query(query.firestore, query.converter, queryWithAddedFilter(query._query, parsedFilter));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return this.type === 'and' ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nfunction or(...queryConstraints) {\n    // Only support QueryFilterConstraints\n    queryConstraints.forEach(queryConstraint => validateQueryFilterConstraint('or', queryConstraint));\n    return QueryCompositeFilterConstraint._create(\"or\" /* CompositeOperator.OR */, queryConstraints);\n}\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nfunction and(...queryConstraints) {\n    // Only support QueryFilterConstraints\n    queryConstraints.forEach(queryConstraint => validateQueryFilterConstraint('and', queryConstraint));\n    return QueryCompositeFilterConstraint._create(\"and\" /* CompositeOperator.AND */, queryConstraints);\n}\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\nclass QueryOrderByConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(_field, _direction) {\n        super();\n        this._field = _field;\n        this._direction = _direction;\n        /** The type of this query constraint */\n        this.type = 'orderBy';\n    }\n    static _create(_field, _direction) {\n        return new QueryOrderByConstraint(_field, _direction);\n    }\n    _apply(query) {\n        const orderBy = newQueryOrderBy(query._query, this._field, this._direction);\n        return new Query(query.firestore, query.converter, queryWithAddedOrderBy(query._query, orderBy));\n    }\n}\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\nfunction orderBy(fieldPath, directionStr = 'asc') {\n    const direction = directionStr;\n    const path = fieldPathFromArgument('orderBy', fieldPath);\n    return QueryOrderByConstraint._create(path, direction);\n}\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\nclass QueryLimitConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    type, _limit, _limitType) {\n        super();\n        this.type = type;\n        this._limit = _limit;\n        this._limitType = _limitType;\n    }\n    static _create(type, _limit, _limitType) {\n        return new QueryLimitConstraint(type, _limit, _limitType);\n    }\n    _apply(query) {\n        return new Query(query.firestore, query.converter, queryWithLimit(query._query, this._limit, this._limitType));\n    }\n}\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nfunction limit(limit) {\n    validatePositiveNumber('limit', limit);\n    return QueryLimitConstraint._create('limit', limit, \"F\" /* LimitType.First */);\n}\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nfunction limitToLast(limit) {\n    validatePositiveNumber('limitToLast', limit);\n    return QueryLimitConstraint._create('limitToLast', limit, \"L\" /* LimitType.Last */);\n}\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\nclass QueryStartAtConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    type, _docOrFields, _inclusive) {\n        super();\n        this.type = type;\n        this._docOrFields = _docOrFields;\n        this._inclusive = _inclusive;\n    }\n    static _create(type, _docOrFields, _inclusive) {\n        return new QueryStartAtConstraint(type, _docOrFields, _inclusive);\n    }\n    _apply(query) {\n        const bound = newQueryBoundFromDocOrFields(query, this.type, this._docOrFields, this._inclusive);\n        return new Query(query.firestore, query.converter, queryWithStartAt(query._query, bound));\n    }\n}\nfunction startAt(...docOrFields) {\n    return QueryStartAtConstraint._create('startAt', docOrFields, \n    /*inclusive=*/ true);\n}\nfunction startAfter(...docOrFields) {\n    return QueryStartAtConstraint._create('startAfter', docOrFields, \n    /*inclusive=*/ false);\n}\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\nclass QueryEndAtConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    type, _docOrFields, _inclusive) {\n        super();\n        this.type = type;\n        this._docOrFields = _docOrFields;\n        this._inclusive = _inclusive;\n    }\n    static _create(type, _docOrFields, _inclusive) {\n        return new QueryEndAtConstraint(type, _docOrFields, _inclusive);\n    }\n    _apply(query) {\n        const bound = newQueryBoundFromDocOrFields(query, this.type, this._docOrFields, this._inclusive);\n        return new Query(query.firestore, query.converter, queryWithEndAt(query._query, bound));\n    }\n}\nfunction endBefore(...docOrFields) {\n    return QueryEndAtConstraint._create('endBefore', docOrFields, \n    /*inclusive=*/ false);\n}\nfunction endAt(...docOrFields) {\n    return QueryEndAtConstraint._create('endAt', docOrFields, \n    /*inclusive=*/ true);\n}\n/** Helper function to create a bound from a document or fields */\nfunction newQueryBoundFromDocOrFields(query, methodName, docOrFields, inclusive) {\n    docOrFields[0] = getModularInstance(docOrFields[0]);\n    if (docOrFields[0] instanceof DocumentSnapshot$1) {\n        return newQueryBoundFromDocument(query._query, query.firestore._databaseId, methodName, docOrFields[0]._document, inclusive);\n    }\n    else {\n        const reader = newUserDataReader(query.firestore);\n        return newQueryBoundFromFields(query._query, query.firestore._databaseId, reader, methodName, docOrFields, inclusive);\n    }\n}\nfunction newQueryFilter(query, methodName, dataReader, databaseId, fieldPath, op, value) {\n    let fieldValue;\n    if (fieldPath.isKeyField()) {\n        if (op === \"array-contains\" /* Operator.ARRAY_CONTAINS */ || op === \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid Query. You can't perform '${op}' queries on documentId().`);\n        }\n        else if (op === \"in\" /* Operator.IN */ || op === \"not-in\" /* Operator.NOT_IN */) {\n            validateDisjunctiveFilterElements(value, op);\n            const referenceList = [];\n            for (const arrayValue of value) {\n                referenceList.push(parseDocumentIdValue(databaseId, query, arrayValue));\n            }\n            fieldValue = { arrayValue: { values: referenceList } };\n        }\n        else {\n            fieldValue = parseDocumentIdValue(databaseId, query, value);\n        }\n    }\n    else {\n        if (op === \"in\" /* Operator.IN */ ||\n            op === \"not-in\" /* Operator.NOT_IN */ ||\n            op === \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */) {\n            validateDisjunctiveFilterElements(value, op);\n        }\n        fieldValue = parseQueryValue(dataReader, methodName, value, \n        /* allowArrays= */ op === \"in\" /* Operator.IN */ || op === \"not-in\" /* Operator.NOT_IN */);\n    }\n    const filter = FieldFilter.create(fieldPath, op, fieldValue);\n    return filter;\n}\nfunction newQueryOrderBy(query, fieldPath, direction) {\n    if (query.startAt !== null) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You must not call startAt() or startAfter() before ' +\n            'calling orderBy().');\n    }\n    if (query.endAt !== null) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You must not call endAt() or endBefore() before ' +\n            'calling orderBy().');\n    }\n    const orderBy = new OrderBy(fieldPath, direction);\n    return orderBy;\n}\n/**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */\nfunction newQueryBoundFromDocument(query, databaseId, methodName, doc, inclusive) {\n    if (!doc) {\n        throw new FirestoreError(Code.NOT_FOUND, `Can't use a DocumentSnapshot that doesn't exist for ` +\n            `${methodName}().`);\n    }\n    const components = [];\n    // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n    for (const orderBy of queryNormalizedOrderBy(query)) {\n        if (orderBy.field.isKeyField()) {\n            components.push(refValue(databaseId, doc.key));\n        }\n        else {\n            const value = doc.data.field(orderBy.field);\n            if (isServerTimestamp(value)) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a ' +\n                    'document for which the field \"' +\n                    orderBy.field +\n                    '\" is an uncommitted server timestamp. (Since the value of ' +\n                    'this field is unknown, you cannot start/end a query with it.)');\n            }\n            else if (value !== null) {\n                components.push(value);\n            }\n            else {\n                const field = orderBy.field.canonicalString();\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid query. You are trying to start or end a query using a ` +\n                    `document for which the field '${field}' (used as the ` +\n                    `orderBy) does not exist.`);\n            }\n        }\n    }\n    return new Bound(components, inclusive);\n}\n/**\n * Converts a list of field values to a `Bound` for the given query.\n */\nfunction newQueryBoundFromFields(query, databaseId, dataReader, methodName, values, inclusive) {\n    // Use explicit order by's because it has to match the query the user made\n    const orderBy = query.explicitOrderBy;\n    if (values.length > orderBy.length) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Too many arguments provided to ${methodName}(). ` +\n            `The number of arguments must be less than or equal to the ` +\n            `number of orderBy() clauses`);\n    }\n    const components = [];\n    for (let i = 0; i < values.length; i++) {\n        const rawValue = values[i];\n        const orderByComponent = orderBy[i];\n        if (orderByComponent.field.isKeyField()) {\n            if (typeof rawValue !== 'string') {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid query. Expected a string for document ID in ` +\n                    `${methodName}(), but got a ${typeof rawValue}`);\n            }\n            if (!isCollectionGroupQuery(query) && rawValue.indexOf('/') !== -1) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid query. When querying a collection and ordering by documentId(), ` +\n                    `the value passed to ${methodName}() must be a plain document ID, but ` +\n                    `'${rawValue}' contains a slash.`);\n            }\n            const path = query.path.child(ResourcePath.fromString(rawValue));\n            if (!DocumentKey.isDocumentKey(path)) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid query. When querying a collection group and ordering by ` +\n                    `documentId(), the value passed to ${methodName}() must result in a ` +\n                    `valid document path, but '${path}' is not because it contains an odd number ` +\n                    `of segments.`);\n            }\n            const key = new DocumentKey(path);\n            components.push(refValue(databaseId, key));\n        }\n        else {\n            const wrapped = parseQueryValue(dataReader, methodName, rawValue);\n            components.push(wrapped);\n        }\n    }\n    return new Bound(components, inclusive);\n}\n/**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */\nfunction parseDocumentIdValue(databaseId, query, documentIdValue) {\n    documentIdValue = getModularInstance(documentIdValue);\n    if (typeof documentIdValue === 'string') {\n        if (documentIdValue === '') {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. When querying with documentId(), you ' +\n                'must provide a valid document ID, but it was an empty string.');\n        }\n        if (!isCollectionGroupQuery(query) && documentIdValue.indexOf('/') !== -1) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid query. When querying a collection by ` +\n                `documentId(), you must provide a plain document ID, but ` +\n                `'${documentIdValue}' contains a '/' character.`);\n        }\n        const path = query.path.child(ResourcePath.fromString(documentIdValue));\n        if (!DocumentKey.isDocumentKey(path)) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid query. When querying a collection group by ` +\n                `documentId(), the value provided must result in a valid document path, ` +\n                `but '${path}' is not because it has an odd number of segments (${path.length}).`);\n        }\n        return refValue(databaseId, new DocumentKey(path));\n    }\n    else if (documentIdValue instanceof DocumentReference) {\n        return refValue(databaseId, documentIdValue._key);\n    }\n    else {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid query. When querying with documentId(), you must provide a valid ` +\n            `string or a DocumentReference, but it was: ` +\n            `${valueDescription(documentIdValue)}.`);\n    }\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\nfunction validateDisjunctiveFilterElements(value, operator) {\n    if (!Array.isArray(value) || value.length === 0) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid Query. A non-empty array is required for ' +\n            `'${operator.toString()}' filters.`);\n    }\n}\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */\nfunction conflictingOps(op) {\n    switch (op) {\n        case \"!=\" /* Operator.NOT_EQUAL */:\n            return [\"!=\" /* Operator.NOT_EQUAL */, \"not-in\" /* Operator.NOT_IN */];\n        case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */:\n        case \"in\" /* Operator.IN */:\n            return [\"not-in\" /* Operator.NOT_IN */];\n        case \"not-in\" /* Operator.NOT_IN */:\n            return [\n                \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */,\n                \"in\" /* Operator.IN */,\n                \"not-in\" /* Operator.NOT_IN */,\n                \"!=\" /* Operator.NOT_EQUAL */\n            ];\n        default:\n            return [];\n    }\n}\nfunction validateNewFieldFilter(query, fieldFilter) {\n    const conflictingOp = findOpInsideFilters(query.filters, conflictingOps(fieldFilter.op));\n    if (conflictingOp !== null) {\n        // Special case when it's a duplicate op to give a slightly clearer error message.\n        if (conflictingOp === fieldFilter.op) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You cannot use more than one ' +\n                `'${fieldFilter.op.toString()}' filter.`);\n        }\n        else {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `Invalid query. You cannot use '${fieldFilter.op.toString()}' filters ` +\n                `with '${conflictingOp.toString()}' filters.`);\n        }\n    }\n}\nfunction validateNewFilter(query, filter) {\n    let testQuery = query;\n    const subFilters = filter.getFlattenedFilters();\n    for (const subFilter of subFilters) {\n        validateNewFieldFilter(testQuery, subFilter);\n        testQuery = queryWithAddedFilter(testQuery, subFilter);\n    }\n}\n// Checks if any of the provided filter operators are included in the given list of filters and\n// returns the first one that is, or null if none are.\nfunction findOpInsideFilters(filters, operators) {\n    for (const filter of filters) {\n        for (const fieldFilter of filter.getFlattenedFilters()) {\n            if (operators.indexOf(fieldFilter.op) >= 0) {\n                return fieldFilter.op;\n            }\n        }\n    }\n    return null;\n}\nfunction validateQueryFilterConstraint(functionName, queryConstraint) {\n    if (!(queryConstraint instanceof QueryFieldFilterConstraint) &&\n        !(queryConstraint instanceof QueryCompositeFilterConstraint)) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `Function ${functionName}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n    }\n}\nfunction validateQueryConstraintArray(queryConstraint) {\n    const compositeFilterCount = queryConstraint.filter(filter => filter instanceof QueryCompositeFilterConstraint).length;\n    const fieldFilterCount = queryConstraint.filter(filter => filter instanceof QueryFieldFilterConstraint).length;\n    if (compositeFilterCount > 1 ||\n        (compositeFilterCount > 0 && fieldFilterCount > 0)) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'InvalidQuery. When using composite filters, you cannot use ' +\n            'more than one filter at the top level. Consider nesting the multiple ' +\n            'filters within an `and(...)` statement. For example: ' +\n            'change `query(query, where(...), or(...))` to ' +\n            '`query(query, and(where(...), or(...)))`.');\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\nclass AbstractUserDataWriter {\n    convertValue(value, serverTimestampBehavior = 'none') {\n        switch (typeOrder(value)) {\n            case 0 /* TypeOrder.NullValue */:\n                return null;\n            case 1 /* TypeOrder.BooleanValue */:\n                return value.booleanValue;\n            case 2 /* TypeOrder.NumberValue */:\n                return normalizeNumber(value.integerValue || value.doubleValue);\n            case 3 /* TypeOrder.TimestampValue */:\n                return this.convertTimestamp(value.timestampValue);\n            case 4 /* TypeOrder.ServerTimestampValue */:\n                return this.convertServerTimestamp(value, serverTimestampBehavior);\n            case 5 /* TypeOrder.StringValue */:\n                return value.stringValue;\n            case 6 /* TypeOrder.BlobValue */:\n                return this.convertBytes(normalizeByteString(value.bytesValue));\n            case 7 /* TypeOrder.RefValue */:\n                return this.convertReference(value.referenceValue);\n            case 8 /* TypeOrder.GeoPointValue */:\n                return this.convertGeoPoint(value.geoPointValue);\n            case 9 /* TypeOrder.ArrayValue */:\n                return this.convertArray(value.arrayValue, serverTimestampBehavior);\n            case 11 /* TypeOrder.ObjectValue */:\n                return this.convertObject(value.mapValue, serverTimestampBehavior);\n            case 10 /* TypeOrder.VectorValue */:\n                return this.convertVectorValue(value.mapValue);\n            default:\n                throw fail(0xf2a2, {\n                    value\n                });\n        }\n    }\n    convertObject(mapValue, serverTimestampBehavior) {\n        return this.convertObjectMap(mapValue.fields, serverTimestampBehavior);\n    }\n    /**\n     * @internal\n     */\n    convertObjectMap(fields, serverTimestampBehavior = 'none') {\n        const result = {};\n        forEach(fields, (key, value) => {\n            result[key] = this.convertValue(value, serverTimestampBehavior);\n        });\n        return result;\n    }\n    /**\n     * @internal\n     */\n    convertVectorValue(mapValue) {\n        var _a, _b, _c;\n        const values = (_c = (_b = (_a = mapValue.fields) === null || _a === void 0 ? void 0 : _a[VECTOR_MAP_VECTORS_KEY].arrayValue) === null || _b === void 0 ? void 0 : _b.values) === null || _c === void 0 ? void 0 : _c.map(value => {\n            return normalizeNumber(value.doubleValue);\n        });\n        return new VectorValue(values);\n    }\n    convertGeoPoint(value) {\n        return new GeoPoint(normalizeNumber(value.latitude), normalizeNumber(value.longitude));\n    }\n    convertArray(arrayValue, serverTimestampBehavior) {\n        return (arrayValue.values || []).map(value => this.convertValue(value, serverTimestampBehavior));\n    }\n    convertServerTimestamp(value, serverTimestampBehavior) {\n        switch (serverTimestampBehavior) {\n            case 'previous':\n                const previousValue = getPreviousValue(value);\n                if (previousValue == null) {\n                    return null;\n                }\n                return this.convertValue(previousValue, serverTimestampBehavior);\n            case 'estimate':\n                return this.convertTimestamp(getLocalWriteTime(value));\n            default:\n                return null;\n        }\n    }\n    convertTimestamp(value) {\n        const normalizedValue = normalizeTimestamp(value);\n        return new Timestamp(normalizedValue.seconds, normalizedValue.nanos);\n    }\n    convertDocumentKey(name, expectedDatabaseId) {\n        const resourcePath = ResourcePath.fromString(name);\n        hardAssert(isValidResourceName(resourcePath), 0x25d8, { name });\n        const databaseId = new DatabaseId(resourcePath.get(1), resourcePath.get(3));\n        const key = new DocumentKey(resourcePath.popFirst(5));\n        if (!databaseId.isEqual(expectedDatabaseId)) {\n            // TODO(b/64130202): Somehow support foreign references.\n            logError(`Document ${key} contains a document ` +\n                `reference within a different database (` +\n                `${databaseId.projectId}/${databaseId.database}) which is not ` +\n                `supported. It will be treated as a reference in the current ` +\n                `database (${expectedDatabaseId.projectId}/${expectedDatabaseId.database}) ` +\n                `instead.`);\n        }\n        return key;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction applyFirestoreDataConverter(converter, value, options) {\n    let convertedValue;\n    if (converter) {\n        if (options && (options.merge || options.mergeFields)) {\n            // Cast to `any` in order to satisfy the union type constraint on\n            // toFirestore().\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            convertedValue = converter.toFirestore(value, options);\n        }\n        else {\n            convertedValue = converter.toFirestore(value);\n        }\n    }\n    else {\n        convertedValue = value;\n    }\n    return convertedValue;\n}\nclass LiteUserDataWriter extends AbstractUserDataWriter {\n    constructor(firestore) {\n        super();\n        this.firestore = firestore;\n    }\n    convertBytes(bytes) {\n        return new Bytes(bytes);\n    }\n    convertReference(name) {\n        const key = this.convertDocumentKey(name, this.firestore._databaseId);\n        return new DocumentReference(this.firestore, /* converter= */ null, key);\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n */\nfunction sum(field) {\n    return new AggregateField('sum', fieldPathFromArgument$1('sum', field));\n}\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n */\nfunction average(field) {\n    return new AggregateField('avg', fieldPathFromArgument$1('average', field));\n}\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n */\nfunction count() {\n    return new AggregateField('count');\n}\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n */\nfunction aggregateFieldEqual(left, right) {\n    var _a, _b;\n    return (left instanceof AggregateField &&\n        right instanceof AggregateField &&\n        left.aggregateType === right.aggregateType &&\n        ((_a = left._internalFieldPath) === null || _a === void 0 ? void 0 : _a.canonicalString()) ===\n            ((_b = right._internalFieldPath) === null || _b === void 0 ? void 0 : _b.canonicalString()));\n}\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */\nfunction aggregateQuerySnapshotEqual(left, right) {\n    return (queryEqual(left.query, right.query) && deepEqual(left.data(), right.data()));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction isPartialObserver(obj) {\n    return implementsAnyMethods(obj, ['next', 'error', 'complete']);\n}\n/**\n * Returns true if obj is an object and contains at least one of the specified\n * methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    const object = obj;\n    for (const method of methods) {\n        if (method in object && typeof object[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst encoder = newTextEncoder();\nfunction lengthPrefixedString(o) {\n    const str = JSON.stringify(o);\n    const l = encoder.encode(str).byteLength;\n    return `${l}${str}`;\n}\n// TODO(wuandy): Ideally, these should use `TestBundleBuilder` above.\nconst meta = {\n    metadata: {\n        id: 'test-bundle',\n        createTime: { seconds: 1577836805, nanos: 6 },\n        version: 1,\n        totalDocuments: 1,\n        totalBytes: 416\n    }\n};\nlengthPrefixedString(meta);\nconst doc1Meta = {\n    documentMetadata: {\n        name: 'projects/test-project/databases/(default)/documents/collectionId/doc1',\n        readTime: { seconds: 5, nanos: 6 },\n        exists: true\n    }\n};\nlengthPrefixedString(doc1Meta);\nconst doc1 = {\n    document: {\n        name: 'projects/test-project/databases/(default)/documents/collectionId/doc1',\n        createTime: { seconds: 1, nanos: 2000000 },\n        updateTime: { seconds: 3, nanos: 4000 },\n        fields: { foo: { stringValue: 'value' }, bar: { integerValue: -42 } }\n    }\n};\nlengthPrefixedString(doc1);\nconst doc2Meta = {\n    documentMetadata: {\n        name: 'projects/test-project/databases/(default)/documents/collectionId/doc2',\n        readTime: { seconds: 5, nanos: 6 },\n        exists: true\n    }\n};\nlengthPrefixedString(doc2Meta);\nconst doc2 = {\n    document: {\n        name: 'projects/test-project/databases/(default)/documents/collectionId/doc2',\n        createTime: { seconds: 1, nanos: 2000000 },\n        updateTime: { seconds: 3, nanos: 4000 },\n        fields: {\n            foo: { stringValue: 'value1' },\n            bar: { integerValue: 42 },\n            emptyArray: { arrayValue: {} },\n            emptyMap: { mapValue: {} }\n        }\n    }\n};\nlengthPrefixedString(doc2);\nconst noDocMeta = {\n    documentMetadata: {\n        name: 'projects/test-project/databases/(default)/documents/collectionId/nodoc',\n        readTime: { seconds: 5, nanos: 6 },\n        exists: false\n    }\n};\nlengthPrefixedString(noDocMeta);\nconst limitQuery = {\n    namedQuery: {\n        name: 'limitQuery',\n        bundledQuery: {\n            parent: 'projects/fireeats-97d5e/databases/(default)/documents',\n            structuredQuery: {\n                from: [{ collectionId: 'node_3.7.5_7Li7XoCjutvNxwD0tpo9' }],\n                orderBy: [{ field: { fieldPath: 'sort' }, direction: 'DESCENDING' }],\n                limit: { 'value': 1 }\n            },\n            limitType: 'FIRST'\n        },\n        readTime: { 'seconds': 1590011379, 'nanos': 191164000 }\n    }\n};\nlengthPrefixedString(limitQuery);\nconst limitToLastQuery = {\n    namedQuery: {\n        name: 'limitToLastQuery',\n        bundledQuery: {\n            parent: 'projects/fireeats-97d5e/databases/(default)/documents',\n            structuredQuery: {\n                from: [{ collectionId: 'node_3.7.5_7Li7XoCjutvNxwD0tpo9' }],\n                orderBy: [{ field: { fieldPath: 'sort' }, direction: 'ASCENDING' }],\n                limit: { 'value': 1 }\n            },\n            limitType: 'LAST'\n        },\n        readTime: { 'seconds': 1590011379, 'nanos': 543063000 }\n    }\n};\nlengthPrefixedString(limitToLastQuery);\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst BUNDLE_VERSION = 1;\n/**\n * Builds a Firestore data bundle with results from the given document and query snapshots.\n */\nclass BundleBuilder {\n    constructor(firestore, bundleId) {\n        this.firestore = firestore;\n        this.bundleId = bundleId;\n        // Resulting documents for the bundle, keyed by full document path.\n        this.documents = new Map();\n        // Named queries saved in the bundle, keyed by query name.\n        this.namedQueries = new Map();\n        // The latest read time among all bundled documents and queries.\n        this.latestReadTime = new Timestamp(0, 0);\n        this.databaseId = firestore._databaseId;\n        // useProto3Json is true because the objects will be serialized to JSON string\n        // before being written to the bundle buffer.\n        this.serializer = new JsonProtoSerializer(this.databaseId, \n        /*useProto3Json=*/ true);\n        this.userDataReader = new UserDataReader(this.databaseId, true, this.serializer);\n    }\n    /**\n     * Adds data from a DocumentSnapshot to the bundle.\n     * @internal\n     * @param docBundleData A DocumentSnapshotBundleData containing information from the\n     * DocumentSnapshot. Note we cannot accept a DocumentSnapshot directly due to a circular\n     * dependency error.\n     * @param queryName The name of the QuerySnapshot if this document is part of a Query.\n     */\n    addBundleDocument(docBundleData, queryName) {\n        const originalDocument = this.documents.get(docBundleData.documentPath);\n        const originalQueries = originalDocument === null || originalDocument === void 0 ? void 0 : originalDocument.metadata.queries;\n        const docReadTime = docBundleData.readTime;\n        const origDocReadTime = !!(originalDocument === null || originalDocument === void 0 ? void 0 : originalDocument.metadata.readTime)\n            ? fromTimestamp(originalDocument.metadata.readTime)\n            : null;\n        const neitherHasReadTime = !docReadTime && origDocReadTime == null;\n        const docIsNewer = docReadTime !== undefined &&\n            (origDocReadTime == null || origDocReadTime < docReadTime);\n        if (neitherHasReadTime || docIsNewer) {\n            // Store document.\n            this.documents.set(docBundleData.documentPath, {\n                document: this.toBundleDocument(docBundleData),\n                metadata: {\n                    name: toName(this.serializer, docBundleData.documentKey),\n                    readTime: !!docReadTime\n                        ? toTimestamp(this.serializer, docReadTime) // Convert Timestamp to proto format.\n                        : undefined,\n                    exists: docBundleData.documentExists\n                }\n            });\n        }\n        if (docReadTime && docReadTime > this.latestReadTime) {\n            this.latestReadTime = docReadTime;\n        }\n        // Update `queries` to include both original and `queryName`.\n        if (queryName) {\n            const newDocument = this.documents.get(docBundleData.documentPath);\n            newDocument.metadata.queries = originalQueries || [];\n            newDocument.metadata.queries.push(queryName);\n        }\n    }\n    /**\n     * Adds data from a QuerySnapshot to the bundle.\n     * @internal\n     * @param docBundleData A QuerySnapshotBundleData containing information from the\n     * QuerySnapshot. Note we cannot accept a QuerySnapshot directly due to a circular\n     * dependency error.\n     */\n    addBundleQuery(queryBundleData) {\n        if (this.namedQueries.has(queryBundleData.name)) {\n            throw new Error(`Query name conflict: ${name} has already been added.`);\n        }\n        let latestReadTime = new Timestamp(0, 0);\n        for (const docBundleData of queryBundleData.docBundleDataArray) {\n            this.addBundleDocument(docBundleData, queryBundleData.name);\n            if (docBundleData.readTime && docBundleData.readTime > latestReadTime) {\n                latestReadTime = docBundleData.readTime;\n            }\n        }\n        const queryTarget = toQueryTarget(this.serializer, queryToTarget(queryBundleData.query));\n        const bundledQuery = {\n            parent: queryBundleData.parent,\n            structuredQuery: queryTarget.queryTarget.structuredQuery\n        };\n        this.namedQueries.set(queryBundleData.name, {\n            name: queryBundleData.name,\n            bundledQuery,\n            readTime: toTimestamp(this.serializer, latestReadTime)\n        });\n    }\n    /**\n     * Convert data from a DocumentSnapshot into the serialized form within a bundle.\n     * @private\n     * @internal\n     * @param docBundleData a DocumentSnapshotBundleData containing the data required to\n     * serialize a document.\n     */\n    toBundleDocument(docBundleData) {\n        // a parse context is typically used for validating and parsing user data, but in this\n        // case we are using it internally to convert DocumentData to Proto3 JSON\n        const context = this.userDataReader.createContext(4 /* UserDataSource.ArrayArgument */, 'internal toBundledDocument');\n        const proto3Fields = parseObject(docBundleData.documentData, context);\n        return {\n            name: toName(this.serializer, docBundleData.documentKey),\n            fields: proto3Fields.mapValue.fields,\n            updateTime: toTimestamp(this.serializer, docBundleData.versionTime),\n            createTime: toTimestamp(this.serializer, docBundleData.createdTime)\n        };\n    }\n    /**\n     * Converts a IBundleElement to a Buffer whose content is the length prefixed JSON representation\n     * of the element.\n     * @private\n     * @internal\n     * @param bundleElement A ProtoBundleElement that is expected to be Proto3 JSON compatible.\n     */\n    lengthPrefixedString(bundleElement) {\n        const str = JSON.stringify(bundleElement);\n        // TODO: it's not ideal to have to re-encode all of these strings multiple times\n        //       It may be more performant to return a UInt8Array that is concatenated to other\n        //       UInt8Arrays instead of returning and concatenating strings and then\n        //       converting the full string to UInt8Array.\n        const l = encoder.encode(str).byteLength;\n        return `${l}${str}`;\n    }\n    /**\n     * Construct a serialized string containing document and query information that has previously\n     * been added to the BundleBuilder through the addBundleDocument and addBundleQuery methods.\n     * @internal\n     */\n    build() {\n        let bundleString = '';\n        for (const namedQuery of this.namedQueries.values()) {\n            bundleString += this.lengthPrefixedString({ namedQuery });\n        }\n        for (const bundledDocument of this.documents.values()) {\n            const documentMetadata = bundledDocument.metadata;\n            bundleString += this.lengthPrefixedString({ documentMetadata });\n            // Write to the bundle if document exists.\n            const document = bundledDocument.document;\n            if (document) {\n                bundleString += this.lengthPrefixedString({ document });\n            }\n        }\n        const metadata = {\n            id: this.bundleId,\n            createTime: toTimestamp(this.serializer, this.latestReadTime),\n            version: BUNDLE_VERSION,\n            totalDocuments: this.documents.size,\n            // TODO: it's not ideal to have to re-encode all of these strings multiple times\n            totalBytes: encoder.encode(bundleString).length\n        };\n        // Prepends the metadata element to the bundleBuffer: `bundleBuffer` is the second argument to `Buffer.concat`.\n        bundleString = this.lengthPrefixedString({ metadata }) + bundleString;\n        return bundleString;\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction buildDocumentSnapshotJsonBundle(db, document, docData, path) {\n    const builder = new BundleBuilder(db, AutoId.newId());\n    builder.addBundleDocument(documentToDocumentSnapshotBundleData(path, docData, document));\n    return builder.build();\n}\nfunction buildQuerySnapshotJsonBundle(db, query, bundleName, parent, paths, docs, documentData) {\n    const docBundleDataArray = [];\n    for (let i = 0; i < docs.length; i++) {\n        docBundleDataArray.push(documentToDocumentSnapshotBundleData(paths[i], documentData[i], docs[i]));\n    }\n    const bundleData = {\n        name: bundleName,\n        query,\n        parent,\n        docBundleDataArray\n    };\n    const builder = new BundleBuilder(db, bundleName);\n    builder.addBundleQuery(bundleData);\n    return builder.build();\n}\n// Formats Document data for bundling a DocumentSnapshot.\nfunction documentToDocumentSnapshotBundleData(path, documentData, document) {\n    return {\n        documentData,\n        documentKey: document.mutableCopy().key,\n        documentPath: path,\n        documentExists: true,\n        createdTime: document.createTime.toTimestamp(),\n        readTime: document.readTime.toTimestamp(),\n        versionTime: document.version.toTimestamp()\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst NOT_SUPPORTED = 'NOT SUPPORTED';\n/**\n * Metadata about a snapshot, describing the state of the snapshot.\n */\nclass SnapshotMetadata {\n    /** @hideconstructor */\n    constructor(hasPendingWrites, fromCache) {\n        this.hasPendingWrites = hasPendingWrites;\n        this.fromCache = fromCache;\n    }\n    /**\n     * Returns true if this `SnapshotMetadata` is equal to the provided one.\n     *\n     * @param other - The `SnapshotMetadata` to compare against.\n     * @returns true if this `SnapshotMetadata` is equal to the provided one.\n     */\n    isEqual(other) {\n        return (this.hasPendingWrites === other.hasPendingWrites &&\n            this.fromCache === other.fromCache);\n    }\n}\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nclass DocumentSnapshot extends DocumentSnapshot$1 {\n    /** @hideconstructor protected */\n    constructor(_firestore, userDataWriter, key, document, metadata, converter) {\n        super(_firestore, userDataWriter, key, document, converter);\n        this._firestore = _firestore;\n        this._firestoreImpl = _firestore;\n        this.metadata = metadata;\n    }\n    /**\n     * Returns whether or not the data exists. True if the document exists.\n     */\n    exists() {\n        return super.exists();\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * By default, `serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document or `undefined` if\n     * the document doesn't exist.\n     */\n    data(options = {}) {\n        if (!this._document) {\n            return undefined;\n        }\n        else if (this._converter) {\n            // We only want to use the converter and create a new DocumentSnapshot\n            // if a converter has been provided.\n            const snapshot = new QueryDocumentSnapshot(this._firestore, this._userDataWriter, this._key, this._document, this.metadata, \n            /* converter= */ null);\n            return this._converter.fromFirestore(snapshot, options);\n        }\n        else {\n            return this._userDataWriter.convertValue(this._document.data.value, options.serverTimestamps);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * By default, a `serverTimestamp()` that has not yet been set to\n     * its final value will be returned as `null`. You can override this by\n     * passing an options object.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @param options - An options object to configure how the field is retrieved\n     * from the snapshot (for example the desired behavior for server timestamps\n     * that have not yet been set to their final value).\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(fieldPath, options = {}) {\n        if (this._document) {\n            const value = this._document.data.field(fieldPathFromArgument('DocumentSnapshot.get', fieldPath));\n            if (value !== null) {\n                return this._userDataWriter.convertValue(value, options.serverTimestamps);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns a JSON-serializable representation of this `DocumentSnapshot` instance.\n     *\n     * @returns a JSON representation of this object.  Throws a {@link FirestoreError} if this\n     * `DocumentSnapshot` has pending writes.\n     */\n    toJSON() {\n        if (this.metadata.hasPendingWrites) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'DocumentSnapshot.toJSON() attempted to serialize a document with pending writes. ' +\n                'Await waitForPendingWrites() before invoking toJSON().');\n        }\n        const document = this._document;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const result = {};\n        result['type'] = DocumentSnapshot._jsonSchemaVersion;\n        result['bundle'] = '';\n        result['bundleSource'] = 'DocumentSnapshot';\n        result['bundleName'] = this._key.toString();\n        if (!document ||\n            !document.isValidDocument() ||\n            !document.isFoundDocument()) {\n            return result;\n        }\n        const documentData = this._userDataWriter.convertObjectMap(document.data.value.mapValue.fields, 'previous');\n        result['bundle'] = buildDocumentSnapshotJsonBundle(this._firestore, document, documentData, this.ref.path);\n        return result;\n    }\n}\nDocumentSnapshot._jsonSchemaVersion = 'firestore/documentSnapshot/1.0';\nDocumentSnapshot._jsonSchema = {\n    type: property('string', DocumentSnapshot._jsonSchemaVersion),\n    bundleSource: property('string', 'DocumentSnapshot'),\n    bundleName: property('string'),\n    bundle: property('string')\n};\nfunction documentSnapshotFromJSON(db, json, converter) {\n    if (validateJSON(json, DocumentSnapshot._jsonSchema)) {\n        if (json.bundle === NOT_SUPPORTED) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'The provided JSON object was created in a client environment, which is not supported.');\n        }\n        // Parse the bundle data.\n        const serializer = newSerializer(db._databaseId);\n        const bundleReader = createBundleReaderSync(json.bundle, serializer);\n        const elements = bundleReader.getElements();\n        const bundleLoader = new BundleLoader(bundleReader.getMetadata(), serializer);\n        for (const element of elements) {\n            bundleLoader.addSizedElement(element);\n        }\n        // Ensure that we have the correct number of documents in the bundle.\n        const bundledDocuments = bundleLoader.documents;\n        if (bundledDocuments.length !== 1) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `Expected bundle data to contain 1 document, but it contains ${bundledDocuments.length} documents.`);\n        }\n        // Build out the internal document data.\n        const document = fromDocument(serializer, bundledDocuments[0].document);\n        const documentKey = new DocumentKey(ResourcePath.fromString(json.bundleName));\n        // Return the external facing DocumentSnapshot.\n        return new DocumentSnapshot(db, new LiteUserDataWriter(db), documentKey, document, new SnapshotMetadata(\n        /* hasPendingWrites= */ false, \n        /* fromCache= */ false), converter ? converter : null);\n    }\n}\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nclass QueryDocumentSnapshot extends DocumentSnapshot {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * By default, `serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @override\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document.\n     */\n    data(options = {}) {\n        return super.data(options);\n    }\n}\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nclass QuerySnapshot {\n    /** @hideconstructor */\n    constructor(_firestore, _userDataWriter, query, _snapshot) {\n        this._firestore = _firestore;\n        this._userDataWriter = _userDataWriter;\n        this._snapshot = _snapshot;\n        this.metadata = new SnapshotMetadata(_snapshot.hasPendingWrites, _snapshot.fromCache);\n        this.query = query;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */\n    get docs() {\n        const result = [];\n        this.forEach(doc => result.push(doc));\n        return result;\n    }\n    /** The number of documents in the `QuerySnapshot`. */\n    get size() {\n        return this._snapshot.docs.size;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */\n    get empty() {\n        return this.size === 0;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n    forEach(callback, thisArg) {\n        this._snapshot.docs.forEach(doc => {\n            callback.call(thisArg, new QueryDocumentSnapshot(this._firestore, this._userDataWriter, doc.key, doc, new SnapshotMetadata(this._snapshot.mutatedKeys.has(doc.key), this._snapshot.fromCache), this.query.converter));\n        });\n    }\n    /**\n     * Returns an array of the documents changes since the last snapshot. If this\n     * is the first snapshot, all documents will be in the list as 'added'\n     * changes.\n     *\n     * @param options - `SnapshotListenOptions` that control whether metadata-only\n     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger\n     * snapshot events.\n     */\n    docChanges(options = {}) {\n        const includeMetadataChanges = !!options.includeMetadataChanges;\n        if (includeMetadataChanges && this._snapshot.excludesMetadataChanges) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'To include metadata changes with your document changes, you must ' +\n                'also pass { includeMetadataChanges:true } to onSnapshot().');\n        }\n        if (!this._cachedChanges ||\n            this._cachedChangesIncludeMetadataChanges !== includeMetadataChanges) {\n            this._cachedChanges = changesFromSnapshot(this, includeMetadataChanges);\n            this._cachedChangesIncludeMetadataChanges = includeMetadataChanges;\n        }\n        return this._cachedChanges;\n    }\n    /**\n     * Returns a JSON-serializable representation of this `QuerySnapshot` instance.\n     *\n     * @returns a JSON representation of this object. Throws a {@link FirestoreError} if this\n     * `QuerySnapshot` has pending writes.\n     */\n    toJSON() {\n        if (this.metadata.hasPendingWrites) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'QuerySnapshot.toJSON() attempted to serialize a document with pending writes. ' +\n                'Await waitForPendingWrites() before invoking toJSON().');\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const result = {};\n        result['type'] = QuerySnapshot._jsonSchemaVersion;\n        result['bundleSource'] = 'QuerySnapshot';\n        result['bundleName'] = AutoId.newId();\n        const databaseId = this._firestore._databaseId.database;\n        const projectId = this._firestore._databaseId.projectId;\n        const parent = `projects/${projectId}/databases/${databaseId}/documents`;\n        const documents = [];\n        const documentData = [];\n        const paths = [];\n        this.docs.forEach(doc => {\n            if (doc._document === null) {\n                return;\n            }\n            documents.push(doc._document);\n            documentData.push(this._userDataWriter.convertObjectMap(doc._document.data.value.mapValue.fields, 'previous'));\n            paths.push(doc.ref.path);\n        });\n        result['bundle'] = buildQuerySnapshotJsonBundle(this._firestore, this.query._query, result['bundleName'], parent, paths, documents, documentData);\n        return result;\n    }\n}\nQuerySnapshot._jsonSchemaVersion = 'firestore/querySnapshot/1.0';\nQuerySnapshot._jsonSchema = {\n    type: property('string', QuerySnapshot._jsonSchemaVersion),\n    bundleSource: property('string', 'QuerySnapshot'),\n    bundleName: property('string'),\n    bundle: property('string')\n};\nfunction querySnapshotFromJSON(db, json, converter) {\n    if (validateJSON(json, QuerySnapshot._jsonSchema)) {\n        if (json.bundle === NOT_SUPPORTED) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'The provided JSON object was created in a client environment, which is not supported.');\n        }\n        // Parse the bundle data.\n        const serializer = newSerializer(db._databaseId);\n        const bundleReader = createBundleReaderSync(json.bundle, serializer);\n        const elements = bundleReader.getElements();\n        const bundleLoader = new BundleLoader(bundleReader.getMetadata(), serializer);\n        for (const element of elements) {\n            bundleLoader.addSizedElement(element);\n        }\n        if (bundleLoader.queries.length !== 1) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, `Snapshot data expected 1 query but found ${bundleLoader.queries.length} queries.`);\n        }\n        // Create an internal Query object from the named query in the bundle.\n        const query = fromBundledQuery(bundleLoader.queries[0].bundledQuery);\n        // Construct the arrays of document data for the query.\n        const bundledDocuments = bundleLoader.documents;\n        let documentSet = new DocumentSet();\n        bundledDocuments.map(bundledDocument => {\n            const document = fromDocument(serializer, bundledDocument.document);\n            documentSet = documentSet.add(document);\n        });\n        // Create a view snapshot of the query and documents.\n        const viewSnapshot = ViewSnapshot.fromInitialDocuments(query, documentSet, documentKeySet() /* Zero mutated keys signifies no pending writes. */, \n        /* fromCache= */ false, \n        /* hasCachedResults= */ false);\n        // Create an external Query object, required to construct the QuerySnapshot.\n        const externalQuery = new Query(db, converter ? converter : null, query);\n        // Return a new QuerySnapshot with all of the collected data.\n        return new QuerySnapshot(db, new LiteUserDataWriter(db), externalQuery, viewSnapshot);\n    }\n}\n/** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */\nfunction changesFromSnapshot(querySnapshot, includeMetadataChanges) {\n    if (querySnapshot._snapshot.oldDocs.isEmpty()) {\n        let index = 0;\n        return querySnapshot._snapshot.docChanges.map(change => {\n            const doc = new QueryDocumentSnapshot(querySnapshot._firestore, querySnapshot._userDataWriter, change.doc.key, change.doc, new SnapshotMetadata(querySnapshot._snapshot.mutatedKeys.has(change.doc.key), querySnapshot._snapshot.fromCache), querySnapshot.query.converter);\n            change.doc;\n            return {\n                type: 'added',\n                doc,\n                oldIndex: -1,\n                newIndex: index++\n            };\n        });\n    }\n    else {\n        // A `DocumentSet` that is updated incrementally as changes are applied to use\n        // to lookup the index of a document.\n        let indexTracker = querySnapshot._snapshot.oldDocs;\n        return querySnapshot._snapshot.docChanges\n            .filter(change => includeMetadataChanges || change.type !== 3 /* ChangeType.Metadata */)\n            .map(change => {\n            const doc = new QueryDocumentSnapshot(querySnapshot._firestore, querySnapshot._userDataWriter, change.doc.key, change.doc, new SnapshotMetadata(querySnapshot._snapshot.mutatedKeys.has(change.doc.key), querySnapshot._snapshot.fromCache), querySnapshot.query.converter);\n            let oldIndex = -1;\n            let newIndex = -1;\n            if (change.type !== 0 /* ChangeType.Added */) {\n                oldIndex = indexTracker.indexOf(change.doc.key);\n                indexTracker = indexTracker.delete(change.doc.key);\n            }\n            if (change.type !== 1 /* ChangeType.Removed */) {\n                indexTracker = indexTracker.add(change.doc);\n                newIndex = indexTracker.indexOf(change.doc.key);\n            }\n            return {\n                type: resultChangeType(change.type),\n                doc,\n                oldIndex,\n                newIndex\n            };\n        });\n    }\n}\nfunction resultChangeType(type) {\n    switch (type) {\n        case 0 /* ChangeType.Added */:\n            return 'added';\n        case 2 /* ChangeType.Modified */:\n        case 3 /* ChangeType.Metadata */:\n            return 'modified';\n        case 1 /* ChangeType.Removed */:\n            return 'removed';\n        default:\n            return fail(0xf03d, { type });\n    }\n}\n// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot\n// metadata\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nfunction snapshotEqual(left, right) {\n    if (left instanceof DocumentSnapshot && right instanceof DocumentSnapshot) {\n        return (left._firestore === right._firestore &&\n            left._key.isEqual(right._key) &&\n            (left._document === null\n                ? right._document === null\n                : left._document.isEqual(right._document)) &&\n            left._converter === right._converter);\n    }\n    else if (left instanceof QuerySnapshot && right instanceof QuerySnapshot) {\n        return (left._firestore === right._firestore &&\n            queryEqual(left.query, right.query) &&\n            left.metadata.isEqual(right.metadata) &&\n            left._snapshot.isEqual(right._snapshot));\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Reads the document referred to by this `DocumentReference`.\n *\n * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting\n * for data from the server, but it may return cached data or fail if you are\n * offline and the server cannot be reached. To specify this behavior, invoke\n * {@link getDocFromCache} or {@link getDocFromServer}.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nfunction getDoc(reference) {\n    reference = cast(reference, DocumentReference);\n    const firestore = cast(reference.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientGetDocumentViaSnapshotListener(client, reference._key).then(snapshot => convertToDocSnapshot(firestore, reference, snapshot));\n}\nclass ExpUserDataWriter extends AbstractUserDataWriter {\n    constructor(firestore) {\n        super();\n        this.firestore = firestore;\n    }\n    convertBytes(bytes) {\n        return new Bytes(bytes);\n    }\n    convertReference(name) {\n        const key = this.convertDocumentKey(name, this.firestore._databaseId);\n        return new DocumentReference(this.firestore, /* converter= */ null, key);\n    }\n}\n/**\n * Reads the document referred to by this `DocumentReference` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nfunction getDocFromCache(reference) {\n    reference = cast(reference, DocumentReference);\n    const firestore = cast(reference.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const userDataWriter = new ExpUserDataWriter(firestore);\n    return firestoreClientGetDocumentFromLocalCache(client, reference._key).then(doc => new DocumentSnapshot(firestore, userDataWriter, reference._key, doc, new SnapshotMetadata(doc !== null && doc.hasLocalMutations, \n    /* fromCache= */ true), reference.converter));\n}\n/**\n * Reads the document referred to by this `DocumentReference` from the server.\n * Returns an error if the network is not available.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nfunction getDocFromServer(reference) {\n    reference = cast(reference, DocumentReference);\n    const firestore = cast(reference.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientGetDocumentViaSnapshotListener(client, reference._key, {\n        source: 'server'\n    }).then(snapshot => convertToDocSnapshot(firestore, reference, snapshot));\n}\n/**\n * Executes the query and returns the results as a `QuerySnapshot`.\n *\n * Note: `getDocs()` attempts to provide up-to-date data when possible by\n * waiting for data from the server, but it may return cached data or fail if\n * you are offline and the server cannot be reached. To specify this behavior,\n * invoke {@link getDocsFromCache} or {@link getDocsFromServer}.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nfunction getDocs(query) {\n    query = cast(query, Query);\n    const firestore = cast(query.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const userDataWriter = new ExpUserDataWriter(firestore);\n    validateHasExplicitOrderByForLimitToLast(query._query);\n    return firestoreClientGetDocumentsViaSnapshotListener(client, query._query).then(snapshot => new QuerySnapshot(firestore, userDataWriter, query, snapshot));\n}\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from cache.\n * Returns an empty result set if no documents matching the query are currently\n * cached.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nfunction getDocsFromCache(query) {\n    query = cast(query, Query);\n    const firestore = cast(query.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const userDataWriter = new ExpUserDataWriter(firestore);\n    return firestoreClientGetDocumentsFromLocalCache(client, query._query).then(snapshot => new QuerySnapshot(firestore, userDataWriter, query, snapshot));\n}\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from the\n * server. Returns an error if the network is not available.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nfunction getDocsFromServer(query) {\n    query = cast(query, Query);\n    const firestore = cast(query.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const userDataWriter = new ExpUserDataWriter(firestore);\n    return firestoreClientGetDocumentsViaSnapshotListener(client, query._query, {\n        source: 'server'\n    }).then(snapshot => new QuerySnapshot(firestore, userDataWriter, query, snapshot));\n}\nfunction setDoc(reference, data, options) {\n    reference = cast(reference, DocumentReference);\n    const firestore = cast(reference.firestore, Firestore);\n    const convertedValue = applyFirestoreDataConverter(reference.converter, data, options);\n    const dataReader = newUserDataReader(firestore);\n    const parsed = parseSetData(dataReader, 'setDoc', reference._key, convertedValue, reference.converter !== null, options);\n    const mutation = parsed.toMutation(reference._key, Precondition.none());\n    return executeWrite(firestore, [mutation]);\n}\nfunction updateDoc(reference, fieldOrUpdateData, value, ...moreFieldsAndValues) {\n    reference = cast(reference, DocumentReference);\n    const firestore = cast(reference.firestore, Firestore);\n    const dataReader = newUserDataReader(firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    fieldOrUpdateData = getModularInstance(fieldOrUpdateData);\n    let parsed;\n    if (typeof fieldOrUpdateData === 'string' ||\n        fieldOrUpdateData instanceof FieldPath) {\n        parsed = parseUpdateVarargs(dataReader, 'updateDoc', reference._key, fieldOrUpdateData, value, moreFieldsAndValues);\n    }\n    else {\n        parsed = parseUpdateData(dataReader, 'updateDoc', reference._key, fieldOrUpdateData);\n    }\n    const mutation = parsed.toMutation(reference._key, Precondition.exists(true));\n    return executeWrite(firestore, [mutation]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * @param reference - A reference to the document to delete.\n * @returns A Promise resolved once the document has been successfully\n * deleted from the backend (note that it won't resolve while you're offline).\n */\nfunction deleteDoc(reference) {\n    const firestore = cast(reference.firestore, Firestore);\n    const mutations = [new DeleteMutation(reference._key, Precondition.none())];\n    return executeWrite(firestore, mutations);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend (Note that it\n * won't resolve while you're offline).\n */\nfunction addDoc(reference, data) {\n    const firestore = cast(reference.firestore, Firestore);\n    const docRef = doc(reference);\n    const convertedValue = applyFirestoreDataConverter(reference.converter, data);\n    const dataReader = newUserDataReader(reference.firestore);\n    const parsed = parseSetData(dataReader, 'addDoc', docRef._key, convertedValue, reference.converter !== null, {});\n    const mutation = parsed.toMutation(docRef._key, Precondition.exists(false));\n    return executeWrite(firestore, [mutation]).then(() => docRef);\n}\nfunction onSnapshot(reference, ...args) {\n    var _a, _b, _c;\n    // onSnapshot for Query or Document.\n    reference = getModularInstance(reference);\n    let options = {\n        includeMetadataChanges: false,\n        source: 'default'\n    };\n    let currArg = 0;\n    if (typeof args[currArg] === 'object' && !isPartialObserver(args[currArg])) {\n        options = args[currArg++];\n    }\n    const internalOptions = {\n        includeMetadataChanges: options.includeMetadataChanges,\n        source: options.source\n    };\n    if (isPartialObserver(args[currArg])) {\n        const userObserver = args[currArg];\n        args[currArg] = (_a = userObserver.next) === null || _a === void 0 ? void 0 : _a.bind(userObserver);\n        args[currArg + 1] = (_b = userObserver.error) === null || _b === void 0 ? void 0 : _b.bind(userObserver);\n        args[currArg + 2] = (_c = userObserver.complete) === null || _c === void 0 ? void 0 : _c.bind(userObserver);\n    }\n    let observer;\n    let firestore;\n    let internalQuery;\n    if (reference instanceof DocumentReference) {\n        firestore = cast(reference.firestore, Firestore);\n        internalQuery = newQueryForPath(reference._key.path);\n        observer = {\n            next: snapshot => {\n                if (args[currArg]) {\n                    args[currArg](convertToDocSnapshot(firestore, reference, snapshot));\n                }\n            },\n            error: args[currArg + 1],\n            complete: args[currArg + 2]\n        };\n    }\n    else {\n        const query = cast(reference, Query);\n        firestore = cast(query.firestore, Firestore);\n        internalQuery = query._query;\n        const userDataWriter = new ExpUserDataWriter(firestore);\n        observer = {\n            next: snapshot => {\n                if (args[currArg]) {\n                    args[currArg](new QuerySnapshot(firestore, userDataWriter, query, snapshot));\n                }\n            },\n            error: args[currArg + 1],\n            complete: args[currArg + 2]\n        };\n        validateHasExplicitOrderByForLimitToLast(reference._query);\n    }\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientListen(client, internalQuery, internalOptions, observer);\n}\nfunction onSnapshotResume(reference, snapshotJson, ...args) {\n    const db = getModularInstance(reference);\n    const json = normalizeSnapshotJsonFields(snapshotJson);\n    if (json.error) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, json.error);\n    }\n    let curArg = 0;\n    let options = undefined;\n    if (typeof args[curArg] === 'object' && !isPartialObserver(args[curArg])) {\n        options = args[curArg++];\n    }\n    if (json.bundleSource === 'QuerySnapshot') {\n        let observer = null;\n        if (typeof args[curArg] === 'object' && isPartialObserver(args[curArg])) {\n            const userObserver = args[curArg++];\n            observer = {\n                next: userObserver.next,\n                error: userObserver.error,\n                complete: userObserver.complete\n            };\n        }\n        else {\n            observer = {\n                next: args[curArg++],\n                error: args[curArg++],\n                complete: args[curArg++]\n            };\n        }\n        return onSnapshotQuerySnapshotBundle(db, json, options, observer, args[curArg]);\n    }\n    else if (json.bundleSource === 'DocumentSnapshot') {\n        let observer = null;\n        if (typeof args[curArg] === 'object' && isPartialObserver(args[curArg])) {\n            const userObserver = args[curArg++];\n            observer = {\n                next: userObserver.next,\n                error: userObserver.error,\n                complete: userObserver.complete\n            };\n        }\n        else {\n            observer = {\n                next: args[curArg++],\n                error: args[curArg++],\n                complete: args[curArg++]\n            };\n        }\n        return onSnapshotDocumentSnapshotBundle(db, json, options, observer, args[curArg]);\n    }\n    else {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, `unsupported bundle source: ${json.bundleSource}`);\n    }\n}\nfunction onSnapshotsInSync(firestore, arg) {\n    firestore = cast(firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const observer = isPartialObserver(arg)\n        ? arg\n        : {\n            next: arg\n        };\n    return firestoreClientAddSnapshotsInSyncListener(client, observer);\n}\n/**\n * Locally writes `mutations` on the async queue.\n * @internal\n */\nfunction executeWrite(firestore, mutations) {\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientWrite(client, mutations);\n}\n/**\n * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`\n * to a {@link DocumentSnapshot}.\n */\nfunction convertToDocSnapshot(firestore, ref, snapshot) {\n    const doc = snapshot.docs.get(ref._key);\n    const userDataWriter = new ExpUserDataWriter(firestore);\n    return new DocumentSnapshot(firestore, userDataWriter, ref._key, doc, new SnapshotMetadata(snapshot.hasPendingWrites, snapshot.fromCache), ref.converter);\n}\n/**\n * Ensures the data required to construct an {@link onSnapshot} listener exist in a `snapshotJson`\n * object that originates from {@link DocumentSnapshot.toJSON} or {@link Querysnapshot.toJSON}. The\n * data is normalized into a typed object.\n *\n * @param snapshotJson - The JSON object that the app provided to {@link onSnapshot}.\n * @returns A normalized object that contains all of the required bundle JSON fields. If\n * {@link snapshotJson} doesn't contain the required fields, or if the fields exist as empty\n * strings, then the {@link snapshotJson.error} field will be a non empty string.\n *\n * @internal\n */\nfunction normalizeSnapshotJsonFields(snapshotJson) {\n    const result = {\n        bundle: '',\n        bundleName: '',\n        bundleSource: ''\n    };\n    const requiredKeys = ['bundle', 'bundleName', 'bundleSource'];\n    for (const key of requiredKeys) {\n        if (!(key in snapshotJson)) {\n            result.error = `snapshotJson missing required field: ${key}`;\n            break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const value = snapshotJson[key];\n        if (typeof value !== 'string') {\n            result.error = `snapshotJson field '${key}' must be a string.`;\n            break;\n        }\n        if (value.length === 0) {\n            result.error = `snapshotJson field '${key}' cannot be an empty string.`;\n            break;\n        }\n        if (key === 'bundle') {\n            result.bundle = value;\n        }\n        else if (key === 'bundleName') {\n            result.bundleName = value;\n        }\n        else if (key === 'bundleSource') {\n            result.bundleSource = value;\n        }\n    }\n    return result;\n}\n/**\n * Loads the bundle in a separate task and then invokes {@link onSnapshot} with a\n * {@link DocumentReference} for the document in the bundle.\n *\n * @param firestore - The {@link Firestore} instance for the {@link onSnapshot} operation request.\n * @param json - The JSON bundle to load, produced by {@link DocumentSnapshot.toJSON}.\n * @param options - Options controlling the listen behavior.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @param converter - An optional object that converts objects from Firestore before the onNext\n * listener is invoked.\n * @returns An unsubscribe function that can be called to cancel the snapshot\n * listener.\n *\n * @internal\n */\nfunction onSnapshotDocumentSnapshotBundle(db, json, options, observer, converter) {\n    let unsubscribed = false;\n    let internalUnsubscribe;\n    const loadTask = loadBundle(db, json.bundle);\n    loadTask\n        .then(() => {\n        if (!unsubscribed) {\n            const docReference = new DocumentReference(db, converter ? converter : null, DocumentKey.fromPath(json.bundleName));\n            internalUnsubscribe = onSnapshot(docReference, options ? options : {}, observer);\n        }\n    })\n        .catch(e => {\n        if (observer.error) {\n            observer.error(e);\n        }\n        return () => { };\n    });\n    return () => {\n        if (unsubscribed) {\n            return;\n        }\n        unsubscribed = true;\n        if (internalUnsubscribe) {\n            internalUnsubscribe();\n        }\n    };\n}\n/**\n * Loads the bundle in a separate task and then invokes {@link onSnapshot} with a\n * {@link Query} that represents the Query in the bundle.\n *\n * @param firestore - The {@link Firestore} instance for the {@link onSnapshot} operation request.\n * @param json - The JSON bundle to load, produced by {@link QuerySnapshot.toJSON}.\n * @param options - Options controlling the listen behavior.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @param converter - An optional object that converts objects from Firestore before the onNext\n * listener is invoked.\n * @returns An unsubscribe function that can be called to cancel the snapshot\n * listener.\n *\n * @internal\n */\nfunction onSnapshotQuerySnapshotBundle(db, json, options, observer, converter) {\n    let unsubscribed = false;\n    let internalUnsubscribe;\n    const loadTask = loadBundle(db, json.bundle);\n    loadTask\n        .then(() => namedQuery(db, json.bundleName))\n        .then(query => {\n        if (query && !unsubscribed) {\n            const realQuery = query;\n            if (converter) {\n                realQuery.withConverter(converter);\n            }\n            internalUnsubscribe = onSnapshot(query, options ? options : {}, observer);\n        }\n    })\n        .catch(e => {\n        if (observer.error) {\n            observer.error(e);\n        }\n        return () => { };\n    });\n    return () => {\n        if (unsubscribed) {\n            return;\n        }\n        unsubscribed = true;\n        if (internalUnsubscribe) {\n            internalUnsubscribe();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can\n * count the documents in cases where the result set is prohibitively large to\n * download entirely (thousands of documents).\n *\n * The result received from the server is presented, unaltered, without\n * considering any local state. That is, documents in the local cache are not\n * taken into consideration, neither are local modifications not yet\n * synchronized with the server. Previously-downloaded results, if any, are not\n * used. Every invocation of this function necessarily involves a round trip to\n * the server.\n *\n * @param query The query whose result set size is calculated.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */\nfunction getCountFromServer(query) {\n    const countQuerySpec = {\n        count: count()\n    };\n    return getAggregateFromServer(query, countQuerySpec);\n}\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, are downloaded. This\n * function can perform aggregations of the documents in cases where the result\n * set is prohibitively large to download entirely (thousands of documents).\n *\n * The result received from the server is presented, unaltered, without\n * considering any local state. That is, documents in the local cache are not\n * taken into consideration, neither are local modifications not yet\n * synchronized with the server. Previously-downloaded results, if any, are not\n * used. Every invocation of this function necessarily involves a round trip to\n * the server.\n *\n * @param query The query whose result set is aggregated over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregateFromServer(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n */\nfunction getAggregateFromServer(query, aggregateSpec) {\n    const firestore = cast(query.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const internalAggregates = mapToArray(aggregateSpec, (aggregate, alias) => {\n        return new AggregateImpl(alias, aggregate.aggregateType, aggregate._internalFieldPath);\n    });\n    // Run the aggregation and convert the results\n    return firestoreClientRunAggregateQuery(client, query._query, internalAggregates).then(aggregateResult => convertToAggregateQuerySnapshot(firestore, query, aggregateResult));\n}\n/**\n * Converts the core aggregation result to an `AggregateQuerySnapshot`\n * that can be returned to the consumer.\n * @param query\n * @param aggregateResult Core aggregation result\n * @internal\n */\nfunction convertToAggregateQuerySnapshot(firestore, query, aggregateResult) {\n    const userDataWriter = new ExpUserDataWriter(firestore);\n    const querySnapshot = new AggregateQuerySnapshot(query, userDataWriter, aggregateResult);\n    return querySnapshot;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MemoryLocalCacheImpl {\n    constructor(settings) {\n        this.kind = 'memory';\n        this._onlineComponentProvider = OnlineComponentProvider.provider;\n        if (settings === null || settings === void 0 ? void 0 : settings.garbageCollector) {\n            this._offlineComponentProvider =\n                settings.garbageCollector._offlineComponentProvider;\n        }\n        else {\n            this._offlineComponentProvider = {\n                build: () => new LruGcMemoryOfflineComponentProvider(undefined)\n            };\n        }\n    }\n    toJSON() {\n        return { kind: this.kind };\n    }\n}\nclass PersistentLocalCacheImpl {\n    constructor(settings) {\n        this.kind = 'persistent';\n        let tabManager;\n        if (settings === null || settings === void 0 ? void 0 : settings.tabManager) {\n            settings.tabManager._initialize(settings);\n            tabManager = settings.tabManager;\n        }\n        else {\n            tabManager = persistentSingleTabManager(undefined);\n            tabManager._initialize(settings);\n        }\n        this._onlineComponentProvider = tabManager._onlineComponentProvider;\n        this._offlineComponentProvider = tabManager._offlineComponentProvider;\n    }\n    toJSON() {\n        return { kind: this.kind };\n    }\n}\nclass MemoryEagerGarbageCollectorImpl {\n    constructor() {\n        this.kind = 'memoryEager';\n        this._offlineComponentProvider = MemoryOfflineComponentProvider.provider;\n    }\n    toJSON() {\n        return { kind: this.kind };\n    }\n}\nclass MemoryLruGarbageCollectorImpl {\n    constructor(cacheSize) {\n        this.kind = 'memoryLru';\n        this._offlineComponentProvider = {\n            build: () => new LruGcMemoryOfflineComponentProvider(cacheSize)\n        };\n    }\n    toJSON() {\n        return { kind: this.kind };\n    }\n}\n/**\n * Creates an instance of `MemoryEagerGarbageCollector`. This is also the\n * default garbage collector unless it is explicitly specified otherwise.\n */\nfunction memoryEagerGarbageCollector() {\n    return new MemoryEagerGarbageCollectorImpl();\n}\n/**\n * Creates an instance of `MemoryLruGarbageCollector`.\n *\n * A target size can be specified as part of the setting parameter. The\n * collector will start deleting documents once the cache size exceeds\n * the given size. The default cache size is 40MB (40 * 1024 * 1024 bytes).\n */\nfunction memoryLruGarbageCollector(settings) {\n    return new MemoryLruGarbageCollectorImpl(settings === null || settings === void 0 ? void 0 : settings.cacheSizeBytes);\n}\n/**\n * Creates an instance of `MemoryLocalCache`. The instance can be set to\n * `FirestoreSettings.cache` to tell the SDK which cache layer to use.\n */\nfunction memoryLocalCache(settings) {\n    return new MemoryLocalCacheImpl(settings);\n}\n/**\n * Creates an instance of `PersistentLocalCache`. The instance can be set to\n * `FirestoreSettings.cache` to tell the SDK which cache layer to use.\n *\n * Persistent cache cannot be used in a Node.js environment.\n */\nfunction persistentLocalCache(settings) {\n    return new PersistentLocalCacheImpl(settings);\n}\nclass SingleTabManagerImpl {\n    constructor(forceOwnership) {\n        this.forceOwnership = forceOwnership;\n        this.kind = 'persistentSingleTab';\n    }\n    toJSON() {\n        return { kind: this.kind };\n    }\n    /**\n     * @internal\n     */\n    _initialize(settings) {\n        this._onlineComponentProvider = OnlineComponentProvider.provider;\n        this._offlineComponentProvider = {\n            build: (onlineComponents) => new IndexedDbOfflineComponentProvider(onlineComponents, settings === null || settings === void 0 ? void 0 : settings.cacheSizeBytes, this.forceOwnership)\n        };\n    }\n}\nclass MultiTabManagerImpl {\n    constructor() {\n        this.kind = 'PersistentMultipleTab';\n    }\n    toJSON() {\n        return { kind: this.kind };\n    }\n    /**\n     * @internal\n     */\n    _initialize(settings) {\n        this._onlineComponentProvider = OnlineComponentProvider.provider;\n        this._offlineComponentProvider = {\n            build: (onlineComponents) => new MultiTabOfflineComponentProvider(onlineComponents, settings === null || settings === void 0 ? void 0 : settings.cacheSizeBytes)\n        };\n    }\n}\n/**\n * Creates an instance of `PersistentSingleTabManager`.\n *\n * @param settings Configures the created tab manager.\n */\nfunction persistentSingleTabManager(settings) {\n    return new SingleTabManagerImpl(settings === null || settings === void 0 ? void 0 : settings.forceOwnership);\n}\n/**\n * Creates an instance of `PersistentMultipleTabManager`.\n */\nfunction persistentMultipleTabManager() {\n    return new MultiTabManagerImpl();\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_TRANSACTION_OPTIONS = {\n    maxAttempts: 5\n};\nfunction validateTransactionOptions(options) {\n    if (options.maxAttempts < 1) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Max attempts must be at least 1');\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\nclass WriteBatch {\n    /** @hideconstructor */\n    constructor(_firestore, _commitHandler) {\n        this._firestore = _firestore;\n        this._commitHandler = _commitHandler;\n        this._mutations = [];\n        this._committed = false;\n        this._dataReader = newUserDataReader(_firestore);\n    }\n    set(documentRef, data, options) {\n        this._verifyNotCommitted();\n        const ref = validateReference(documentRef, this._firestore);\n        const convertedValue = applyFirestoreDataConverter(ref.converter, data, options);\n        const parsed = parseSetData(this._dataReader, 'WriteBatch.set', ref._key, convertedValue, ref.converter !== null, options);\n        this._mutations.push(parsed.toMutation(ref._key, Precondition.none()));\n        return this;\n    }\n    update(documentRef, fieldOrUpdateData, value, ...moreFieldsAndValues) {\n        this._verifyNotCommitted();\n        const ref = validateReference(documentRef, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n        fieldOrUpdateData = getModularInstance(fieldOrUpdateData);\n        let parsed;\n        if (typeof fieldOrUpdateData === 'string' ||\n            fieldOrUpdateData instanceof FieldPath) {\n            parsed = parseUpdateVarargs(this._dataReader, 'WriteBatch.update', ref._key, fieldOrUpdateData, value, moreFieldsAndValues);\n        }\n        else {\n            parsed = parseUpdateData(this._dataReader, 'WriteBatch.update', ref._key, fieldOrUpdateData);\n        }\n        this._mutations.push(parsed.toMutation(ref._key, Precondition.exists(true)));\n        return this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n    delete(documentRef) {\n        this._verifyNotCommitted();\n        const ref = validateReference(documentRef, this._firestore);\n        this._mutations = this._mutations.concat(new DeleteMutation(ref._key, Precondition.none()));\n        return this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n    commit() {\n        this._verifyNotCommitted();\n        this._committed = true;\n        if (this._mutations.length > 0) {\n            return this._commitHandler(this._mutations);\n        }\n        return Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'A write batch can no longer be used after commit() ' +\n                'has been called.');\n        }\n    }\n}\nfunction validateReference(documentRef, firestore) {\n    documentRef = getModularInstance(documentRef);\n    if (documentRef.firestore !== firestore) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Provided document reference is from a different Firestore instance.');\n    }\n    else {\n        return documentRef;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n// legacy SDK.\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\nclass Transaction$1 {\n    /** @hideconstructor */\n    constructor(_firestore, _transaction) {\n        this._firestore = _firestore;\n        this._transaction = _transaction;\n        this._dataReader = newUserDataReader(_firestore);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */\n    get(documentRef) {\n        const ref = validateReference(documentRef, this._firestore);\n        const userDataWriter = new LiteUserDataWriter(this._firestore);\n        return this._transaction.lookup([ref._key]).then(docs => {\n            if (!docs || docs.length !== 1) {\n                return fail(0x5de9);\n            }\n            const doc = docs[0];\n            if (doc.isFoundDocument()) {\n                return new DocumentSnapshot$1(this._firestore, userDataWriter, doc.key, doc, ref.converter);\n            }\n            else if (doc.isNoDocument()) {\n                return new DocumentSnapshot$1(this._firestore, userDataWriter, ref._key, null, ref.converter);\n            }\n            else {\n                throw fail(0x4801, {\n                    doc\n                });\n            }\n        });\n    }\n    set(documentRef, value, options) {\n        const ref = validateReference(documentRef, this._firestore);\n        const convertedValue = applyFirestoreDataConverter(ref.converter, value, options);\n        const parsed = parseSetData(this._dataReader, 'Transaction.set', ref._key, convertedValue, ref.converter !== null, options);\n        this._transaction.set(ref._key, parsed);\n        return this;\n    }\n    update(documentRef, fieldOrUpdateData, value, ...moreFieldsAndValues) {\n        const ref = validateReference(documentRef, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n        fieldOrUpdateData = getModularInstance(fieldOrUpdateData);\n        let parsed;\n        if (typeof fieldOrUpdateData === 'string' ||\n            fieldOrUpdateData instanceof FieldPath) {\n            parsed = parseUpdateVarargs(this._dataReader, 'Transaction.update', ref._key, fieldOrUpdateData, value, moreFieldsAndValues);\n        }\n        else {\n            parsed = parseUpdateData(this._dataReader, 'Transaction.update', ref._key, fieldOrUpdateData);\n        }\n        this._transaction.update(ref._key, parsed);\n        return this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n    delete(documentRef) {\n        const ref = validateReference(documentRef, this._firestore);\n        this._transaction.delete(ref._key);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\nclass Transaction extends Transaction$1 {\n    // This class implements the same logic as the Transaction API in the Lite SDK\n    // but is subclassed in order to return its own DocumentSnapshot types.\n    /** @hideconstructor */\n    constructor(_firestore, _transaction) {\n        super(_firestore, _transaction);\n        this._firestore = _firestore;\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */\n    get(documentRef) {\n        const ref = validateReference(documentRef, this._firestore);\n        const userDataWriter = new ExpUserDataWriter(this._firestore);\n        return super\n            .get(documentRef)\n            .then(liteDocumentSnapshot => new DocumentSnapshot(this._firestore, userDataWriter, ref._key, liteDocumentSnapshot._document, new SnapshotMetadata(\n        /* hasPendingWrites= */ false, \n        /* fromCache= */ false), ref.converter));\n    }\n}\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\nfunction runTransaction(firestore, updateFunction, options) {\n    firestore = cast(firestore, Firestore);\n    const optionsWithDefaults = Object.assign(Object.assign({}, DEFAULT_TRANSACTION_OPTIONS), options);\n    validateTransactionOptions(optionsWithDefaults);\n    const client = ensureFirestoreConfigured(firestore);\n    return firestoreClientTransaction(client, internalTransaction => updateFunction(new Transaction(firestore, internalTransaction)), optionsWithDefaults);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\nfunction deleteField() {\n    return new DeleteFieldValueImpl('deleteField');\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\nfunction serverTimestamp() {\n    return new ServerTimestampFieldValueImpl('serverTimestamp');\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\nfunction arrayUnion(...elements) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new ArrayUnionFieldValueImpl('arrayUnion', elements);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction arrayRemove(...elements) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new ArrayRemoveFieldValueImpl('arrayRemove', elements);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\nfunction increment(n) {\n    return new NumericIncrementFieldValueImpl('increment', n);\n}\n/**\n * Creates a new `VectorValue` constructed with a copy of the given array of numbers.\n *\n * @param values - Create a `VectorValue` instance with a copy of this array of numbers.\n *\n * @returns A new `VectorValue` constructed with a copy of the given array of numbers.\n */\nfunction vector(values) {\n    return new VectorValue(values);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single {@link WriteBatch}\n * is 500.\n *\n * Unlike transactions, write batches are persisted offline and therefore are\n * preferable when you don't need to condition your writes on read data.\n *\n * @returns A {@link WriteBatch} that can be used to atomically execute multiple\n * writes.\n */\nfunction writeBatch(firestore) {\n    firestore = cast(firestore, Firestore);\n    ensureFirestoreConfigured(firestore);\n    return new WriteBatch(firestore, mutations => executeWrite(firestore, mutations));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction setIndexConfiguration(firestore, jsonOrConfiguration) {\n    firestore = cast(firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    if (!client._uninitializedComponentsProvider ||\n        client._uninitializedComponentsProvider._offline.kind === 'memory') {\n        // PORTING NOTE: We don't return an error if the user has not enabled\n        // persistence since `enableIndexeddbPersistence()` can fail on the Web.\n        logWarn('Cannot enable indexes when persistence is disabled');\n        return Promise.resolve();\n    }\n    const parsedIndexes = parseIndexes(jsonOrConfiguration);\n    return firestoreClientSetIndexConfiguration(client, parsedIndexes);\n}\nfunction parseIndexes(jsonOrConfiguration) {\n    const indexConfiguration = typeof jsonOrConfiguration === 'string'\n        ? tryParseJson(jsonOrConfiguration)\n        : jsonOrConfiguration;\n    const parsedIndexes = [];\n    if (Array.isArray(indexConfiguration.indexes)) {\n        for (const index of indexConfiguration.indexes) {\n            const collectionGroup = tryGetString(index, 'collectionGroup');\n            const segments = [];\n            if (Array.isArray(index.fields)) {\n                for (const field of index.fields) {\n                    const fieldPathString = tryGetString(field, 'fieldPath');\n                    const fieldPath = fieldPathFromDotSeparatedString('setIndexConfiguration', fieldPathString);\n                    if (field.arrayConfig === 'CONTAINS') {\n                        segments.push(new IndexSegment(fieldPath, 2 /* IndexKind.CONTAINS */));\n                    }\n                    else if (field.order === 'ASCENDING') {\n                        segments.push(new IndexSegment(fieldPath, 0 /* IndexKind.ASCENDING */));\n                    }\n                    else if (field.order === 'DESCENDING') {\n                        segments.push(new IndexSegment(fieldPath, 1 /* IndexKind.DESCENDING */));\n                    }\n                }\n            }\n            parsedIndexes.push(new FieldIndex(FieldIndex.UNKNOWN_ID, collectionGroup, segments, IndexState.empty()));\n        }\n    }\n    return parsedIndexes;\n}\nfunction tryParseJson(json) {\n    try {\n        return JSON.parse(json);\n    }\n    catch (e) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Failed to parse JSON: ' + (e === null || e === void 0 ? void 0 : e.message));\n    }\n}\nfunction tryGetString(data, property) {\n    if (typeof data[property] !== 'string') {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Missing string value for: ' + property);\n    }\n    return data[property];\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `PersistentCacheIndexManager` for configuring persistent cache indexes used\n * for local query execution.\n *\n * To use, call `getPersistentCacheIndexManager()` to get an instance.\n */\nclass PersistentCacheIndexManager {\n    /** @hideconstructor */\n    constructor(_firestore) {\n        this._firestore = _firestore;\n        /** A type string to uniquely identify instances of this class. */\n        this.type = 'PersistentCacheIndexManager';\n    }\n}\n/**\n * Returns the PersistentCache Index Manager used by the given `Firestore`\n * object.\n *\n * @return The `PersistentCacheIndexManager` instance, or `null` if local\n * persistent storage is not in use.\n */\nfunction getPersistentCacheIndexManager(firestore) {\n    var _a;\n    firestore = cast(firestore, Firestore);\n    const cachedInstance = persistentCacheIndexManagerByFirestore.get(firestore);\n    if (cachedInstance) {\n        return cachedInstance;\n    }\n    const client = ensureFirestoreConfigured(firestore);\n    if (((_a = client._uninitializedComponentsProvider) === null || _a === void 0 ? void 0 : _a._offline.kind) !== 'persistent') {\n        return null;\n    }\n    const instance = new PersistentCacheIndexManager(firestore);\n    persistentCacheIndexManagerByFirestore.set(firestore, instance);\n    return instance;\n}\n/**\n * Enables the SDK to create persistent cache indexes automatically for local\n * query execution when the SDK believes cache indexes can help improve\n * performance.\n *\n * This feature is disabled by default.\n */\nfunction enablePersistentCacheIndexAutoCreation(indexManager) {\n    setPersistentCacheIndexAutoCreationEnabled(indexManager, true);\n}\n/**\n * Stops creating persistent cache indexes automatically for local query\n * execution. The indexes which have been created by calling\n * `enablePersistentCacheIndexAutoCreation()` still take effect.\n */\nfunction disablePersistentCacheIndexAutoCreation(indexManager) {\n    setPersistentCacheIndexAutoCreationEnabled(indexManager, false);\n}\n/**\n * Removes all persistent cache indexes.\n *\n * Please note this function will also deletes indexes generated by\n * `setIndexConfiguration()`, which is deprecated.\n */\nfunction deleteAllPersistentCacheIndexes(indexManager) {\n    const client = ensureFirestoreConfigured(indexManager._firestore);\n    const promise = firestoreClientDeleteAllFieldIndexes(client);\n    promise\n        .then(_ => logDebug('deleting all persistent cache indexes succeeded'))\n        .catch(error => logWarn('deleting all persistent cache indexes failed', error));\n}\nfunction setPersistentCacheIndexAutoCreationEnabled(indexManager, isEnabled) {\n    const client = ensureFirestoreConfigured(indexManager._firestore);\n    const promise = firestoreClientSetPersistentCacheIndexAutoCreationEnabled(client, isEnabled);\n    promise\n        .then(_ => logDebug(`setting persistent cache index auto creation ` +\n        `isEnabled=${isEnabled} succeeded`))\n        .catch(error => logWarn(`setting persistent cache index auto creation ` +\n        `isEnabled=${isEnabled} failed`, error));\n}\n/**\n * Maps `Firestore` instances to their corresponding\n * `PersistentCacheIndexManager` instances.\n *\n * Use a `WeakMap` so that the mapping will be automatically dropped when the\n * `Firestore` instance is garbage collected. This emulates a private member\n * as described in https://goo.gle/454yvug.\n */\nconst persistentCacheIndexManagerByFirestore = new WeakMap();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n * @private\n *\n * This function is for internal use only.\n *\n * Returns the `QueryTarget` representation of the given query. Returns `null`\n * if the Firestore client associated with the given query has not been\n * initialized or has been terminated.\n *\n * @param query - The Query to convert to proto representation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _internalQueryToProtoQueryTarget(query) {\n    var _a;\n    const firestore = cast(query.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const serializer = (_a = client._onlineComponents) === null || _a === void 0 ? void 0 : _a.datastore.serializer;\n    if (serializer === undefined) {\n        return null;\n    }\n    return toQueryTarget(serializer, queryToTarget(query._query)).queryTarget;\n}\n/**\n * @internal\n * @private\n *\n * This function is for internal use only.\n *\n * Returns `RunAggregationQueryRequest` which contains the proto representation\n * of the given aggregation query request. Returns null if the Firestore client\n * associated with the given query has not been initialized or has been\n * terminated.\n *\n * @param query - The Query to convert to proto representation.\n * @param aggregateSpec - The set of aggregations and their aliases.\n */\nfunction _internalAggregationQueryToProtoRunAggregationQueryRequest(query, aggregateSpec) {\n    var _a;\n    const aggregates = mapToArray(aggregateSpec, (aggregate, alias) => {\n        return new AggregateImpl(alias, aggregate.aggregateType, aggregate._internalFieldPath);\n    });\n    const firestore = cast(query.firestore, Firestore);\n    const client = ensureFirestoreConfigured(firestore);\n    const serializer = (_a = client._onlineComponents) === null || _a === void 0 ? void 0 : _a.datastore.serializer;\n    if (serializer === undefined) {\n        return null;\n    }\n    return toRunAggregationQueryRequest(serializer, queryToAggregateTarget(query._query), aggregates, \n    /* skipAliasing= */ true).request;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Testing hooks for use by Firestore's integration test suite to reach into the\n * SDK internals to validate logic and behavior that is not visible from the\n * public API surface.\n *\n * @internal\n */\nclass TestingHooks {\n    constructor() {\n        throw new Error('instances of this class should not be created');\n    }\n    /**\n     * Registers a callback to be notified when an existence filter mismatch\n     * occurs in the Watch listen stream.\n     *\n     * The relative order in which callbacks are notified is unspecified; do not\n     * rely on any particular ordering. If a given callback is registered multiple\n     * times then it will be notified multiple times, once per registration.\n     *\n     * @param callback the callback to invoke upon existence filter mismatch.\n     *\n     * @return a function that, when called, unregisters the given callback; only\n     * the first invocation of the returned function does anything; all subsequent\n     * invocations do nothing.\n     */\n    static onExistenceFilterMismatch(callback) {\n        return TestingHooksSpiImpl.instance.onExistenceFilterMismatch(callback);\n    }\n}\n/**\n * The implementation of `TestingHooksSpi`.\n */\nclass TestingHooksSpiImpl {\n    constructor() {\n        this.existenceFilterMismatchCallbacksById = new Map();\n    }\n    static get instance() {\n        if (!testingHooksSpiImplInstance) {\n            testingHooksSpiImplInstance = new TestingHooksSpiImpl();\n            setTestingHooksSpi(testingHooksSpiImplInstance);\n        }\n        return testingHooksSpiImplInstance;\n    }\n    notifyOnExistenceFilterMismatch(info) {\n        this.existenceFilterMismatchCallbacksById.forEach(callback => callback(info));\n    }\n    onExistenceFilterMismatch(callback) {\n        const id = Symbol();\n        const callbacks = this.existenceFilterMismatchCallbacksById;\n        callbacks.set(id, callback);\n        return () => callbacks.delete(id);\n    }\n}\nlet testingHooksSpiImplInstance = null;\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nregisterFirestore('node');\n\nexport { AbstractUserDataWriter, AggregateField, AggregateQuerySnapshot, Bytes, CACHE_SIZE_UNLIMITED, CollectionReference, DocumentReference, DocumentSnapshot, FieldPath, FieldValue, Firestore, FirestoreError, GeoPoint, LoadBundleTask, PersistentCacheIndexManager, Query, QueryCompositeFilterConstraint, QueryConstraint, QueryDocumentSnapshot, QueryEndAtConstraint, QueryFieldFilterConstraint, QueryLimitConstraint, QueryOrderByConstraint, QuerySnapshot, QueryStartAtConstraint, SnapshotMetadata, Timestamp, Transaction, VectorValue, WriteBatch, AutoId as _AutoId, ByteString as _ByteString, DatabaseId as _DatabaseId, DocumentKey as _DocumentKey, EmptyAppCheckTokenProvider as _EmptyAppCheckTokenProvider, EmptyAuthCredentialsProvider as _EmptyAuthCredentialsProvider, FieldPath$1 as _FieldPath, TestingHooks as _TestingHooks, cast as _cast, debugAssert as _debugAssert, _internalAggregationQueryToProtoRunAggregationQueryRequest, _internalQueryToProtoQueryTarget, isBase64Available as _isBase64Available, logWarn as _logWarn, validateIsNotUsedTogether as _validateIsNotUsedTogether, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, arrayRemove, arrayUnion, average, clearIndexedDbPersistence, collection, collectionGroup, connectFirestoreEmulator, count, deleteAllPersistentCacheIndexes, deleteDoc, deleteField, disableNetwork, disablePersistentCacheIndexAutoCreation, doc, documentId, documentSnapshotFromJSON, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, enableNetwork, enablePersistentCacheIndexAutoCreation, endAt, endBefore, ensureFirestoreConfigured, executeWrite, getAggregateFromServer, getCountFromServer, getDoc, getDocFromCache, getDocFromServer, getDocs, getDocsFromCache, getDocsFromServer, getFirestore, getPersistentCacheIndexManager, increment, initializeFirestore, limit, limitToLast, loadBundle, memoryEagerGarbageCollector, memoryLocalCache, memoryLruGarbageCollector, namedQuery, onSnapshot, onSnapshotResume, onSnapshotsInSync, or, orderBy, persistentLocalCache, persistentMultipleTabManager, persistentSingleTabManager, query, queryEqual, querySnapshotFromJSON, refEqual, runTransaction, serverTimestamp, setDoc, setIndexConfiguration, setLogLevel, snapshotEqual, startAfter, startAt, sum, terminate, updateDoc, vector, waitForPendingWrites, where, writeBatch };\n\n", "var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar bloom_blob_es2018 = {};\n\n/** @license\nCopyright The Closure Library Authors.\nSPDX-License-Identifier: Apache-2.0\n*/\n\nvar Integer;\nvar Md5;\n(function() {var h;/** @license\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nfunction k(f,a){function c(){}c.prototype=a.prototype;f.D=a.prototype;f.prototype=new c;f.prototype.constructor=f;f.C=function(d,e,g){for(var b=Array(arguments.length-2),r=2;r<arguments.length;r++)b[r-2]=arguments[r];return a.prototype[e].apply(d,b)};}function l(){this.blockSize=-1;}function m(){this.blockSize=-1;this.blockSize=64;this.g=Array(4);this.B=Array(this.blockSize);this.o=this.h=0;this.s();}k(m,l);m.prototype.s=function(){this.g[0]=1732584193;this.g[1]=4023233417;this.g[2]=2562383102;this.g[3]=271733878;this.o=this.h=0;};\nfunction n(f,a,c){c||(c=0);var d=Array(16);if(\"string\"===typeof a)for(var e=0;16>e;++e)d[e]=a.charCodeAt(c++)|a.charCodeAt(c++)<<8|a.charCodeAt(c++)<<16|a.charCodeAt(c++)<<24;else for(e=0;16>e;++e)d[e]=a[c++]|a[c++]<<8|a[c++]<<16|a[c++]<<24;a=f.g[0];c=f.g[1];e=f.g[2];var g=f.g[3];var b=a+(g^c&(e^g))+d[0]+3614090360&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[1]+3905402710&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[2]+606105819&4294967295;e=g+(b<<17&4294967295|b>>>15);\nb=c+(a^e&(g^a))+d[3]+3250441966&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[4]+4118548399&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[5]+1200080426&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[6]+2821735955&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[7]+4249261313&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[8]+1770035416&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[9]+2336552879&4294967295;g=a+(b<<12&4294967295|\nb>>>20);b=e+(c^g&(a^c))+d[10]+4294925233&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[11]+2304563134&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[12]+1804603682&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[13]+4254626195&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[14]+2792965006&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[15]+1236535329&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(e^g&(c^e))+d[1]+4129170786&4294967295;a=c+(b<<\n5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[6]+3225465664&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[11]+643717713&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[0]+3921069994&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[5]+3593408605&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[10]+38016083&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[15]+3634488961&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[4]+3889429448&4294967295;c=\ne+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[9]+568446438&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[14]+3275163606&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[3]+4107603335&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[8]+1163531501&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[13]+2850285829&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[2]+4243563512&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[7]+1735328473&4294967295;\ne=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[12]+2368359562&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(c^e^g)+d[5]+4294588738&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[8]+2272392833&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[11]+1839030562&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[14]+4259657740&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[1]+2763975236&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[4]+1272893353&4294967295;g=a+(b<<11&4294967295|\nb>>>21);b=e+(g^a^c)+d[7]+4139469664&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[10]+3200236656&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[13]+681279174&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[0]+3936430074&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[3]+3572445317&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[6]+76029189&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[9]+3654602809&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[12]+\n3873151461&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[15]+530742520&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[2]+3299628645&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(e^(c|~g))+d[0]+4096336452&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[7]+1126891415&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[14]+2878612391&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[5]+4237533241&4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[12]+1700485571&\n4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[3]+2399980690&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[10]+4293915773&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[1]+2240044497&4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[8]+1873313359&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[15]+4264355552&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[6]+2734768916&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[13]+1309151649&\n4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[4]+4149444226&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[11]+3174756917&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[2]+718787259&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[9]+3951481745&4294967295;f.g[0]=f.g[0]+a&4294967295;f.g[1]=f.g[1]+(e+(b<<21&4294967295|b>>>11))&4294967295;f.g[2]=f.g[2]+e&4294967295;f.g[3]=f.g[3]+g&4294967295;}\nm.prototype.u=function(f,a){void 0===a&&(a=f.length);for(var c=a-this.blockSize,d=this.B,e=this.h,g=0;g<a;){if(0==e)for(;g<=c;)n(this,f,g),g+=this.blockSize;if(\"string\"===typeof f)for(;g<a;){if(d[e++]=f.charCodeAt(g++),e==this.blockSize){n(this,d);e=0;break}}else for(;g<a;)if(d[e++]=f[g++],e==this.blockSize){n(this,d);e=0;break}}this.h=e;this.o+=a;};\nm.prototype.v=function(){var f=Array((56>this.h?this.blockSize:2*this.blockSize)-this.h);f[0]=128;for(var a=1;a<f.length-8;++a)f[a]=0;var c=8*this.o;for(a=f.length-8;a<f.length;++a)f[a]=c&255,c/=256;this.u(f);f=Array(16);for(a=c=0;4>a;++a)for(var d=0;32>d;d+=8)f[c++]=this.g[a]>>>d&255;return f};function p(f,a){var c=q;return Object.prototype.hasOwnProperty.call(c,f)?c[f]:c[f]=a(f)}function t(f,a){this.h=a;for(var c=[],d=!0,e=f.length-1;0<=e;e--){var g=f[e]|0;d&&g==a||(c[e]=g,d=!1);}this.g=c;}var q={};function u(f){return -128<=f&&128>f?p(f,function(a){return new t([a|0],0>a?-1:0)}):new t([f|0],0>f?-1:0)}function v(f){if(isNaN(f)||!isFinite(f))return w;if(0>f)return x(v(-f));for(var a=[],c=1,d=0;f>=c;d++)a[d]=f/c|0,c*=4294967296;return new t(a,0)}\nfunction y(f,a){if(0==f.length)throw Error(\"number format error: empty string\");a=a||10;if(2>a||36<a)throw Error(\"radix out of range: \"+a);if(\"-\"==f.charAt(0))return x(y(f.substring(1),a));if(0<=f.indexOf(\"-\"))throw Error('number format error: interior \"-\" character');for(var c=v(Math.pow(a,8)),d=w,e=0;e<f.length;e+=8){var g=Math.min(8,f.length-e),b=parseInt(f.substring(e,e+g),a);8>g?(g=v(Math.pow(a,g)),d=d.j(g).add(v(b))):(d=d.j(c),d=d.add(v(b)));}return d}var w=u(0),z=u(1),A=u(16777216);h=t.prototype;\nh.m=function(){if(B(this))return -x(this).m();for(var f=0,a=1,c=0;c<this.g.length;c++){var d=this.i(c);f+=(0<=d?d:4294967296+d)*a;a*=4294967296;}return f};h.toString=function(f){f=f||10;if(2>f||36<f)throw Error(\"radix out of range: \"+f);if(C(this))return \"0\";if(B(this))return \"-\"+x(this).toString(f);for(var a=v(Math.pow(f,6)),c=this,d=\"\";;){var e=D(c,a).g;c=F(c,e.j(a));var g=((0<c.g.length?c.g[0]:c.h)>>>0).toString(f);c=e;if(C(c))return g+d;for(;6>g.length;)g=\"0\"+g;d=g+d;}};\nh.i=function(f){return 0>f?0:f<this.g.length?this.g[f]:this.h};function C(f){if(0!=f.h)return !1;for(var a=0;a<f.g.length;a++)if(0!=f.g[a])return !1;return !0}function B(f){return -1==f.h}h.l=function(f){f=F(this,f);return B(f)?-1:C(f)?0:1};function x(f){for(var a=f.g.length,c=[],d=0;d<a;d++)c[d]=~f.g[d];return (new t(c,~f.h)).add(z)}h.abs=function(){return B(this)?x(this):this};\nh.add=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0,e=0;e<=a;e++){var g=d+(this.i(e)&65535)+(f.i(e)&65535),b=(g>>>16)+(this.i(e)>>>16)+(f.i(e)>>>16);d=b>>>16;g&=65535;b&=65535;c[e]=b<<16|g;}return new t(c,c[c.length-1]&-2147483648?-1:0)};function F(f,a){return f.add(x(a))}\nh.j=function(f){if(C(this)||C(f))return w;if(B(this))return B(f)?x(this).j(x(f)):x(x(this).j(f));if(B(f))return x(this.j(x(f)));if(0>this.l(A)&&0>f.l(A))return v(this.m()*f.m());for(var a=this.g.length+f.g.length,c=[],d=0;d<2*a;d++)c[d]=0;for(d=0;d<this.g.length;d++)for(var e=0;e<f.g.length;e++){var g=this.i(d)>>>16,b=this.i(d)&65535,r=f.i(e)>>>16,E=f.i(e)&65535;c[2*d+2*e]+=b*E;G(c,2*d+2*e);c[2*d+2*e+1]+=g*E;G(c,2*d+2*e+1);c[2*d+2*e+1]+=b*r;G(c,2*d+2*e+1);c[2*d+2*e+2]+=g*r;G(c,2*d+2*e+2);}for(d=0;d<\na;d++)c[d]=c[2*d+1]<<16|c[2*d];for(d=a;d<2*a;d++)c[d]=0;return new t(c,0)};function G(f,a){for(;(f[a]&65535)!=f[a];)f[a+1]+=f[a]>>>16,f[a]&=65535,a++;}function H(f,a){this.g=f;this.h=a;}\nfunction D(f,a){if(C(a))throw Error(\"division by zero\");if(C(f))return new H(w,w);if(B(f))return a=D(x(f),a),new H(x(a.g),x(a.h));if(B(a))return a=D(f,x(a)),new H(x(a.g),a.h);if(30<f.g.length){if(B(f)||B(a))throw Error(\"slowDivide_ only works with positive integers.\");for(var c=z,d=a;0>=d.l(f);)c=I(c),d=I(d);var e=J(c,1),g=J(d,1);d=J(d,2);for(c=J(c,2);!C(d);){var b=g.add(d);0>=b.l(f)&&(e=e.add(c),g=b);d=J(d,1);c=J(c,1);}a=F(f,e.j(a));return new H(e,a)}for(e=w;0<=f.l(a);){c=Math.max(1,Math.floor(f.m()/\na.m()));d=Math.ceil(Math.log(c)/Math.LN2);d=48>=d?1:Math.pow(2,d-48);g=v(c);for(b=g.j(a);B(b)||0<b.l(f);)c-=d,g=v(c),b=g.j(a);C(g)&&(g=z);e=e.add(g);f=F(f,b);}return new H(e,f)}h.A=function(f){return D(this,f).h};h.and=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)&f.i(d);return new t(c,this.h&f.h)};h.or=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)|f.i(d);return new t(c,this.h|f.h)};\nh.xor=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)^f.i(d);return new t(c,this.h^f.h)};function I(f){for(var a=f.g.length+1,c=[],d=0;d<a;d++)c[d]=f.i(d)<<1|f.i(d-1)>>>31;return new t(c,f.h)}function J(f,a){var c=a>>5;a%=32;for(var d=f.g.length-c,e=[],g=0;g<d;g++)e[g]=0<a?f.i(g+c)>>>a|f.i(g+c+1)<<32-a:f.i(g+c);return new t(e,f.h)}m.prototype.digest=m.prototype.v;m.prototype.reset=m.prototype.s;m.prototype.update=m.prototype.u;Md5 = bloom_blob_es2018.Md5=m;t.prototype.add=t.prototype.add;t.prototype.multiply=t.prototype.j;t.prototype.modulo=t.prototype.A;t.prototype.compare=t.prototype.l;t.prototype.toNumber=t.prototype.m;t.prototype.toString=t.prototype.toString;t.prototype.getBits=t.prototype.i;t.fromNumber=v;t.fromString=y;Integer = bloom_blob_es2018.Integer=t;}).apply( typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof self !== 'undefined' ? self  : typeof window !== 'undefined' ? window  : {});\n\nexport { Integer, Md5, bloom_blob_es2018 as default };\n\n", "import { onSnapshot, refEqual, getCountFromServer } from 'firebase/firestore';\nimport { Observable, from, pipe } from 'rxjs';\nimport { map, scan, distinctUntilChanged, filter, startWith, pairwise } from 'rxjs/operators';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DEFAULT_OPTIONS = { includeMetadataChanges: false };\nfunction fromRef(ref, options) {\n    if (options === void 0) { options = DEFAULT_OPTIONS; }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n    return new Observable(function (subscriber) {\n        var unsubscribe = onSnapshot(ref, options, {\n            next: subscriber.next.bind(subscriber),\n            error: subscriber.error.bind(subscriber),\n            complete: subscriber.complete.bind(subscriber),\n        });\n        return { unsubscribe: unsubscribe };\n    });\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction doc(ref) {\n    return fromRef(ref, { includeMetadataChanges: true });\n}\n/**\n * Returns a stream of a document, mapped to its data payload and optionally the document ID\n * @param query\n * @param options\n */\nfunction docData(ref, options) {\n    if (options === void 0) { options = {}; }\n    return doc(ref).pipe(map(function (snap) { return snapToData(snap, options); }));\n}\nfunction snapToData(snapshot, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var data = snapshot.data(options);\n    // match the behavior of the JS SDK when the snapshot doesn't exist\n    // it's possible with data converters too that the user didn't return an object\n    if (!snapshot.exists() || typeof data !== 'object' || data === null || !options.idField) {\n        return data;\n    }\n    return __assign(__assign({}, data), (_a = {}, _a[options.idField] = snapshot.id, _a));\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ALL_EVENTS = ['added', 'modified', 'removed'];\n/**\n * Create an operator that determines if a the stream of document changes\n * are specified by the event filter. If the document change type is not\n * in specified events array, it will not be emitted.\n */\nvar filterEvents = function (events) {\n    return filter(function (changes) {\n        var hasChange = false;\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            if (events && events.indexOf(change.type) >= 0) {\n                hasChange = true;\n                break;\n            }\n        }\n        return hasChange;\n    });\n};\n/**\n * Splice arguments on top of a sliced array, to break top-level ===\n * this is useful for change-detection\n */\nfunction sliceAndSplice(original, start, deleteCount) {\n    var args = [];\n    for (var _i = 3; _i < arguments.length; _i++) {\n        args[_i - 3] = arguments[_i];\n    }\n    var returnArray = original.slice();\n    returnArray.splice.apply(returnArray, __spreadArray([start, deleteCount], args, false));\n    return returnArray;\n}\n/**\n * Creates a new sorted array from a new change.\n * @param combined\n * @param change\n */\nfunction processIndividualChange(combined, change) {\n    switch (change.type) {\n        case 'added':\n            if (combined[change.newIndex] &&\n                refEqual(combined[change.newIndex].doc.ref, change.doc.ref)) ;\n            else {\n                return sliceAndSplice(combined, change.newIndex, 0, change);\n            }\n            break;\n        case 'modified':\n            if (combined[change.oldIndex] == null ||\n                refEqual(combined[change.oldIndex].doc.ref, change.doc.ref)) {\n                // When an item changes position we first remove it\n                // and then add it's new position\n                if (change.oldIndex !== change.newIndex) {\n                    var copiedArray = combined.slice();\n                    copiedArray.splice(change.oldIndex, 1);\n                    copiedArray.splice(change.newIndex, 0, change);\n                    return copiedArray;\n                }\n                else {\n                    return sliceAndSplice(combined, change.newIndex, 1, change);\n                }\n            }\n            break;\n        case 'removed':\n            if (combined[change.oldIndex] &&\n                refEqual(combined[change.oldIndex].doc.ref, change.doc.ref)) {\n                return sliceAndSplice(combined, change.oldIndex, 1);\n            }\n            break;\n    }\n    return combined;\n}\n/**\n * Combines the total result set from the current set of changes from an incoming set\n * of changes.\n * @param current\n * @param changes\n * @param events\n */\nfunction processDocumentChanges(current, changes, events) {\n    if (events === void 0) { events = ALL_EVENTS; }\n    changes.forEach(function (change) {\n        // skip unwanted change types\n        if (events.indexOf(change.type) > -1) {\n            current = processIndividualChange(current, change);\n        }\n    });\n    return current;\n}\n/**\n * Create an operator that allows you to compare the current emission with\n * the prior, even on first emission (where prior is undefined).\n */\nvar windowwise = function () {\n    return pipe(startWith(undefined), pairwise());\n};\n/**\n * Given two snapshots does their metadata match?\n * @param a\n * @param b\n */\nvar metaDataEquals = function (a, b) { return JSON.stringify(a.metadata) === JSON.stringify(b.metadata); };\n/**\n * Create an operator that filters out empty changes. We provide the\n * ability to filter on events, which means all changes can be filtered out.\n * This creates an empty array and would be incorrect to emit.\n */\nvar filterEmptyUnlessFirst = function () {\n    return pipe(windowwise(), filter(function (_a) {\n        var prior = _a[0], current = _a[1];\n        return current.length > 0 || prior === undefined;\n    }), map(function (_a) {\n        var current = _a[1];\n        return current;\n    }));\n};\n/**\n * Return a stream of document changes on a query. These results are not in sort order but in\n * order of occurence.\n * @param query\n */\nfunction collectionChanges(query, options) {\n    if (options === void 0) { options = {}; }\n    return fromRef(query, { includeMetadataChanges: true }).pipe(windowwise(), map(function (_a) {\n        var priorSnapshot = _a[0], currentSnapshot = _a[1];\n        var docChanges = currentSnapshot.docChanges();\n        if (priorSnapshot && !metaDataEquals(priorSnapshot, currentSnapshot)) {\n            // the metadata has changed, docChanges() doesn't return metadata events, so let's\n            // do it ourselves by scanning over all the docs and seeing if the metadata has changed\n            // since either this docChanges() emission or the prior snapshot\n            currentSnapshot.docs.forEach(function (currentDocSnapshot, currentIndex) {\n                var currentDocChange = docChanges.find(function (c) {\n                    return refEqual(c.doc.ref, currentDocSnapshot.ref);\n                });\n                if (currentDocChange) {\n                    // if the doc is in the current changes and the metadata hasn't changed this doc\n                    if (metaDataEquals(currentDocChange.doc, currentDocSnapshot)) {\n                        return;\n                    }\n                }\n                else {\n                    // if there is a prior doc and the metadata hasn't changed skip this doc\n                    var priorDocSnapshot = priorSnapshot === null || priorSnapshot === void 0 ? void 0 : priorSnapshot.docs.find(function (d) {\n                        return refEqual(d.ref, currentDocSnapshot.ref);\n                    });\n                    if (priorDocSnapshot &&\n                        metaDataEquals(priorDocSnapshot, currentDocSnapshot)) {\n                        return;\n                    }\n                }\n                docChanges.push({\n                    oldIndex: currentIndex,\n                    newIndex: currentIndex,\n                    type: 'modified',\n                    doc: currentDocSnapshot,\n                });\n            });\n        }\n        return docChanges;\n    }), filterEvents(options.events || ALL_EVENTS), filterEmptyUnlessFirst());\n}\n/**\n * Return a stream of document snapshots on a query. These results are in sort order.\n * @param query\n */\nfunction collection(query) {\n    return fromRef(query, { includeMetadataChanges: true }).pipe(map(function (changes) { return changes.docs; }));\n}\n/**\n * Return a stream of document changes on a query. These results are in sort order.\n * @param query\n */\nfunction sortedChanges(query, options) {\n    if (options === void 0) { options = {}; }\n    return collectionChanges(query, options).pipe(scan(function (current, changes) {\n        return processDocumentChanges(current, changes, options.events);\n    }, []), distinctUntilChanged());\n}\n/**\n * Create a stream of changes as they occur it time. This method is similar\n * to docChanges() but it collects each event in an array over time.\n */\nfunction auditTrail(query, options) {\n    if (options === void 0) { options = {}; }\n    return collectionChanges(query, options).pipe(scan(function (current, action) { return __spreadArray(__spreadArray([], current, true), action, true); }, []));\n}\n/**\n * Returns a stream of documents mapped to their data payload, and optionally the document ID\n * @param query\n * @param options\n */\nfunction collectionData(query, options) {\n    if (options === void 0) { options = {}; }\n    return collection(query).pipe(map(function (arr) {\n        return arr.map(function (snap) { return snapToData(snap, options); });\n    }));\n}\nfunction collectionCountSnap(query) {\n    return from(getCountFromServer(query));\n}\nfunction collectionCount(query) {\n    return collectionCountSnap(query).pipe(map(function (snap) { return snap.data().count; }));\n}\n\nexport { auditTrail, collection, collectionChanges, collectionCount, collectionCountSnap, collectionData, doc, docData, fromRef, snapToData, sortedChanges };\n\n"],
  "mappings": "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MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;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K;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA;AAAA,gBAEZ;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA;AAAA,gBAEZ;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBAAK;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAChE;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA;AAAA,gBAEZ;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;AAAA,gBAAI;AAAA,gBAAG;AAAA,gBAAK;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",
  "names": ["exports", "Status", "LogVerbosity", "Propagate", "exports", "module", "exports", "logger", "exports", "exports", "Metadata", "exports", "exports", "exports", "exports", "exports", "name", "exports", "ConnectivityState", "exports", "exports", "exports", "PickResultType", "exports", "exports", "exports", "name", "exports", "exports", "exports", "exports", "exports", "metadata", "exports", "metadata", "_a", "_b", "_c", "credentials", "getCall", "exports", "credentials", "metadata", "exports", "name", "loadPackageDefinition", "exports", "module", "INFINITY", "Symbol", "exports", "module", "params", "offset", "exports", "base64", "i", "exports", "module", "exports", "module", "factory", "exports", "exports", "module", "size", "exports", "module", "from", "toNumber", "exports", "isInteger", "Buffer", "name", "i", "exports", "module", "base64", "create", "exports", "module", "exports", "module", "create_array", "create", "buffer", "exports", "module", "exports", "module", "self", "err", "exports", "exports", "module", "exports", "exports", "module", "exports", "module", "fetch", "inquire", "exports", "isAbsolute", "path", "normalize", "exports", "module", "fromJSON", "name", "nested", "define", "exports", "module", "name", "fromJSON", "exports", "module", "name", "fromJSON", "require_service", "exports", "module", "name", "fromJSON", "exports", "module", "exports", "module", "field", "exports", "module", "exports", "exports", "name", "exports", "module", "encoder", "name", "fromJSON", "nested", "exports", "module", "fromJSON", "self", "filename", "process", "resolved", "i", "fetch", "source", "exports", "module", "name", "dst", "path", "value", "exports", "exports", "module", "fromJSON", "name", "exports", "module", "name", "fromJSON", "self", "exports", "module", "name", "opt", "exports", "module", "name", "fromJSON", "exports", "module", "encoder", "exports", "module", "exports", "module", "exports", "module", "name", "token", "value", "exports", "module", "name", "exports", "module", "exports", "module", "exports", "module", "require_descriptor", "exports", "module", "nested", "name", "from", "exports", "module", "exports", "module", "require_type", "exports", "module", "require_util", "exports", "exports", "module", "global", "factory", "MIN_VALUE", "MAX_VALUE", "toNumber", "isSafeInteger", "and", "or", "toBytes", "fromBytes", "require_src", "exports", "IdempotencyLevel", "name", "fromJSON", "exports", "channels", "subchannels", "sockets", "name", "exports", "credentials", "exports", "exports", "_a", "hostPort", "exports", "ReadState", "exports", "name", "_a", "exports", "exports", "credentials", "exports", "global", "exports", "factory", "exports", "CompressionAlgorithms", "exports", "exports", "exports", "exports", "exports", "credentials", "_a", "_b", "code", "details", "exports", "credentials", "exports", "credentials", "count", "exports", "exports", "credentials", "timer", "exports", "credentials", "exports", "limit", "err", "_a", "exports", "exports", "name", "port", "count", "_a", "_b", "exports", "exports", "exports", "_a", "exports", "exports", "exports", "exports", "_a", "exports", "require_src", "exports", "logger", "import_rxjs", "import_operators", "name", "name", "getLimitedUseToken", "getToken", "initializeAppCheck", "onTokenChanged", "setTokenAutoRefreshEnabled", "import_rxjs", "import_operators", "factory", "query", "user", "idToken", "reload", "name", "user", "idToken", "_a", "auth", "idToken", "user", "request", "actionCodeSettings", "idToken", "name", "version", "user", "auth", "idToken", "import_rxjs", "import_operators", "user", "authState", "idToken", "user", "applyActionCode", "beforeAuthStateChanged", "checkActionCode", "confirmPasswordReset", "connectAuthEmulator", "createUserWithEmailAndPassword", "deleteUser", "fetchSignInMethodsForEmail", "getAdditionalUserInfo", "getAuth", "getIdToken", "getIdTokenResult", "getMultiFactorResolver", "getRedirectResult", "initializeAuth", "initializeRecaptchaConfig", "isSignInWithEmailLink", "linkWithCredential", "linkWithPhoneNumber", "linkWithPopup", "linkWithRedirect", "onAuthStateChanged", "onIdTokenChanged", "parseActionCodeURL", "reauthenticateWithCredential", "reauthenticateWithPhoneNumber", "reauthenticateWithPopup", "reauthenticateWithRedirect", "reload", "revokeAccessToken", "sendEmailVerification", "sendPasswordResetEmail", "sendSignInLinkToEmail", "setPersistence", "signInAnonymously", "signInWithCredential", "signInWithCustomToken", "signInWithEmailAndPassword", "signInWithEmailLink", "signInWithPhoneNumber", "signInWithPopup", "signInWithRedirect", "signOut", "unlink", "updateCurrentUser", "updateEmail", "updatePassword", "updatePhoneNumber", "updateProfile", "useDeviceLanguage", "validatePassword", "verifyBeforeUpdateEmail", "verifyPasswordResetCode", "version", "SDK_VERSION", "logClient", "fail", "_fail", "debugAssert", "Deferred", "user", "registerAuth", "onTokenChanged", "registerAppCheck", "credentials", "encoder", "name", "collectionGroup", "document", "collection", "process", "count", "base64", "fieldsMap", "value", "orderBy", "doc", "filter", "limit", "startAt", "endAt", "query", "map", "sum", "serverTransformResults", "documentMap", "RpcCode", "Bytes", "_a", "protos", "where", "from", "namedQuery", "documentId", "global", "typeOrder", "expandedFilters", "target", "fieldIndexes", "key", "canonicalId", "path", "fromVersion", "toVersion", "indexStateStore", "mutationsStore", "documentTargetStore", "globalTargetStore", "writeSentinelKey", "collectionParentsStore", "indexConfigurationStore", "documentOverlayStore", "window", "keys", "ListenerDataSource", "error", "terminate", "arrayUnion", "docData", "property", "import_rxjs", "import_operators", "__assign", "from", "doc", "query", "collection", "Firestore", "auditTrail", "collection", "collectionChanges", "collectionCount", "collectionCountSnap", "collectionData", "doc", "docData", "fromRef", "snapToData", "sortedChanges", "addDoc", "aggregateFieldEqual", "aggregateQuerySnapshotEqual", "and", "clearIndexedDbPersistence", "collectionGroup", "connectFirestoreEmulator", "deleteAllPersistentCacheIndexes", "deleteDoc", "deleteField", "disableNetwork", "disablePersistentCacheIndexAutoCreation", "documentId", "enableIndexedDbPersistence", "enableMultiTabIndexedDbPersistence", "enableNetwork", "enablePersistentCacheIndexAutoCreation", "endAt", "endBefore", "getAggregateFromServer", "getCountFromServer", "getDoc", "getDocFromCache", "getDocFromServer", "getDocs", "getDocsFromCache", "getDocsFromServer", "getFirestore", "getPersistentCacheIndexManager", "increment", "initializeFirestore", "limit", "limitToLast", "loadBundle", "namedQuery", "onSnapshot", "onSnapshotsInSync", "or", "orderBy", "query", "queryEqual", "refEqual", "runTransaction", "setDoc", "setIndexConfiguration", "setLogLevel", "snapshotEqual", "startAfter", "startAt", "sum", "terminate", "updateDoc", "vector", "waitForPendingWrites", "where", "writeBatch"]
}
